[{"authorTime":"2020-05-26 01:15:35","codes":[{"authorDate":"2020-05-26 01:15:35","commitOrder":1,"curCode":"  public void testIntegerIn() {\n    boolean shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertFalse(\"Should not read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertFalse(\"Should not read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertFalse(\"Should not read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertFalse(\"Should not read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"all_nulls\", 1, 2));\n    Assert.assertFalse(\"Should skip: in on all nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"some_nulls\", \"aaa\", \"some\"));\n    Assert.assertTrue(\"Should read: in on some nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"no_nulls\", \"aaa\", \"\"));\n    Assert.assertTrue(\"Should read: in on no nulls column\", shouldRead);\n  }\n","date":"2020-05-26 01:15:35","endLine":718,"groupId":"5069","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntegerIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/a4caee610f5c2e6dd4a158f7b405c730067ff0.src","preCode":"  public void testIntegerIn() {\n    boolean shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertFalse(\"Should not read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertFalse(\"Should not read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertFalse(\"Should not read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertFalse(\"Should not read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"all_nulls\", 1, 2));\n    Assert.assertFalse(\"Should skip: in on all nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"some_nulls\", \"aaa\", \"some\"));\n    Assert.assertTrue(\"Should read: in on some nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"no_nulls\", \"aaa\", \"\"));\n    Assert.assertTrue(\"Should read: in on no nulls column\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"B"},{"authorDate":"2020-05-26 01:15:35","commitOrder":1,"curCode":"  public void testIntegerNotIn() {\n    boolean shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertTrue(\"Should read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertTrue(\"Should read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertTrue(\"Should read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertTrue(\"Should read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"all_nulls\", 1, 2));\n    Assert.assertTrue(\"Should read: notIn on all nulls column\", shouldRead);\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notIn(\"some_nulls\", \"aaa\", \"some\"));\n      Assert.assertTrue(\"Should read: notIn on some nulls column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notIn(\"no_nulls\", \"aaa\", \"\"));\n    if (format == FileFormat.PARQUET) {\n      \r\n      \r\n      Assert.assertTrue(\"Should read: notIn on no nulls column\", shouldRead);\n    } else {\n      Assert.assertFalse(\"Should skip: notIn on no nulls column\", shouldRead);\n    }\n  }\n","date":"2020-05-26 01:15:35","endLine":761,"groupId":"5069","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntegerNotIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/a4caee610f5c2e6dd4a158f7b405c730067ff0.src","preCode":"  public void testIntegerNotIn() {\n    boolean shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertTrue(\"Should read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertTrue(\"Should read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertTrue(\"Should read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertTrue(\"Should read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"all_nulls\", 1, 2));\n    Assert.assertTrue(\"Should read: notIn on all nulls column\", shouldRead);\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notIn(\"some_nulls\", \"aaa\", \"some\"));\n      Assert.assertTrue(\"Should read: notIn on some nulls column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notIn(\"no_nulls\", \"aaa\", \"\"));\n    if (format == FileFormat.PARQUET) {\n      \r\n      \r\n      Assert.assertTrue(\"Should read: notIn on no nulls column\", shouldRead);\n    } else {\n      Assert.assertFalse(\"Should skip: notIn on no nulls column\", shouldRead);\n    }\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":721,"status":"B"}],"commitId":"e8f7379ffe253623e9dd27a1ada7d4421af8b937","commitMessage":"@@@ORC: Push down Iceberg filters (#973)\n\n","date":"2020-05-26 01:15:35","modifiedFileCount":"6","status":"B","submitter":"Shardul Mahadik"},{"authorTime":"2020-10-01 04:35:16","codes":[{"authorDate":"2020-05-26 01:15:35","commitOrder":2,"curCode":"  public void testIntegerIn() {\n    boolean shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertFalse(\"Should not read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertFalse(\"Should not read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertFalse(\"Should not read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertFalse(\"Should not read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"all_nulls\", 1, 2));\n    Assert.assertFalse(\"Should skip: in on all nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"some_nulls\", \"aaa\", \"some\"));\n    Assert.assertTrue(\"Should read: in on some nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"no_nulls\", \"aaa\", \"\"));\n    Assert.assertTrue(\"Should read: in on no nulls column\", shouldRead);\n  }\n","date":"2020-05-26 01:15:35","endLine":718,"groupId":"10605","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntegerIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/a4caee610f5c2e6dd4a158f7b405c730067ff0.src","preCode":"  public void testIntegerIn() {\n    boolean shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertFalse(\"Should not read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertFalse(\"Should not read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertFalse(\"Should not read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertFalse(\"Should not read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(in(\"all_nulls\", 1, 2));\n    Assert.assertFalse(\"Should skip: in on all nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"some_nulls\", \"aaa\", \"some\"));\n    Assert.assertTrue(\"Should read: in on some nulls column\", shouldRead);\n\n    shouldRead = shouldRead(in(\"no_nulls\", \"aaa\", \"\"));\n    Assert.assertTrue(\"Should read: in on no nulls column\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"N"},{"authorDate":"2020-10-01 04:35:16","commitOrder":2,"curCode":"  public void testIntegerNotIn() {\n    boolean shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertTrue(\"Should read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertTrue(\"Should read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertTrue(\"Should read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertTrue(\"Should read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"all_nulls\", 1, 2));\n    Assert.assertTrue(\"Should read: notIn on all nulls column\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"some_nulls\", \"aaa\", \"some\"));\n    Assert.assertTrue(\"Should read: notIn on some nulls column\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"no_nulls\", \"aaa\", \"\"));\n    if (format == FileFormat.PARQUET) {\n      \r\n      \r\n      Assert.assertTrue(\"Should read: notIn on no nulls column\", shouldRead);\n    } else {\n      Assert.assertFalse(\"Should skip: notIn on no nulls column\", shouldRead);\n    }\n  }\n","date":"2020-10-01 04:35:16","endLine":752,"groupId":"10605","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntegerNotIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7b/cc4f783b224c9496d1904afe14a2e257cbcdd1.src","preCode":"  public void testIntegerNotIn() {\n    boolean shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 25, INT_MIN_VALUE - 24));\n    Assert.assertTrue(\"Should read: id below lower bound (5 < 30, 6 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 2, INT_MIN_VALUE - 1));\n    Assert.assertTrue(\"Should read: id below lower bound (28 < 30, 29 < 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MIN_VALUE - 1, INT_MIN_VALUE));\n    Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE - 4, INT_MAX_VALUE - 3));\n    Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE, INT_MAX_VALUE + 1));\n    Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 1, INT_MAX_VALUE + 2));\n    Assert.assertTrue(\"Should read: id above upper bound (80 > 79, 81 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"id\", INT_MAX_VALUE + 6, INT_MAX_VALUE + 7));\n    Assert.assertTrue(\"Should read: id above upper bound (85 > 79, 86 > 79)\", shouldRead);\n\n    shouldRead = shouldRead(notIn(\"all_nulls\", 1, 2));\n    Assert.assertTrue(\"Should read: notIn on all nulls column\", shouldRead);\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notIn(\"some_nulls\", \"aaa\", \"some\"));\n      Assert.assertTrue(\"Should read: notIn on some nulls column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notIn(\"no_nulls\", \"aaa\", \"\"));\n    if (format == FileFormat.PARQUET) {\n      \r\n      \r\n      Assert.assertTrue(\"Should read: notIn on no nulls column\", shouldRead);\n    } else {\n      Assert.assertFalse(\"Should skip: notIn on no nulls column\", shouldRead);\n    }\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":716,"status":"M"}],"commitId":"680798af528333eecf9bfb12c3979f1eccbbb3e3","commitMessage":"@@@ORC: Fix predicate pushdown for notIn and notEqual (#1536)\n\n","date":"2020-10-01 04:35:16","modifiedFileCount":"3","status":"M","submitter":"Shardul Mahadik"}]
