[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testOverwriteWithoutAppend() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have one manifest\",\n        1, table.currentSnapshot().manifests().size());\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","date":"2019-03-21 07:25:05","endLine":130,"groupId":"3970","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOverwriteWithoutAppend","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ff/2f1e1dd97333143e1c8b7b45e4048326f28091.src","preCode":"  public void testOverwriteWithoutAppend() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have one manifest\",\n        1, table.currentSnapshot().manifests().size());\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testOverwriteWithAppendOutsideOfDelete() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .addFile(FILE_10_TO_14) \r\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have 2 manifests\",\n        2, table.currentSnapshot().manifests().size());\n\n    \r\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId),\n        files(FILE_10_TO_14),\n        statuses(Status.ADDED));\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(1),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","date":"2019-03-21 07:25:05","endLine":174,"groupId":"1199","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverwriteWithAppendOutsideOfDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ff/2f1e1dd97333143e1c8b7b45e4048326f28091.src","preCode":"  public void testOverwriteWithAppendOutsideOfDelete() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .addFile(FILE_10_TO_14) \r\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have 2 manifests\",\n        2, table.currentSnapshot().manifests().size());\n\n    \r\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId),\n        files(FILE_10_TO_14),\n        statuses(Status.ADDED));\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(1),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2020-06-03 03:43:03","codes":[{"authorDate":"2020-06-03 03:43:03","commitOrder":2,"curCode":"  public void testOverwriteWithoutAppend() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have one manifest\",\n        1, table.currentSnapshot().allManifests().size());\n\n    validateManifestEntries(table.currentSnapshot().allManifests().get(0),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","date":"2020-06-03 03:43:03","endLine":145,"groupId":"101987","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOverwriteWithoutAppend","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/c86e8858c162faa268ee8201985b7f0c33999d.src","preCode":"  public void testOverwriteWithoutAppend() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have one manifest\",\n        1, table.currentSnapshot().manifests().size());\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2020-06-03 03:43:03","commitOrder":2,"curCode":"  public void testOverwriteWithAppendOutsideOfDelete() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .addFile(FILE_10_TO_14) \r\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have 2 manifests\",\n        2, table.currentSnapshot().allManifests().size());\n\n    \r\n    validateManifestEntries(table.currentSnapshot().allManifests().get(0),\n        ids(overwriteId),\n        files(FILE_10_TO_14),\n        statuses(Status.ADDED));\n\n    validateManifestEntries(table.currentSnapshot().allManifests().get(1),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","date":"2020-06-03 03:43:03","endLine":189,"groupId":"101987","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverwriteWithAppendOutsideOfDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/c86e8858c162faa268ee8201985b7f0c33999d.src","preCode":"  public void testOverwriteWithAppendOutsideOfDelete() {\n    TableMetadata base = TestTables.readMetadata(TABLE_NAME);\n    long baseId = base.currentSnapshot().snapshotId();\n\n    table.newOverwrite()\n        .overwriteByRowFilter(equal(\"date\", \"2018-06-08\"))\n        .addFile(FILE_10_TO_14) \r\n        .commit();\n\n    long overwriteId = table.currentSnapshot().snapshotId();\n\n    Assert.assertNotEquals(\"Should create a new snapshot\", baseId, overwriteId);\n    Assert.assertEquals(\"Table should have 2 manifests\",\n        2, table.currentSnapshot().manifests().size());\n\n    \r\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(overwriteId),\n        files(FILE_10_TO_14),\n        statuses(Status.ADDED));\n\n    validateManifestEntries(table.currentSnapshot().manifests().get(1),\n        ids(overwriteId, baseId),\n        files(FILE_0_TO_4, FILE_5_TO_9),\n        statuses(Status.DELETED, Status.EXISTING));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"482f420141486f5b7b02bd62dc14cdb94b9a9cca","commitMessage":"@@@Split Snapshot.manifests into dataManifests and deleteManifests (#1080)\n\nThis replaces all calls to Snapshot.manifests with calls to one of 3 new methods:\n\n* `Snapshot.allManifests` returns both delete and data manifests\n* `Snapshot.deleteManifests` returns only delete manifests\n* `Snapshot.dataManifests` returns only data manifests\n\nExisting references mostly use either `allManifests` or `dataManifests`.  depending on the context. For example.  tests with assertions for the number of manifests use `allManifests` because the test cases should validate there are no new delete manifests.  but other tests that validate rewritten manifests are deleted use `dataManifests` because only data manifests are rewritten and deleted.\n\nThis tries to make minimal changes that preserve the current behavior. Operations are not updated to support delete manifests (rewrite still only rewrites data manifests).  but will carry through the list of delete manifests correctly.","date":"2020-06-03 03:43:03","modifiedFileCount":"46","status":"M","submitter":"Ryan Blue"}]
