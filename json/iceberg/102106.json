[{"authorTime":"2020-06-16 23:27:45","codes":[{"authorDate":"2019-05-17 05:39:07","commitOrder":4,"curCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","date":"2019-05-17 05:39:07","endLine":324,"groupId":"583","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/18/19b64af9c5f1b937c6adab8c8e9205168f284d.src","preCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"NB"},{"authorDate":"2020-06-16 23:27:45","commitOrder":4,"curCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata);\n    }\n","date":"2020-06-16 23:27:45","endLine":215,"groupId":"4395","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/85/4cf5745e495ae0a89829a8f3ea88bd270bcd0e.src","preCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/FileMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9","commitMessage":"@@@Support DeleteFile in MergingSnapshotProducer (#1105)\n\n","date":"2020-06-16 23:27:45","modifiedFileCount":"13","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-08-12 07:02:14","codes":[{"authorDate":"2020-08-12 07:02:14","commitOrder":5,"curCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","date":"2020-08-12 07:02:14","endLine":280,"groupId":"777","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/b9/fae62b97e3f3435ac23a6e3dd1d1ad86566f76.src","preCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"},{"authorDate":"2020-08-12 07:02:14","commitOrder":5,"curCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata);\n    }\n","date":"2020-08-12 07:02:14","endLine":208,"groupId":"777","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7f/f31e0768a4d981b98319a7f520a94c16acfdb8.src","preCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/FileMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"700fc9eaf91317e08287bbc23c5088494e74184a","commitMessage":"@@@Core: Add specId to DataFile (#1317)\n\n","date":"2020-08-12 07:02:14","modifiedFileCount":"18","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-08-13 02:12:09","codes":[{"authorDate":"2020-08-12 07:02:14","commitOrder":6,"curCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","date":"2020-08-12 07:02:14","endLine":280,"groupId":"777","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/b9/fae62b97e3f3435ac23a6e3dd1d1ad86566f76.src","preCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"N"},{"authorDate":"2020-08-13 02:12:09","commitOrder":6,"curCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          equalityFieldIds, keyMetadata);\n    }\n","date":"2020-08-13 02:12:09","endLine":211,"groupId":"777","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/68/8cd8fcfb88eb1ac97295efad865c02b503f4c4.src","preCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/FileMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"3e8b75081f79dee420872f05aac83e6e90f7e3d8","commitMessage":"@@@Core: Add equality field IDs to DeleteFile (#1318)\n\n","date":"2020-08-13 02:12:09","modifiedFileCount":"9","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-11-25 09:06:17","codes":[{"authorDate":"2020-11-25 09:06:17","commitOrder":7,"curCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","date":"2020-11-25 09:06:17","endLine":285,"groupId":"777","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/37/53c41093fd62529859a124db2efcf3ab2fd750.src","preCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"},{"authorDate":"2020-11-25 09:06:17","commitOrder":7,"curCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          equalityFieldIds, keyMetadata);\n    }\n","date":"2020-11-25 09:06:17","endLine":215,"groupId":"777","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2f/b992f7f05336cfb24e7563dc584fbac84294f7.src","preCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, lowerBounds, upperBounds),\n          equalityFieldIds, keyMetadata);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/FileMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"b1296bcbe8e050d4bc28e3d41feb2f8868c8f0bf","commitMessage":"@@@Core: Add NaN value count to content file (#1803)\n\n","date":"2020-11-25 09:06:17","modifiedFileCount":"18","status":"M","submitter":"yyanyy"},{"authorTime":"2021-02-03 09:46:51","codes":[{"authorDate":"2021-02-03 09:46:51","commitOrder":8,"curCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets, sortOrderId);\n    }\n","date":"2021-02-03 09:46:51","endLine":295,"groupId":"102106","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/fc/7e6fae9649c76ee316ef7c013b55bb706e9d07.src","preCode":"    public DataFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDataFile(\n          specId, filePath, format, isPartitioned ? partitionData.copy() : null,\n          fileSizeInBytes, new Metrics(\n              recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          keyMetadata, splitOffsets);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"},{"authorDate":"2021-02-03 09:46:51","commitOrder":8,"curCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      switch (content) {\n        case POSITION_DELETES:\n          Preconditions.checkArgument(sortOrderId == null,\n              \"Position delete file should not have sort order\");\n          break;\n        case EQUALITY_DELETES:\n          if (sortOrderId == null) {\n            sortOrderId = SortOrder.unsorted().orderId();\n          }\n          break;\n        default:\n          throw new IllegalStateException(\"Unknown content type \" + content);\n      }\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          equalityFieldIds, sortOrderId, keyMetadata);\n    }\n","date":"2021-02-03 09:46:51","endLine":239,"groupId":"102106","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/84/971b40d9705dc5b8f10f94c9efc98fdecf3eac.src","preCode":"    public DeleteFile build() {\n      Preconditions.checkArgument(filePath != null, \"File path is required\");\n      if (format == null) {\n        this.format = FileFormat.fromFileName(filePath);\n      }\n      Preconditions.checkArgument(content != null, \"Delete type is required\");\n      Preconditions.checkArgument(format != null, \"File format is required\");\n      Preconditions.checkArgument(fileSizeInBytes >= 0, \"File size is required\");\n      Preconditions.checkArgument(recordCount >= 0, \"Record count is required\");\n\n      return new GenericDeleteFile(\n          specId, content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,\n          fileSizeInBytes, new Metrics(\n          recordCount, columnSizes, valueCounts, nullValueCounts, nanValueCounts, lowerBounds, upperBounds),\n          equalityFieldIds, keyMetadata);\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/FileMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"9bd18f4667c51c0c74d26a26dfbac83da22942c3","commitMessage":"@@@Core: Add sort order id to DataFile and DeleteFile (#1975)\n\n","date":"2021-02-03 09:46:51","modifiedFileCount":"13","status":"M","submitter":"yyanyy"}]
