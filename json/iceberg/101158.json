[{"authorTime":"2020-11-24 02:36:03","codes":[{"authorDate":"2020-11-24 02:36:03","commitOrder":1,"curCode":"  public void strangeCharacters() {\n    String branch = \"bar\";\n    String path = \"/%\";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n    path = \"&&\";\n    pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","date":"2020-11-24 02:36:03","endLine":104,"groupId":"3228","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"strangeCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5d/0ab61134d65829fd1a754588f672f91fde1ee8.src","preCode":"  public void strangeCharacters() {\n    String branch = \"bar\";\n    String path = \"/%\";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n    path = \"&&\";\n    pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","realPath":"nessie/src/test/java/org/apache/iceberg/nessie/TestTableReference.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2020-11-24 02:36:03","commitOrder":1,"curCode":"  public void whitespace() {\n    String branch = \"bar \";\n    String path = \"foo \";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","date":"2020-11-24 02:36:03","endLine":141,"groupId":"3228","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whitespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5d/0ab61134d65829fd1a754588f672f91fde1ee8.src","preCode":"  public void whitespace() {\n    String branch = \"bar \";\n    String path = \"foo \";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","realPath":"nessie/src/test/java/org/apache/iceberg/nessie/TestTableReference.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"87143d53c05de308332860be12a450a8c7afb95f","commitMessage":"@@@Nessie: Add Nessie catalog module (#1587)\n\n","date":"2020-11-24 02:36:03","modifiedFileCount":"0","status":"B","submitter":"Ryan Murray"},{"authorTime":"2021-06-15 05:33:02","codes":[{"authorDate":"2021-06-15 05:33:02","commitOrder":2,"curCode":"  public void strangeCharacters() {\n    String branch = \"bar\";\n    String path = \"/%\";\n    TableReference pti = TableReference.parse(path);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(pti.reference()).isNull();\n    Assertions.assertThat(pti.timestamp()).isNull();\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(branch).isEqualTo(pti.reference());\n    Assertions.assertThat(pti.timestamp()).isNull();\n    path = \"&&\";\n    pti = TableReference.parse(path);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(pti.reference()).isNull();\n    Assertions.assertThat(pti.timestamp()).isNull();\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(branch).isEqualTo(pti.reference());\n    Assertions.assertThat(pti.timestamp()).isNull();\n  }\n","date":"2021-06-15 05:33:02","endLine":98,"groupId":"101158","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"strangeCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/785fd64437cf3f2dfac0645322458ee343c1c1.src","preCode":"  public void strangeCharacters() {\n    String branch = \"bar\";\n    String path = \"/%\";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n    path = \"&&\";\n    pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","realPath":"nessie/src/test/java/org/apache/iceberg/nessie/TestTableReference.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2021-06-15 05:33:02","commitOrder":2,"curCode":"  public void whitespace() {\n    String branch = \"bar \";\n    String path = \"foo \";\n    TableReference pti = TableReference.parse(path);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(pti.reference()).isNull();\n    Assertions.assertThat(pti.timestamp()).isNull();\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name());\n    Assertions.assertThat(branch).isEqualTo(pti.reference());\n    Assertions.assertThat(pti.timestamp()).isNull();\n  }\n","date":"2021-06-15 05:33:02","endLine":135,"groupId":"101158","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"whitespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/785fd64437cf3f2dfac0645322458ee343c1c1.src","preCode":"  public void whitespace() {\n    String branch = \"bar \";\n    String path = \"foo \";\n    TableReference pti = TableReference.parse(path);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertNull(pti.reference());\n    Assert.assertNull(pti.timestamp());\n    pti = TableReference.parse(path + \"@\" + branch);\n    Assert.assertEquals(path, pti.tableIdentifier().name());\n    Assert.assertEquals(branch, pti.reference());\n    Assert.assertNull(pti.timestamp());\n  }\n","realPath":"nessie/src/test/java/org/apache/iceberg/nessie/TestTableReference.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"2c2903250293adc91ce179478a2a3a368780cd7e","commitMessage":"@@@Nessie: Use AssertJ assertions (#2684)\n\nThis also adds AssertJ to testCompile in all modules so assertions can be used elsewhere.","date":"2021-06-15 05:33:02","modifiedFileCount":"6","status":"M","submitter":"Eduard Tudenh?fner"}]
