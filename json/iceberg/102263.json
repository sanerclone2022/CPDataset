[{"authorTime":"2020-10-24 05:28:49","codes":[{"authorDate":"2020-10-24 05:28:49","commitOrder":1,"curCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(FlinkCatalogFactory.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2020-10-24 05:28:49","endLine":52,"groupId":"1737","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateCatalogWithWarehouseLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/0f2a6cd5b44a66a52b32abb99e7284c88e3f6d.src","preCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(FlinkCatalogFactory.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2020-10-24 05:28:49","commitOrder":1,"curCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2020-10-24 05:28:49","endLine":77,"groupId":"1372","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateCatalogWithHiveConfDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/0f2a6cd5b44a66a52b32abb99e7284c88e3f6d.src","preCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"d132474e7c8706f504a47f75b58e5a58d0bef9ff","commitMessage":"@@@Flink: Load hive-site.xml for HiveCatalog (#1586)\n\n","date":"2020-10-24 05:28:49","modifiedFileCount":"10","status":"B","submitter":"openinx"},{"authorTime":"2020-11-06 06:51:59","codes":[{"authorDate":"2020-11-06 06:51:59","commitOrder":2,"curCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(CatalogProperties.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2020-11-06 06:51:59","endLine":53,"groupId":"1737","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateCatalogWithWarehouseLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d4/7e8a7659ba6616f0b2e92b07d23c4b965e5c7f.src","preCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(FlinkCatalogFactory.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2020-11-06 06:51:59","commitOrder":2,"curCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2020-11-06 06:51:59","endLine":78,"groupId":"1372","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateCatalogWithHiveConfDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d4/7e8a7659ba6616f0b2e92b07d23c4b965e5c7f.src","preCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(FlinkCatalogFactory.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"4436c92928f4b3b90839a26bf6a656902733261f","commitMessage":"@@@Core: Support dynamic FileIO implementation loading (#1618)\n\nCo-authored-by: Jack Ye <yzhaoqin@amazon.com>","date":"2020-11-06 06:51:59","modifiedFileCount":"16","status":"M","submitter":"jackye1995"},{"authorTime":"2021-01-21 09:08:59","codes":[{"authorDate":"2021-01-21 09:08:59","commitOrder":3,"curCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(CatalogProperties.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2021-01-21 09:08:59","endLine":53,"groupId":"102263","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreateCatalogWithWarehouseLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/24/065015795e471109bef28ff64f09c3f526813d.src","preCode":"  public void testCreateCatalogWithWarehouseLocation() throws IOException {\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n\n    File warehouseDir = tempFolder.newFolder();\n    props.put(CatalogProperties.WAREHOUSE_LOCATION, \"file://\" + warehouseDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-01-21 09:08:59","commitOrder":3,"curCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","date":"2021-01-21 09:08:59","endLine":78,"groupId":"102263","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreateCatalogWithHiveConfDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/24/065015795e471109bef28ff64f09c3f526813d.src","preCode":"  public void testCreateCatalogWithHiveConfDir() throws IOException {\n    \r\n    File hiveConfDir = tempFolder.newFolder();\n    File hiveSiteXML = new File(hiveConfDir, \"hive-site.xml\");\n    File warehouseDir = tempFolder.newFolder();\n    try (FileOutputStream fos = new FileOutputStream(hiveSiteXML)) {\n      Configuration newConf = new Configuration(hiveConf);\n      \r\n      newConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, \"file://\" + warehouseDir.getAbsolutePath());\n      newConf.writeXml(fos);\n    }\n    Assert.assertTrue(\"hive-site.xml should be created now.\", Files.exists(hiveSiteXML.toPath()));\n\n    \r\n    Map<String, String> props = Maps.newHashMap();\n    props.put(\"type\", \"iceberg\");\n    props.put(FlinkCatalogFactory.ICEBERG_CATALOG_TYPE, \"hive\");\n    props.put(CatalogProperties.HIVE_URI, FlinkCatalogTestBase.getURI(hiveConf));\n    \r\n    props.put(FlinkCatalogFactory.HIVE_CONF_DIR, hiveConfDir.getAbsolutePath());\n\n    checkSQLQuery(props, warehouseDir);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestFlinkHiveCatalog.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"9a9cb15db7a70c99ea291e4a79d427b38b582388","commitMessage":"@@@Core: Rename catalog properties that are not specific to Hive (#2088)\n\n","date":"2021-01-21 09:08:59","modifiedFileCount":"8","status":"M","submitter":"Jack Ye"}]
