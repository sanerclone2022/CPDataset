[{"authorTime":"2021-03-31 01:56:52","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":73,"groupId":"3694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"roundTripSerialize","params":"(Ttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/f55533ecb7effd8386f618fa1344ad36de7915.src","preCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestHelpers.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"NB"},{"authorDate":"2021-03-31 01:56:52","commitOrder":2,"curCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(DATA_FILE);\n      out.writeObject(DATA_FILE.copy());\n\n      out.writeObject(POS_DELETE_FILE);\n      out.writeObject(POS_DELETE_FILE.copy());\n\n      out.writeObject(EQ_DELETE_FILE);\n      out.writeObject(EQ_DELETE_FILE.copy());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        TestHelpers.assertEquals(DATA_FILE, (DataFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a position DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(POS_DELETE_FILE, (DeleteFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a equality DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(EQ_DELETE_FILE, (DeleteFile) obj);\n      }\n    }\n  }\n","date":"2021-03-31 01:56:52","endLine":152,"groupId":"4635","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ad/67b181f30216b027a15b63f5aa6a6e21ad612d.src","preCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(DATA_FILE);\n      out.writeObject(DATA_FILE.copy());\n\n      out.writeObject(POS_DELETE_FILE);\n      out.writeObject(POS_DELETE_FILE.copy());\n\n      out.writeObject(EQ_DELETE_FILE);\n      out.writeObject(EQ_DELETE_FILE.copy());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        TestHelpers.assertEquals(DATA_FILE, (DataFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a position DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(POS_DELETE_FILE, (DeleteFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a equality DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(EQ_DELETE_FILE, (DeleteFile) obj);\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"B"}],"commitId":"19295fcdedd4dd2cab36e58183ee94c871e644d5","commitMessage":"@@@Core: Fix Kryo serialization for DataFile and DeleteFile (#2343)\n\n","date":"2021-03-31 01:56:52","modifiedFileCount":"2","status":"M","submitter":"openinx"},{"authorTime":"2021-07-19 18:57:09","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":3,"curCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":73,"groupId":"10388","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"roundTripSerialize","params":"(Ttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/f55533ecb7effd8386f618fa1344ad36de7915.src","preCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestHelpers.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-07-19 18:57:09","commitOrder":3,"curCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(DATA_FILE);\n      out.writeObject(DATA_FILE.copy());\n\n      out.writeObject(POS_DELETE_FILE);\n      out.writeObject(POS_DELETE_FILE.copy());\n\n      out.writeObject(EQ_DELETE_FILE);\n      out.writeObject(EQ_DELETE_FILE.copy());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assertions.assertThat(obj).as(\"Should be a DataFile\").isInstanceOf(DataFile.class);\n        TestHelpers.assertEquals(DATA_FILE, (DataFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assertions.assertThat(obj).as(\"Should be a position DeleteFile\").isInstanceOf(DeleteFile.class);\n        TestHelpers.assertEquals(POS_DELETE_FILE, (DeleteFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assertions.assertThat(obj).as(\"Should be a equality DeleteFile\").isInstanceOf(DeleteFile.class);\n        TestHelpers.assertEquals(EQ_DELETE_FILE, (DeleteFile) obj);\n      }\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":152,"groupId":"10388","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testJavaSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/fe/9deb37684f365079412d6ab63b885530b8cf2c.src","preCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(DATA_FILE);\n      out.writeObject(DATA_FILE.copy());\n\n      out.writeObject(POS_DELETE_FILE);\n      out.writeObject(POS_DELETE_FILE.copy());\n\n      out.writeObject(EQ_DELETE_FILE);\n      out.writeObject(EQ_DELETE_FILE.copy());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        TestHelpers.assertEquals(DATA_FILE, (DataFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a position DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(POS_DELETE_FILE, (DeleteFile) obj);\n      }\n\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a equality DeleteFile\", obj instanceof DeleteFile);\n        TestHelpers.assertEquals(EQ_DELETE_FILE, (DeleteFile) obj);\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"0055e855ccabbd6a592b3b49e1f38131f62e0fdd","commitMessage":"@@@Move Assert.assertTrue(..) instance checks to AssertJ assertions (#2756)\n\n","date":"2021-07-19 18:57:09","modifiedFileCount":"25","status":"M","submitter":"Eduard Tudenh?fner"}]
