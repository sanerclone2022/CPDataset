[{"authorTime":"2021-05-03 04:52:56","codes":[{"authorDate":"2021-05-03 04:52:56","commitOrder":1,"curCode":"  public void testAddExistingIdentifierFields() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"id\")\n        .apply();\n\n    Assert.assertEquals(\"add an existing field as identifier field should succeed\",\n        Sets.newHashSet(newSchema.findField(\"id\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","date":"2021-05-03 04:52:56","endLine":1236,"groupId":"2410","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddExistingIdentifierFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6b/8380e31b94956df35937a3a35bed3fc776a353.src","preCode":"  public void testAddExistingIdentifierFields() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"id\")\n        .apply();\n\n    Assert.assertEquals(\"add an existing field as identifier field should succeed\",\n        Sets.newHashSet(newSchema.findField(\"id\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestSchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":1228,"status":"B"},{"authorDate":"2021-05-03 04:52:56","commitOrder":1,"curCode":"  public void testAddNestedIdentifierFieldColumns() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"preferences.feature1\")\n        .apply();\n\n    Assert.assertEquals(\"set existing nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"preferences.feature1\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StringType.get())\n        ))\n        .setIdentifierFields(\"new.field\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StructType.of(\n                Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 2, \"nested\", Types.StringType.get())))))\n        .setIdentifierFields(\"new.field.nested\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added multi-layer nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field.nested\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","date":"2021-05-03 04:52:56","endLine":1290,"groupId":"2410","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddNestedIdentifierFieldColumns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6b/8380e31b94956df35937a3a35bed3fc776a353.src","preCode":"  public void testAddNestedIdentifierFieldColumns() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"preferences.feature1\")\n        .apply();\n\n    Assert.assertEquals(\"set existing nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"preferences.feature1\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StringType.get())\n        ))\n        .setIdentifierFields(\"new.field\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StructType.of(\n                Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 2, \"nested\", Types.StringType.get())))))\n        .setIdentifierFields(\"new.field.nested\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added multi-layer nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field.nested\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestSchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":1260,"status":"B"}],"commitId":"e58d28d500241e6a36a896993b56a80c49bf6118","commitMessage":"@@@Core: Add row identifier to schema (#2465)\n\n","date":"2021-05-03 04:52:56","modifiedFileCount":"8","status":"B","submitter":"Jack Ye"},{"authorTime":"2021-06-18 03:59:57","codes":[{"authorDate":"2021-05-03 04:52:56","commitOrder":2,"curCode":"  public void testAddExistingIdentifierFields() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"id\")\n        .apply();\n\n    Assert.assertEquals(\"add an existing field as identifier field should succeed\",\n        Sets.newHashSet(newSchema.findField(\"id\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","date":"2021-05-03 04:52:56","endLine":1236,"groupId":"102056","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddExistingIdentifierFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6b/8380e31b94956df35937a3a35bed3fc776a353.src","preCode":"  public void testAddExistingIdentifierFields() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"id\")\n        .apply();\n\n    Assert.assertEquals(\"add an existing field as identifier field should succeed\",\n        Sets.newHashSet(newSchema.findField(\"id\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestSchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":1228,"status":"N"},{"authorDate":"2021-06-18 03:59:57","commitOrder":2,"curCode":"  public void testAddNestedIdentifierFieldColumns() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"preferences.feature1\")\n        .apply();\n\n    Assert.assertEquals(\"set existing nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"preferences.feature1\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .allowIncompatibleChanges()\n        .addRequiredColumn(\"new\", Types.StructType.of(\n            Types.NestedField.required(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StringType.get())\n        ))\n        .setIdentifierFields(\"new.field\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .allowIncompatibleChanges()\n        .addRequiredColumn(\"new\", Types.StructType.of(\n            Types.NestedField.required(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StructType.of(\n                Types.NestedField.required(SCHEMA_LAST_COLUMN_ID + 2, \"nested\", Types.StringType.get())))))\n        .setIdentifierFields(\"new.field.nested\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added multi-layer nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field.nested\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","date":"2021-06-18 03:59:57","endLine":1294,"groupId":"102056","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddNestedIdentifierFieldColumns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/28/b918649a051ac4c042d4a5da4933972957465b.src","preCode":"  public void testAddNestedIdentifierFieldColumns() {\n    Schema newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .setIdentifierFields(\"preferences.feature1\")\n        .apply();\n\n    Assert.assertEquals(\"set existing nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"preferences.feature1\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StringType.get())\n        ))\n        .setIdentifierFields(\"new.field\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field\").fieldId()),\n        newSchema.identifierFieldIds());\n\n    newSchema = new SchemaUpdate(SCHEMA, SCHEMA_LAST_COLUMN_ID)\n        .addColumn(\"new\", Types.StructType.of(\n            Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 1, \"field\", Types.StructType.of(\n                Types.NestedField.optional(SCHEMA_LAST_COLUMN_ID + 2, \"nested\", Types.StringType.get())))))\n        .setIdentifierFields(\"new.field.nested\")\n        .apply();\n\n    Assert.assertEquals(\"set newly added multi-layer nested field as identifier should succeed\",\n        Sets.newHashSet(newSchema.findField(\"new.field.nested\").fieldId()),\n        newSchema.identifierFieldIds());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestSchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":1262,"status":"M"}],"commitId":"9ebebddaddf1b3ae3f941736ec6868525598a94b","commitMessage":"@@@Core: Do not allow optional.  double.  or float identifier fields (#2705)\n\n","date":"2021-06-18 03:59:57","modifiedFileCount":"4","status":"M","submitter":"Jack Ye"}]
