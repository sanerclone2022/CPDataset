[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","date":"2019-03-21 07:25:05","endLine":94,"groupId":"4657","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6a/f5b2131c4c2af675dda90c4192ebe9c3c73b8a.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","date":"2019-03-21 07:25:05","endLine":99,"groupId":"4657","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/81/e77561bc12186830a9bb1c74185d854bef70e8.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-09-07 04:02:29","codes":[{"authorDate":"2019-09-07 04:02:29","commitOrder":2,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2019-09-07 04:02:29","endLine":94,"groupId":"4657","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ae/e3c2e5d8930a4f0fca8d4fb2b46d9d9e7a2bb6.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2019-09-07 04:02:29","commitOrder":2,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2019-09-07 04:02:29","endLine":100,"groupId":"4657","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8d/2c3af3784a62fe703a6c7f7c8b7db00c907a3c.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visit(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"1c77e99c00a4d54e993beeef0d1e16316f69c37f","commitMessage":"@@@Add short-circuit logic to evaluators (#442)\n\n","date":"2019-09-07 04:02:29","modifiedFileCount":"7","status":"M","submitter":"Volodymyr Vysotskyi"},{"authorTime":"2020-02-19 01:37:50","codes":[{"authorDate":"2019-09-07 04:02:29","commitOrder":3,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2019-09-07 04:02:29","endLine":94,"groupId":"4657","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ae/e3c2e5d8930a4f0fca8d4fb2b46d9d9e7a2bb6.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"},{"authorDate":"2020-02-19 01:37:50","commitOrder":3,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-02-19 01:37:50","endLine":105,"groupId":"4657","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/40/695861a643b48cdc9a2a520739d0695aa1c275.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"5c642b5f9481317bd2c256040e1788799d2e8dcb","commitMessage":"@@@Handle negative row counts in InclusiveMetricsEvaluator (#810)\n\nAvro data imported using SparkTableUtil would create DataFile instances with -1 rows.  which were filtered out by this check. This updates the check so that files with < 0 rows are read.  assuming that the row count is incorrect.","date":"2020-02-19 01:37:50","modifiedFileCount":"1","status":"M","submitter":"Chen Junjie"},{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2019-09-07 04:02:29","commitOrder":4,"curCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2019-09-07 04:02:29","endLine":94,"groupId":"4657","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(DataFilefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ae/e3c2e5d8930a4f0fca8d4fb2b46d9d9e7a2bb6.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"},{"authorDate":"2020-05-30 03:26:56","commitOrder":4,"curCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-05-30 03:26:56","endLine":106,"groupId":"4657","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(ContentFile<?>file)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/14/8ac4f94cab3dfeb0238df39fe5965ab1c622b1.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"527240b445b23cef1a655eccbb3b2c0eb7d178c1","commitMessage":"@@@Add DeleteFile and manifest reader and writer for deletes (#1064)\n\n","date":"2020-05-30 03:26:56","modifiedFileCount":"28","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2020-06-10 23:43:19","commitOrder":5,"curCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-06-10 23:43:19","endLine":98,"groupId":"4657","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(ContentFile<?>file)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/63/8eb25cb1c7d28cf7aeeb7d970547be8f6f8456.src","preCode":"    private boolean eval(DataFile file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2020-05-30 03:26:56","commitOrder":5,"curCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-05-30 03:26:56","endLine":106,"groupId":"4657","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(ContentFile<?>file)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/14/8ac4f94cab3dfeb0238df39fe5965ab1c622b1.src","preCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"bd606f56b14c49f39aa745534718d0cb6a50a8c9","commitMessage":"@@@Refactor MergingSnapshotProducer (#1098)\n\n","date":"2020-06-10 23:43:19","modifiedFileCount":"8","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-12-06 09:14:27","codes":[{"authorDate":"2020-12-06 09:14:27","commitOrder":6,"curCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.nanCounts = file.nanValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-12-06 09:14:27","endLine":92,"groupId":"101502","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"eval","params":"(ContentFile<?>file)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d4/6a8216b1ecdb777c3ef5631d59c0463db41489.src","preCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() <= 0) {\n        return ROWS_MUST_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/StrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-12-06 09:14:27","commitOrder":6,"curCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.nanCounts = file.nanValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","date":"2020-12-06 09:14:27","endLine":102,"groupId":"101502","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(ContentFile<?>file)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e4/52d27287a8d0f26e62c469edc781e3574fc9c0.src","preCode":"    private boolean eval(ContentFile<?> file) {\n      if (file.recordCount() == 0) {\n        return ROWS_CANNOT_MATCH;\n      }\n\n      if (file.recordCount() < 0) {\n        \r\n        \r\n        \r\n        return ROWS_MIGHT_MATCH;\n      }\n\n      this.valueCounts = file.valueCounts();\n      this.nullCounts = file.nullValueCounts();\n      this.lowerBounds = file.lowerBounds();\n      this.upperBounds = file.upperBounds();\n\n      return ExpressionVisitors.visitEvaluator(expr, this);\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"fab4a5f2db140fdb132205e78934a145e646758b","commitMessage":"@@@API: add isNaN and notNaN predicates (#1747)\n\n","date":"2020-12-06 09:14:27","modifiedFileCount":"27","status":"M","submitter":"yyanyy"}]
