[{"authorTime":"2019-08-03 01:52:27","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":118,"groupId":"1324","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateArray","params":"(Stringname@BoundPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c5/fd461f046c0fd029bb9d884c1957152b227cf1.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"NB"},{"authorDate":"2019-08-03 01:52:27","commitOrder":2,"curCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-08-03 01:52:27","endLine":217,"groupId":"1325","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateArrayStrict","params":"(Stringname@BoundPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/84/f604c38ec8aee85e5398b496e02712ff16d208.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"}],"commitId":"1a9bb2c4863ebf363e5aa347543125d3c184a32d","commitMessage":"@@@Add strict projections for Truncate transformations (#332)\n\nThis also includes new tests for residual evaluation.","date":"2019-08-03 01:52:27","modifiedFileCount":"4","status":"M","submitter":"moulimukherjee"},{"authorTime":"2019-08-03 01:52:27","codes":[{"authorDate":"2019-08-13 02:59:17","commitOrder":3,"curCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n      case STARTS_WITH:\n        return predicate(Expression.Operation.STARTS_WITH, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","date":"2019-08-13 02:59:17","endLine":199,"groupId":"1324","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateArray","params":"(Stringname@BoundPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d7/b4d393e24b0500dc294d1ca46ab046c8452399.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2019-08-03 01:52:27","commitOrder":3,"curCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-08-03 01:52:27","endLine":217,"groupId":"1325","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateArrayStrict","params":"(Stringname@BoundPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/84/f604c38ec8aee85e5398b496e02712ff16d208.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"5cfc119e589a39726d00371ed9d11d3a21b21ee4","commitMessage":"@@@Supports startsWith predicates (#327)\n\nCo-authored-by: Renato Marroquin <marenato@inf.ethz.ch>\nCo-authored-by: Lior Baber <liorbaber@gmail.com>\nCo-authored-by: Sujith Jay Nair <sujith@sujithjay.com>","date":"2019-08-13 02:59:17","modifiedFileCount":"11","status":"M","submitter":"Sujith Jay Nair"},{"authorTime":"2019-11-21 01:58:39","codes":[{"authorDate":"2019-11-21 01:58:39","commitOrder":4,"curCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundLiteralPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n      case STARTS_WITH:\n        return predicate(Expression.Operation.STARTS_WITH, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","date":"2019-11-21 01:58:39","endLine":199,"groupId":"101553","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateArray","params":"(Stringname@BoundLiteralPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/11f56c952f873e1458d46d8c49cd95a19252ac.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArray(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(Expression.Operation.EQ, name, transform.apply(boundary));\n      case STARTS_WITH:\n        return predicate(Expression.Operation.STARTS_WITH, name, transform.apply(boundary));\n\r\n\r\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2019-11-21 01:58:39","commitOrder":4,"curCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundLiteralPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-11-21 01:58:39","endLine":219,"groupId":"101553","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateArrayStrict","params":"(Stringname@BoundLiteralPredicate<S>pred@Transform<S@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/11f56c952f873e1458d46d8c49cd95a19252ac.src","preCode":"  static <S, T> UnboundPredicate<T> truncateArrayStrict(\n      String name, BoundPredicate<S> pred, Transform<S, T> transform) {\n    S boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case GT:\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"94fdc7321407c22b143b9eab83d29179d12d1a6d","commitMessage":"@@@Refactor in and notIn expressions (#650)\n\n* Make BoundSetPredicate extend BoundPredicate\n* Remove visitor method for BoundSetPredicate\n* Add BoundUnaryPredicate\n* Add BoundPredicate subclass test and cast methods\n* Replace LiteralSet and CharSeqLiteralSet with CharSequenceSet\n* Implement all Set methods in CharSequenceSet","date":"2019-11-21 01:58:39","modifiedFileCount":"19","status":"M","submitter":"Ryan Blue"}]
