[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    t.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        assignFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","date":"2019-03-21 07:25:05","endLine":58,"groupId":"3167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ff/f40a334bcbae11d2379df419949c9ebd758757.src","preCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    t.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        assignFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    t.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        t::newDelete);\n  }\n","date":"2019-03-21 07:25:05","endLine":240,"groupId":"3167","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDetectsUncommittedChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ff/f40a334bcbae11d2379df419949c9ebd758757.src","preCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    t.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        t::newDelete);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-05-08 07:47:30","codes":[{"authorDate":"2019-05-08 07:47:30","commitOrder":2,"curCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    txn.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        assignFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","date":"2019-05-08 07:47:30","endLine":58,"groupId":"4582","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/8bf4b3ea94a02f3e2e17f7befa7134aa0c03d5.src","preCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    t.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        assignFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-05-08 07:47:30","commitOrder":2,"curCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    txn.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        txn::newDelete);\n  }\n","date":"2019-05-08 07:47:30","endLine":240,"groupId":"2486","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDetectsUncommittedChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/8bf4b3ea94a02f3e2e17f7befa7134aa0c03d5.src","preCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction t = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    t.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        t::newDelete);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"5d781f19ad0bfdba2523c8483d51bf3cf31c7d81","commitMessage":"@@@Apply baseline linting to iceberg-core (#153)\n\n","date":"2019-05-08 07:47:30","modifiedFileCount":"88","status":"M","submitter":"mccheah"},{"authorTime":"2019-05-08 07:47:30","codes":[{"authorDate":"2019-09-07 04:25:04","commitOrder":3,"curCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    txn.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        TypeUtil.assignIncreasingFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","date":"2019-09-07 04:25:04","endLine":58,"groupId":"102064","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTransaction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/90/b46444e8f8f89fe410a584416f8a893a792a8b.src","preCode":"  public void testCreateTransaction() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"test_create\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"test_create\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"test_create\"));\n\n    txn.commitTransaction();\n\n    TableMetadata meta = TestTables.readMetadata(\"test_create\");\n    Assert.assertNotNull(\"Table metadata should be created after transaction commits\", meta);\n    Assert.assertEquals(\"Should have metadata version 0\",\n        0, (int) TestTables.metadataVersion(\"test_create\"));\n    Assert.assertEquals(\"Should have 0 manifest files\",\n        0, listManifestFiles(tableDir).size());\n\n    Assert.assertEquals(\"Table schema should match with reassigned IDs\",\n        assignFreshIds(SCHEMA).asStruct(), meta.schema().asStruct());\n    Assert.assertEquals(\"Table spec should match\", unpartitioned(), meta.spec());\n    Assert.assertEquals(\"Table should not have any snapshots\", 0, meta.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-05-08 07:47:30","commitOrder":3,"curCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    txn.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        txn::newDelete);\n  }\n","date":"2019-05-08 07:47:30","endLine":240,"groupId":"102064","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDetectsUncommittedChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/8bf4b3ea94a02f3e2e17f7befa7134aa0c03d5.src","preCode":"  public void testCreateDetectsUncommittedChange() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    Transaction txn = TestTables.beginCreate(tableDir, \"uncommitted_change\", SCHEMA, unpartitioned());\n\n    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n        TestTables.readMetadata(\"uncommitted_change\"));\n    Assert.assertNull(\"Should have no metadata version\",\n        TestTables.metadataVersion(\"uncommitted_change\"));\n\n    txn.updateProperties().set(\"test-property\", \"test-value\"); \r\n\n    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n        IllegalStateException.class,\n        \"Cannot create new DeleteFiles: last operation has not committed\",\n        txn::newDelete);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestCreateTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"N"}],"commitId":"fef67332585a1e5e45b053448107b922bca1cd26","commitMessage":"@@@Update Avro test schemas to use unique IDs (#456)\n\n","date":"2019-09-07 04:25:04","modifiedFileCount":"3","status":"M","submitter":"Edgar Rodriguez"}]
