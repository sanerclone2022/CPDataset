[{"authorTime":"2020-12-06 09:14:27","codes":[{"authorDate":"2020-12-06 09:14:27","commitOrder":1,"curCode":"  public void testIsNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: all null column doesn't contain nan value\", shouldRead);\n  }\n","date":"2020-12-06 09:14:27","endLine":132,"groupId":"815","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsNaN","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/0f/b2b1ac77530711a9560488f3a8e751bffa2d2a.src","preCode":"  public void testIsNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: all null column doesn't contain nan value\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveManifestEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"B"},{"authorDate":"2020-12-06 09:14:27","commitOrder":1,"curCode":"  public void testNotNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: all null column contains non nan value\", shouldRead);\n  }\n","date":"2020-12-06 09:14:27","endLine":141,"groupId":"815","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotNaN","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/0f/b2b1ac77530711a9560488f3a8e751bffa2d2a.src","preCode":"  public void testNotNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: all null column contains non nan value\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveManifestEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"fab4a5f2db140fdb132205e78934a145e646758b","commitMessage":"@@@API: add isNaN and notNaN predicates (#1747)\n\n","date":"2020-12-06 09:14:27","modifiedFileCount":"27","status":"B","submitter":"yyanyy"},{"authorTime":"2021-02-06 01:38:12","codes":[{"authorDate":"2021-02-06 01:38:12","commitOrder":2,"curCode":"  public void testIsNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no NaN information may indicate presence of NaN value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_missing_nan_float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no NaN information may indicate presence of NaN value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_no_nans\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: no nan column doesn't contain nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nans\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: all_nans column contains nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"both_nan_and_null\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: both_nan_and_null column contains nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"no_nan_or_null\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: no_nan_or_null column doesn't contain nan value\", shouldRead);\n  }\n","date":"2021-02-06 01:38:12","endLine":170,"groupId":"101292","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsNaN","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/97/2fc8ed5871349fa44f381b6bf62480b397ddd4.src","preCode":"  public void testIsNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(isNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: all null column doesn't contain nan value\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveManifestEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2021-02-06 01:38:12","commitOrder":2,"curCode":"  public void testNotNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: all null column contains non nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nulls_no_nans\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no_nans column contains non nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nans\"), SPEC, true).eval(FILE);\n    Assert.assertFalse(\"Should skip: all nans column doesn't contain non nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"both_nan_and_null\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: both_nan_and_null nans column contains non nan value\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"no_nan_or_null\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no_nan_or_null column contains non nan value\", shouldRead);\n  }\n","date":"2021-02-06 01:38:12","endLine":191,"groupId":"101292","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotNaN","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/97/2fc8ed5871349fa44f381b6bf62480b397ddd4.src","preCode":"  public void testNotNaN() {\n    boolean shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"float\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: no information on if there are nan value in float column\", shouldRead);\n\n    shouldRead = ManifestEvaluator.forRowFilter(notNaN(\"all_nulls_double\"), SPEC, true).eval(FILE);\n    Assert.assertTrue(\"Should read: all null column contains non nan value\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveManifestEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"8a84715205631a17668ec8d63a791a25fb511992","commitMessage":"@@@Core: Add contains_nan to manifest list partition summaries (#1872)\n\n","date":"2021-02-06 01:38:12","modifiedFileCount":"13","status":"M","submitter":"yyanyy"}]
