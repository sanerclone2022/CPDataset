[{"authorTime":"2019-09-05 07:15:46","codes":[{"authorDate":"2019-09-05 07:15:46","commitOrder":1,"curCode":"  public void testAddOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to add can not be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Sets.newSet(FILE_A), Collections.emptySet())\n            .apply());\n  }\n","date":"2019-09-05 07:15:46","endLine":61,"groupId":"4707","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/9c/4258bf902a15858dbb98fd61a1b7cb8cf6256e.src","preCode":"  public void testAddOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to add can not be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Sets.newSet(FILE_A), Collections.emptySet())\n            .apply());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2019-09-05 07:15:46","commitOrder":1,"curCode":"  public void testDeleteOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Collections.emptySet(), Sets.newSet(FILE_A))\n            .apply());\n  }\n","date":"2019-09-05 07:15:46","endLine":73,"groupId":"2983","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/9c/4258bf902a15858dbb98fd61a1b7cb8cf6256e.src","preCode":"  public void testDeleteOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Collections.emptySet(), Sets.newSet(FILE_A))\n            .apply());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"44ebc5bf7f38c0f12c8f0267a42b6a48ce6a9213","commitMessage":"@@@Rename some implementations for consistency (#380)\n\n","date":"2019-09-05 07:15:46","modifiedFileCount":"2","status":"B","submitter":"Anton Okolnychyi"},{"authorTime":"2021-03-29 11:11:09","codes":[{"authorDate":"2021-03-29 11:11:09","commitOrder":2,"curCode":"  public void testAddOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Data files to add can not be empty because there's no delete file to be rewritten\",\n        () -> table.newRewrite()\n            .rewriteFiles(Sets.newSet(FILE_A), Collections.emptySet())\n            .apply());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Data files to add can not be empty because there's no delete file to be rewritten\",\n        () -> table.newRewrite()\n            .rewriteFiles(ImmutableSet.of(FILE_A), ImmutableSet.of(),\n                ImmutableSet.of(), ImmutableSet.of(FILE_A_DELETES))\n            .apply());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Delete files to add must be empty because there's no delete file to be rewritten\",\n        () -> table.newRewrite()\n            .rewriteFiles(ImmutableSet.of(FILE_A), ImmutableSet.of(),\n                ImmutableSet.of(FILE_B), ImmutableSet.of(FILE_B_DELETES))\n            .apply());\n  }\n","date":"2021-03-29 11:11:09","endLine":100,"groupId":"101965","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2b/dc9f2c494047c1041268d32506ea1b8129af0e.src","preCode":"  public void testAddOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to add can not be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Sets.newSet(FILE_A), Collections.emptySet())\n            .apply());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2021-03-29 11:11:09","commitOrder":2,"curCode":"  public void testDeleteOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Collections.emptySet(), Sets.newSet(FILE_A))\n            .apply());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(ImmutableSet.of(), ImmutableSet.of(), ImmutableSet.of(), ImmutableSet.of(FILE_A_DELETES))\n            .apply());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(ImmutableSet.of(), ImmutableSet.of(),\n                ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_A_DELETES))\n            .apply());\n  }\n","date":"2021-03-29 11:11:09","endLine":127,"groupId":"101965","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2b/dc9f2c494047c1041268d32506ea1b8129af0e.src","preCode":"  public void testDeleteOnly() {\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    AssertHelpers.assertThrows(\"Expected an exception\",\n        IllegalArgumentException.class,\n        \"Files to delete cannot be null or empty\",\n        () -> table.newRewrite()\n            .rewriteFiles(Collections.emptySet(), Sets.newSet(FILE_A))\n            .apply());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"7a0954f3989f9b76361491aff7610c96c1194dc5","commitMessage":"@@@Core: Support rewriting delete files. (#2294)\n\n","date":"2021-03-29 11:11:09","modifiedFileCount":"4","status":"M","submitter":"openinx"}]
