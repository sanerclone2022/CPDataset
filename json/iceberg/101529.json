[{"authorTime":"2019-11-21 01:58:39","codes":[{"authorDate":"2019-11-21 01:58:39","commitOrder":1,"curCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case EQ:\n          return Expressions.predicate(\n              pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        case STARTS_WITH:\n        default:\n          \r\n          \r\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","date":"2019-11-21 01:58:39","endLine":134,"groupId":"1140","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c2/9ffb060b57067f4f1e59c72fdc932b8ef2aa0a.src","preCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case EQ:\n          return Expressions.predicate(\n              pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        case STARTS_WITH:\n        default:\n          \r\n          \r\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2019-11-21 01:58:39","commitOrder":1,"curCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case NOT_EQ: \r\n          return Expressions.predicate(pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        default:\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","date":"2019-11-21 01:58:39","endLine":154,"groupId":"1140","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"projectStrict","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c2/9ffb060b57067f4f1e59c72fdc932b8ef2aa0a.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case NOT_EQ: \r\n          return Expressions.predicate(pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        default:\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"94fdc7321407c22b143b9eab83d29179d12d1a6d","commitMessage":"@@@Refactor in and notIn expressions (#650)\n\n* Make BoundSetPredicate extend BoundPredicate\n* Remove visitor method for BoundSetPredicate\n* Add BoundUnaryPredicate\n* Add BoundPredicate subclass test and cast methods\n* Replace LiteralSet and CharSeqLiteralSet with CharSequenceSet\n* Implement all Set methods in CharSequenceSet","date":"2019-11-21 01:58:39","modifiedFileCount":"19","status":"B","submitter":"Ryan Blue"},{"authorTime":"2019-12-19 01:58:30","codes":[{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case EQ:\n          return Expressions.predicate(\n              pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        case STARTS_WITH:\n        default:\n          \r\n          \r\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","date":"2019-12-19 01:58:30","endLine":139,"groupId":"1140","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6e/37faeb7ac4aa2417dff17a8a9699be4188af0e.src","preCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case EQ:\n          return Expressions.predicate(\n              pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        case STARTS_WITH:\n        default:\n          \r\n          \r\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case NOT_EQ: \r\n          return Expressions.predicate(pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        default:\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","date":"2019-12-19 01:58:30","endLine":163,"groupId":"1140","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"projectStrict","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6e/37faeb7ac4aa2417dff17a8a9699be4188af0e.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case NOT_EQ: \r\n          return Expressions.predicate(pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        default:\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"686fcb752dd5a7204094266cd3c4363431dddb43","commitMessage":"@@@Add transform expressions (#686)\n\n* Add transform expressions.\n\n* Fix checkstyle violations.\n\n* Rename ValueExpression to Term and clean up class hierarchy.\n\n* Restore BoundExpressionVisitor to avoid compatibility problems.\n\n* Fix documentation typo.\n\n* Add missing BoundTransform.toString method.\n\n* Revert unnecessary change to TestExpressionSerialization.\n\n* Rename child to term.\n","date":"2019-12-19 01:58:30","modifiedFileCount":"23","status":"M","submitter":"Ryan Blue"},{"authorTime":"2019-12-28 05:09:55","codes":[{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate.isUnaryPredicate()) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate.isLiteralPredicate() && predicate.op() == Expression.Operation.EQ) {\n      return Expressions.predicate(\n          predicate.op(), name, apply(predicate.asLiteralPredicate().literal().value()));\n    } else if (predicate.isSetPredicate() && predicate.op() == Expression.Operation.IN) { \r\n      return ProjectionUtil.transformSet(name, predicate.asSetPredicate(), this);\n    }\n\n    \r\n    \r\n    \r\n    return null;\n  }\n","date":"2019-12-28 05:09:55","endLine":131,"groupId":"101529","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a3/5d05696d6c1e5fbbbc2d3aeea3e0376af30878.src","preCode":"  public UnboundPredicate<Integer> project(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case EQ:\n          return Expressions.predicate(\n              pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        case STARTS_WITH:\n        default:\n          \r\n          \r\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate.isUnaryPredicate()) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate.isLiteralPredicate() && predicate.op() == Expression.Operation.NOT_EQ) {\n      \r\n      return Expressions.predicate(predicate.op(), name, apply(predicate.asLiteralPredicate().literal().value()));\n    } else if (predicate.isSetPredicate() && predicate.op() == Expression.Operation.NOT_IN) {\n      return ProjectionUtil.transformSet(name, predicate.asSetPredicate(), this);\n    }\n\n    \r\n    return null;\n  }\n","date":"2019-12-28 05:09:55","endLine":150,"groupId":"101529","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"projectStrict","params":"(Stringname@BoundPredicate<T>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a3/5d05696d6c1e5fbbbc2d3aeea3e0376af30878.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String name, BoundPredicate<T> predicate) {\n    if (predicate.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, predicate);\n    }\n\n    if (predicate instanceof BoundUnaryPredicate) {\n      return Expressions.predicate(predicate.op(), name);\n    } else if (predicate instanceof BoundLiteralPredicate) {\n      BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate();\n      switch (pred.op()) {\n        case NOT_EQ: \r\n          return Expressions.predicate(pred.op(), name, apply(pred.literal().value()));\n\r\n\r\n        default:\n          \r\n          return null;\n      }\n    }\n\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Bucket.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"79e88c64613219b7ed249d13d11bc1fca8e55178","commitMessage":"@@@Update project and projectStrict for set predicates (#628)\n\n","date":"2019-12-28 05:09:55","modifiedFileCount":"8","status":"M","submitter":"jun-he"}]
