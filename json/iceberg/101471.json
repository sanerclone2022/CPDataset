[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  private PartitionSpec(Schema schema, int specId, List<PartitionField> fields) {\n    this.schema = schema;\n    this.specId = specId;\n    this.fields = new PartitionField[fields.size()];\n    for (int i = 0; i < this.fields.length; i += 1) {\n      this.fields[i] = fields.get(i);\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":67,"groupId":"4583","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"PartitionSpec","params":"(Schemaschema@intspecId@List<PartitionField>fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/63/f7a87ef9681d51745e1ed839c11a354c9b631f.src","preCode":"  private PartitionSpec(Schema schema, int specId, List<PartitionField> fields) {\n    this.schema = schema;\n    this.specId = specId;\n    this.fields = new PartitionField[fields.size()];\n    for (int i = 0; i < this.fields.length; i += 1) {\n      this.fields[i] = fields.get(i);\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/PartitionSpec.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    private StructType(List<NestedField> fields) {\n      Preconditions.checkNotNull(fields, \"Field list cannot be null\");\n      this.fields = new NestedField[fields.size()];\n      for (int i = 0; i < this.fields.length; i += 1) {\n        this.fields[i] = fields.get(i);\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":528,"groupId":"4583","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"StructType","params":"(List<NestedField>fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e9/24cd4d1811fa257b58edecc098dd6e757fe847.src","preCode":"    private StructType(List<NestedField> fields) {\n      Preconditions.checkNotNull(fields, \"Field list cannot be null\");\n      this.fields = new NestedField[fields.size()];\n      for (int i = 0; i < this.fields.length; i += 1) {\n        this.fields[i] = fields.get(i);\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/types/Types.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2020-04-16 04:13:35","commitOrder":2,"curCode":"  private PartitionSpec(Schema schema, int specId, List<PartitionField> fields, int lastAssignedFieldId) {\n    this.schema = schema;\n    this.specId = specId;\n    this.fields = new PartitionField[fields.size()];\n    for (int i = 0; i < this.fields.length; i += 1) {\n      this.fields[i] = fields.get(i);\n    }\n    this.lastAssignedFieldId = lastAssignedFieldId;\n  }\n","date":"2020-04-16 04:13:35","endLine":72,"groupId":"101471","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"PartitionSpec","params":"(Schemaschema@intspecId@List<PartitionField>fields@intlastAssignedFieldId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/37/42f7d73b1b18ca17ee8b58453e98593efddabf.src","preCode":"  private PartitionSpec(Schema schema, int specId, List<PartitionField> fields) {\n    this.schema = schema;\n    this.specId = specId;\n    this.fields = new PartitionField[fields.size()];\n    for (int i = 0; i < this.fields.length; i += 1) {\n      this.fields[i] = fields.get(i);\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/PartitionSpec.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"    private StructType(List<NestedField> fields) {\n      Preconditions.checkNotNull(fields, \"Field list cannot be null\");\n      this.fields = new NestedField[fields.size()];\n      for (int i = 0; i < this.fields.length; i += 1) {\n        this.fields[i] = fields.get(i);\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":528,"groupId":"101471","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"StructType","params":"(List<NestedField>fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e9/24cd4d1811fa257b58edecc098dd6e757fe847.src","preCode":"    private StructType(List<NestedField> fields) {\n      Preconditions.checkNotNull(fields, \"Field list cannot be null\");\n      this.fields = new NestedField[fields.size()];\n      for (int i = 0; i < this.fields.length; i += 1) {\n        this.fields[i] = fields.get(i);\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/types/Types.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"N"}],"commitId":"b6cdc694b6b5a1040d6a2ffb4e72446fe52309c4","commitMessage":"@@@Add persistent IDs to partition fields (#845)\n\n","date":"2020-04-16 04:13:35","modifiedFileCount":"10","status":"M","submitter":"jun-he"}]
