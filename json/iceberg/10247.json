[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testMapOfStructs() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            SUPPORTED_PRIMITIVES)));\n\n    writeAndValidate(schema);\n  }\n","date":"2019-03-21 07:25:05","endLine":129,"groupId":"624","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMapOfStructs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/94/ad20bc33f7cc40a514d55d9a0b4edf8a2b7632.src","preCode":"  public void testMapOfStructs() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            SUPPORTED_PRIMITIVES)));\n\n    writeAndValidate(schema);\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/spark/data/AvroDataTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testMap() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            Types.StringType.get())));\n\n    writeAndValidate(schema);\n  }\n","date":"2019-03-21 07:25:05","endLine":94,"groupId":"624","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e4/513238ce89486daf6d4c362693a6ad907fd3ac.src","preCode":"  public void testMap() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            Types.StringType.get())));\n\n    writeAndValidate(schema);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/avro/AvroDataTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-09-07 04:25:04","commitOrder":2,"curCode":"  public void testMapOfStructs() throws IOException {\n    Schema schema = TypeUtil.assignIncreasingFreshIds(new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            SUPPORTED_PRIMITIVES))));\n\n    writeAndValidate(schema);\n  }\n","date":"2019-09-07 04:25:04","endLine":130,"groupId":"10247","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMapOfStructs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/33/ae818ca7ea3a492a5de38eed69e1fc592fc0b7.src","preCode":"  public void testMapOfStructs() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            SUPPORTED_PRIMITIVES)));\n\n    writeAndValidate(schema);\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/spark/data/AvroDataTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void testMap() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            Types.StringType.get())));\n\n    writeAndValidate(schema);\n  }\n","date":"2019-03-21 07:25:05","endLine":94,"groupId":"10247","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e4/513238ce89486daf6d4c362693a6ad907fd3ac.src","preCode":"  public void testMap() throws IOException {\n    Schema schema = new Schema(\n        required(0, \"id\", LongType.get()),\n        optional(1, \"data\", MapType.ofOptional(2, 3,\n            Types.StringType.get(),\n            Types.StringType.get())));\n\n    writeAndValidate(schema);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/avro/AvroDataTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"}],"commitId":"fef67332585a1e5e45b053448107b922bca1cd26","commitMessage":"@@@Update Avro test schemas to use unique IDs (#456)\n\n","date":"2019-09-07 04:25:04","modifiedFileCount":"3","status":"M","submitter":"Edgar Rodriguez"}]
