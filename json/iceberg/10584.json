[{"authorTime":"2020-05-26 01:15:35","codes":[{"authorDate":"2020-05-26 01:15:35","commitOrder":1,"curCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notNull(\"all_nulls\"));\n      Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-05-26 01:15:35","endLine":274,"groupId":"1333","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/a4caee610f5c2e6dd4a158f7b405c730067ff0.src","preCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notNull(\"all_nulls\"));\n      Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"B"},{"authorDate":"2020-05-26 01:15:35","commitOrder":1,"curCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-05-26 01:15:35","endLine":293,"groupId":"1333","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/a4caee610f5c2e6dd4a158f7b405c730067ff0.src","preCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"e8f7379ffe253623e9dd27a1ada7d4421af8b937","commitMessage":"@@@ORC: Push down Iceberg filters (#973)\n\n","date":"2020-05-26 01:15:35","modifiedFileCount":"6","status":"B","submitter":"Shardul Mahadik"},{"authorTime":"2020-05-28 23:38:30","codes":[{"authorDate":"2020-05-28 23:38:30","commitOrder":2,"curCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notNull(\"all_nulls\"));\n      Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-05-28 23:38:30","endLine":270,"groupId":"1333","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/b5959215eff24f03f14fcf4d48bffa339e24ec.src","preCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notNull(\"all_nulls\"));\n      Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2020-05-28 23:38:30","commitOrder":2,"curCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-05-28 23:38:30","endLine":288,"groupId":"1333","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/b5959215eff24f03f14fcf4d48bffa339e24ec.src","preCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    \r\n    \r\n    \r\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"d5c166b1b29f10b0eafa2d27fcb41e8e77341061","commitMessage":"@@@ORC: In BuildOrcProjection field should be optional if any parent is optional (#1071)\n\n","date":"2020-05-28 23:38:30","modifiedFileCount":"4","status":"M","submitter":"Shardul Mahadik"},{"authorTime":"2020-05-28 23:38:30","codes":[{"authorDate":"2020-10-14 00:32:19","commitOrder":3,"curCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    shouldRead = shouldRead(notNull(\"all_nulls\"));\n    Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-10-14 00:32:19","endLine":263,"groupId":"10584","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/76/33bb8138aa68b2ebb2f9880e599c1c9ea8a00d.src","preCode":"  public void testAllNulls() {\n    boolean shouldRead;\n\n    \r\n    \r\n    if (format != FileFormat.ORC) {\n      shouldRead = shouldRead(notNull(\"all_nulls\"));\n      Assert.assertFalse(\"Should skip: no non-null value in all null column\", shouldRead);\n    }\n\n    shouldRead = shouldRead(notNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"no_nulls\"));\n    Assert.assertTrue(\"Should read: non-null column contains a non-null value\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(notNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"},{"authorDate":"2020-05-28 23:38:30","commitOrder":3,"curCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","date":"2020-05-28 23:38:30","endLine":288,"groupId":"10584","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoNulls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/b5959215eff24f03f14fcf4d48bffa339e24ec.src","preCode":"  public void testNoNulls() {\n    boolean shouldRead = shouldRead(isNull(\"all_nulls\"));\n    Assert.assertTrue(\"Should read: at least one null value in all null column\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"some_nulls\"));\n    Assert.assertTrue(\"Should read: column with some nulls contains a null value\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"no_nulls\"));\n    Assert.assertFalse(\"Should skip: non-null column contains no null values\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"map_not_null\"));\n    Assert.assertTrue(\"Should read: map type is not skipped\", shouldRead);\n\n    shouldRead = shouldRead(isNull(\"struct_not_null\"));\n    Assert.assertTrue(\"Should read: struct type is not skipped\", shouldRead);\n  }\n","realPath":"data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"N"}],"commitId":"759510e8387a55edddd151a4f7d495db5c57dc18","commitMessage":"@@@ORC: Remove workarounds after 1.6.5 upgrade (#1561)\n\n","date":"2020-10-14 00:32:19","modifiedFileCount":"2","status":"M","submitter":"Shardul Mahadik"}]
