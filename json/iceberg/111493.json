[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          return (Literal<T>) this;\n        case LONG:\n          return (Literal<T>) new LongLiteral(value().longValue());\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case DATE:\n          return (Literal<T>) new DateLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":226,"groupId":"1127","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"to","params":"(Typetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4e/2d4a4dcbaed7a4f3e7dfb03f6ee7b699c11f20.src","preCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          return (Literal<T>) this;\n        case LONG:\n          return (Literal<T>) new LongLiteral(value().longValue());\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case DATE:\n          return (Literal<T>) new DateLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/Literals.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          if ((long) Integer.MAX_VALUE < value()) {\n            return aboveMax();\n          } else if ((long) Integer.MIN_VALUE > value()) {\n            return belowMin();\n          }\n          return (Literal<T>) new IntegerLiteral(value().intValue());\n        case LONG:\n          return (Literal<T>) this;\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case TIME:\n          return (Literal<T>) new TimeLiteral(value());\n        case TIMESTAMP:\n          return (Literal<T>) new TimestampLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":263,"groupId":"1127","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"to","params":"(Typetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4e/2d4a4dcbaed7a4f3e7dfb03f6ee7b699c11f20.src","preCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          if ((long) Integer.MAX_VALUE < value()) {\n            return aboveMax();\n          } else if ((long) Integer.MIN_VALUE > value()) {\n            return belowMin();\n          }\n          return (Literal<T>) new IntegerLiteral(value().intValue());\n        case LONG:\n          return (Literal<T>) this;\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case TIME:\n          return (Literal<T>) new TimeLiteral(value());\n        case TIMESTAMP:\n          return (Literal<T>) new TimestampLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/Literals.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2020-02-21 06:11:54","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          return (Literal<T>) this;\n        case LONG:\n          return (Literal<T>) new LongLiteral(value().longValue());\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case DATE:\n          return (Literal<T>) new DateLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":226,"groupId":"111493","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"to","params":"(Typetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4e/2d4a4dcbaed7a4f3e7dfb03f6ee7b699c11f20.src","preCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          return (Literal<T>) this;\n        case LONG:\n          return (Literal<T>) new LongLiteral(value().longValue());\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case DATE:\n          return (Literal<T>) new DateLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/Literals.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"},{"authorDate":"2020-02-21 06:11:54","commitOrder":2,"curCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          if ((long) Integer.MAX_VALUE < value()) {\n            return aboveMax();\n          } else if ((long) Integer.MIN_VALUE > value()) {\n            return belowMin();\n          }\n          return (Literal<T>) new IntegerLiteral(value().intValue());\n        case LONG:\n          return (Literal<T>) this;\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case TIME:\n          return (Literal<T>) new TimeLiteral(value());\n        case TIMESTAMP:\n          return (Literal<T>) new TimestampLiteral(value());\n        case DATE:\n          if ((long) Integer.MAX_VALUE < value()) {\n            return aboveMax();\n          } else if ((long) Integer.MIN_VALUE > value()) {\n            return belowMin();\n          }\n          return (Literal<T>) new DateLiteral(value().intValue());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","date":"2020-02-21 06:11:54","endLine":317,"groupId":"111493","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"to","params":"(Typetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c5/fb103fb0e72bf623b199e7f9a155c785ea8968.src","preCode":"    public <T> Literal<T> to(Type type) {\n      switch (type.typeId()) {\n        case INTEGER:\n          if ((long) Integer.MAX_VALUE < value()) {\n            return aboveMax();\n          } else if ((long) Integer.MIN_VALUE > value()) {\n            return belowMin();\n          }\n          return (Literal<T>) new IntegerLiteral(value().intValue());\n        case LONG:\n          return (Literal<T>) this;\n        case FLOAT:\n          return (Literal<T>) new FloatLiteral(value().floatValue());\n        case DOUBLE:\n          return (Literal<T>) new DoubleLiteral(value().doubleValue());\n        case TIME:\n          return (Literal<T>) new TimeLiteral(value());\n        case TIMESTAMP:\n          return (Literal<T>) new TimestampLiteral(value());\n        case DECIMAL:\n          int scale = ((Types.DecimalType) type).scale();\n          \r\n          return (Literal<T>) new DecimalLiteral(\n              BigDecimal.valueOf(value()).setScale(scale, RoundingMode.HALF_UP));\n        default:\n          return null;\n      }\n    }\n","realPath":"api/src/main/java/org/apache/iceberg/expressions/Literals.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"eb9c75e41f1c0045595302710f2f6500f038e626","commitMessage":"@@@Allow Long to Date Literal conversion (#815)\n\n","date":"2020-02-21 06:11:54","modifiedFileCount":"3","status":"M","submitter":"Vlad Rozov"}]
