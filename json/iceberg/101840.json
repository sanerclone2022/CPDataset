[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","date":"2019-03-21 07:25:05","endLine":45,"groupId":"1774","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/a6ced2adbc87e1822ff957d55b41631355254f.src","preCode":"  static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return BaseTransaction.createTableTransaction(ops, metadata);\n  }\n","date":"2019-03-21 07:25:05","endLine":56,"groupId":"867","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/a6ced2adbc87e1822ff957d55b41631355254f.src","preCode":"  static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return BaseTransaction.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-06-28 23:49:06","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","date":"2019-03-21 07:25:05","endLine":45,"groupId":"1774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/a6ced2adbc87e1822ff957d55b41631355254f.src","preCode":"  static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"},{"authorDate":"2019-06-28 23:49:06","commitOrder":2,"curCode":"  static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","date":"2019-06-28 23:49:06","endLine":59,"groupId":"867","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/42/752058f63c7fc840da45bbc28cda494649ff68.src","preCode":"  static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return BaseTransaction.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"846d1e4db2e37fa352486e522dfa64f0fa3e04ec","commitMessage":"@@@Move BaseTransaction factory methods to Transaction (#234)\n\n","date":"2019-06-28 23:49:06","modifiedFileCount":"4","status":"M","submitter":"David Phillips"},{"authorTime":"2019-08-01 05:44:05","codes":[{"authorDate":"2019-08-01 05:44:05","commitOrder":3,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","date":"2019-08-01 05:44:05","endLine":48,"groupId":"1774","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/13/e336ea9eedae0c6896c55cb5778ab420c80b16.src","preCode":"  static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2019-08-01 05:44:05","commitOrder":3,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","date":"2019-08-01 05:44:05","endLine":59,"groupId":"867","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/13/e336ea9eedae0c6896c55cb5778ab420c80b16.src","preCode":"  static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"1dda1ada9c5b338fd0383b7f528707b8506c49a6","commitMessage":"@@@Add mapping to Iceberg for external name-based schemas (#338)\n\n","date":"2019-08-01 05:44:05","modifiedFileCount":"5","status":"M","submitter":"Ryan Blue"},{"authorTime":"2019-11-21 01:48:39","codes":[{"authorDate":"2019-11-21 01:48:39","commitOrder":4,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","date":"2019-11-21 01:48:39","endLine":48,"groupId":"1774","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/20/d2f3e67a353f3b61906036f532b6d1c8c92c9e.src","preCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(ops, schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2019-11-21 01:48:39","commitOrder":4,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","date":"2019-11-21 01:48:39","endLine":59,"groupId":"3999","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/20/d2f3e67a353f3b61906036f532b6d1c8c92c9e.src","preCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(ops, schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"083edc1f749d9a64cd4042fb360a27a0a3bfe03c","commitMessage":"@@@Decouple TableMetadataParser and TableMetadata from TableOperations (#591)\n\nThe rationale behind not using TableOperations is:\n1. It saves the need to construct a TableOperations instance when you\n?? want to get a table's metadata by parsing its metadata files.\n2. It's more intuitive because a TableMetadata instance reflects a\n?? table's state and is determined by only a set of metadata files.","date":"2019-11-21 01:48:39","modifiedFileCount":"19","status":"M","submitter":"Xingyuan Lin"},{"authorTime":"2020-04-10 03:14:34","codes":[{"authorDate":"2020-04-10 03:14:34","commitOrder":5,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of()));\n    return new TestTable(ops, name);\n  }\n","date":"2020-04-10 03:14:34","endLine":48,"groupId":"1774","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/41/974e37ac24e4894be8041b2e593f1c2268cddd.src","preCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2020-04-10 03:14:34","commitOrder":5,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","date":"2020-04-10 03:14:34","endLine":59,"groupId":"3999","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/41/974e37ac24e4894be8041b2e593f1c2268cddd.src","preCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(schema, spec, temp.toString());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"c094da57db072187b2d930ae6c5590218012ec3f","commitMessage":"@@@Prepare metadata writers for format v2 (#903)\n\n* Track format version in TableMetadata.\n* Pass formatVersion when creating a manifest writer.\n* Pass formatVersion when creating a manifest list writer.\n* Add v2 change section to spec.","date":"2020-04-10 03:14:34","modifiedFileCount":"12","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-04-22 03:50:32","codes":[{"authorDate":"2020-04-22 03:50:32","commitOrder":6,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec, int formatVersion) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of(), formatVersion));\n    return new TestTable(ops, name);\n  }\n","date":"2020-04-22 03:50:32","endLine":56,"groupId":"1774","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec@intformatVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e7/897ce5eea8aa3607b56321f7edc8ba1cf94f6b.src","preCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of()));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-04-22 03:50:32","commitOrder":6,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(\n        schema, spec, temp.toString(), ImmutableMap.of(), 1);\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","date":"2020-04-22 03:50:32","endLine":68,"groupId":"3999","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e7/897ce5eea8aa3607b56321f7edc8ba1cf94f6b.src","preCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of());\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"a81d11e78fb447f68b2a3e8f98cf02b0c57c7f58","commitMessage":"@@@Update TableTestBase tests to run with formats v1 and v2 (#936)\n\n","date":"2020-04-22 03:50:32","modifiedFileCount":"37","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-05-05 03:54:12","codes":[{"authorDate":"2020-04-22 03:50:32","commitOrder":7,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec, int formatVersion) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of(), formatVersion));\n    return new TestTable(ops, name);\n  }\n","date":"2020-04-22 03:50:32","endLine":56,"groupId":"1774","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec@intformatVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e7/897ce5eea8aa3607b56321f7edc8ba1cf94f6b.src","preCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec, int formatVersion) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of(), formatVersion));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2020-05-05 03:54:12","commitOrder":7,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(\n        schema, spec, temp.toString(), ImmutableMap.of(), 1);\n\n    return Transactions.createTableTransaction(name, ops, metadata);\n  }\n","date":"2020-05-05 03:54:12","endLine":68,"groupId":"3999","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6d/1a47783a31f05cd99e676b31f12c68ac077eff.src","preCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(\n        schema, spec, temp.toString(), ImmutableMap.of(), 1);\n\n    return Transactions.createTableTransaction(ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"53d77075254b24b712b201912c01acf7ecf84c21","commitMessage":"@@@Emit UpdateEvent from operations that create snapshots (#939)\n\n","date":"2020-05-05 03:54:12","modifiedFileCount":"16","status":"M","submitter":"Ratandeep Ratti"},{"authorTime":"2020-09-04 13:48:01","codes":[{"authorDate":"2020-09-04 13:48:01","commitOrder":8,"curCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec,\n                                 SortOrder sortOrder, int formatVersion) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    ops.commit(null, newTableMetadata(schema, spec, sortOrder, temp.toString(), ImmutableMap.of(), formatVersion));\n\n    return new TestTable(ops, name);\n  }\n","date":"2020-09-04 13:48:01","endLine":64,"groupId":"101840","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"create","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec@SortOrdersortOrder@intformatVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2e/0ecd60359d34d3e336ac5ddde1b13720e26294.src","preCode":"  public static TestTable create(File temp, String name, Schema schema, PartitionSpec spec, int formatVersion) {\n    TestTableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n    ops.commit(null, TableMetadata.newTableMetadata(schema, spec, temp.toString(), ImmutableMap.of(), formatVersion));\n    return new TestTable(ops, name);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-09-04 13:48:01","commitOrder":8,"curCode":"  public static Transaction beginCreate(File temp, String name, Schema schema,\n                                        PartitionSpec spec, SortOrder sortOrder) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = newTableMetadata(schema, spec, sortOrder, temp.toString(), ImmutableMap.of(), 1);\n\n    return Transactions.createTableTransaction(name, ops, metadata);\n  }\n","date":"2020-09-04 13:48:01","endLine":80,"groupId":"101840","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"beginCreate","params":"(Filetemp@Stringname@Schemaschema@PartitionSpecspec@SortOrdersortOrder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2e/0ecd60359d34d3e336ac5ddde1b13720e26294.src","preCode":"  public static Transaction beginCreate(File temp, String name, Schema schema, PartitionSpec spec) {\n    TableOperations ops = new TestTableOperations(name, temp);\n    if (ops.current() != null) {\n      throw new AlreadyExistsException(\"Table %s already exists at location: %s\", name, temp);\n    }\n\n    TableMetadata metadata = TableMetadata.newTableMetadata(\n        schema, spec, temp.toString(), ImmutableMap.of(), 1);\n\n    return Transactions.createTableTransaction(name, ops, metadata);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTables.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"454101c3573acb9cd94d6d9a306ed99a5a324ed9","commitMessage":"@@@API: Implement SortOrder (#1373)\n\nThis commit extends Iceberg metadata with a sort order that defines how data and delete files should be ordered.","date":"2020-09-04 13:48:01","modifiedFileCount":"17","status":"M","submitter":"Anton Okolnychyi"}]
