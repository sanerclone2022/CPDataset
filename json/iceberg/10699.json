[{"authorTime":"2020-07-02 00:24:16","codes":[{"authorDate":"2020-08-25 04:58:10","commitOrder":3,"curCode":"  private CloseableIterable<Record> applyResidual(CloseableIterable<Record> records, Schema recordSchema,\n                                                  Expression residual) {\n    if (residual != null && residual != Expressions.alwaysTrue()) {\n      InternalRecordWrapper wrapper = new InternalRecordWrapper(recordSchema.asStruct());\n      Evaluator filter = new Evaluator(recordSchema.asStruct(), residual, caseSensitive);\n      return CloseableIterable.filter(records, record -> filter.eval(wrapper.wrap(record)));\n    }\n\n    return records;\n  }\n","date":"2020-08-25 04:58:10","endLine":165,"groupId":"2207","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyResidual","params":"(CloseableIterable<Record>records@SchemarecordSchema@Expressionresidual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e5/f71172a057ee463cd5950235c977d58bf320e7.src","preCode":"  private CloseableIterable<Record> applyResidual(CloseableIterable<Record> records, Schema recordSchema,\n                                                  Expression residual) {\n    if (residual != null && residual != Expressions.alwaysTrue()) {\n      InternalRecordWrapper wrapper = new InternalRecordWrapper(recordSchema.asStruct());\n      Evaluator filter = new Evaluator(recordSchema.asStruct(), residual, caseSensitive);\n      return CloseableIterable.filter(records, record -> filter.eval(wrapper.wrap(record)));\n    }\n\n    return records;\n  }\n","realPath":"data/src/main/java/org/apache/iceberg/data/GenericReader.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"},{"authorDate":"2020-07-02 00:24:16","commitOrder":3,"curCode":"    private CloseableIterable<T> applyResidualFiltering(CloseableIterable<T> iter, Expression residual,\n                                                        Schema readSchema) {\n      boolean applyResidual = !context.getConfiguration().getBoolean(InputFormatConfig.SKIP_RESIDUAL_FILTERING, false);\n\n      if (applyResidual && residual != null && residual != Expressions.alwaysTrue()) {\n        Evaluator filter = new Evaluator(readSchema.asStruct(), residual, caseSensitive);\n        return CloseableIterable.filter(iter, record -> filter.eval((StructLike) record));\n      } else {\n        return iter;\n      }\n    }\n","date":"2020-07-02 00:24:16","endLine":275,"groupId":"4655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyResidualFiltering","params":"(CloseableIterable<T>iter@Expressionresidual@SchemareadSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e8/f76ab63cd265c5b2757d41e4c8907961ce1f70.src","preCode":"    private CloseableIterable<T> applyResidualFiltering(CloseableIterable<T> iter, Expression residual,\n                                                        Schema readSchema) {\n      boolean applyResidual = !context.getConfiguration().getBoolean(InputFormatConfig.SKIP_RESIDUAL_FILTERING, false);\n\n      if (applyResidual && residual != null && residual != Expressions.alwaysTrue()) {\n        Evaluator filter = new Evaluator(readSchema.asStruct(), residual, caseSensitive);\n        return CloseableIterable.filter(iter, record -> filter.eval((StructLike) record));\n      } else {\n        return iter;\n      }\n    }\n","realPath":"mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"NB"}],"commitId":"0b9d9940dc49602da585fd6bdc937f3cb1df70c0","commitMessage":"@@@Data: Support row-level deletes with IcebergGenerics (#1352)\n\n","date":"2020-08-25 04:58:10","modifiedFileCount":"7","status":"M","submitter":"Ryan Blue"},{"authorTime":"2021-02-26 19:51:10","codes":[{"authorDate":"2020-08-25 04:58:10","commitOrder":4,"curCode":"  private CloseableIterable<Record> applyResidual(CloseableIterable<Record> records, Schema recordSchema,\n                                                  Expression residual) {\n    if (residual != null && residual != Expressions.alwaysTrue()) {\n      InternalRecordWrapper wrapper = new InternalRecordWrapper(recordSchema.asStruct());\n      Evaluator filter = new Evaluator(recordSchema.asStruct(), residual, caseSensitive);\n      return CloseableIterable.filter(records, record -> filter.eval(wrapper.wrap(record)));\n    }\n\n    return records;\n  }\n","date":"2020-08-25 04:58:10","endLine":165,"groupId":"10699","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"applyResidual","params":"(CloseableIterable<Record>records@SchemarecordSchema@Expressionresidual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e5/f71172a057ee463cd5950235c977d58bf320e7.src","preCode":"  private CloseableIterable<Record> applyResidual(CloseableIterable<Record> records, Schema recordSchema,\n                                                  Expression residual) {\n    if (residual != null && residual != Expressions.alwaysTrue()) {\n      InternalRecordWrapper wrapper = new InternalRecordWrapper(recordSchema.asStruct());\n      Evaluator filter = new Evaluator(recordSchema.asStruct(), residual, caseSensitive);\n      return CloseableIterable.filter(records, record -> filter.eval(wrapper.wrap(record)));\n    }\n\n    return records;\n  }\n","realPath":"data/src/main/java/org/apache/iceberg/data/GenericReader.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"},{"authorDate":"2021-02-26 19:51:10","commitOrder":4,"curCode":"    private CloseableIterable<T> applyResidualFiltering(CloseableIterable<T> iter, Expression residual,\n                                                        Schema readSchema) {\n      boolean applyResidual = !context.getConfiguration().getBoolean(InputFormatConfig.SKIP_RESIDUAL_FILTERING, false);\n\n      if (applyResidual && residual != null && residual != Expressions.alwaysTrue()) {\n        \r\n        \r\n        InternalRecordWrapper wrapper = new InternalRecordWrapper(readSchema.asStruct());\n        Evaluator filter = new Evaluator(readSchema.asStruct(), residual, caseSensitive);\n        return CloseableIterable.filter(iter, record -> filter.eval(wrapper.wrap((StructLike) record)));\n      } else {\n        return iter;\n      }\n    }\n","date":"2021-02-26 19:51:10","endLine":296,"groupId":"10699","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"applyResidualFiltering","params":"(CloseableIterable<T>iter@Expressionresidual@SchemareadSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a6/7c5130cb2cc3ad9e6e62731eac14bdef27a007.src","preCode":"    private CloseableIterable<T> applyResidualFiltering(CloseableIterable<T> iter, Expression residual,\n                                                        Schema readSchema) {\n      boolean applyResidual = !context.getConfiguration().getBoolean(InputFormatConfig.SKIP_RESIDUAL_FILTERING, false);\n\n      if (applyResidual && residual != null && residual != Expressions.alwaysTrue()) {\n        Evaluator filter = new Evaluator(readSchema.asStruct(), residual, caseSensitive);\n        return CloseableIterable.filter(iter, record -> filter.eval((StructLike) record));\n      } else {\n        return iter;\n      }\n    }\n","realPath":"mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"23735d1d99abf0207543ff5d9dcb63ae4fe4ec02","commitMessage":"@@@Hive: Fix predicate pushdown for Date (#2254)\n\n","date":"2021-02-26 19:51:10","modifiedFileCount":"4","status":"M","submitter":"pvary"}]
