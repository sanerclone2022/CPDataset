[{"authorTime":"2020-05-16 01:34:53","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":2,"curCode":"  void TSIG_query() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 1);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2019-10-27 23:56:59","endLine":26,"groupId":"50","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TSIG_query","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/98/3b2e84f59bf9b3cf1445c29a266fa7c7b8e6f0.src","preCode":"  void TSIG_query() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 1);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":12,"status":"NB"},{"authorDate":"2020-05-16 01:34:53","commitOrder":2,"curCode":"  void TSIG_queryIsLastAddMessageRecord() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    OPTRecord opt = new OPTRecord(SimpleResolver.DEFAULT_EDNS_PAYLOADSIZE, 0, 0, 0);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    msg.addRecord(opt, Section.ADDITIONAL);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 2); \r\n\n    Message parsed = new Message(bytes);\n    List<Record> additionalSection = parsed.getSection(Section.ADDITIONAL);\n    assertEquals(Type.string(Type.OPT), Type.string(additionalSection.get(0).getType()));\n    assertEquals(Type.string(Type.TSIG), Type.string(additionalSection.get(1).getType()));\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2020-05-16 01:34:53","endLine":51,"groupId":"464","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TSIG_queryIsLastAddMessageRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/76/083355ed7eb54c73e68c6368d3eb59b6d2267d.src","preCode":"  void TSIG_queryIsLastAddMessageRecord() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    OPTRecord opt = new OPTRecord(SimpleResolver.DEFAULT_EDNS_PAYLOADSIZE, 0, 0, 0);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    msg.addRecord(opt, Section.ADDITIONAL);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 2); \r\n\n    Message parsed = new Message(bytes);\n    List<Record> additionalSection = parsed.getSection(Section.ADDITIONAL);\n    assertEquals(Type.string(Type.OPT), Type.string(additionalSection.get(0).getType()));\n    assertEquals(Type.string(Type.TSIG), Type.string(additionalSection.get(1).getType()));\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"}],"commitId":"255904bc77024a5d73cfdc5c984ea06e57101cc1","commitMessage":"@@@Merge remote-tracking branch 'origin/3.0.x'\n","date":"2020-05-16 01:34:53","modifiedFileCount":"10","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2021-08-16 05:58:27","codes":[{"authorDate":"2021-08-16 05:58:27","commitOrder":3,"curCode":"  void TSIG_query() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(1, bytes[11]);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(Rcode.NOERROR, result);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2021-08-16 06:00:47","endLine":30,"groupId":"10153","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"TSIG_query","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/16/d836774a7cc4256f50599fcaa4fd6332a3a07a.src","preCode":"  void TSIG_query() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 1);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":16,"status":"M"},{"authorDate":"2021-08-16 05:58:27","commitOrder":3,"curCode":"  void TSIG_queryIsLastAddMessageRecord() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    OPTRecord opt = new OPTRecord(SimpleResolver.DEFAULT_EDNS_PAYLOADSIZE, 0, 0, 0);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    msg.addRecord(opt, Section.ADDITIONAL);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(2, bytes[11]); \r\n\n    Message parsed = new Message(bytes);\n    List<Record> additionalSection = parsed.getSection(Section.ADDITIONAL);\n    assertEquals(Type.string(Type.OPT), Type.string(additionalSection.get(0).getType()));\n    assertEquals(Type.string(Type.TSIG), Type.string(additionalSection.get(1).getType()));\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(Rcode.NOERROR, result);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2021-08-16 06:00:47","endLine":52,"groupId":"10153","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"TSIG_queryIsLastAddMessageRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/16/d836774a7cc4256f50599fcaa4fd6332a3a07a.src","preCode":"  void TSIG_queryIsLastAddMessageRecord() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record rec = Record.newRecord(qname, Type.A, DClass.IN);\n    OPTRecord opt = new OPTRecord(SimpleResolver.DEFAULT_EDNS_PAYLOADSIZE, 0, 0, 0);\n    Message msg = Message.newQuery(rec);\n    msg.setTSIG(key, Rcode.NOERROR, null);\n    msg.addRecord(opt, Section.ADDITIONAL);\n    byte[] bytes = msg.toWire(512);\n    assertEquals(bytes[11], 2); \r\n\n    Message parsed = new Message(bytes);\n    List<Record> additionalSection = parsed.getSection(Section.ADDITIONAL);\n    assertEquals(Type.string(Type.OPT), Type.string(additionalSection.get(0).getType()));\n    assertEquals(Type.string(Type.TSIG), Type.string(additionalSection.get(1).getType()));\n    int result = key.verify(parsed, bytes, null);\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"77d50ef15c1f8db70e9fb177810796d3a0cb5b9f","commitMessage":"@@@Cleanup tests as reported by Sonar\n","date":"2021-08-16 06:00:47","modifiedFileCount":"18","status":"M","submitter":"Ingo Bauersachs"}]
