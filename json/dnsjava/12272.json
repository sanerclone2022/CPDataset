[{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"public\nTypeBitmap(Tokenizer st) throws IOException {\n\tthis();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value);\n\t\tif (typecode < 0) {\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\t}\n\t\ttypes.add(Mnemonic.toInteger(typecode));\n\t}\n\tst.unget();\n}\n","date":"2019-05-26 00:58:59","endLine":75,"groupId":"792","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TypeBitmap","params":"(Tokenizerst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/38/6a83d8356ddd94ed40a84e1a99980c49fb5154.src","preCode":"public\nTypeBitmap(Tokenizer st) throws IOException {\n\tthis();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value);\n\t\tif (typecode < 0) {\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\t}\n\t\ttypes.add(Mnemonic.toInteger(typecode));\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/TypeBitmap.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"void\nrdataFromString(Tokenizer st, Name origin) throws IOException {\n\tnext = st.getName(origin);\n\tbitmap = new BitSet();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value, true);\n\t\tif (typecode <= 0 || typecode > 128)\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\tbitmap.set(typecode);\n\t}\n\tst.unget();\n}\n","date":"2019-05-26 00:58:59","endLine":70,"groupId":"2079","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"(Tokenizerst@Nameorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ad/04e0107c02113f9433a464fd1e6420d9233e77.src","preCode":"void\nrdataFromString(Tokenizer st, Name origin) throws IOException {\n\tnext = st.getName(origin);\n\tbitmap = new BitSet();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value, true);\n\t\tif (typecode <= 0 || typecode > 128)\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\tbitmap.set(typecode);\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/NXTRecord.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"e93079c869d0c71fed597cffb092e9802b69fcf8","commitMessage":"@@@Use standard directory layout\n","date":"2019-05-26 00:58:59","modifiedFileCount":"0","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-29 04:41:18","commitOrder":2,"curCode":"public\nTypeBitmap(Tokenizer st) throws IOException {\n\tthis();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value);\n\t\tif (typecode < 0) {\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\t}\n\t\ttypes.add(typecode);\n\t}\n\tst.unget();\n}\n","date":"2019-05-29 04:41:18","endLine":75,"groupId":"792","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"TypeBitmap","params":"(Tokenizerst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/0b/4258acd5802448e96651a6f121c9f87863db23.src","preCode":"public\nTypeBitmap(Tokenizer st) throws IOException {\n\tthis();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value);\n\t\tif (typecode < 0) {\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\t}\n\t\ttypes.add(Mnemonic.toInteger(typecode));\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/TypeBitmap.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-05-26 00:58:59","commitOrder":2,"curCode":"void\nrdataFromString(Tokenizer st, Name origin) throws IOException {\n\tnext = st.getName(origin);\n\tbitmap = new BitSet();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value, true);\n\t\tif (typecode <= 0 || typecode > 128)\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\tbitmap.set(typecode);\n\t}\n\tst.unget();\n}\n","date":"2019-05-26 00:58:59","endLine":70,"groupId":"2079","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"(Tokenizerst@Nameorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ad/04e0107c02113f9433a464fd1e6420d9233e77.src","preCode":"void\nrdataFromString(Tokenizer st, Name origin) throws IOException {\n\tnext = st.getName(origin);\n\tbitmap = new BitSet();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value, true);\n\t\tif (typecode <= 0 || typecode > 128)\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\tbitmap.set(typecode);\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/NXTRecord.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"d5df818814469a8ee5110b4c0b2b05d55cdaacae","commitMessage":"@@@Remove legacy (un)boxing optimizations\n","date":"2019-05-29 04:41:18","modifiedFileCount":"5","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-09-03 05:25:53","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":3,"curCode":"  public TypeBitmap(Tokenizer st) throws IOException {\n    this();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value);\n      if (typecode < 0) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      types.add(typecode);\n    }\n    st.unget();\n  }\n","date":"2019-09-03 05:25:53","endLine":78,"groupId":"792","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"TypeBitmap","params":"(Tokenizerst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/c1/fdd8a7959e22b93300c92c9e0b991e06e27f7e.src","preCode":"public\nTypeBitmap(Tokenizer st) throws IOException {\n\tthis();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value);\n\t\tif (typecode < 0) {\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\t}\n\t\ttypes.add(typecode);\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/TypeBitmap.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2019-09-03 05:25:53","commitOrder":3,"curCode":"  void rdataFromString(Tokenizer st, Name origin) throws IOException {\n    next = st.getName(origin);\n    bitmap = new BitSet();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value, true);\n      if (typecode <= 0 || typecode > 128) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      bitmap.set(typecode);\n    }\n    st.unget();\n  }\n","date":"2019-09-03 05:25:53","endLine":74,"groupId":"2079","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"(Tokenizerst@Nameorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/6a/0da4cd85880245a7f3611c0fce43c598704071.src","preCode":"void\nrdataFromString(Tokenizer st, Name origin) throws IOException {\n\tnext = st.getName(origin);\n\tbitmap = new BitSet();\n\twhile (true) {\n\t\tTokenizer.Token t = st.get();\n\t\tif (!t.isString())\n\t\t\tbreak;\n\t\tint typecode = Type.value(t.value, true);\n\t\tif (typecode <= 0 || typecode > 128)\n\t\t\tthrow st.exception(\"Invalid type: \" + t.value);\n\t\tbitmap.set(typecode);\n\t}\n\tst.unget();\n}\n","realPath":"src/main/java/org/xbill/DNS/NXTRecord.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"92e613b5950bab3f87525b7dd21975ef830af10b","commitMessage":"@@@Format code\n\nCloses #32\n","date":"2019-09-03 05:25:53","modifiedFileCount":"228","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2020-03-26 20:23:43","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":4,"curCode":"  public TypeBitmap(Tokenizer st) throws IOException {\n    this();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value);\n      if (typecode < 0) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      types.add(typecode);\n    }\n    st.unget();\n  }\n","date":"2019-09-03 05:25:53","endLine":78,"groupId":"12272","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"TypeBitmap","params":"(Tokenizerst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/c1/fdd8a7959e22b93300c92c9e0b991e06e27f7e.src","preCode":"  public TypeBitmap(Tokenizer st) throws IOException {\n    this();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value);\n      if (typecode < 0) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      types.add(typecode);\n    }\n    st.unget();\n  }\n","realPath":"src/main/java/org/xbill/DNS/TypeBitmap.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"},{"authorDate":"2020-03-26 20:23:43","commitOrder":4,"curCode":"  protected void rdataFromString(Tokenizer st, Name origin) throws IOException {\n    next = st.getName(origin);\n    bitmap = new BitSet();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value, true);\n      if (typecode <= 0 || typecode > 128) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      bitmap.set(typecode);\n    }\n    st.unget();\n  }\n","date":"2020-03-26 20:23:43","endLine":66,"groupId":"12272","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"(Tokenizerst@Nameorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/4e/544163f06b07e1a391178d7df3eebf2972fd53.src","preCode":"  void rdataFromString(Tokenizer st, Name origin) throws IOException {\n    next = st.getName(origin);\n    bitmap = new BitSet();\n    while (true) {\n      Tokenizer.Token t = st.get();\n      if (!t.isString()) {\n        break;\n      }\n      int typecode = Type.value(t.value, true);\n      if (typecode <= 0 || typecode > 128) {\n        throw st.exception(\"Invalid type: \" + t.value);\n      }\n      bitmap.set(typecode);\n    }\n    st.unget();\n  }\n","realPath":"src/main/java/org/xbill/DNS/NXTRecord.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"146a359ca61aff947afab1ed9e56057320d770c5","commitMessage":"@@@\"Record\" class access fixes (#98)\n\n* set methods that need to be overridden by subclasses to \"protected\".  so that\nthe subclasses may reside in different packages\n\n* applied code formatter","date":"2020-03-26 20:23:43","modifiedFileCount":"49","status":"M","submitter":"demonti"}]
