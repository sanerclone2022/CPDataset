[{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","date":"2019-05-26 00:58:59","endLine":223,"groupId":"1278","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nextRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/a0/8d34352528a7baf9fe52a5232808d3a91cbdd4.src","preCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"},{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"public Record []\nexpand() throws IOException {\n\tList list = new ArrayList();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn (Record []) list.toArray(new Record[list.size()]);\n}\n","date":"2019-05-26 00:58:59","endLine":241,"groupId":"1278","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"expand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/a0/8d34352528a7baf9fe52a5232808d3a91cbdd4.src","preCode":"public Record []\nexpand() throws IOException {\n\tList list = new ArrayList();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn (Record []) list.toArray(new Record[list.size()]);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"B"}],"commitId":"e93079c869d0c71fed597cffb092e9802b69fcf8","commitMessage":"@@@Use standard directory layout\n","date":"2019-05-26 00:58:59","modifiedFileCount":"0","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-05-28 13:41:25","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":2,"curCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","date":"2019-05-26 00:58:59","endLine":223,"groupId":"1278","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nextRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/a0/8d34352528a7baf9fe52a5232808d3a91cbdd4.src","preCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"N"},{"authorDate":"2019-05-28 13:41:25","commitOrder":2,"curCode":"public Record []\nexpand() throws IOException {\n\tList<Record> list = new ArrayList<>();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn list.toArray(new Record[list.size()]);\n}\n","date":"2019-05-28 13:41:25","endLine":241,"groupId":"1278","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"expand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/02/c481b61f75a2f0aed12dec87f8f95f420683aa.src","preCode":"public Record []\nexpand() throws IOException {\n\tList list = new ArrayList();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn (Record []) list.toArray(new Record[list.size()]);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"f06972b5c1369b1f514a3898f36e5f718dbe6617","commitMessage":"@@@Introduce generics (#42)\n\n","date":"2019-05-28 13:41:25","modifiedFileCount":"31","status":"M","submitter":"Kenny Ingle"},{"authorTime":"2019-05-29 04:42:45","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":3,"curCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","date":"2019-05-26 00:58:59","endLine":223,"groupId":"1278","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"nextRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/a0/8d34352528a7baf9fe52a5232808d3a91cbdd4.src","preCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"N"},{"authorDate":"2019-05-29 04:42:45","commitOrder":3,"curCode":"public Record []\nexpand() throws IOException {\n\tList<Record> list = new ArrayList<>();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn list.toArray(new Record[0]);\n}\n","date":"2019-05-29 04:42:45","endLine":241,"groupId":"1278","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"expand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/6e/585c9892af3b5e30b5c02eab68e5ffd33b9169.src","preCode":"public Record []\nexpand() throws IOException {\n\tList<Record> list = new ArrayList<>();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn list.toArray(new Record[list.size()]);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"bab81996a5c2fce9cca838b0644842c8d3343f2e","commitMessage":"@@@Use JDK6+ toArray() style\n","date":"2019-05-29 04:42:45","modifiedFileCount":"6","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-05-29 04:42:45","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":4,"curCode":"  public Record nextRecord() throws IOException {\n    if (current > end) {\n      return null;\n    }\n    String namestr = substitute(namePattern, current);\n    Name name = Name.fromString(namestr, origin);\n    String rdata = substitute(rdataPattern, current);\n    current += step;\n    return Record.fromString(name, type, dclass, ttl, rdata, origin);\n  }\n","date":"2019-09-03 05:25:53","endLine":237,"groupId":"10271","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"nextRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/d9/ceb1c21ce3e942793fd3e41a5ab032eb0f2063.src","preCode":"public Record\nnextRecord() throws IOException {\n\tif (current > end)\n\t\treturn null;\n\tString namestr = substitute(namePattern, current);\n\tName name = Name.fromString(namestr, origin);\n\tString rdata = substitute(rdataPattern, current);\n\tcurrent += step;\n\treturn Record.fromString(name, type, dclass, ttl, rdata, origin);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"},{"authorDate":"2019-05-29 04:42:45","commitOrder":4,"curCode":"public Record []\nexpand() throws IOException {\n\tList<Record> list = new ArrayList<>();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn list.toArray(new Record[0]);\n}\n","date":"2019-05-29 04:42:45","endLine":241,"groupId":"10271","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"expand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/6e/585c9892af3b5e30b5c02eab68e5ffd33b9169.src","preCode":"public Record []\nexpand() throws IOException {\n\tList<Record> list = new ArrayList<>();\n\tfor (long i = start; i < end; i += step) {\n\t\tString namestr = substitute(namePattern, current);\n\t\tName name = Name.fromString(namestr, origin);\n\t\tString rdata = substitute(rdataPattern, current);\n\t\tlist.add(Record.fromString(name, type, dclass, ttl,\n\t\t\t\t\t   rdata, origin));\n\t}\n\treturn list.toArray(new Record[0]);\n}\n","realPath":"src/main/java/org/xbill/DNS/Generator.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"92e613b5950bab3f87525b7dd21975ef830af10b","commitMessage":"@@@Format code\n\nCloses #32\n","date":"2019-09-03 05:25:53","modifiedFileCount":"228","status":"M","submitter":"Ingo Bauersachs"}]
