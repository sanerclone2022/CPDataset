[{"authorTime":"2019-12-24 23:08:58","codes":[{"authorDate":"2019-12-24 23:08:58","commitOrder":1,"curCode":"  private static void checkTransactionTimeouts() {\n    for (Iterator<Transaction> it = pendingTransactions.iterator(); it.hasNext(); ) {\n      Transaction t = it.next();\n      if (t.endTime - System.nanoTime() < 0) {\n        try {\n          t.channel.disconnect();\n          t.channel.close();\n        } catch (IOException e) {\n          \r\n        }\n\n        t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n        it.remove();\n      }\n    }\n  }\n","date":"2019-12-24 23:08:58","endLine":95,"groupId":"1055","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkTransactionTimeouts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/d8/4717a4fa5e3a70ffc174becbe0fa7348661ccc.src","preCode":"  private static void checkTransactionTimeouts() {\n    for (Iterator<Transaction> it = pendingTransactions.iterator(); it.hasNext(); ) {\n      Transaction t = it.next();\n      if (t.endTime - System.nanoTime() < 0) {\n        try {\n          t.channel.disconnect();\n          t.channel.close();\n        } catch (IOException e) {\n          \r\n        }\n\n        t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n        it.remove();\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/NioUdpClient.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2019-12-24 23:08:58","commitOrder":1,"curCode":"  private static void checkTransactionTimeouts() {\n    for (ChannelState state : channelMap.values()) {\n      for (Iterator<Transaction> it = state.pendingTransactions.iterator(); it.hasNext(); ) {\n        Transaction t = it.next();\n        if (t.endTime - System.nanoTime() < 0) {\n          t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n          it.remove();\n        }\n      }\n    }\n  }\n","date":"2019-12-24 23:08:58","endLine":70,"groupId":"718","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkTransactionTimeouts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/31/437ce14287afcddd72e4febf0f325cb1c6afc7.src","preCode":"  private static void checkTransactionTimeouts() {\n    for (ChannelState state : channelMap.values()) {\n      for (Iterator<Transaction> it = state.pendingTransactions.iterator(); it.hasNext(); ) {\n        Transaction t = it.next();\n        if (t.endTime - System.nanoTime() < 0) {\n          t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n          it.remove();\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/NioTcpClient.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"}],"commitId":"c4a05797f4d40c4b9dd79793db914f7e7a4449de","commitMessage":"@@@Merge pull request #88 from dnsjava/nio-clients\n\nRewrite UDP/TCP clients to use NIO and built-in worker threads","date":"2019-12-24 23:08:58","modifiedFileCount":"18","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-24 23:08:58","codes":[{"authorDate":"2020-05-28 04:03:19","commitOrder":2,"curCode":"  private static void checkTransactionTimeouts() {\n    for (Iterator<Transaction> it = pendingTransactions.iterator(); it.hasNext(); ) {\n      Transaction t = it.next();\n      if (t.endTime - System.nanoTime() < 0) {\n        t.silentCloseChannel();\n        t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n        it.remove();\n      }\n    }\n  }\n","date":"2020-05-28 04:03:19","endLine":79,"groupId":"10261","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkTransactionTimeouts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/2c/7df72641ce987fe8bcf1c553910277e885f495.src","preCode":"  private static void checkTransactionTimeouts() {\n    for (Iterator<Transaction> it = pendingTransactions.iterator(); it.hasNext(); ) {\n      Transaction t = it.next();\n      if (t.endTime - System.nanoTime() < 0) {\n        try {\n          t.channel.disconnect();\n          t.channel.close();\n        } catch (IOException e) {\n          \r\n        }\n\n        t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n        it.remove();\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/NioUdpClient.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-12-24 23:08:58","commitOrder":2,"curCode":"  private static void checkTransactionTimeouts() {\n    for (ChannelState state : channelMap.values()) {\n      for (Iterator<Transaction> it = state.pendingTransactions.iterator(); it.hasNext(); ) {\n        Transaction t = it.next();\n        if (t.endTime - System.nanoTime() < 0) {\n          t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n          it.remove();\n        }\n      }\n    }\n  }\n","date":"2019-12-24 23:08:58","endLine":70,"groupId":"10261","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkTransactionTimeouts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/31/437ce14287afcddd72e4febf0f325cb1c6afc7.src","preCode":"  private static void checkTransactionTimeouts() {\n    for (ChannelState state : channelMap.values()) {\n      for (Iterator<Transaction> it = state.pendingTransactions.iterator(); it.hasNext(); ) {\n        Transaction t = it.next();\n        if (t.endTime - System.nanoTime() < 0) {\n          t.f.completeExceptionally(new SocketTimeoutException(\"Query timed out\"));\n          it.remove();\n        }\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/NioTcpClient.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"7654e1abda96851b90a486316a20a8fd182496bb","commitMessage":"@@@Close udp sockets after I/O exceptions\n\nCloses #110\n","date":"2020-05-28 04:03:19","modifiedFileCount":"1","status":"M","submitter":"Ingo Bauersachs"}]
