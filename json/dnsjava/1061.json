[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    CNAMERecord d = new CNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.CNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","date":"2019-10-27 23:56:59","endLine":64,"groupId":"1031","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_4arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/be/dfd8b4ddec90f7572138f0b326f96c83c50e7a.src","preCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    CNAMERecord d = new CNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.CNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","realPath":"src/test/java/org/xbill/DNS/CNAMERecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    DNAMERecord d = new DNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.DNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","date":"2019-10-27 23:56:59","endLine":64,"groupId":"1031","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ctor_4arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ba/7b5613fc08b34fb4491af78712e98195e6c54e.src","preCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    DNAMERecord d = new DNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.DNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","realPath":"src/test/java/org/xbill/DNS/DNAMERecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2020-10-29 04:20:17","codes":[{"authorDate":"2020-10-29 04:20:17","commitOrder":2,"curCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    CNAMERecord d = new CNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.CNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(n, d.getAlias());\n  }\n","date":"2020-10-29 04:20:17","endLine":64,"groupId":"1061","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_4arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/d8/5f1f0a3852c3a6117b252797d5997e59eb57b3.src","preCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    CNAMERecord d = new CNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.CNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","realPath":"src/test/java/org/xbill/DNS/CNAMERecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-10-29 04:20:17","commitOrder":2,"curCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    DNAMERecord d = new DNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.DNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(n, d.getAlias());\n  }\n","date":"2020-10-29 04:20:17","endLine":64,"groupId":"1061","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ctor_4arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/1e/44a145adb97bc6e28c8d98b810abc33b2da265.src","preCode":"  void ctor_4arg() throws TextParseException {\n    Name n = Name.fromString(\"my.name.\");\n    Name a = Name.fromString(\"my.alias.\");\n\n    DNAMERecord d = new DNAMERecord(n, DClass.IN, 0xABCDEL, a);\n    assertEquals(n, d.getName());\n    assertEquals(Type.DNAME, d.getType());\n    assertEquals(DClass.IN, d.getDClass());\n    assertEquals(0xABCDEL, d.getTTL());\n    assertEquals(a, d.getTarget());\n    assertEquals(a, d.getAlias());\n  }\n","realPath":"src/test/java/org/xbill/DNS/DNAMERecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"a8f5f7d4f57ab2311ba2fdffd41f27982f7d689e","commitMessage":"@@@Return the name of the record for C/DNAME\n\nSee https://tools.ietf.org/html/rfc2181#section-10.1.1 for a detailed\nexplanation\n\nCloses #136\n","date":"2020-10-29 04:20:17","modifiedFileCount":"4","status":"M","submitter":"Ingo Bauersachs"}]
