[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"    void ctor_0arg() {\n      Message m = new Message();\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","date":"2019-10-27 23:56:59","endLine":62,"groupId":"956","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_0arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/06/84eb3fdf294f5fd28580d3988ac6cf258ecb2d.src","preCode":"    void ctor_0arg() {\n      Message m = new Message();\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","realPath":"src/test/java/org/xbill/DNS/MessageTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"    void ctor_1arg() {\n      Message m = new Message(10);\n      assertEquals(new Header(10).toString(), m.getHeader().toString());\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","date":"2019-10-27 23:56:59","endLine":78,"groupId":"956","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ctor_1arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/06/84eb3fdf294f5fd28580d3988ac6cf258ecb2d.src","preCode":"    void ctor_1arg() {\n      Message m = new Message(10);\n      assertEquals(new Header(10).toString(), m.getHeader().toString());\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","realPath":"src/test/java/org/xbill/DNS/MessageTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-25 01:01:58","codes":[{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"    void ctor_0arg() {\n      Message m = new Message();\n      assertTrue(m.getSection(0).isEmpty());\n      assertTrue(m.getSection(1).isEmpty());\n      assertTrue(m.getSection(3).isEmpty());\n      assertTrue(m.getSection(2).isEmpty());\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSection(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","date":"2019-12-25 01:01:58","endLine":62,"groupId":"1060","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_0arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/71/453ea32d86777c916ddd254787767a4c14150c.src","preCode":"    void ctor_0arg() {\n      Message m = new Message();\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","realPath":"src/test/java/org/xbill/DNS/MessageTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"    void ctor_1arg() {\n      Message m = new Message(10);\n      assertEquals(new Header(10).toString(), m.getHeader().toString());\n      assertTrue(m.getSection(0).isEmpty());\n      assertTrue(m.getSection(1).isEmpty());\n      assertTrue(m.getSection(2).isEmpty());\n      assertTrue(m.getSection(3).isEmpty());\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSection(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","date":"2019-12-25 01:01:58","endLine":78,"groupId":"1060","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ctor_1arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/71/453ea32d86777c916ddd254787767a4c14150c.src","preCode":"    void ctor_1arg() {\n      Message m = new Message(10);\n      assertEquals(new Header(10).toString(), m.getHeader().toString());\n      assertArrayEquals(new Record[0], m.getSectionArray(0));\n      assertArrayEquals(new Record[0], m.getSectionArray(1));\n      assertArrayEquals(new Record[0], m.getSectionArray(2));\n      assertArrayEquals(new Record[0], m.getSectionArray(3));\n      assertThrows(IndexOutOfBoundsException.class, () -> m.getSectionArray(4));\n      Header h = m.getHeader();\n      assertEquals(0, h.getCount(0));\n      assertEquals(0, h.getCount(1));\n      assertEquals(0, h.getCount(2));\n      assertEquals(0, h.getCount(3));\n    }\n","realPath":"src/test/java/org/xbill/DNS/MessageTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"5a65f38f2086c1e6f9ac82ced48b24f11801ad13","commitMessage":"@@@Merge pull request #89 from dnsjava/api-compat\n\nAdd some methods back/undo generics for backwards API compatibility","date":"2019-12-25 01:01:58","modifiedFileCount":"30","status":"M","submitter":"Ingo Bauersachs"}]
