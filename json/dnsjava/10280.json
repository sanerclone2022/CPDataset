[{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"private static void\nwritePaddedBigInteger(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n\n\tout.writeByteArray(b);\n}\n","date":"2019-05-26 00:58:59","endLine":397,"groupId":"134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writePaddedBigInteger","params":"(DNSOutputout@BigIntegerval@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/91/0ff2c3bb895a86db6f560086bff874cb0989d8.src","preCode":"private static void\nwritePaddedBigInteger(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n\n\tout.writeByteArray(b);\n}\n","realPath":"src/main/java/org/xbill/DNS/DNSSEC.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"B"},{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"private static void\nwritePaddedBigIntegerLittleEndian(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\treverseByteArray(b);\n\tout.writeByteArray(b);\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":413,"groupId":"1362","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writePaddedBigIntegerLittleEndian","params":"(DNSOutputout@BigIntegerval@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/91/0ff2c3bb895a86db6f560086bff874cb0989d8.src","preCode":"private static void\nwritePaddedBigIntegerLittleEndian(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\treverseByteArray(b);\n\tout.writeByteArray(b);\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/DNSSEC.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"B"}],"commitId":"e93079c869d0c71fed597cffb092e9802b69fcf8","commitMessage":"@@@Use standard directory layout\n","date":"2019-05-26 00:58:59","modifiedFileCount":"0","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-09-03 05:25:53","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":2,"curCode":"  private static void writePaddedBigInteger(DNSOutput out, BigInteger val, int len) {\n    byte[] b = trimByteArray(val.toByteArray());\n\n    if (b.length > len) {\n      throw new IllegalArgumentException();\n    }\n\n    if (b.length < len) {\n      byte[] pad = new byte[len - b.length];\n      out.writeByteArray(pad);\n    }\n\n    out.writeByteArray(b);\n  }\n","date":"2019-09-03 05:25:53","endLine":368,"groupId":"10280","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writePaddedBigInteger","params":"(DNSOutputout@BigIntegerval@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/d3/8a0a8fcf41ef4cb55cdc936e9a69eeb1856f15.src","preCode":"private static void\nwritePaddedBigInteger(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n\n\tout.writeByteArray(b);\n}\n","realPath":"src/main/java/org/xbill/DNS/DNSSEC.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2019-09-03 05:25:53","commitOrder":2,"curCode":"  private static void writePaddedBigIntegerLittleEndian(DNSOutput out, BigInteger val, int len) {\n    byte[] b = trimByteArray(val.toByteArray());\n\n    if (b.length > len) {\n      throw new IllegalArgumentException();\n    }\n\n    reverseByteArray(b);\n    out.writeByteArray(b);\n\n    if (b.length < len) {\n      byte[] pad = new byte[len - b.length];\n      out.writeByteArray(pad);\n    }\n  }\n","date":"2019-09-03 05:25:53","endLine":384,"groupId":"10280","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writePaddedBigIntegerLittleEndian","params":"(DNSOutputout@BigIntegerval@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/d3/8a0a8fcf41ef4cb55cdc936e9a69eeb1856f15.src","preCode":"private static void\nwritePaddedBigIntegerLittleEndian(DNSOutput out, BigInteger val, int len) {\n\tbyte [] b = trimByteArray(val.toByteArray());\n\n\tif (b.length > len)\n\t\tthrow new IllegalArgumentException();\n\n\treverseByteArray(b);\n\tout.writeByteArray(b);\n\n\tif (b.length < len) {\n\t\tbyte [] pad = new byte[len - b.length];\n\t\tout.writeByteArray(pad);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/DNSSEC.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"92e613b5950bab3f87525b7dd21975ef830af10b","commitMessage":"@@@Format code\n\nCloses #32\n","date":"2019-09-03 05:25:53","modifiedFileCount":"228","status":"M","submitter":"Ingo Bauersachs"}]
