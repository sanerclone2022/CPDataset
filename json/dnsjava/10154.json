[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void TSIG_response() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    Record answer = Record.fromString(qname, Type.A, DClass.IN, 300, \"1.2.3.4\", null);\n    response.addRecord(answer, Section.ANSWER);\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2019-10-27 23:56:59","endLine":51,"groupId":"470","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TSIG_response","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/98/3b2e84f59bf9b3cf1445c29a266fa7c7b8e6f0.src","preCode":"  void TSIG_response() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    Record answer = Record.fromString(qname, Type.A, DClass.IN, 300, \"1.2.3.4\", null);\n    response.addRecord(answer, Section.ANSWER);\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void TSIG_truncated() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    for (int i = 0; i < 40; i++) {\n      Record answer = Record.fromString(qname, Type.TXT, DClass.IN, 300, \"foo\" + i, null);\n      response.addRecord(answer, Section.ANSWER);\n    }\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    assertTrue(parsed.getHeader().getFlag(Flags.TC));\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2019-10-27 23:56:59","endLine":79,"groupId":"470","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TSIG_truncated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/98/3b2e84f59bf9b3cf1445c29a266fa7c7b8e6f0.src","preCode":"  void TSIG_truncated() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    for (int i = 0; i < 40; i++) {\n      Record answer = Record.fromString(qname, Type.TXT, DClass.IN, 300, \"foo\" + i, null);\n      response.addRecord(answer, Section.ANSWER);\n    }\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    assertTrue(parsed.getHeader().getFlag(Flags.TC));\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2021-08-16 05:58:27","codes":[{"authorDate":"2021-08-16 05:58:27","commitOrder":2,"curCode":"  void TSIG_response() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    Record answer = Record.fromString(qname, Type.A, DClass.IN, 300, \"1.2.3.4\", null);\n    response.addRecord(answer, Section.ANSWER);\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(Rcode.NOERROR, result);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2021-08-16 06:00:47","endLine":125,"groupId":"10154","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"TSIG_response","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/16/d836774a7cc4256f50599fcaa4fd6332a3a07a.src","preCode":"  void TSIG_response() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    Record answer = Record.fromString(qname, Type.A, DClass.IN, 300, \"1.2.3.4\", null);\n    response.addRecord(answer, Section.ANSWER);\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2021-08-16 05:58:27","commitOrder":2,"curCode":"  void TSIG_truncated() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    for (int i = 0; i < 40; i++) {\n      Record answer = Record.fromString(qname, Type.TXT, DClass.IN, 300, \"foo\" + i, null);\n      response.addRecord(answer, Section.ANSWER);\n    }\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    assertTrue(parsed.getHeader().getFlag(Flags.TC));\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(Rcode.NOERROR, result);\n    assertTrue(parsed.isSigned());\n  }\n","date":"2021-08-16 06:00:47","endLine":153,"groupId":"10154","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"TSIG_truncated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/16/d836774a7cc4256f50599fcaa4fd6332a3a07a.src","preCode":"  void TSIG_truncated() throws IOException {\n    TSIG key = new TSIG(TSIG.HMAC_SHA256, \"example.\", \"12345678\");\n\n    Name qname = Name.fromString(\"www.example.\");\n    Record question = Record.newRecord(qname, Type.A, DClass.IN);\n    Message query = Message.newQuery(question);\n    query.setTSIG(key, Rcode.NOERROR, null);\n    byte[] qbytes = query.toWire();\n    Message qparsed = new Message(qbytes);\n\n    Message response = new Message(query.getHeader().getID());\n    response.setTSIG(key, Rcode.NOERROR, qparsed.getTSIG());\n    response.getHeader().setFlag(Flags.QR);\n    response.addRecord(question, Section.QUESTION);\n    for (int i = 0; i < 40; i++) {\n      Record answer = Record.fromString(qname, Type.TXT, DClass.IN, 300, \"foo\" + i, null);\n      response.addRecord(answer, Section.ANSWER);\n    }\n    byte[] bytes = response.toWire(512);\n\n    Message parsed = new Message(bytes);\n    assertTrue(parsed.getHeader().getFlag(Flags.TC));\n    int result = key.verify(parsed, bytes, qparsed.getTSIG());\n    assertEquals(result, Rcode.NOERROR);\n    assertTrue(parsed.isSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/TSIGTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"77d50ef15c1f8db70e9fb177810796d3a0cb5b9f","commitMessage":"@@@Cleanup tests as reported by Sonar\n","date":"2021-08-16 06:00:47","modifiedFileCount":"18","status":"M","submitter":"Ingo Bauersachs"}]
