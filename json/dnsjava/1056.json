[{"authorTime":"2019-07-14 20:26:53","codes":[{"authorDate":"2019-07-14 20:26:53","commitOrder":1,"curCode":"\tvoid rdataFromString() throws IOException, ParseException {\n\t\tTokenizer t = new Tokenizer(\"NSEC3 10 3 180 20161207204758 20161107195347 31055 example.com. GLqlvFaWiemLree+4WQeR+0ANSEYeuLW/KEWZw9mZPUJ1bcb1OQCxp43 7DNdPCSmS/RqJGiVGtSW8xsGoRgUwOdczL8s4j/z3pVi8wDlhw2jXE0k fGBiOshH+3VjZV4eLlDmDixZ3WmA9gzf0G+qAwRP9tjps2+vqRfXOpoj /UffmcMgZODEDGonHAOX/k35sBL+zIP4k6i6Kq/lpPZd8oxsxCwyxAYl E1oMxeE14TnRZoqCZdAEgvrViF91z/tnMbYAY/JNWYK4iREOuuWTLOox C0hKBsymi3fyLjwZ1NV1Bh3lqYN0rr1uo8ZSZmGrfLdg4l+hO4Xl6kG6 JTn27Q==\");\n\t\tRRSIGRecord record = new RRSIGRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getAlgorithm());\n\t\tassertEquals(31055, record.getFootprint());\n\t\tassertEquals(Name.fromConstantString(\"example.com.\"), record.getSigner());\n\t\tassertEquals(50, record.getTypeCovered());\n\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddhhmmss\", Locale.US);\n\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\t\tassertEquals(formatter.parse(\"20161207204758\"), record.getExpire());\n\t\tassertEquals(formatter.parse(\"20161107195347\"), record.getTimeSigned());\n\t}\n","date":"2019-07-14 20:26:53","endLine":28,"groupId":"1692","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rdataFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/91/eb175b2480ee50dfa9419c44006501d8cb0252.src","preCode":"\tvoid rdataFromString() throws IOException, ParseException {\n\t\tTokenizer t = new Tokenizer(\"NSEC3 10 3 180 20161207204758 20161107195347 31055 example.com. GLqlvFaWiemLree+4WQeR+0ANSEYeuLW/KEWZw9mZPUJ1bcb1OQCxp43 7DNdPCSmS/RqJGiVGtSW8xsGoRgUwOdczL8s4j/z3pVi8wDlhw2jXE0k fGBiOshH+3VjZV4eLlDmDixZ3WmA9gzf0G+qAwRP9tjps2+vqRfXOpoj /UffmcMgZODEDGonHAOX/k35sBL+zIP4k6i6Kq/lpPZd8oxsxCwyxAYl E1oMxeE14TnRZoqCZdAEgvrViF91z/tnMbYAY/JNWYK4iREOuuWTLOox C0hKBsymi3fyLjwZ1NV1Bh3lqYN0rr1uo8ZSZmGrfLdg4l+hO4Xl6kG6 JTn27Q==\");\n\t\tRRSIGRecord record = new RRSIGRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getAlgorithm());\n\t\tassertEquals(31055, record.getFootprint());\n\t\tassertEquals(Name.fromConstantString(\"example.com.\"), record.getSigner());\n\t\tassertEquals(50, record.getTypeCovered());\n\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddhhmmss\", Locale.US);\n\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\t\tassertEquals(formatter.parse(\"20161207204758\"), record.getExpire());\n\t\tassertEquals(formatter.parse(\"20161107195347\"), record.getTimeSigned());\n\t}\n","realPath":"src/test/java/org/xbill/DNS/RRSIGRecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":16,"status":"B"},{"authorDate":"2019-07-14 20:26:53","commitOrder":1,"curCode":"\tvoid rdataFromString() throws IOException {\n\t\tTokenizer t = new Tokenizer(\"10 0 2 . CAFEBABE\");\n\t\tIPSECKEYRecord record = new IPSECKEYRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getPrecedence());\n\t\tassertEquals(IPSECKEYRecord.Gateway.None, record.getGatewayType());\n\t\tassertEquals(IPSECKEYRecord.Algorithm.RSA, record.getAlgorithmType());\n\t\tassertNull(record.getGateway());\n\t\tassertEquals(6, record.getKey().length);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"( 10 1 2 192.0.2.3 CAFEBABE )\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(1, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 2 2 2001:0DB8:0:8002::2000:1 CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(2, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 3 2 mygateway.example.com. CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(3, record.getGatewayType());\n\t\tassertEquals(Name.fromConstantString(\"mygateway.example.com.\"), record.getGateway());\n\t}\n","date":"2019-07-14 20:26:53","endLine":59,"groupId":"1944","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/26/9f6a7d46d67d78573a729b42d09a8e77116399.src","preCode":"\tvoid rdataFromString() throws IOException {\n\t\tTokenizer t = new Tokenizer(\"10 0 2 . CAFEBABE\");\n\t\tIPSECKEYRecord record = new IPSECKEYRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getPrecedence());\n\t\tassertEquals(IPSECKEYRecord.Gateway.None, record.getGatewayType());\n\t\tassertEquals(IPSECKEYRecord.Algorithm.RSA, record.getAlgorithmType());\n\t\tassertNull(record.getGateway());\n\t\tassertEquals(6, record.getKey().length);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"( 10 1 2 192.0.2.3 CAFEBABE )\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(1, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 2 2 2001:0DB8:0:8002::2000:1 CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(2, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 3 2 mygateway.example.com. CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(3, record.getGatewayType());\n\t\tassertEquals(Name.fromConstantString(\"mygateway.example.com.\"), record.getGateway());\n\t}\n","realPath":"src/test/java/org/xbill/DNS/IPSECKEYRecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"2cf542f973e3aeded9f03529baec7054e8f3298d","commitMessage":"@@@Add more tests for zone files (#60)\n\n* Add more tests for zone files\n\n* Split tests out\n","date":"2019-07-14 20:26:53","modifiedFileCount":"6","status":"B","submitter":"Kenny Ingle"},{"authorTime":"2019-07-14 20:26:53","codes":[{"authorDate":"2019-09-03 08:11:34","commitOrder":2,"curCode":"  void rdataFromString() throws IOException, ParseException {\n    Tokenizer t =\n        new Tokenizer(\n            \"NSEC3 10 3 180 20161207204758 20161107195347 31055 example.com. GLqlvFaWiemLree+4WQeR+0ANSEYeuLW/KEWZw9mZPUJ1bcb1OQCxp43 7DNdPCSmS/RqJGiVGtSW8xsGoRgUwOdczL8s4j/z3pVi8wDlhw2jXE0k fGBiOshH+3VjZV4eLlDmDixZ3WmA9gzf0G+qAwRP9tjps2+vqRfXOpoj /UffmcMgZODEDGonHAOX/k35sBL+zIP4k6i6Kq/lpPZd8oxsxCwyxAYl E1oMxeE14TnRZoqCZdAEgvrViF91z/tnMbYAY/JNWYK4iREOuuWTLOox C0hKBsymi3fyLjwZ1NV1Bh3lqYN0rr1uo8ZSZmGrfLdg4l+hO4Xl6kG6 JTn27Q==\");\n    RRSIGRecord record = new RRSIGRecord();\n    record.rdataFromString(t, null);\n    assertEquals(10, record.getAlgorithm());\n    assertEquals(31055, record.getFootprint());\n    assertEquals(Name.fromConstantString(\"example.com.\"), record.getSigner());\n    assertEquals(50, record.getTypeCovered());\n    SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddhhmmss\", Locale.US);\n    formatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    assertEquals(formatter.parse(\"20161207204758\").toInstant(), record.getExpire());\n    assertEquals(formatter.parse(\"20161107195347\").toInstant(), record.getTimeSigned());\n  }\n","date":"2019-09-03 08:11:34","endLine":29,"groupId":"1056","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rdataFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/41/5cd09ce48c320290e55194428699a166e1d8da.src","preCode":"  void rdataFromString() throws IOException, ParseException {\n    Tokenizer t =\n        new Tokenizer(\n            \"NSEC3 10 3 180 20161207204758 20161107195347 31055 example.com. GLqlvFaWiemLree+4WQeR+0ANSEYeuLW/KEWZw9mZPUJ1bcb1OQCxp43 7DNdPCSmS/RqJGiVGtSW8xsGoRgUwOdczL8s4j/z3pVi8wDlhw2jXE0k fGBiOshH+3VjZV4eLlDmDixZ3WmA9gzf0G+qAwRP9tjps2+vqRfXOpoj /UffmcMgZODEDGonHAOX/k35sBL+zIP4k6i6Kq/lpPZd8oxsxCwyxAYl E1oMxeE14TnRZoqCZdAEgvrViF91z/tnMbYAY/JNWYK4iREOuuWTLOox C0hKBsymi3fyLjwZ1NV1Bh3lqYN0rr1uo8ZSZmGrfLdg4l+hO4Xl6kG6 JTn27Q==\");\n    RRSIGRecord record = new RRSIGRecord();\n    record.rdataFromString(t, null);\n    assertEquals(10, record.getAlgorithm());\n    assertEquals(31055, record.getFootprint());\n    assertEquals(Name.fromConstantString(\"example.com.\"), record.getSigner());\n    assertEquals(50, record.getTypeCovered());\n    SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddhhmmss\", Locale.US);\n    formatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    assertEquals(formatter.parse(\"20161207204758\"), record.getExpire());\n    assertEquals(formatter.parse(\"20161107195347\"), record.getTimeSigned());\n  }\n","realPath":"src/test/java/org/xbill/DNS/RRSIGRecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":15,"status":"M"},{"authorDate":"2019-07-14 20:26:53","commitOrder":2,"curCode":"\tvoid rdataFromString() throws IOException {\n\t\tTokenizer t = new Tokenizer(\"10 0 2 . CAFEBABE\");\n\t\tIPSECKEYRecord record = new IPSECKEYRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getPrecedence());\n\t\tassertEquals(IPSECKEYRecord.Gateway.None, record.getGatewayType());\n\t\tassertEquals(IPSECKEYRecord.Algorithm.RSA, record.getAlgorithmType());\n\t\tassertNull(record.getGateway());\n\t\tassertEquals(6, record.getKey().length);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"( 10 1 2 192.0.2.3 CAFEBABE )\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(1, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 2 2 2001:0DB8:0:8002::2000:1 CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(2, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 3 2 mygateway.example.com. CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(3, record.getGatewayType());\n\t\tassertEquals(Name.fromConstantString(\"mygateway.example.com.\"), record.getGateway());\n\t}\n","date":"2019-07-14 20:26:53","endLine":59,"groupId":"1056","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"rdataFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/26/9f6a7d46d67d78573a729b42d09a8e77116399.src","preCode":"\tvoid rdataFromString() throws IOException {\n\t\tTokenizer t = new Tokenizer(\"10 0 2 . CAFEBABE\");\n\t\tIPSECKEYRecord record = new IPSECKEYRecord();\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(10, record.getPrecedence());\n\t\tassertEquals(IPSECKEYRecord.Gateway.None, record.getGatewayType());\n\t\tassertEquals(IPSECKEYRecord.Algorithm.RSA, record.getAlgorithmType());\n\t\tassertNull(record.getGateway());\n\t\tassertEquals(6, record.getKey().length);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"( 10 1 2 192.0.2.3 CAFEBABE )\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(1, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 2 2 2001:0DB8:0:8002::2000:1 CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(2, record.getGatewayType());\n\t\tassertTrue(record.getGateway() instanceof InetAddress);\n\t\trecord = new IPSECKEYRecord();\n\t\tt = new Tokenizer(\"10 3 2 mygateway.example.com. CAFEBABE\");\n\t\trecord.rdataFromString(t, null);\n\t\tassertEquals(3, record.getGatewayType());\n\t\tassertEquals(Name.fromConstantString(\"mygateway.example.com.\"), record.getGateway());\n\t}\n","realPath":"src/test/java/org/xbill/DNS/IPSECKEYRecordTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"0b215533206efc47d903a24f9879d3f942996df1","commitMessage":"@@@Use java.time instead of Date\n\nCloses #65\n","date":"2019-09-03 08:11:34","modifiedFileCount":"15","status":"M","submitter":"Ingo Bauersachs"}]
