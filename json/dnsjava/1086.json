[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void addRRset() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n\n    RRset[] exp = new RRset[] {rrs};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","date":"2019-10-27 23:56:59","endLine":189,"groupId":"1033","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addRRset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/dc/3bbf52a9cbe644a55cf32304fe92c5237b6896.src","preCode":"  void addRRset() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n\n    RRset[] exp = new RRset[] {rrs};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","realPath":"src/test/java/org/xbill/DNS/SetResponseTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void addRRset_multiple() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n\n    RRset<ARecord> rrs2 = new RRset<>();\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.1\")));\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.2\")));\n\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n    sr.addRRset(rrs2);\n\n    RRset[] exp = new RRset[] {rrs, rrs2};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","date":"2019-10-27 23:56:59","endLine":221,"groupId":"484","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addRRset_multiple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/dc/3bbf52a9cbe644a55cf32304fe92c5237b6896.src","preCode":"  void addRRset_multiple() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n\n    RRset<ARecord> rrs2 = new RRset<>();\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.1\")));\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.2\")));\n\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n    sr.addRRset(rrs2);\n\n    RRset[] exp = new RRset[] {rrs, rrs2};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","realPath":"src/test/java/org/xbill/DNS/SetResponseTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-25 01:01:58","codes":[{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"  void addRRset() throws TextParseException, UnknownHostException {\n    RRset rrs = new RRset();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n\n    RRset[] exp = new RRset[] {rrs};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","date":"2019-12-25 01:01:58","endLine":189,"groupId":"1086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addRRset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/1b/b4f9022f12a9d2ed3b22d90949563c3b96ed30.src","preCode":"  void addRRset() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n\n    RRset[] exp = new RRset[] {rrs};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","realPath":"src/test/java/org/xbill/DNS/SetResponseTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"  void addRRset_multiple() throws TextParseException, UnknownHostException {\n    RRset rrs = new RRset();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n\n    RRset rrs2 = new RRset();\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.1\")));\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.2\")));\n\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n    sr.addRRset(rrs2);\n\n    RRset[] exp = new RRset[] {rrs, rrs2};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","date":"2019-12-25 01:01:58","endLine":221,"groupId":"1086","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addRRset_multiple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/1b/b4f9022f12a9d2ed3b22d90949563c3b96ed30.src","preCode":"  void addRRset_multiple() throws TextParseException, UnknownHostException {\n    RRset<ARecord> rrs = new RRset<>();\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.1\")));\n    rrs.addRR(\n        new ARecord(\n            Name.fromString(\"The.Name.\"), DClass.IN, 0xABCD, InetAddress.getByName(\"192.168.0.2\")));\n\n    RRset<ARecord> rrs2 = new RRset<>();\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.1\")));\n    rrs2.addRR(\n        new ARecord(\n            Name.fromString(\"The.Other.Name.\"),\n            DClass.IN,\n            0xABCE,\n            InetAddress.getByName(\"192.168.1.2\")));\n\n    SetResponse sr = new SetResponse(SetResponse.SUCCESSFUL);\n    sr.addRRset(rrs);\n    sr.addRRset(rrs2);\n\n    RRset[] exp = new RRset[] {rrs, rrs2};\n    assertArrayEquals(exp, sr.answers().toArray());\n  }\n","realPath":"src/test/java/org/xbill/DNS/SetResponseTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"5a65f38f2086c1e6f9ac82ced48b24f11801ad13","commitMessage":"@@@Merge pull request #89 from dnsjava/api-compat\n\nAdd some methods back/undo generics for backwards API compatibility","date":"2019-12-25 01:01:58","modifiedFileCount":"30","status":"M","submitter":"Ingo Bauersachs"}]
