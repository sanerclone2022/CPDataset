[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void string() {\n    \r\n    assertEquals(\"NXDOMAIN\", Rcode.string(Rcode.NXDOMAIN));\n\n    \r\n    assertEquals(\"NOTIMP\", Rcode.string(Rcode.NOTIMP));\n\n    \r\n    assertTrue(Rcode.string(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x1000));\n  }\n","date":"2019-10-27 23:56:59","endLine":59,"groupId":"18","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"string","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ea/c7ea35e1805997022f87a0d6b18cba4f5a0964.src","preCode":"  void string() {\n    \r\n    assertEquals(\"NXDOMAIN\", Rcode.string(Rcode.NXDOMAIN));\n\n    \r\n    assertEquals(\"NOTIMP\", Rcode.string(Rcode.NOTIMP));\n\n    \r\n    assertTrue(Rcode.string(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x1000));\n  }\n","realPath":"src/test/java/org/xbill/DNS/RcodeTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void TSIGstring() {\n    \r\n    assertEquals(\"BADSIG\", Rcode.TSIGstring(Rcode.BADSIG));\n\n    \r\n    assertTrue(Rcode.TSIGstring(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.TSIGstring(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x10000));\n  }\n","date":"2019-10-27 23:56:59","endLine":73,"groupId":"18","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TSIGstring","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ea/c7ea35e1805997022f87a0d6b18cba4f5a0964.src","preCode":"  void TSIGstring() {\n    \r\n    assertEquals(\"BADSIG\", Rcode.TSIGstring(Rcode.BADSIG));\n\n    \r\n    assertTrue(Rcode.TSIGstring(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.TSIGstring(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x10000));\n  }\n","realPath":"src/test/java/org/xbill/DNS/RcodeTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-08 01:48:35","codes":[{"authorDate":"2019-12-08 01:48:35","commitOrder":2,"curCode":"  void string() {\n    \r\n    assertEquals(\"NXDOMAIN\", Rcode.string(Rcode.NXDOMAIN));\n\n    \r\n    assertEquals(\"NOTIMP\", Rcode.string(Rcode.NOTIMP));\n\n    \r\n    assertTrue(Rcode.string(30).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x1000));\n  }\n","date":"2019-12-08 01:48:35","endLine":59,"groupId":"1041","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"string","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/4d/95f3b7c8ec3c8c6f3366e3b2f7ff5aa53b188f.src","preCode":"  void string() {\n    \r\n    assertEquals(\"NXDOMAIN\", Rcode.string(Rcode.NXDOMAIN));\n\n    \r\n    assertEquals(\"NOTIMP\", Rcode.string(Rcode.NOTIMP));\n\n    \r\n    assertTrue(Rcode.string(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x1000));\n  }\n","realPath":"src/test/java/org/xbill/DNS/RcodeTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-12-08 01:48:35","commitOrder":2,"curCode":"  void TSIGstring() {\n    \r\n    assertEquals(\"BADSIG\", Rcode.TSIGstring(Rcode.BADSIG));\n\n    \r\n    assertTrue(Rcode.TSIGstring(30).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.TSIGstring(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x10000));\n  }\n","date":"2019-12-08 01:48:35","endLine":73,"groupId":"1041","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"TSIGstring","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/4d/95f3b7c8ec3c8c6f3366e3b2f7ff5aa53b188f.src","preCode":"  void TSIGstring() {\n    \r\n    assertEquals(\"BADSIG\", Rcode.TSIGstring(Rcode.BADSIG));\n\n    \r\n    assertTrue(Rcode.TSIGstring(20).startsWith(\"RESERVED\"));\n\n    assertThrows(IllegalArgumentException.class, () -> Rcode.TSIGstring(-1));\n\n    \r\n    assertThrows(IllegalArgumentException.class, () -> Rcode.string(0x10000));\n  }\n","realPath":"src/test/java/org/xbill/DNS/RcodeTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"1639c91f5c67a7b91a0015ccebd42b1d1524b208","commitMessage":"@@@addition of EDNS Cookie and TCP Keepalive Options (#78)\n\n* added Cookie and TCP Keepalive EDNS options\n\n* fix: TCP_KEEPALIVE was not handled in fromWire\n\n* - added BADCOOKIE extended error code\n- moved TKEY extended error code to regular error\n  codes as this ist IMHO not part of TSIG\n- added two more TKEY extended error codes listed\n  at IANA\n- fixed Rcode test as RCODE 20 is no longer reserved.  but assigned\n\n* ran code autoformatting (which makes the code even uglier.  but anyway)\n\n* - use Duration and Optional within the new EDNS options\n- added test cases\n\n* ran code formatter\n","date":"2019-12-08 01:48:35","modifiedFileCount":"3","status":"M","submitter":"demonti"}]
