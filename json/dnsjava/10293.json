[{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList list = new LinkedList();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":286,"groupId":"2062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/54/97f453fecdf6b9b7247b41d0a4e686eee1d9f4.src","preCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList list = new LinkedList();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"B"},{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":311,"groupId":"1559","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/54/97f453fecdf6b9b7247b41d0a4e686eee1d9f4.src","preCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"}],"commitId":"e93079c869d0c71fed597cffb092e9802b69fcf8","commitMessage":"@@@Use standard directory layout\n","date":"2019-05-26 00:58:59","modifiedFileCount":"0","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-28 13:41:25","commitOrder":2,"curCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","date":"2019-05-28 13:41:25","endLine":294,"groupId":"2062","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/65/8768461cce8ea28d2bf3c1def8c7b01f6f9b9d.src","preCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList list = new LinkedList();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2019-05-26 00:58:59","commitOrder":2,"curCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":311,"groupId":"1559","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/54/97f453fecdf6b9b7247b41d0a4e686eee1d9f4.src","preCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"}],"commitId":"f06972b5c1369b1f514a3898f36e5f718dbe6617","commitMessage":"@@@Introduce generics (#42)\n\n","date":"2019-05-28 13:41:25","modifiedFileCount":"31","status":"M","submitter":"Kenny Ingle"},{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-29 05:06:56","commitOrder":3,"curCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList<Element> list = (List<Element>) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","date":"2019-05-29 05:06:56","endLine":294,"groupId":"2062","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/00/68bfa6430bb96a8132af5dfc04dcf7557828ec.src","preCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2019-05-26 00:58:59","commitOrder":3,"curCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":311,"groupId":"1559","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/54/97f453fecdf6b9b7247b41d0a4e686eee1d9f4.src","preCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"}],"commitId":"ce8d2a11336f691bc34242ab6ef0aa91936389b7","commitMessage":"@@@Use generics wherever possible\n","date":"2019-05-29 05:06:56","modifiedFileCount":"14","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-07-14 20:27:37","commitOrder":4,"curCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tList<Element> list = (List<Element>) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","date":"2019-07-14 20:27:37","endLine":296,"groupId":"175","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/2e/32f0cfbcfd083bfb280ff9d75d76ce7f95367f.src","preCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\tList<Element> list = (List<Element>) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"},{"authorDate":"2019-05-26 00:58:59","commitOrder":4,"curCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":311,"groupId":"1559","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/54/97f453fecdf6b9b7247b41d0a4e686eee1d9f4.src","preCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"}],"commitId":"f237c5b6fd13e6f948a445bab4316b9e83fc2bac","commitMessage":"@@@Lists for RRset (#56)\n\n* Fix or disable unchecked warnings\n\n* Use List as return types for RRset rrs/sigs\n","date":"2019-07-14 20:27:37","modifiedFileCount":"15","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-09-03 05:25:53","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":5,"curCode":"  private synchronized void addElement(Name name, Element element) {\n    Object types = data.get(name);\n    if (types == null) {\n      data.put(name, element);\n      return;\n    }\n    int type = element.getType();\n    if (types instanceof List) {\n      @SuppressWarnings(\"unchecked\")\n      List<Element> list = (List<Element>) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = list.get(i);\n        if (elt.getType() == type) {\n          list.set(i, element);\n          return;\n        }\n      }\n      list.add(element);\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() == type) {\n        data.put(name, element);\n      } else {\n        LinkedList<Element> list = new LinkedList<>();\n        list.add(elt);\n        list.add(element);\n        data.put(name, list);\n      }\n    }\n  }\n","date":"2019-09-03 05:25:53","endLine":286,"groupId":"175","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/5d/0f43a7ead7f3a541f82989dfa8e82e183ddf84.src","preCode":"private synchronized void\naddElement(Name name, Element element) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\tdata.put(name, element);\n\t\treturn;\n\t}\n\tint type = element.getType();\n\tif (types instanceof List) {\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tList<Element> list = (List<Element>) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.set(i, element);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlist.add(element);\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() == type)\n\t\t\tdata.put(name, element);\n\t\telse {\n\t\t\tLinkedList<Element> list = new LinkedList<>();\n\t\t\tlist.add(elt);\n\t\t\tlist.add(element);\n\t\t\tdata.put(name, list);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2019-09-03 05:25:53","commitOrder":5,"curCode":"  private synchronized void removeElement(Name name, int type) {\n    Object types = data.get(name);\n    if (types == null) {\n      return;\n    }\n    if (types instanceof List) {\n      List list = (List) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = (Element) list.get(i);\n        if (elt.getType() == type) {\n          list.remove(i);\n          if (list.size() == 0) {\n            data.remove(name);\n          }\n          return;\n        }\n      }\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() != type) {\n        return;\n      }\n      data.remove(name);\n    }\n  }\n","date":"2019-09-03 05:25:53","endLine":312,"groupId":"1559","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/5d/0f43a7ead7f3a541f82989dfa8e82e183ddf84.src","preCode":"private synchronized void\nremoveElement(Name name, int type) {\n\tObject types = data.get(name);\n\tif (types == null) {\n\t\treturn;\n\t}\n\tif (types instanceof List) {\n\t\tList list = (List) types;\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tElement elt = (Element) list.get(i);\n\t\t\tif (elt.getType() == type) {\n\t\t\t\tlist.remove(i);\n\t\t\t\tif (list.size() == 0)\n\t\t\t\t\tdata.remove(name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tElement elt = (Element) types;\n\t\tif (elt.getType() != type)\n\t\t\treturn;\n\t\tdata.remove(name);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"}],"commitId":"92e613b5950bab3f87525b7dd21975ef830af10b","commitMessage":"@@@Format code\n\nCloses #32\n","date":"2019-09-03 05:25:53","modifiedFileCount":"228","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2020-01-19 20:22:41","codes":[{"authorDate":"2019-09-03 05:25:53","commitOrder":6,"curCode":"  private synchronized void addElement(Name name, Element element) {\n    Object types = data.get(name);\n    if (types == null) {\n      data.put(name, element);\n      return;\n    }\n    int type = element.getType();\n    if (types instanceof List) {\n      @SuppressWarnings(\"unchecked\")\n      List<Element> list = (List<Element>) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = list.get(i);\n        if (elt.getType() == type) {\n          list.set(i, element);\n          return;\n        }\n      }\n      list.add(element);\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() == type) {\n        data.put(name, element);\n      } else {\n        LinkedList<Element> list = new LinkedList<>();\n        list.add(elt);\n        list.add(element);\n        data.put(name, list);\n      }\n    }\n  }\n","date":"2019-09-03 05:25:53","endLine":286,"groupId":"10293","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"addElement","params":"(Namename@Elementelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/5d/0f43a7ead7f3a541f82989dfa8e82e183ddf84.src","preCode":"  private synchronized void addElement(Name name, Element element) {\n    Object types = data.get(name);\n    if (types == null) {\n      data.put(name, element);\n      return;\n    }\n    int type = element.getType();\n    if (types instanceof List) {\n      @SuppressWarnings(\"unchecked\")\n      List<Element> list = (List<Element>) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = list.get(i);\n        if (elt.getType() == type) {\n          list.set(i, element);\n          return;\n        }\n      }\n      list.add(element);\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() == type) {\n        data.put(name, element);\n      } else {\n        LinkedList<Element> list = new LinkedList<>();\n        list.add(elt);\n        list.add(element);\n        data.put(name, list);\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"N"},{"authorDate":"2020-01-19 20:22:41","commitOrder":6,"curCode":"  private synchronized void removeElement(Name name, int type) {\n    Object types = data.get(name);\n    if (types == null) {\n      return;\n    }\n    if (types instanceof List) {\n      @SuppressWarnings(\"unchecked\")\n      List<Element> list = (List<Element>) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = list.get(i);\n        if (elt.getType() == type) {\n          list.remove(i);\n          if (list.size() == 0) {\n            data.remove(name);\n          }\n          return;\n        }\n      }\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() != type) {\n        return;\n      }\n      data.remove(name);\n    }\n  }\n","date":"2020-01-19 20:22:41","endLine":312,"groupId":"10293","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"removeElement","params":"(Namename@inttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6d6032158c8a6b067f34f9fcc5ce1cca856869.src","preCode":"  private synchronized void removeElement(Name name, int type) {\n    Object types = data.get(name);\n    if (types == null) {\n      return;\n    }\n    if (types instanceof List) {\n      List list = (List) types;\n      for (int i = 0; i < list.size(); i++) {\n        Element elt = (Element) list.get(i);\n        if (elt.getType() == type) {\n          list.remove(i);\n          if (list.size() == 0) {\n            data.remove(name);\n          }\n          return;\n        }\n      }\n    } else {\n      Element elt = (Element) types;\n      if (elt.getType() != type) {\n        return;\n      }\n      data.remove(name);\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Cache.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"}],"commitId":"624dc606d21cf36c20ba5c2664c0ca777ed4ffa9","commitMessage":"@@@Cleanup remaining use of raw types\n","date":"2020-01-19 20:22:41","modifiedFileCount":"6","status":"M","submitter":"Ingo Bauersachs"}]
