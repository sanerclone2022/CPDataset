[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void toDottedQuad() {\n    assertEquals(\n        \"128.176.201.1\",\n        Address.toDottedQuad(new byte[] {(byte) 128, (byte) 176, (byte) 201, (byte) 1}));\n\n    assertEquals(\"200.1.255.128\", Address.toDottedQuad(new int[] {200, 1, 255, 128}));\n  }\n","date":"2019-10-27 23:56:59","endLine":294,"groupId":"2128","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toDottedQuad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/43/fdc7bd993c5ddb9d9bebdfdd36bfc0f0544e6d.src","preCode":"  void toDottedQuad() {\n    assertEquals(\n        \"128.176.201.1\",\n        Address.toDottedQuad(new byte[] {(byte) 128, (byte) 176, (byte) 201, (byte) 1}));\n\n    assertEquals(\"200.1.255.128\", Address.toDottedQuad(new int[] {200, 1, 255, 128}));\n  }\n","realPath":"src/test/java/org/xbill/DNS/AddressTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void fromAddress_ipv4() throws UnknownHostException, TextParseException {\n    Name exp = Name.fromString(\"1.0.168.192.in-addr.arpa.\");\n    String addr = \"192.168.0.1\";\n    assertEquals(exp, ReverseMap.fromAddress(addr));\n\n    assertEquals(exp, ReverseMap.fromAddress(addr, Address.IPv4));\n    assertEquals(exp, ReverseMap.fromAddress(InetAddress.getByName(addr)));\n    assertEquals(\n        exp, ReverseMap.fromAddress(new byte[] {(byte) 192, (byte) 168, (byte) 0, (byte) 1}));\n    assertEquals(exp, ReverseMap.fromAddress(new int[] {192, 168, 0, 1}));\n  }\n","date":"2019-10-27 23:56:59","endLine":56,"groupId":"1620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fromAddress_ipv4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/09/d3213ee63f23d76d55be4082dd70361d36f407.src","preCode":"  void fromAddress_ipv4() throws UnknownHostException, TextParseException {\n    Name exp = Name.fromString(\"1.0.168.192.in-addr.arpa.\");\n    String addr = \"192.168.0.1\";\n    assertEquals(exp, ReverseMap.fromAddress(addr));\n\n    assertEquals(exp, ReverseMap.fromAddress(addr, Address.IPv4));\n    assertEquals(exp, ReverseMap.fromAddress(InetAddress.getByName(addr)));\n    assertEquals(\n        exp, ReverseMap.fromAddress(new byte[] {(byte) 192, (byte) 168, (byte) 0, (byte) 1}));\n    assertEquals(exp, ReverseMap.fromAddress(new int[] {192, 168, 0, 1}));\n  }\n","realPath":"src/test/java/org/xbill/DNS/ReverseMapTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2020-05-16 03:05:26","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":2,"curCode":"  void toDottedQuad() {\n    assertEquals(\n        \"128.176.201.1\",\n        Address.toDottedQuad(new byte[] {(byte) 128, (byte) 176, (byte) 201, (byte) 1}));\n\n    assertEquals(\"200.1.255.128\", Address.toDottedQuad(new int[] {200, 1, 255, 128}));\n  }\n","date":"2019-10-27 23:56:59","endLine":294,"groupId":"1051","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toDottedQuad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/43/fdc7bd993c5ddb9d9bebdfdd36bfc0f0544e6d.src","preCode":"  void toDottedQuad() {\n    assertEquals(\n        \"128.176.201.1\",\n        Address.toDottedQuad(new byte[] {(byte) 128, (byte) 176, (byte) 201, (byte) 1}));\n\n    assertEquals(\"200.1.255.128\", Address.toDottedQuad(new int[] {200, 1, 255, 128}));\n  }\n","realPath":"src/test/java/org/xbill/DNS/AddressTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"},{"authorDate":"2020-05-16 03:05:26","commitOrder":2,"curCode":"  void fromAddress_ipv4() throws UnknownHostException {\n    assertEquals(ipv4arpa, ReverseMap.fromAddress(ipv4Addr));\n\n    assertEquals(ipv4arpa, ReverseMap.fromAddress(ipv4Addr, Address.IPv4));\n    assertEquals(ipv4arpa, ReverseMap.fromAddress(InetAddress.getByName(ipv4Addr)));\n    assertEquals(\n        ipv4arpa, ReverseMap.fromAddress(new byte[] {(byte) 192, (byte) 168, (byte) 0, (byte) 1}));\n    assertEquals(ipv4arpa, ReverseMap.fromAddress(new int[] {192, 168, 0, 1}));\n  }\n","date":"2020-05-16 03:05:26","endLine":61,"groupId":"1051","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fromAddress_ipv4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/2a/67e8fae027f6ad349a1cf3bf81abc977fd1a3f.src","preCode":"  void fromAddress_ipv4() throws UnknownHostException, TextParseException {\n    Name exp = Name.fromString(\"1.0.168.192.in-addr.arpa.\");\n    String addr = \"192.168.0.1\";\n    assertEquals(exp, ReverseMap.fromAddress(addr));\n\n    assertEquals(exp, ReverseMap.fromAddress(addr, Address.IPv4));\n    assertEquals(exp, ReverseMap.fromAddress(InetAddress.getByName(addr)));\n    assertEquals(\n        exp, ReverseMap.fromAddress(new byte[] {(byte) 192, (byte) 168, (byte) 0, (byte) 1}));\n    assertEquals(exp, ReverseMap.fromAddress(new int[] {192, 168, 0, 1}));\n  }\n","realPath":"src/test/java/org/xbill/DNS/ReverseMapTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"d82fdae93900d9c89c743241cf0cbd91173cfd1f","commitMessage":"@@@Add reverse map parsing into IP address\n\nCloses #103\n","date":"2020-05-16 03:05:26","modifiedFileCount":"2","status":"M","submitter":"Ingo Bauersachs"}]
