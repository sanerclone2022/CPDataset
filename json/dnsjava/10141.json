[{"authorTime":"2019-10-27 23:04:41","codes":[{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void ctor_1arg() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_a2);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_s2);\n\n    RRset<ARecord> rs2 = new RRset<>(m_rs);\n\n    assertEquals(2, rs2.size());\n    assertEquals(m_a1, rs2.first());\n    List<ARecord> itr = rs2.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = rs2.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(m_s2, sigs.get(1));\n    assertEquals(2, sigs.size());\n  }\n","date":"2019-10-27 23:56:59","endLine":217,"groupId":"691","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_1arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ce/157286dd39007c9d8c3a793ac43e6f3a759393.src","preCode":"  void ctor_1arg() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_a2);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_s2);\n\n    RRset<ARecord> rs2 = new RRset<>(m_rs);\n\n    assertEquals(2, rs2.size());\n    assertEquals(m_a1, rs2.first());\n    List<ARecord> itr = rs2.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = rs2.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(m_s2, sigs.get(1));\n    assertEquals(2, sigs.size());\n  }\n","realPath":"src/test/java/org/xbill/DNS/RRsetTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"},{"authorDate":"2019-10-27 23:04:41","commitOrder":1,"curCode":"  void Record_placement() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_a2);\n\n    List<ARecord> itr = m_rs.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = m_rs.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(1, sigs.size());\n  }\n","date":"2019-10-27 23:56:59","endLine":288,"groupId":"316","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"Record_placement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/ce/157286dd39007c9d8c3a793ac43e6f3a759393.src","preCode":"  void Record_placement() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_a2);\n\n    List<ARecord> itr = m_rs.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = m_rs.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(1, sigs.size());\n  }\n","realPath":"src/test/java/org/xbill/DNS/RRsetTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"B"}],"commitId":"4276ad715c2cff76a244b67c02f0035faa1b6220","commitMessage":"@@@Remove test_ prefix from test methods\n","date":"2019-10-27 23:56:59","modifiedFileCount":"58","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-25 01:01:58","codes":[{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"  void ctor_1arg() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_a2);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_s2);\n\n    RRset rs2 = new RRset(m_rs);\n\n    assertEquals(2, rs2.size());\n    assertEquals(m_a1, rs2.first());\n    List<Record> itr = rs2.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = rs2.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(m_s2, sigs.get(1));\n    assertEquals(2, sigs.size());\n  }\n","date":"2019-12-25 01:01:58","endLine":217,"groupId":"10141","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ctor_1arg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/9d/f970e25e5f86c56eaa51ba238f10fdf51b463d.src","preCode":"  void ctor_1arg() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_a2);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_s2);\n\n    RRset<ARecord> rs2 = new RRset<>(m_rs);\n\n    assertEquals(2, rs2.size());\n    assertEquals(m_a1, rs2.first());\n    List<ARecord> itr = rs2.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = rs2.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(m_s2, sigs.get(1));\n    assertEquals(2, sigs.size());\n  }\n","realPath":"src/test/java/org/xbill/DNS/RRsetTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2019-12-25 01:01:58","commitOrder":2,"curCode":"  void Record_placement() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_a2);\n\n    List<Record> itr = m_rs.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = m_rs.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(1, sigs.size());\n  }\n","date":"2019-12-25 01:01:58","endLine":287,"groupId":"10141","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"Record_placement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/9d/f970e25e5f86c56eaa51ba238f10fdf51b463d.src","preCode":"  void Record_placement() {\n    m_rs.addRR(m_a1);\n    m_rs.addRR(m_s1);\n    m_rs.addRR(m_a2);\n\n    List<ARecord> itr = m_rs.rrs();\n    assertEquals(m_a1, itr.get(0));\n    assertEquals(m_a2, itr.get(1));\n    assertEquals(2, itr.size());\n\n    List<RRSIGRecord> sigs = m_rs.sigs();\n    assertEquals(m_s1, sigs.get(0));\n    assertEquals(1, sigs.size());\n  }\n","realPath":"src/test/java/org/xbill/DNS/RRsetTest.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"5a65f38f2086c1e6f9ac82ced48b24f11801ad13","commitMessage":"@@@Merge pull request #89 from dnsjava/api-compat\n\nAdd some methods back/undo generics for backwards API compatibility","date":"2019-12-25 01:01:58","modifiedFileCount":"30","status":"M","submitter":"Ingo Bauersachs"}]
