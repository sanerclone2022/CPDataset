[{"authorTime":"2019-05-26 00:58:59","codes":[{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"public void\naddRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":481,"groupId":"1335","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addRecord","params":"(Recordr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/86/6be77e9fd4ca77d51bda845fdeece78cd2bdbf.src","preCode":"public void\naddRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":468,"status":"B"},{"authorDate":"2019-05-26 00:58:59","commitOrder":1,"curCode":"public void\nremoveRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null)\n\t\t\treturn;\n\t\tif (rrset.size() == 1 && rrset.first().equals(r))\n\t\t\tremoveRRset(name, rtype);\n\t\telse\n\t\t\trrset.deleteRR(r);\n\t}\n}\n","date":"2019-05-26 00:58:59","endLine":501,"groupId":"1757","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRecord","params":"(Recordr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/86/6be77e9fd4ca77d51bda845fdeece78cd2bdbf.src","preCode":"public void\nremoveRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null)\n\t\t\treturn;\n\t\tif (rrset.size() == 1 && rrset.first().equals(r))\n\t\t\tremoveRRset(name, rtype);\n\t\telse\n\t\t\trrset.deleteRR(r);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"B"}],"commitId":"e93079c869d0c71fed597cffb092e9802b69fcf8","commitMessage":"@@@Use standard directory layout\n","date":"2019-05-26 00:58:59","modifiedFileCount":"0","status":"B","submitter":"Ingo Bauersachs"},{"authorTime":"2019-07-14 20:27:37","codes":[{"authorDate":"2019-07-14 20:27:37","commitOrder":2,"curCode":"public <T extends Record> void\naddRecord(T r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset<T> rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset<>(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","date":"2019-07-14 20:27:37","endLine":485,"groupId":"1015","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/f3/8c25ad143535150734a1a2b94e1b090fc5c16a.src","preCode":"public void\naddRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":472,"status":"M"},{"authorDate":"2019-07-14 20:27:37","commitOrder":2,"curCode":"public <T extends Record> void\nremoveRecord(T r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset<T> rrset = findRRset(name, rtype);\n\t\tif (rrset == null)\n\t\t\treturn;\n\t\tif (rrset.size() == 1 && rrset.first().equals(r))\n\t\t\tremoveRRset(name, rtype);\n\t\telse\n\t\t\trrset.deleteRR(r);\n\t}\n}\n","date":"2019-07-14 20:27:37","endLine":505,"groupId":"1757","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/f3/8c25ad143535150734a1a2b94e1b090fc5c16a.src","preCode":"public void\nremoveRecord(Record r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset rrset = findRRset(name, rtype);\n\t\tif (rrset == null)\n\t\t\treturn;\n\t\tif (rrset.size() == 1 && rrset.first().equals(r))\n\t\t\tremoveRRset(name, rtype);\n\t\telse\n\t\t\trrset.deleteRR(r);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"M"}],"commitId":"f237c5b6fd13e6f948a445bab4316b9e83fc2bac","commitMessage":"@@@Lists for RRset (#56)\n\n* Fix or disable unchecked warnings\n\n* Use List as return types for RRset rrs/sigs\n","date":"2019-07-14 20:27:37","modifiedFileCount":"15","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-09-03 05:25:53","codes":[{"authorDate":"2019-07-14 20:27:37","commitOrder":3,"curCode":"public <T extends Record> void\naddRecord(T r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset<T> rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset<>(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","date":"2019-07-14 20:27:37","endLine":485,"groupId":"1015","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/f3/8c25ad143535150734a1a2b94e1b090fc5c16a.src","preCode":"public <T extends Record> void\naddRecord(T r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset<T> rrset = findRRset(name, rtype);\n\t\tif (rrset == null) {\n\t\t\trrset = new RRset<>(r);\n\t\t\taddRRset(name, rrset);\n\t\t} else {\n\t\t\trrset.addRR(r);\n\t\t}\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":472,"status":"N"},{"authorDate":"2019-09-03 05:25:53","commitOrder":3,"curCode":"  public <T extends Record> void removeRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset<T> rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        return;\n      }\n      if (rrset.size() == 1 && rrset.first().equals(r)) {\n        removeRRset(name, rtype);\n      } else {\n        rrset.deleteRR(r);\n      }\n    }\n  }\n","date":"2019-09-03 05:25:53","endLine":515,"groupId":"1757","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/0e/faddca2adfc38aa67a616d83d8ef3971ba780f.src","preCode":"public <T extends Record> void\nremoveRecord(T r) {\n\tName name = r.getName();\n\tint rtype = r.getRRsetType();\n\tsynchronized (this) {\n\t\tRRset<T> rrset = findRRset(name, rtype);\n\t\tif (rrset == null)\n\t\t\treturn;\n\t\tif (rrset.size() == 1 && rrset.first().equals(r))\n\t\t\tremoveRRset(name, rtype);\n\t\telse\n\t\t\trrset.deleteRR(r);\n\t}\n}\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":501,"status":"M"}],"commitId":"92e613b5950bab3f87525b7dd21975ef830af10b","commitMessage":"@@@Format code\n\nCloses #32\n","date":"2019-09-03 05:25:53","modifiedFileCount":"228","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2019-12-25 01:01:58","codes":[{"authorDate":"2019-12-25 01:01:58","commitOrder":4,"curCode":"  public <T extends Record> void addRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        rrset = new RRset(r);\n        addRRset(name, rrset);\n      } else {\n        rrset.addRR(r);\n      }\n    }\n  }\n","date":"2019-12-25 01:01:58","endLine":494,"groupId":"1335","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/18/0ee26db7f53a98e413670cc37f31c5fe6764fe.src","preCode":"  public <T extends Record> void addRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset<T> rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        rrset = new RRset<>(r);\n        addRRset(name, rrset);\n      } else {\n        rrset.addRR(r);\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"},{"authorDate":"2019-12-25 01:01:58","commitOrder":4,"curCode":"  public <T extends Record> void removeRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        return;\n      }\n      if (rrset.size() == 1 && rrset.first().equals(r)) {\n        removeRRset(name, rtype);\n      } else {\n        rrset.deleteRR(r);\n      }\n    }\n  }\n","date":"2019-12-25 01:01:58","endLine":516,"groupId":"1757","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/18/0ee26db7f53a98e413670cc37f31c5fe6764fe.src","preCode":"  public <T extends Record> void removeRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset<T> rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        return;\n      }\n      if (rrset.size() == 1 && rrset.first().equals(r)) {\n        removeRRset(name, rtype);\n      } else {\n        rrset.deleteRR(r);\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"5a65f38f2086c1e6f9ac82ced48b24f11801ad13","commitMessage":"@@@Merge pull request #89 from dnsjava/api-compat\n\nAdd some methods back/undo generics for backwards API compatibility","date":"2019-12-25 01:01:58","modifiedFileCount":"30","status":"M","submitter":"Ingo Bauersachs"},{"authorTime":"2020-01-19 20:22:41","codes":[{"authorDate":"2019-12-25 01:01:58","commitOrder":5,"curCode":"  public <T extends Record> void addRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        rrset = new RRset(r);\n        addRRset(name, rrset);\n      } else {\n        rrset.addRR(r);\n      }\n    }\n  }\n","date":"2019-12-25 01:01:58","endLine":494,"groupId":"10273","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addRecord","params":"(Tr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/18/0ee26db7f53a98e413670cc37f31c5fe6764fe.src","preCode":"  public <T extends Record> void addRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        rrset = new RRset(r);\n        addRRset(name, rrset);\n      } else {\n        rrset.addRR(r);\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"N"},{"authorDate":"2020-01-19 20:22:41","commitOrder":5,"curCode":"  public void removeRecord(Record r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        return;\n      }\n      if (rrset.size() == 1 && rrset.first().equals(r)) {\n        removeRRset(name, rtype);\n      } else {\n        rrset.deleteRR(r);\n      }\n    }\n  }\n","date":"2020-01-19 20:22:41","endLine":516,"groupId":"10273","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"removeRecord","params":"(Recordr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dnsjava-10-0.7/blobInfo/CC_OUT/blobs/9d/5fda4effcf89b7c898bae45ee58f649449e637.src","preCode":"  public <T extends Record> void removeRecord(T r) {\n    Name name = r.getName();\n    int rtype = r.getRRsetType();\n    synchronized (this) {\n      RRset rrset = findRRset(name, rtype);\n      if (rrset == null) {\n        return;\n      }\n      if (rrset.size() == 1 && rrset.first().equals(r)) {\n        removeRRset(name, rtype);\n      } else {\n        rrset.deleteRR(r);\n      }\n    }\n  }\n","realPath":"src/main/java/org/xbill/DNS/Zone.java","repoName":"dnsjava","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"624dc606d21cf36c20ba5c2664c0ca777ed4ffa9","commitMessage":"@@@Cleanup remaining use of raw types\n","date":"2020-01-19 20:22:41","modifiedFileCount":"6","status":"M","submitter":"Ingo Bauersachs"}]
