[{"authorTime":"2019-03-22 23:02:02","codes":[{"authorDate":"2019-03-22 23:02:02","commitOrder":1,"curCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","date":"2019-03-29 22:47:42","endLine":51,"groupId":"1680","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyOfImmutableValueGraph_optimized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5b/911de2333aaa8801477d11429e4ddddae3463a.src","preCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ImmutableValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2019-03-22 23:02:02","commitOrder":1,"curCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","date":"2019-03-29 22:47:42","endLine":51,"groupId":"1680","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyOfImmutableValueGraph_optimized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5b/911de2333aaa8801477d11429e4ddddae3463a.src","preCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"35c85d27c510552807b8ec643f897497e893e0e2","commitMessage":"@@@Add ValueGraphBuilder.immutable().\n\nRELNOTES=`graph`: Added `ValueGraphBuilder.immutable()` for building immutable value graphs in a fluent way\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239795455\n","date":"2019-03-29 22:47:42","modifiedFileCount":"8","status":"B","submitter":"jnyman"},{"authorTime":"2019-05-01 23:30:59","codes":[{"authorDate":"2019-05-01 23:30:59","commitOrder":2,"curCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameInstanceAs(graph1);\n  }\n","date":"2019-05-06 02:02:35","endLine":51,"groupId":"10868","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyOfImmutableValueGraph_optimized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/eb/59f719ade2ade5f21b81a7dc42fc5d66c27488.src","preCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ImmutableValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-05-01 23:30:59","commitOrder":2,"curCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameInstanceAs(graph1);\n  }\n","date":"2019-05-06 02:02:35","endLine":51,"groupId":"10868","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyOfImmutableValueGraph_optimized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/eb/59f719ade2ade5f21b81a7dc42fc5d66c27488.src","preCode":"  public void copyOfImmutableValueGraph_optimized() {\n    ValueGraph<String, Integer> graph1 =\n        ImmutableValueGraph.copyOf(ValueGraphBuilder.directed().<String, Integer>build());\n    ValueGraph<String, Integer> graph2 = ImmutableValueGraph.copyOf(graph1);\n\n    assertThat(graph2).isSameAs(graph1);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"c8542f65ca36545089b7a9fa8aebaad8a7da8762","commitMessage":"@@@Migrate from is(Not)SameAs to is(Not)SameInstanceAs.\n\nThey behave identically.  and the old names are being removed.\n\nOpen-source note: The new methods are available in Truth as of version 0.44.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246135538\n","date":"2019-05-06 02:02:35","modifiedFileCount":"40","status":"M","submitter":"cpovirk"}]
