[{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2016-09-01 12:04:06","commitOrder":1,"curCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2016-09-01 22:30:43","endLine":71,"groupId":"1898","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"directedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/05/45537fbe31b980d84128d605934896ce2cf747.src","preCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2016-09-01 12:04:06","commitOrder":1,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2016-09-01 22:30:43","endLine":91,"groupId":"9239","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/05/45537fbe31b980d84128d605934896ce2cf747.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"}],"commitId":"cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00","commitMessage":"@@@Changes to common.graph. Sorry for the churn.  but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:\n\n-Revert the interface names back. \"BasicGraph\" is now \"Graph\" (BasicGraph was probably a a poor choice).  and \"Graph\" is now \"ValueGraph\". The \"node only\" Graph interface is at the top of the interface hierarchy.  and ValueGraph extends it.\n-To facilitate the above.  the various graph interfaces do *not* specify equality.  and the default implementations use reference (identity) equality.\n-Add static methods Graphs.equivalent(...) for users that want value-based equality.\n-Rename Endpoints to EndpointPair. Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered().\n\nMinor changes:\n\n-Undid the small refactor from [] since the original structure makes it easier for the Immutable classes to have the right hierarchy (i.e. ImmutableValueGraph extends ImmutableGraph.  ImmutableNetwork.asGraph() is an ImmutableGraph).\n-Added an \"isEquivalentTo\" method to NetworkSubject (formerly GraphSubject) in labs. Eventually we should get around to having a single truth import for both Graphs and Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131906631\n","date":"2016-09-01 22:30:43","modifiedFileCount":"34","status":"B","submitter":"jasexton"},{"authorTime":"2017-07-08 04:05:13","codes":[{"authorDate":"2017-07-08 04:05:13","commitOrder":2,"curCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-10 22:17:22","endLine":82,"groupId":"2344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"directedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/32/59c37c50e9b4b4b53342995fcb16f2283132be.src","preCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2017-07-08 04:05:13","commitOrder":2,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-10 22:17:22","endLine":102,"groupId":"2344","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/32/59c37c50e9b4b4b53342995fcb16f2283132be.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"0f6096df9105ecbbb2d32017eae8fd63562ab298","commitMessage":"@@@ValueGraph.edgeValue*: change from\n* V edgeValue().  V edgeValueOrDefault()\nto\n* Optional<V> edgeValue().  V edgeValueOrNull()\n\nFixed Graphs.inducedSubgraph() implementations so that it appropriately specifies the # of nodes in the induced subgraph as being the size of the supplied node Iterable.\n\nFixed MoreGraphs.inducedSubgraph() implementations so that the filtered nodes are being returned as Lists rather than Iterators.  so that calculating their size doesn't exhaust the Iterator.\n\nFixed the graph *Builder from() methods so that they are all uniformly enforcing types (this was causing MOE problems in conjunction with the expectedNodes() call.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161235517\n","date":"2017-07-10 22:17:22","modifiedFileCount":"21","status":"M","submitter":"jrtom"},{"authorTime":"2017-07-13 07:46:12","codes":[{"authorDate":"2017-07-13 07:46:12","commitOrder":3,"curCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-14 03:02:58","endLine":82,"groupId":"132","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"directedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/4c/1fdef91377d57f1b4df410333813408d14d668.src","preCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2017-07-13 07:46:12","commitOrder":3,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-14 03:02:58","endLine":102,"groupId":"133","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/4c/1fdef91377d57f1b4df410333813408d14d668.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"66b3e26aadf5ec82808a0965b2a894addb0970e9","commitMessage":"@@@ValueGraph.java: restore edgeValueOrNull() to edgeValueOrDefault().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161738013\n","date":"2017-07-14 03:02:58","modifiedFileCount":"14","status":"M","submitter":"jrtom"},{"authorTime":"2017-10-11 22:17:00","codes":[{"authorDate":"2017-10-11 22:17:00","commitOrder":4,"curCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n    assertThat(graph.edgeValueOrDefault(1, 2, DEFAULT)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrDefault(2, 1, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, DEFAULT)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, DEFAULT)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-10-11 22:50:41","endLine":88,"groupId":"10515","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"directedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/fa/b769e2221947ea8c4f6de4df4382b71c6fea67.src","preCode":"  public void directedGraph() {\n    graph = ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\");\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueA\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).contains(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2017-10-11 22:17:00","commitOrder":4,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n    assertThat(graph.edgeValueOrDefault(1, 2, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, DEFAULT)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, DEFAULT)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-10-11 22:50:41","endLine":112,"groupId":"10515","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/fa/b769e2221947ea8c4f6de4df4382b71c6fea67.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"361eba8e4078a4c80f9be0c9194a7e3c0473aa6d","commitMessage":"@@@ValueGraphTest.java: add a few checks to make sure that we're properly exercising both null and non-null default values.\n\nThis addresses the most recent suggestion in GitHub issue #2924.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171818169\n","date":"2017-10-11 22:50:41","modifiedFileCount":"2","status":"M","submitter":"jrtom"}]
