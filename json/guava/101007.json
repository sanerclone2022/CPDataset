[{"authorTime":"2016-04-10 09:26:18","codes":[{"authorDate":"2016-04-10 09:26:18","commitOrder":1,"curCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","date":"2016-04-11 23:05:46","endLine":50,"groupId":"2533","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"edgesConnecting_directed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/68/43b0f61963e92cc95f53e0f8426cd8c08d9e78.src","preCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2016-04-10 09:26:18","commitOrder":1,"curCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","date":"2016-04-11 23:05:46","endLine":62,"groupId":"2533","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"edgesConnecting_undirected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/68/43b0f61963e92cc95f53e0f8426cd8c08d9e78.src","preCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"c1c5dae45283129c67eb7d5d2b5b90eff4c92c4c","commitMessage":"@@@Graph.java: break out mutation- and edge-specific methods into subinterfaces:\n* Network.java: edge-specific methods (extends Graph)\n* MutableGraph.java: mutation methods for Graph (extends Graph)\n* MutableNetwork.java: mutation methods for Network (extends Network)\nGraph<N.  E> becomes Graph<N>.\n\nConsequential changes:\n* adding various new Network-specific classes (NetworkBuilder.  AbstractNetwork.  etc.)\n* adapted Graph-specific classes to remove edge-related code\n\nNote: Graph does not currently support parallel edges.\n\nMotivations:\n* Make graphs without explicit.  first-class edge objects available.\n* Remove mutation methods from the top-level interfaces so that Graph/Network objects supplied as their parameters don't (contractually) support modifications.  (And so that the slightly differing signatures for Graph and Network mutation methods don't cause user confusion.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119461180\n","date":"2016-04-11 23:05:46","modifiedFileCount":"24","status":"B","submitter":"jrtom"},{"authorTime":"2016-08-06 22:55:31","codes":[{"authorDate":"2016-08-06 22:55:31","commitOrder":2,"curCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdgeV2(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdgeV2(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","date":"2016-08-07 05:17:35","endLine":50,"groupId":"3818","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"edgesConnecting_directed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/4b/2121ca0452732cc85e4e448cdb5d7886cb5e68.src","preCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2016-08-06 22:55:31","commitOrder":2,"curCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdgeV2(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdgeV2(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","date":"2016-08-07 05:17:35","endLine":62,"groupId":"3818","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"edgesConnecting_undirected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/4b/2121ca0452732cc85e4e448cdb5d7886cb5e68.src","preCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdge(\"AA\", \"A\", \"A\");\n    mutableGraph.addEdge(\"AB\", \"A\", \"B\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"7aa9178daece0553616f192dcd7a2fca771994c2","commitMessage":"@@@Rename MutableGraph.addEdge(N.  N) to MutableGraph.putEdge(N.  N) (to indicate that Graphs do not support parallel edges and for consistency with the upcoming ValueGraph interface). Change the order of parameters in MutableNetwork.addEdge(E.  N.  N) to MutableNetwork.addEdge(N.  N.  E).\n\nThe migration for the latter will be done in two steps.  in order to avoid silently breaking someone with a WIP change involving a Network<N.  E> where N == E. The method with the new parameter order will temporarily be called addEdgeV2.  and is planned to be changed back to addEdge the evening of Wednesday.  August 10.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129529711\n","date":"2016-08-07 05:17:35","modifiedFileCount":"20","status":"M","submitter":"jasexton"},{"authorTime":"2016-08-11 20:29:35","codes":[{"authorDate":"2016-08-11 20:29:35","commitOrder":3,"curCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdge(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","date":"2016-08-11 21:55:06","endLine":50,"groupId":"2533","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"edgesConnecting_directed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/02/a2e6a98d51e48eb50fb3c54ef0815fe8b3fcb1.src","preCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdgeV2(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdgeV2(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2016-08-11 20:29:35","commitOrder":3,"curCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdge(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","date":"2016-08-11 21:55:06","endLine":62,"groupId":"2533","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"edgesConnecting_undirected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/02/a2e6a98d51e48eb50fb3c54ef0815fe8b3fcb1.src","preCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdgeV2(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdgeV2(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"62c8259058f3349cee51b2dd392bfe11664d4e9a","commitMessage":"@@@Rename addEdgeV2() to addEdge().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129976233\n","date":"2016-08-11 21:55:06","modifiedFileCount":"12","status":"M","submitter":"jasexton"},{"authorTime":"2016-08-18 23:47:51","codes":[{"authorDate":"2016-08-18 23:47:51","commitOrder":4,"curCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableNetwork = NetworkBuilder.directed().build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","date":"2016-08-19 00:03:31","endLine":63,"groupId":"1285","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"edgesConnecting_directed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b2/5d077c7583a18e10fd04d084b5c4890b5179cf.src","preCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.directed().build();\n    mutableGraph.addEdge(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2016-08-18 23:47:51","commitOrder":4,"curCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableNetwork = NetworkBuilder.undirected().build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","date":"2016-08-19 00:03:31","endLine":75,"groupId":"1285","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"edgesConnecting_undirected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b2/5d077c7583a18e10fd04d084b5c4890b5179cf.src","preCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableGraph = NetworkBuilder.undirected().build();\n    mutableGraph.addEdge(\"A\", \"A\", \"AA\");\n    mutableGraph.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> graph = ImmutableNetwork.copyOf(mutableGraph);\n\n    assertThat(graph.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(graph.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(graph.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"ed00daeb58e8ba143bb0cdfd4547c57985e2c862","commitMessage":"@@@Add more test coverage for Immutable graphs/networks.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130643917\n","date":"2016-08-19 00:03:31","modifiedFileCount":"1","status":"M","submitter":"jasexton"},{"authorTime":"2016-08-20 23:28:31","codes":[{"authorDate":"2016-08-20 23:28:31","commitOrder":5,"curCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableNetwork =\n        NetworkBuilder.directed().allowsSelfLoops(true).build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","date":"2016-08-23 04:02:40","endLine":64,"groupId":"101007","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"edgesConnecting_directed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/6e/bf593706fbcfc140596a6245b289090a4489af.src","preCode":"  public void edgesConnecting_directed() {\n    MutableNetwork<String, String> mutableNetwork = NetworkBuilder.directed().build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).isEmpty();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2016-08-20 23:28:31","commitOrder":5,"curCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableNetwork =\n        NetworkBuilder.undirected().allowsSelfLoops(true).build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","date":"2016-08-23 04:02:40","endLine":77,"groupId":"101007","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"edgesConnecting_undirected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/6e/bf593706fbcfc140596a6245b289090a4489af.src","preCode":"  public void edgesConnecting_undirected() {\n    MutableNetwork<String, String> mutableNetwork = NetworkBuilder.undirected().build();\n    mutableNetwork.addEdge(\"A\", \"A\", \"AA\");\n    mutableNetwork.addEdge(\"A\", \"B\", \"AB\");\n    Network<String, String> network = ImmutableNetwork.copyOf(mutableNetwork);\n\n    assertThat(network.edgesConnecting(\"A\", \"A\")).containsExactly(\"AA\");\n    assertThat(network.edgesConnecting(\"A\", \"B\")).containsExactly(\"AB\");\n    assertThat(network.edgesConnecting(\"B\", \"A\")).containsExactly(\"AB\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ImmutableNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"3a2804bad68215ea046ad679958a29b5cbced8b8","commitMessage":"@@@Change allowsSelfLoops() to default to false for Graph/NetworkBuilder.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130840045\n","date":"2016-08-23 04:02:40","modifiedFileCount":"21","status":"M","submitter":"jasexton"}]
