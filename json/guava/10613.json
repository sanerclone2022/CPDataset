[{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2016-09-01 12:04:06","commitOrder":2,"curCode":"  public void inducedSubgraph_valueGraph() {\n    Set<Integer> nodeSubset = ImmutableSet.of(N1, N2, N4);\n\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N2, N1, E21);\n    directedGraph.putEdgeValue(N1, N3, E13); \r\n    directedGraph.putEdgeValue(N4, N4, E44);\n    directedGraph.putEdgeValue(5, 6, \"5-6\"); \r\n\n    MutableValueGraph<Integer, String> expectedSubgraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedSubgraph.putEdgeValue(N1, N2, E12);\n    expectedSubgraph.putEdgeValue(N2, N1, E21);\n    expectedSubgraph.putEdgeValue(N4, N4, E44);\n\n    assertThat(Graphs.equivalent(inducedSubgraph(directedGraph, nodeSubset), expectedSubgraph))\n        .isTrue();\n  }\n","date":"2016-09-01 22:30:43","endLine":366,"groupId":"1877","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"inducedSubgraph_valueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/ebce61f575d7158dba0c00c44978949473092f.src","preCode":"  public void inducedSubgraph_valueGraph() {\n    Set<Integer> nodeSubset = ImmutableSet.of(N1, N2, N4);\n\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N2, N1, E21);\n    directedGraph.putEdgeValue(N1, N3, E13); \r\n    directedGraph.putEdgeValue(N4, N4, E44);\n    directedGraph.putEdgeValue(5, 6, \"5-6\"); \r\n\n    MutableValueGraph<Integer, String> expectedSubgraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedSubgraph.putEdgeValue(N1, N2, E12);\n    expectedSubgraph.putEdgeValue(N2, N1, E21);\n    expectedSubgraph.putEdgeValue(N4, N4, E44);\n\n    assertThat(Graphs.equivalent(inducedSubgraph(directedGraph, nodeSubset), expectedSubgraph))\n        .isTrue();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"MB"},{"authorDate":"2016-09-01 12:04:06","commitOrder":2,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2016-09-01 22:30:43","endLine":652,"groupId":"4857","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/ebce61f575d7158dba0c00c44978949473092f.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":644,"status":"B"}],"commitId":"cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00","commitMessage":"@@@Changes to common.graph. Sorry for the churn.  but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:\n\n-Revert the interface names back. \"BasicGraph\" is now \"Graph\" (BasicGraph was probably a a poor choice).  and \"Graph\" is now \"ValueGraph\". The \"node only\" Graph interface is at the top of the interface hierarchy.  and ValueGraph extends it.\n-To facilitate the above.  the various graph interfaces do *not* specify equality.  and the default implementations use reference (identity) equality.\n-Add static methods Graphs.equivalent(...) for users that want value-based equality.\n-Rename Endpoints to EndpointPair. Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered().\n\nMinor changes:\n\n-Undid the small refactor from [] since the original structure makes it easier for the Immutable classes to have the right hierarchy (i.e. ImmutableValueGraph extends ImmutableGraph.  ImmutableNetwork.asGraph() is an ImmutableGraph).\n-Added an \"isEquivalentTo\" method to NetworkSubject (formerly GraphSubject) in labs. Eventually we should get around to having a single truth import for both Graphs and Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131906631\n","date":"2016-09-01 22:30:43","modifiedFileCount":"34","status":"M","submitter":"jasexton"},{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2017-01-18 12:02:14","commitOrder":3,"curCode":"  public void inducedSubgraph_valueGraph() {\n    Set<Integer> nodeSubset = ImmutableSet.of(N1, N2, N4);\n\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N2, N1, E21);\n    directedGraph.putEdgeValue(N1, N3, E13); \r\n    directedGraph.putEdgeValue(N4, N4, E44);\n    directedGraph.putEdgeValue(5, 6, \"5-6\"); \r\n\n    MutableValueGraph<Integer, String> expectedSubgraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedSubgraph.putEdgeValue(N1, N2, E12);\n    expectedSubgraph.putEdgeValue(N2, N1, E21);\n    expectedSubgraph.putEdgeValue(N4, N4, E44);\n\n    assertThat(inducedSubgraph(directedGraph, nodeSubset)).isEqualTo(expectedSubgraph);\n  }\n","date":"2017-01-19 23:53:15","endLine":356,"groupId":"10613","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"inducedSubgraph_valueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/67/32ab9da9f2d6b1cfd8978db3453c4ca301cca9.src","preCode":"  public void inducedSubgraph_valueGraph() {\n    Set<Integer> nodeSubset = ImmutableSet.of(N1, N2, N4);\n\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N2, N1, E21);\n    directedGraph.putEdgeValue(N1, N3, E13); \r\n    directedGraph.putEdgeValue(N4, N4, E44);\n    directedGraph.putEdgeValue(5, 6, \"5-6\"); \r\n\n    MutableValueGraph<Integer, String> expectedSubgraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedSubgraph.putEdgeValue(N1, N2, E12);\n    expectedSubgraph.putEdgeValue(N2, N1, E21);\n    expectedSubgraph.putEdgeValue(N4, N4, E44);\n\n    assertThat(Graphs.equivalent(inducedSubgraph(directedGraph, nodeSubset), expectedSubgraph))\n        .isTrue();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"},{"authorDate":"2016-09-01 12:04:06","commitOrder":3,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2016-09-01 22:30:43","endLine":652,"groupId":"10613","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/ebce61f575d7158dba0c00c44978949473092f.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":644,"status":"N"}],"commitId":"d0dc9ce896df6299de427063fa69bd348937ef1f","commitMessage":"@@@Now that ValueGraph no longer extends Graph.  change all the common.graph interfaces to handle equals()/hashCode() \"normally\". Deprecate Graphs.equivalent().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144788407\n","date":"2017-01-19 23:53:15","modifiedFileCount":"14","status":"M","submitter":"jasexton"}]
