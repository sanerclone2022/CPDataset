[{"authorTime":"2017-04-21 05:33:38","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":1,"curCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","date":"2017-04-21 10:27:51","endLine":276,"groupId":"967","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transpose_directedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"B"},{"authorDate":"2017-04-21 05:33:38","commitOrder":1,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2017-04-21 10:27:51","endLine":629,"groupId":"4857","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"B"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"B","submitter":"zhenghua"},{"authorTime":"2017-04-21 05:33:38","codes":[{"authorDate":"2017-07-08 04:05:13","commitOrder":2,"curCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrNull(N1, N2)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrNull(N1, N2)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","date":"2017-07-10 22:17:22","endLine":276,"groupId":"967","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transpose_directedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b1/015b3432220024812822b7d99d4544636e1f45.src","preCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2017-04-21 05:33:38","commitOrder":2,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2017-04-21 10:27:51","endLine":629,"groupId":"4857","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"N"}],"commitId":"0f6096df9105ecbbb2d32017eae8fd63562ab298","commitMessage":"@@@ValueGraph.edgeValue*: change from\n* V edgeValue().  V edgeValueOrDefault()\nto\n* Optional<V> edgeValue().  V edgeValueOrNull()\n\nFixed Graphs.inducedSubgraph() implementations so that it appropriately specifies the # of nodes in the induced subgraph as being the size of the supplied node Iterable.\n\nFixed MoreGraphs.inducedSubgraph() implementations so that the filtered nodes are being returned as Lists rather than Iterators.  so that calculating their size doesn't exhaust the Iterator.\n\nFixed the graph *Builder from() methods so that they are all uniformly enforcing types (this was causing MOE problems in conjunction with the expectedNodes() call.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161235517\n","date":"2017-07-10 22:17:22","modifiedFileCount":"21","status":"M","submitter":"jrtom"},{"authorTime":"2017-04-21 05:33:38","codes":[{"authorDate":"2017-07-13 07:46:12","commitOrder":3,"curCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","date":"2017-07-14 03:02:58","endLine":276,"groupId":"967","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"transpose_directedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/f9/9b559a1fd4278ef882904928823de0eabcd25d.src","preCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrNull(N1, N2)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrNull(N1, N2)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2017-04-21 05:33:38","commitOrder":3,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2017-04-21 10:27:51","endLine":629,"groupId":"4857","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"N"}],"commitId":"66b3e26aadf5ec82808a0965b2a894addb0970e9","commitMessage":"@@@ValueGraph.java: restore edgeValueOrNull() to edgeValueOrDefault().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161738013\n","date":"2017-07-14 03:02:58","modifiedFileCount":"14","status":"M","submitter":"jrtom"},{"authorTime":"2017-04-21 05:33:38","codes":[{"authorDate":"2017-07-14 04:35:55","commitOrder":4,"curCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    for (Integer node : directedGraph.nodes()) {\n      assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node));\n      assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node));\n    }\n\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","date":"2017-07-14 06:31:44","endLine":286,"groupId":"967","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"transpose_directedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ce/892add81361fe885f2777cf499b79330f0f3da.src","preCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2017-04-21 05:33:38","commitOrder":4,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2017-04-21 10:27:51","endLine":629,"groupId":"4857","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"N"}],"commitId":"4a6ce819542d5fe440bd5d13956bb4e46084325c","commitMessage":"@@@common.graph: create (package-protected) ForwardingValueGraph and ForwardingNetwork classes.  and use those (and ForwardingGraph) to simplify the implementation of the Transposed* inner classes in Graphs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161856111\n","date":"2017-07-14 06:31:44","modifiedFileCount":"6","status":"M","submitter":"jrtom"},{"authorTime":"2017-04-21 05:33:38","codes":[{"authorDate":"2019-05-01 23:30:59","commitOrder":5,"curCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameInstanceAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    for (Integer node : directedGraph.nodes()) {\n      assertThat(directedGraph.inDegree(node)).isSameInstanceAs(transpose.outDegree(node));\n      assertThat(directedGraph.outDegree(node)).isSameInstanceAs(transpose.inDegree(node));\n    }\n\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","date":"2019-05-06 02:02:35","endLine":286,"groupId":"10589","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"transpose_directedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/c1/76e1fc2171cd48b4f097d8d13c83a632cee431.src","preCode":"  public void transpose_directedValueGraph() {\n    MutableValueGraph<Integer, String> directedGraph =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    directedGraph.putEdgeValue(N1, N3, E13);\n    directedGraph.putEdgeValue(N3, N1, E31);\n    directedGraph.putEdgeValue(N1, N2, E12);\n    directedGraph.putEdgeValue(N1, N1, E11);\n    directedGraph.putEdgeValue(N3, N4, E34);\n\n    MutableValueGraph<Integer, String> expectedTranspose =\n        ValueGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedTranspose.putEdgeValue(N3, N1, E13);\n    expectedTranspose.putEdgeValue(N1, N3, E31);\n    expectedTranspose.putEdgeValue(N2, N1, E12);\n    expectedTranspose.putEdgeValue(N1, N1, E11);\n    expectedTranspose.putEdgeValue(N4, N3, E34);\n\n    ValueGraph<Integer, String> transpose = transpose(directedGraph);\n    assertThat(transpose).isEqualTo(expectedTranspose);\n    assertThat(transpose(transpose)).isSameAs(directedGraph);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isNull();\n    for (Integer node : directedGraph.nodes()) {\n      assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node));\n      assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node));\n    }\n\n    directedGraph.putEdgeValue(N2, N1, E21);\n    \r\n    assertThat(transpose.edgeValueOrDefault(N1, N2, null)).isEqualTo(E21);\n    AbstractGraphTest.validateGraph(transpose.asGraph());\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2017-04-21 05:33:38","commitOrder":5,"curCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","date":"2017-04-21 10:27:51","endLine":629,"groupId":"10589","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUndirectedValueGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/2f/77b63db7d1e8a0d9ab3c407cbbaa5f35c02657.src","preCode":"  private static MutableValueGraph<Integer, String> buildUndirectedValueGraph() {\n    MutableValueGraph<Integer, String> undirectedGraph =\n        ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    undirectedGraph.putEdgeValue(N1, N1, E11);\n    undirectedGraph.putEdgeValue(N1, N2, E12);\n    undirectedGraph.putEdgeValue(N2, N1, E21); \r\n\n    return undirectedGraph;\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"N"}],"commitId":"c8542f65ca36545089b7a9fa8aebaad8a7da8762","commitMessage":"@@@Migrate from is(Not)SameAs to is(Not)SameInstanceAs.\n\nThey behave identically.  and the old names are being removed.\n\nOpen-source note: The new methods are available in Truth as of version 0.44.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246135538\n","date":"2019-05-06 02:02:35","modifiedFileCount":"40","status":"M","submitter":"cpovirk"}]
