[{"authorTime":"2016-06-22 01:34:24","codes":[{"authorDate":"2016-06-22 01:34:24","commitOrder":1,"curCode":"  public void edgeOrder_sorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","date":"2016-06-22 01:56:34","endLine":167,"groupId":"5198","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"edgeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/11/97f38759e931060e60b23e41bbf922563d61c0.src","preCode":"  public void edgeOrder_sorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2016-06-22 01:34:24","commitOrder":1,"curCode":"  public void nodeOrderUnorderedandEdgesSorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(unordered());\n    assertThat(graph.nodes()).containsExactly(4, 1, 3);\n  }\n","date":"2016-06-22 01:56:34","endLine":185,"groupId":"5198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrderUnorderedandEdgesSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/11/97f38759e931060e60b23e41bbf922563d61c0.src","preCode":"  public void nodeOrderUnorderedandEdgesSorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(unordered());\n    assertThat(graph.nodes()).containsExactly(4, 1, 3);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"25468d9a32c4723dd0d13087c0611960c6028dc5","commitMessage":"@@@Rename orderNodes() to nodeOrder() and orderEdges() to edgeOrder().\n\nNote that I feel this is actually *more* in the spirit of the guidelines we established.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125467297\n","date":"2016-06-22 01:56:34","modifiedFileCount":"4","status":"B","submitter":"jasexton"},{"authorTime":"2016-06-25 22:16:11","codes":[{"authorDate":"2016-06-25 22:16:11","commitOrder":2,"curCode":"  public void edgeOrder_sorted() {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","date":"2016-06-28 00:04:12","endLine":170,"groupId":"5198","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"edgeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b3/f75704f3774994abcb7d26c7954f109b648429.src","preCode":"  public void edgeOrder_sorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2016-06-25 22:16:11","commitOrder":2,"curCode":"  public void nodeOrderUnorderedandEdgesSorted() {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(unordered());\n    assertThat(graph.nodes()).containsExactly(4, 1, 3);\n  }\n","date":"2016-06-28 00:04:12","endLine":189,"groupId":"5198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrderUnorderedandEdgesSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b3/f75704f3774994abcb7d26c7954f109b648429.src","preCode":"  public void nodeOrderUnorderedandEdgesSorted() throws Exception {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(unordered());\n    assertThat(graph.nodes()).containsExactly(4, 1, 3);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"a54c34542dc5c3c2bfa4d9f10a8bc9c565d3835b","commitMessage":"@@@Fix broken generic types in ElementOrder. Added two tests.  neither of which compile with the existing code!\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125863282\n","date":"2016-06-28 00:04:12","modifiedFileCount":"2","status":"M","submitter":"jasexton"},{"authorTime":"2016-09-03 12:46:44","codes":[{"authorDate":"2016-09-03 12:46:44","commitOrder":3,"curCode":"  public void edgeOrder_sorted() {\n    MutableNetwork<Integer, String> network = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(network);\n\n    assertThat(network.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(network.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(network.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","date":"2016-09-03 20:27:32","endLine":168,"groupId":"10997","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"edgeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5b/9cbf86c32b6eb90990841cecf3f6274a564ff5.src","preCode":"  public void edgeOrder_sorted() {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.insertion()); \r\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2016-09-03 12:46:44","commitOrder":3,"curCode":"  public void nodeOrderUnorderedandEdgesSorted() {\n    MutableNetwork<Integer, String> network = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(network);\n\n    assertThat(network.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(network.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(network.nodeOrder()).isEqualTo(unordered());\n    assertThat(network.nodes()).containsExactly(4, 1, 3);\n  }\n","date":"2016-09-03 20:27:32","endLine":187,"groupId":"10997","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrderUnorderedandEdgesSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5b/9cbf86c32b6eb90990841cecf3f6274a564ff5.src","preCode":"  public void nodeOrderUnorderedandEdgesSorted() {\n    MutableNetwork<Integer, String> graph = NetworkBuilder\n        .directed()\n        .nodeOrder(unordered())\n        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse()))\n        .build();\n\n    addEdges(graph);\n\n    assertThat(graph.edgeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<String>natural().reverse()));\n    assertThat(graph.edges()).containsExactly(\"p\", \"i\", \"e\").inOrder();\n    assertThat(graph.nodeOrder()).isEqualTo(unordered());\n    assertThat(graph.nodes()).containsExactly(4, 1, 3);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"d7a8ec278d82466bef86eecffa03ac8e7c3ad557","commitMessage":"@@@Refer to Network references as \"network\" instead of \"graph\". Note that we've already started doing this.  but (as you can see) are fairly inconsistent with it.\n\nRename GraphType to EdgeType in {Graph. Network}EquivalenceTest\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132130888\n","date":"2016-09-03 20:27:32","modifiedFileCount":"6","status":"M","submitter":"jasexton"}]
