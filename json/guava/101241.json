[{"authorTime":"2016-10-11 22:11:46","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":2,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","date":"2017-04-21 10:27:51","endLine":136,"groupId":"9486","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/05/7385d11731a2f0e3e43094ff25da269dc51115.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"},{"authorDate":"2016-10-11 22:11:46","commitOrder":2,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","date":"2016-10-11 22:58:55","endLine":136,"groupId":"9486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/05/7385d11731a2f0e3e43094ff25da269dc51115.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"NB"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"M","submitter":"zhenghua"},{"authorTime":"2018-04-16 23:28:07","codes":[{"authorDate":"2018-04-16 23:28:07","commitOrder":3,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","date":"2018-04-19 03:56:50","endLine":146,"groupId":"9486","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/48/631b6d8400b203e6480fec26d6db6359c6a0a0.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2018-04-16 23:28:07","commitOrder":3,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","date":"2018-04-19 03:56:50","endLine":146,"groupId":"9486","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/48/631b6d8400b203e6480fec26d6db6359c6a0a0.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"c84ffbfa6a3ccc941592d796b0ab35e282a661e9","commitMessage":"@@@Fix toString of NonSerializableMemoizingSupplier\n\nFixes #3107\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193043319\n","date":"2018-04-19 03:56:50","modifiedFileCount":"4","status":"M","submitter":"Alice Purcell"},{"authorTime":"2018-11-27 01:04:57","codes":[{"authorDate":"2018-11-27 01:04:57","commitOrder":4,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertThat(ex).hasCauseThat().isInstanceOf(java.io.NotSerializableException.class);\n    }\n  }\n","date":"2018-11-27 03:19:13","endLine":147,"groupId":"101241","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a9/7fe656c91b3efdb9b3a0e5533c7482bc89321f.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2018-11-27 01:04:57","commitOrder":4,"curCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertThat(ex).hasCauseThat().isInstanceOf(java.io.NotSerializableException.class);\n    }\n  }\n","date":"2018-11-27 03:19:13","endLine":147,"groupId":"101241","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMemoizeNonSerializable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a9/7fe656c91b3efdb9b3a0e5533c7482bc89321f.src","preCode":"  public void testMemoizeNonSerializable() throws Exception {\n    CountingSupplier countingSupplier = new CountingSupplier();\n    Supplier<Integer> memoizedSupplier = Suppliers.memoize(countingSupplier);\n    assertThat(memoizedSupplier.toString()).isEqualTo(\"Suppliers.memoize(CountingSupplier)\");\n    checkMemoize(countingSupplier, memoizedSupplier);\n    \r\n    memoizedSupplier.get();\n    assertThat(memoizedSupplier.toString())\n        .isEqualTo(\"Suppliers.memoize(<supplier that returned 10>)\");\n\n    \r\n    try {\n      reserialize(memoizedSupplier);\n      fail();\n    } catch (RuntimeException ex) {\n      assertEquals(java.io.NotSerializableException.class, ex.getCause().getClass());\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/SuppliersTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"c77be7a745fc5e0992126949832c6c25253ad289","commitMessage":"@@@Replace usages of Truth's deprecated hasMessage() with hasMessageThat() in Guava tests.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222834185\n","date":"2018-11-27 03:19:13","modifiedFileCount":"77","status":"M","submitter":"dlos"}]
