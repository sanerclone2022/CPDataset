[{"authorTime":"2016-02-12 05:57:58","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":4,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","date":"2017-04-21 10:27:51","endLine":107,"groupId":"9628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/0e/7a36e4917b463c1d77aadf10eb030cd7c3fff5.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2016-02-12 05:57:58","commitOrder":4,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","date":"2016-02-12 07:00:47","endLine":109,"groupId":"9628","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/59/9b449ff082dcd908dfb375f775ecabeda61ead.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","realPath":"guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"NB"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"M","submitter":"zhenghua"},{"authorTime":"2017-08-18 23:57:56","codes":[{"authorDate":"2017-08-18 23:57:56","commitOrder":5,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","date":"2017-08-19 00:17:46","endLine":107,"groupId":"9628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/22/cf3ec5496b050a54b216094132a4dcf0660847.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2017-08-18 23:57:56","commitOrder":5,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","date":"2017-08-19 00:17:46","endLine":107,"groupId":"9628","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/22/cf3ec5496b050a54b216094132a4dcf0660847.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<Object>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<ClassLoader>(shadowLoader);\n  }\n","realPath":"guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"16f262fbde011c89d770472540c33bdb4588371b","commitMessage":"@@@Use diamond operator for all test targets except 'collect'\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165710863\n","date":"2017-08-19 00:17:46","modifiedFileCount":"64","status":"M","submitter":"jijiang"},{"authorTime":"2017-09-14 04:11:34","codes":[{"authorDate":"2017-09-14 04:11:34","commitOrder":6,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader shadowLoader = new URLClassLoader(getClassPathUrls(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","date":"2017-09-14 04:26:15","endLine":112,"groupId":"101069","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/80/a2f50df83a1962616bfd8d9d0ab99b581169bf.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2017-09-14 04:11:34","commitOrder":6,"curCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader shadowLoader = new URLClassLoader(getClassPathUrls(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","date":"2017-09-14 04:26:15","endLine":112,"groupId":"101069","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestClassUnloading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/80/a2f50df83a1962616bfd8d9d0ab99b581169bf.src","preCode":"  private WeakReference<?> doTestClassUnloading() throws Exception {\n    URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();\n    URLClassLoader shadowLoader = new URLClassLoader(myLoader.getURLs(), null);\n    @SuppressWarnings(\"unchecked\")\n    Class<TestEnum> shadowTestEnum =\n        (Class<TestEnum>) Class.forName(TestEnum.class.getName(), false, shadowLoader);\n    assertNotSame(shadowTestEnum, TestEnum.class);\n    \r\n    \r\n    Set<Object> shadowConstants = new HashSet<>();\n    for (TestEnum constant : TestEnum.values()) {\n      Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, constant.name());\n      assertThat(result).isPresent();\n      shadowConstants.add(result.get());\n    }\n    assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()), shadowConstants);\n    Optional<TestEnum> result = Enums.getIfPresent(shadowTestEnum, \"blibby\");\n    assertThat(result).isAbsent();\n    return new WeakReference<>(shadowLoader);\n  }\n","realPath":"guava-tests/test/com/google/common/base/EnumsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"db2e7fe9adcbf44e4964a26be9f3d7b52a52ca21","commitMessage":"@@@Fix tests that assume Class.getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the \"java.class.path\" system property.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168584444\n","date":"2017-09-14 04:26:15","modifiedFileCount":"10","status":"M","submitter":"dpb"}]
