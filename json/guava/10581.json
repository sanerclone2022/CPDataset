[{"authorTime":"2016-08-16 02:57:22","codes":[{"authorDate":"2016-08-16 02:57:22","commitOrder":1,"curCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-08-16 03:27:18","endLine":150,"groupId":"4159","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transitiveClosure_directedPathGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/6d/0a49215341933a77e7d5d4c0a8e170ad6b8422.src","preCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2016-08-16 02:57:22","commitOrder":1,"curCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-08-16 03:27:18","endLine":202,"groupId":"4159","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"transitiveClosure_directedCycleGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/6d/0a49215341933a77e7d5d4c0a8e170ad6b8422.src","preCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"}],"commitId":"0f0f616ef7962d97748e2b1bbbd539e96dcbc7b4","commitMessage":"@@@Add the methods Graphs.reachableNodes() and Graphs.transitiveClosure(). Three teams have already implemented similar logic! Also.  looking through the remaining uses of the legacy Digraph.  the only thing preventing many from being converted to common.graph is the lack of transitive closure. So I'd say there's very high demand for this.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130307025\n","date":"2016-08-16 03:27:18","modifiedFileCount":"3","status":"B","submitter":"jasexton"},{"authorTime":"2016-08-18 00:46:23","codes":[{"authorDate":"2016-08-18 00:46:23","commitOrder":2,"curCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableBasicGraph<Integer> directedGraph =\n        BasicGraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableBasicGraph<Integer> expectedClosure =\n        BasicGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-08-18 01:20:24","endLine":135,"groupId":"4159","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transitiveClosure_directedPathGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/33/c530d95aee7286479c6b20dfeb619a4c6dba0e.src","preCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2016-08-18 00:46:23","commitOrder":2,"curCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableBasicGraph<Integer> directedGraph =\n        BasicGraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableBasicGraph<Integer> expectedClosure =\n        BasicGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-08-18 01:20:24","endLine":190,"groupId":"4159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"transitiveClosure_directedCycleGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/33/c530d95aee7286479c6b20dfeb619a4c6dba0e.src","preCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableGraph<Integer> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableGraph<Integer> expectedClosure = GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"ceee77fafdc9bdc5e2e6df85e231879c4ab6d755","commitMessage":"@@@Rename \"Graph\" to \"BasicGraph\". Flip the inheritance hierarchy. Now.  BasicGraph<N> extends ValueGraph<N.  Presence>.\n\nNote that in a followup CL.  \"ValueGraph\" will be renamed \"Graph\".  and this will make more sense :)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130529648\n","date":"2016-08-18 01:20:24","modifiedFileCount":"28","status":"M","submitter":"jasexton"},{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2016-09-01 12:04:06","commitOrder":3,"curCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableGraph<Integer> directedGraph =\n        GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableGraph<Integer> expectedClosure =\n        GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-09-01 22:30:43","endLine":134,"groupId":"10581","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"transitiveClosure_directedPathGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/ebce61f575d7158dba0c00c44978949473092f.src","preCode":"  public void transitiveClosure_directedPathGraph() {\n    MutableBasicGraph<Integer> directedGraph =\n        BasicGraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n\n    MutableBasicGraph<Integer> expectedClosure =\n        BasicGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2016-09-01 12:04:06","commitOrder":3,"curCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableGraph<Integer> directedGraph =\n        GraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableGraph<Integer> expectedClosure =\n        GraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","date":"2016-09-01 22:30:43","endLine":189,"groupId":"10581","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"transitiveClosure_directedCycleGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/ebce61f575d7158dba0c00c44978949473092f.src","preCode":"  public void transitiveClosure_directedCycleGraph() {\n    MutableBasicGraph<Integer> directedGraph =\n        BasicGraphBuilder.directed().allowsSelfLoops(false).build();\n    directedGraph.putEdge(N1, N2);\n    directedGraph.putEdge(N2, N3);\n    directedGraph.putEdge(N3, N4);\n    directedGraph.putEdge(N4, N1);\n\n    MutableBasicGraph<Integer> expectedClosure =\n        BasicGraphBuilder.directed().allowsSelfLoops(true).build();\n    expectedClosure.putEdge(N1, N1);\n    expectedClosure.putEdge(N1, N2);\n    expectedClosure.putEdge(N1, N3);\n    expectedClosure.putEdge(N1, N4);\n    expectedClosure.putEdge(N2, N1);\n    expectedClosure.putEdge(N2, N2);\n    expectedClosure.putEdge(N2, N3);\n    expectedClosure.putEdge(N2, N4);\n    expectedClosure.putEdge(N3, N1);\n    expectedClosure.putEdge(N3, N2);\n    expectedClosure.putEdge(N3, N3);\n    expectedClosure.putEdge(N3, N4);\n    expectedClosure.putEdge(N4, N1);\n    expectedClosure.putEdge(N4, N2);\n    expectedClosure.putEdge(N4, N3);\n    expectedClosure.putEdge(N4, N4);\n\n    checkTransitiveClosure(directedGraph, expectedClosure);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/GraphsTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00","commitMessage":"@@@Changes to common.graph. Sorry for the churn.  but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:\n\n-Revert the interface names back. \"BasicGraph\" is now \"Graph\" (BasicGraph was probably a a poor choice).  and \"Graph\" is now \"ValueGraph\". The \"node only\" Graph interface is at the top of the interface hierarchy.  and ValueGraph extends it.\n-To facilitate the above.  the various graph interfaces do *not* specify equality.  and the default implementations use reference (identity) equality.\n-Add static methods Graphs.equivalent(...) for users that want value-based equality.\n-Rename Endpoints to EndpointPair. Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered().\n\nMinor changes:\n\n-Undid the small refactor from [] since the original structure makes it easier for the Immutable classes to have the right hierarchy (i.e. ImmutableValueGraph extends ImmutableGraph.  ImmutableNetwork.asGraph() is an ImmutableGraph).\n-Added an \"isEquivalentTo\" method to NetworkSubject (formerly GraphSubject) in labs. Eventually we should get around to having a single truth import for both Graphs and Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131906631\n","date":"2016-09-01 22:30:43","modifiedFileCount":"34","status":"M","submitter":"jasexton"}]
