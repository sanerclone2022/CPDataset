[{"authorTime":"2016-06-22 01:34:24","codes":[{"authorDate":"2016-06-22 01:34:24","commitOrder":1,"curCode":"  public void nodeOrder_natural() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","date":"2016-06-22 01:56:34","endLine":83,"groupId":"7562","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nodeOrder_natural","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/11/97f38759e931060e60b23e41bbf922563d61c0.src","preCode":"  public void nodeOrder_natural() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2016-06-22 01:34:24","commitOrder":1,"curCode":"  public void nodeOrder_sorted() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","date":"2016-06-22 01:56:34","endLine":97,"groupId":"7562","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/11/97f38759e931060e60b23e41bbf922563d61c0.src","preCode":"  public void nodeOrder_sorted() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"25468d9a32c4723dd0d13087c0611960c6028dc5","commitMessage":"@@@Rename orderNodes() to nodeOrder() and orderEdges() to edgeOrder().\n\nNote that I feel this is actually *more* in the spirit of the guidelines we established.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125467297\n","date":"2016-06-22 01:56:34","modifiedFileCount":"4","status":"B","submitter":"jasexton"},{"authorTime":"2016-06-25 22:16:11","codes":[{"authorDate":"2016-06-25 22:16:11","commitOrder":2,"curCode":"  public void nodeOrder_natural() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","date":"2016-06-28 00:04:12","endLine":86,"groupId":"7562","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nodeOrder_natural","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b3/f75704f3774994abcb7d26c7954f109b648429.src","preCode":"  public void nodeOrder_natural() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2016-06-25 22:16:11","commitOrder":2,"curCode":"  public void nodeOrder_sorted() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","date":"2016-06-28 00:04:12","endLine":100,"groupId":"7562","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/b3/f75704f3774994abcb7d26c7954f109b648429.src","preCode":"  public void nodeOrder_sorted() throws Exception {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"a54c34542dc5c3c2bfa4d9f10a8bc9c565d3835b","commitMessage":"@@@Fix broken generic types in ElementOrder. Added two tests.  neither of which compile with the existing code!\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125863282\n","date":"2016-06-28 00:04:12","modifiedFileCount":"2","status":"M","submitter":"jasexton"},{"authorTime":"2016-08-18 00:46:23","codes":[{"authorDate":"2016-08-18 00:46:23","commitOrder":3,"curCode":"  public void nodeOrder_natural() {\n    MutableBasicGraph<Integer> graph = BasicGraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","date":"2016-08-18 01:20:24","endLine":84,"groupId":"7562","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"nodeOrder_natural","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5f/34b3ca7f81f6889c63d7979075a79e6e3b4824.src","preCode":"  public void nodeOrder_natural() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2016-08-18 00:46:23","commitOrder":3,"curCode":"  public void nodeOrder_sorted() {\n    MutableBasicGraph<Integer> graph = BasicGraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","date":"2016-08-18 01:20:24","endLine":98,"groupId":"7562","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5f/34b3ca7f81f6889c63d7979075a79e6e3b4824.src","preCode":"  public void nodeOrder_sorted() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"ceee77fafdc9bdc5e2e6df85e231879c4ab6d755","commitMessage":"@@@Rename \"Graph\" to \"BasicGraph\". Flip the inheritance hierarchy. Now.  BasicGraph<N> extends ValueGraph<N.  Presence>.\n\nNote that in a followup CL.  \"ValueGraph\" will be renamed \"Graph\".  and this will make more sense :)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130529648\n","date":"2016-08-18 01:20:24","modifiedFileCount":"28","status":"M","submitter":"jasexton"},{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2016-09-01 12:04:06","commitOrder":4,"curCode":"  public void nodeOrder_natural() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","date":"2016-09-01 22:30:43","endLine":84,"groupId":"10983","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"nodeOrder_natural","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a8/7f61bda1f82502ccf5e2abc01baf6d18b5d01c.src","preCode":"  public void nodeOrder_natural() {\n    MutableBasicGraph<Integer> graph = BasicGraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.<Integer>natural())\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(ElementOrder.sorted(Ordering.<Integer>natural()));\n    assertThat(graph.nodes()).containsExactly(1, 3, 4).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2016-09-01 12:04:06","commitOrder":4,"curCode":"  public void nodeOrder_sorted() {\n    MutableGraph<Integer> graph = GraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","date":"2016-09-01 22:30:43","endLine":98,"groupId":"10983","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeOrder_sorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a8/7f61bda1f82502ccf5e2abc01baf6d18b5d01c.src","preCode":"  public void nodeOrder_sorted() {\n    MutableBasicGraph<Integer> graph = BasicGraphBuilder\n        .directed()\n        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse()))\n        .build();\n\n    addNodes(graph);\n\n    assertThat(graph.nodeOrder()).isEqualTo(\n        ElementOrder.sorted(Ordering.<Integer>natural().reverse()));\n    assertThat(graph.nodes()).containsExactly(4, 3, 1).inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ElementOrderTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00","commitMessage":"@@@Changes to common.graph. Sorry for the churn.  but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:\n\n-Revert the interface names back. \"BasicGraph\" is now \"Graph\" (BasicGraph was probably a a poor choice).  and \"Graph\" is now \"ValueGraph\". The \"node only\" Graph interface is at the top of the interface hierarchy.  and ValueGraph extends it.\n-To facilitate the above.  the various graph interfaces do *not* specify equality.  and the default implementations use reference (identity) equality.\n-Add static methods Graphs.equivalent(...) for users that want value-based equality.\n-Rename Endpoints to EndpointPair. Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered().\n\nMinor changes:\n\n-Undid the small refactor from [] since the original structure makes it easier for the Immutable classes to have the right hierarchy (i.e. ImmutableValueGraph extends ImmutableGraph.  ImmutableNetwork.asGraph() is an ImmutableGraph).\n-Added an \"isEquivalentTo\" method to NetworkSubject (formerly GraphSubject) in labs. Eventually we should get around to having a single truth import for both Graphs and Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131906631\n","date":"2016-09-01 22:30:43","modifiedFileCount":"34","status":"M","submitter":"jasexton"}]
