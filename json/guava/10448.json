[{"authorTime":"2020-03-10 18:45:11","codes":[{"authorDate":"2020-03-10 18:45:11","commitOrder":1,"curCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","date":"2020-03-11 01:54:18","endLine":359,"groupId":"2668","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addEdge_nodesNotInGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/3b/0e09edf4cd705f3cd9f404651c4f37cbf41d4b.src","preCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractStandardUndirectedNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"B"},{"authorDate":"2020-03-10 18:45:11","commitOrder":1,"curCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","date":"2020-03-11 01:54:18","endLine":374,"groupId":"2668","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addEdge_nodesNotInGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/7a/8dbeed4c6a69b30d220d6900144e19d2a5ba08.src","preCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractStandardUndirectedNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"B"}],"commitId":"8565a9522f004aafe84826a8769a8b87519c58e7","commitMessage":"@@@Simplify the AbstractNetworkTest tree (undirected branch): Delete StandardSimpleUndirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nNote: This is a pure refactor: No tests were added or removed.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300055427\n","date":"2020-03-11 01:54:18","modifiedFileCount":"4","status":"B","submitter":"jnyman"},{"authorTime":"2020-04-08 17:29:37","codes":[{"authorDate":"2020-04-08 17:29:37","commitOrder":2,"curCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3);\n    assertThat(network.edges()).containsExactly(E15, E41, E23);\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","date":"2020-04-10 01:01:22","endLine":497,"groupId":"10448","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"addEdge_nodesNotInGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/5c/da1c1bb7678dc62a55baf0dea70d688fd33d89.src","preCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractStandardUndirectedNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"M"},{"authorDate":"2020-04-08 17:29:37","commitOrder":2,"curCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3);\n    assertThat(network.edges()).containsExactly(E15, E41, E23);\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","date":"2020-04-10 01:01:22","endLine":512,"groupId":"10448","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"addEdge_nodesNotInGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/79/39ad8358b6efb6b620d0547fd97d3960f66fdf.src","preCode":"  public void addEdge_nodesNotInGraph() {\n    assume().that(graphIsMutable()).isTrue();\n\n    networkAsMutableNetwork.addNode(N1);\n    assertTrue(networkAsMutableNetwork.addEdge(N1, N5, E15));\n    assertTrue(networkAsMutableNetwork.addEdge(N4, N1, E41));\n    assertTrue(networkAsMutableNetwork.addEdge(N2, N3, E23));\n    assertThat(network.nodes()).containsExactly(N1, N5, N4, N2, N3).inOrder();\n    assertThat(network.edges()).containsExactly(E15, E41, E23).inOrder();\n    assertThat(network.edgesConnecting(N1, N5)).containsExactly(E15);\n    assertThat(network.edgesConnecting(N4, N1)).containsExactly(E41);\n    assertThat(network.edgesConnecting(N2, N3)).containsExactly(E23);\n    assertThat(network.edgesConnecting(N3, N2)).containsExactly(E23);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractStandardUndirectedNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"M"}],"commitId":"7015107b778be608a16193946e2371a604c36f9a","commitMessage":"@@@Merge StandardUndirectedMultiNetworkTest into StandardMutableUndirectedNetworkTest\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305437272\n","date":"2020-04-10 01:01:22","modifiedFileCount":"4","status":"M","submitter":"jnyman"}]
