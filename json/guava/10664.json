[{"authorTime":"2016-09-02 07:09:42","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":5,"curCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","date":"2017-04-21 10:27:51","endLine":601,"groupId":"9013","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeNode_existingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/8c/531705e52a88a99d3c3f344394c1005d10f9b2.src","preCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":593,"status":"B"},{"authorDate":"2016-09-02 07:09:42","commitOrder":5,"curCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","date":"2016-09-02 21:39:56","endLine":590,"groupId":"9013","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeNode_existingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/73/25b87dbd440b4fb9173fe8efabc5db4be47b56.src","preCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"NB"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"M","submitter":"zhenghua"},{"authorTime":"2020-02-26 00:51:07","codes":[{"authorDate":"2020-02-26 00:51:07","commitOrder":6,"curCode":"  public void removeNode_existingNode() {\n    assume().that(graphIsMutable()).isTrue();\n\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(networkAsMutableNetwork.removeNode(N1));\n    assertFalse(networkAsMutableNetwork.removeNode(N1));\n    assertThat(networkAsMutableNetwork.nodes()).containsExactly(N2, N4);\n    assertThat(networkAsMutableNetwork.edges()).doesNotContain(E12);\n    assertThat(networkAsMutableNetwork.edges()).doesNotContain(E41);\n  }\n","date":"2020-02-26 04:31:28","endLine":635,"groupId":"10664","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeNode_existingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/de/a14873f1f4a48841fe9e8c10d34aa6f9854663.src","preCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":625,"status":"M"},{"authorDate":"2020-02-26 00:51:07","commitOrder":6,"curCode":"  public void removeNode_existingNode() {\n    assume().that(graphIsMutable()).isTrue();\n\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(networkAsMutableNetwork.removeNode(N1));\n    assertFalse(networkAsMutableNetwork.removeNode(N1));\n    assertThat(networkAsMutableNetwork.nodes()).containsExactly(N2, N4);\n    assertThat(networkAsMutableNetwork.edges()).doesNotContain(E12);\n    assertThat(networkAsMutableNetwork.edges()).doesNotContain(E41);\n  }\n","date":"2020-02-26 04:31:28","endLine":642,"groupId":"10664","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeNode_existingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/25/aea3cc5967cf403c666e4efd76429c61bac83b.src","preCode":"  public void removeNode_existingNode() {\n    addEdge(N1, N2, E12);\n    addEdge(N4, N1, E41);\n    assertTrue(network.removeNode(N1));\n    assertFalse(network.removeNode(N1));\n    assertThat(network.nodes()).containsExactly(N2, N4);\n    assertThat(network.edges()).doesNotContain(E12);\n    assertThat(network.edges()).doesNotContain(E41);\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractNetworkTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":632,"status":"M"}],"commitId":"9d60a8f5941265876f21a0ed7b37b8b224461a82","commitMessage":"@@@Refactor AbstractNetworkTest in the same way as AbstractGraphTest was refactored earlier: Allow the graph under test to be immutable.\n\nNote: This is a pure refactor.  no coverage is changing.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297126494\n","date":"2020-02-26 04:31:28","modifiedFileCount":"18","status":"M","submitter":"jnyman"}]
