[{"authorTime":"2015-06-19 01:33:38","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":3,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2017-04-21 10:27:51","endLine":108,"groupId":"8448","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/8b/003f8201b73d60da4dfabe3d82b78ca5090dcf.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2015-06-19 01:33:38","commitOrder":3,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2015-06-23 00:47:44","endLine":109,"groupId":"8448","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ab/305564cfb0e223d672075da9d49a3dfc50429a.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"M","submitter":"zhenghua"},{"authorTime":"2017-07-26 22:37:38","codes":[{"authorDate":"2017-07-26 22:37:38","commitOrder":4,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2017-07-26 22:45:36","endLine":108,"groupId":"8448","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ef/aec35a8f3241fb2b6116f3f68bc8af22bc766b.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2017-07-26 22:37:38","commitOrder":4,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2017-07-26 22:45:36","endLine":108,"groupId":"8448","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ef/aec35a8f3241fb2b6116f3f68bc8af22bc766b.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<Integer, Integer>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"934e3840945d3b866f80c28135a0369cb32d7163","commitMessage":"@@@Use diamond operator.\n\nFixes #2875\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163205176\n","date":"2017-07-26 22:45:36","modifiedFileCount":"175","status":"M","submitter":"cpovirk"},{"authorTime":"2017-08-12 00:24:55","codes":[{"authorDate":"2017-08-12 00:24:55","commitOrder":5,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \").append((int) sb.charAt(j)); \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2017-08-12 00:34:33","endLine":108,"groupId":"101122","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/61/dc727165841924f4bd4997c86e8b6ce29ce069.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"android/guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2017-08-12 00:24:55","commitOrder":5,"curCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \").append((int) sb.charAt(j)); \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","date":"2017-08-12 00:34:33","endLine":108,"groupId":"101122","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEncodedLength_validStrings2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/61/dc727165841924f4bd4997c86e8b6ce29ce069.src","preCode":"  public void testEncodedLength_validStrings2() {\n    HashMap<Integer, Integer> utf8Lengths = new HashMap<>();\n    utf8Lengths.put(0x00, 1);\n    utf8Lengths.put(0x7f, 1);\n    utf8Lengths.put(0x80, 2);\n    utf8Lengths.put(0x7ff, 2);\n    utf8Lengths.put(0x800, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);\n    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);\n    utf8Lengths.put(MAX_CODE_POINT, 4);\n\n    Integer[] codePoints = utf8Lengths.keySet().toArray(new Integer[]{});\n    StringBuilder sb = new StringBuilder();\n    Random rnd = new Random();\n    for (int trial = 0; trial < 100; trial++) {\n      sb.setLength(0);\n      int utf8Length = 0;\n      for (int i = 0; i < 6; i++) {\n        Integer randomCodePoint = codePoints[rnd.nextInt(codePoints.length)];\n        sb.appendCodePoint(randomCodePoint);\n        utf8Length += utf8Lengths.get(randomCodePoint);\n        if (utf8Length != Utf8.encodedLength(sb)) {\n          StringBuilder repro = new StringBuilder();\n          for (int j = 0; j < sb.length(); j++) {\n            repro.append(\" \" + (int) sb.charAt(j));  \r\n          }\n          assertEquals(repro.toString(), utf8Length, Utf8.encodedLength(sb));\n        }\n      }\n    }\n  }\n","realPath":"guava-tests/test/com/google/common/base/Utf8Test.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"7e4b3875c63758b1a91bb3a82d7240f414e8ae49","commitMessage":"@@@Polishing\n\nFixes #2903\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164986539\n","date":"2017-08-12 00:34:33","modifiedFileCount":"46","status":"M","submitter":"Jonathan Bluett-Duncan"}]
