[{"authorTime":"2020-01-08 00:53:40","codes":[{"authorDate":"2020-01-08 00:53:40","commitOrder":1,"curCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","date":"2020-01-09 23:25:26","endLine":322,"groupId":"3605","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/3c/1381c9ae6d0d8280c2e1ce864946774960a4b5.src","preCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractStandardUndirectedGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"B"},{"authorDate":"2020-01-08 00:53:40","commitOrder":1,"curCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","date":"2020-01-09 23:25:26","endLine":322,"groupId":"3605","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/3c/1381c9ae6d0d8280c2e1ce864946774960a4b5.src","preCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractStandardUndirectedGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"B"}],"commitId":"9d669517970a872b56a9311b4ea3d706cd67fa98","commitMessage":"@@@Add test case stable incidentEdgeOrder with a self loop to AbstractStandard[Un]directedGraphTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288506050\n","date":"2020-01-09 23:25:26","modifiedFileCount":"4","status":"B","submitter":"jnyman"},{"authorTime":"2020-03-10 18:40:08","codes":[{"authorDate":"2020-03-10 18:40:08","commitOrder":2,"curCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(graph.incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(graph.allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","date":"2020-03-11 01:54:18","endLine":318,"groupId":"10718","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a4/83f42d1720bb3f912ee1c255cbf04efafec474.src","preCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/AbstractStandardUndirectedGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"},{"authorDate":"2020-03-10 18:40:08","commitOrder":2,"curCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(graph.incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(graph.allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","date":"2020-03-11 01:54:18","endLine":318,"groupId":"10718","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/a4/83f42d1720bb3f912ee1c255cbf04efafec474.src","preCode":"  public void stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder() {\n    assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);\n    assume().that(allowsSelfLoops()).isTrue();\n\n    putEdge(2, 1);\n    putEdge(1, 1);\n    putEdge(1, 3);\n\n    assertThat(graph.incidentEdges(1))\n        .containsExactly(\n            EndpointPair.unordered(2, 1),\n            EndpointPair.unordered(1, 1),\n            EndpointPair.unordered(1, 3))\n        .inOrder();\n  }\n","realPath":"guava-tests/test/com/google/common/graph/AbstractStandardUndirectedGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"}],"commitId":"824322afb283e0e2a42ea37acb5e493393684da3","commitMessage":"@@@Simplify AbstractGraphTest by replacing allowsSelfLoops() and incidentEdgeOrder() by graph accessors.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300054861\n","date":"2020-03-11 01:54:18","modifiedFileCount":"14","status":"M","submitter":"jnyman"}]
