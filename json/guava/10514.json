[{"authorTime":"2016-09-01 12:04:06","codes":[{"authorDate":"2017-04-21 05:33:38","commitOrder":2,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-04-21 10:27:51","endLine":101,"groupId":"9239","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ba/61792cdcaf021a72d8336fc1ab0ad347ea0a42.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2016-09-01 12:04:06","commitOrder":2,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2016-09-01 22:30:43","endLine":91,"groupId":"9239","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/05/45537fbe31b980d84128d605934896ce2cf747.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"NB"}],"commitId":"9b94fb3965c6869b0ac47420958a4bbae0b2d54c","commitMessage":"@@@Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n","date":"2017-04-21 10:27:51","modifiedFileCount":"0","status":"M","submitter":"zhenghua"},{"authorTime":"2017-07-08 04:05:13","codes":[{"authorDate":"2017-07-08 04:05:13","commitOrder":3,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-10 22:17:22","endLine":100,"groupId":"2344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/fb/835394e11f6fd8eb8c2ec62b7f62cc99621b42.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2017-07-08 04:05:13","commitOrder":3,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-10 22:17:22","endLine":102,"groupId":"2344","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/32/59c37c50e9b4b4b53342995fcb16f2283132be.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"0f6096df9105ecbbb2d32017eae8fd63562ab298","commitMessage":"@@@ValueGraph.edgeValue*: change from\n* V edgeValue().  V edgeValueOrDefault()\nto\n* Optional<V> edgeValue().  V edgeValueOrNull()\n\nFixed Graphs.inducedSubgraph() implementations so that it appropriately specifies the # of nodes in the induced subgraph as being the size of the supplied node Iterable.\n\nFixed MoreGraphs.inducedSubgraph() implementations so that the filtered nodes are being returned as Lists rather than Iterators.  so that calculating their size doesn't exhaust the Iterator.\n\nFixed the graph *Builder from() methods so that they are all uniformly enforcing types (this was causing MOE problems in conjunction with the expectedNodes() call.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161235517\n","date":"2017-07-10 22:17:22","modifiedFileCount":"21","status":"M","submitter":"jrtom"},{"authorTime":"2017-07-13 07:46:12","codes":[{"authorDate":"2017-07-13 07:46:12","commitOrder":4,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-14 03:02:58","endLine":100,"groupId":"133","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/ee/d8c492993c6dfcf6fd700cae70abdd0c9bffa3.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2017-07-13 07:46:12","commitOrder":4,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-07-14 03:02:58","endLine":102,"groupId":"133","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/4c/1fdef91377d57f1b4df410333813408d14d668.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"66b3e26aadf5ec82808a0965b2a894addb0970e9","commitMessage":"@@@ValueGraph.java: restore edgeValueOrNull() to edgeValueOrDefault().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161738013\n","date":"2017-07-14 03:02:58","modifiedFileCount":"14","status":"M","submitter":"jrtom"},{"authorTime":"2017-10-11 22:17:00","codes":[{"authorDate":"2017-10-11 22:17:00","commitOrder":5,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n    assertThat(graph.edgeValueOrDefault(1, 2, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, DEFAULT)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, DEFAULT)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-10-11 22:50:41","endLine":112,"groupId":"10514","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/91/c5d2a5b92fe5307ef2a02e25085a0e0af96a5c.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"android/guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2017-10-11 22:17:00","commitOrder":5,"curCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n    assertThat(graph.edgeValueOrDefault(1, 2, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, DEFAULT)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, DEFAULT)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, DEFAULT)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","date":"2017-10-11 22:50:41","endLine":112,"groupId":"10514","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"undirectedGraph","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-guava-10-0.7/blobInfo/CC_OUT/blobs/fa/b769e2221947ea8c4f6de4df4382b71c6fea67.src","preCode":"  public void undirectedGraph() {\n    graph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build();\n    graph.putEdgeValue(1, 2, \"valueA\");\n    graph.putEdgeValue(2, 1, \"valueB\"); \r\n    graph.putEdgeValue(2, 3, \"valueC\");\n    graph.putEdgeValue(4, 4, \"valueD\");\n\n    assertThat(graph.edgeValueOrDefault(1, 2, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 1, null)).isEqualTo(\"valueB\");\n    assertThat(graph.edgeValueOrDefault(2, 3, null)).isEqualTo(\"valueC\");\n    assertThat(graph.edgeValueOrDefault(4, 4, null)).isEqualTo(\"valueD\");\n\n    String toString = graph.toString();\n    assertThat(toString).doesNotContain(\"valueA\");\n    assertThat(toString).contains(\"valueB\");\n    assertThat(toString).contains(\"valueC\");\n    assertThat(toString).contains(\"valueD\");\n  }\n","realPath":"guava-tests/test/com/google/common/graph/ValueGraphTest.java","repoName":"guava","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"361eba8e4078a4c80f9be0c9194a7e3c0473aa6d","commitMessage":"@@@ValueGraphTest.java: add a few checks to make sure that we're properly exercising both null and non-null default values.\n\nThis addresses the most recent suggestion in GitHub issue #2924.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171818169\n","date":"2017-10-11 22:50:41","modifiedFileCount":"2","status":"M","submitter":"jrtom"}]
