[{"authorTime":"2017-01-10 21:05:07","codes":[{"authorDate":"2017-01-10 21:05:07","commitOrder":1,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2017-01-10 21:05:07","endLine":289,"groupId":"9944","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/b57f4eb3f57f7574ffe31d1e548303fc37374c.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"B"},{"authorDate":"2017-01-10 21:05:07","commitOrder":1,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2017-01-10 21:05:07","endLine":308,"groupId":"4197","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/b57f4eb3f57f7574ffe31d1e548303fc37374c.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"}],"commitId":"275c5e1df237808fe72b8d9933f826949d4b5781","commitMessage":"@@@KAFKA-3751; SASL/SCRAM implementation\n\nImplementation of KIP-84: https://cwiki.apache.org/confluence/display/KAFKA/KIP-84%3A+Support+SASL+SCRAM+mechanisms\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #2086 from rajinisivaram/KAFKA-3751\n","date":"2017-01-10 21:05:07","modifiedFileCount":"10","status":"B","submitter":"Rajini Sivaram"},{"authorTime":"2017-01-27 09:24:39","codes":[{"authorDate":"2017-01-27 09:24:39","commitOrder":2,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2017-01-27 09:24:56","endLine":288,"groupId":"9944","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/967af100c4afc824f8fbdbbc5ae03c98602205.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"},{"authorDate":"2017-01-27 09:24:39","commitOrder":2,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2017-01-27 09:24:56","endLine":307,"groupId":"16491","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/967af100c4afc824f8fbdbbc5ae03c98602205.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(JaasUtils.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"ca0c071c108c9fd31a759e1cd1c4f89bdc5ac47e","commitMessage":"@@@KAFKA-4636; Per listener security settings overrides (KIP-103)\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n\nCloses #2406 from ijuma/kafka-4636-per-listener-security-settings\n","date":"2017-01-27 09:24:56","modifiedFileCount":"30","status":"M","submitter":"Ismael Juma"},{"authorTime":"2017-05-16 06:13:20","codes":[{"authorDate":"2017-05-16 06:13:20","commitOrder":3,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n    }\n","date":"2017-05-16 06:13:20","endLine":289,"groupId":"9944","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/402f0ca15347e8f630f18e3ecd152f23dbaafd.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"},{"authorDate":"2017-05-16 06:13:20","commitOrder":3,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n    }\n","date":"2017-05-16 06:13:20","endLine":307,"groupId":"16491","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/402f0ca15347e8f630f18e3ecd152f23dbaafd.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createClientConnection(securityProtocol, node);\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"4c75f31a5f80e6a717d040b0534c79f5ed8d9346","commitMessage":"@@@KAFKA-5179; Log connection termination during authentication\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma.  Jun Rao\n\nCloses #2980 from rajinisivaram/KAFKA-5179\n","date":"2017-05-16 06:13:20","modifiedFileCount":"11","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-09-29 04:58:47","codes":[{"authorDate":"2017-09-29 04:58:47","commitOrder":4,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-09-29 04:58:59","endLine":312,"groupId":"9944","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c2/c8d81dcefdd53ca4e9e3d5ecaa7f53ff3ffabf.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"},{"authorDate":"2017-09-29 04:58:47","commitOrder":4,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-09-29 04:58:59","endLine":331,"groupId":"16491","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c2/c8d81dcefdd53ca4e9e3d5ecaa7f53ff3ffabf.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"}],"commitId":"021d8a8e9698dce454e0e801092460b98f0a8a4d","commitMessage":"@@@KAFKA-5746; Add new metrics to support health checks (KIP-188)\n\nAdds new metrics to support health checks:\n1. Error rates for each request type.  per-error code\n2. Request size and temporary memory size\n3. Message conversion rate and time\n4. Successful and failed authentication rates\n5. ZooKeeper latency and status\n6. Client version\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #3705 from rajinisivaram/KAFKA-5746-new-metrics\n","date":"2017-09-29 04:58:59","modifiedFileCount":"74","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-10-05 01:44:46","codes":[{"authorDate":"2017-10-05 01:44:46","commitOrder":5,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-10-05 01:44:46","endLine":315,"groupId":"9944","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c4/426727ba6283465f8544a918e748504c20985a.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"},{"authorDate":"2017-10-05 01:44:46","commitOrder":5,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-10-05 01:44:46","endLine":334,"groupId":"16491","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c4/426727ba6283465f8544a918e748504c20985a.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientConnectionFailure(securityProtocol, node);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"9949e1ed1be8293ba60dcab10345fbcce8d61e36","commitMessage":"@@@KAFKA-6004; Allow authentication providers to override error message\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #4015 from rajinisivaram/KAFKA-6004-auth-exception\n","date":"2017-10-05 01:44:46","modifiedFileCount":"8","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2018-10-27 06:18:15","codes":[{"authorDate":"2018-10-27 06:18:15","commitOrder":6,"curCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n        server.verifyReauthenticationMetrics(0, 0);\n    }\n","date":"2018-10-27 06:18:15","endLine":386,"groupId":"103280","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidPasswordSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/ff32702cbe44a18dbafe5c4b6e982366acf97b.src","preCode":"    public void testInvalidPasswordSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", TestJaasConfig.USERNAME);\n        options.put(\"password\", \"invalidpassword\");\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"},{"authorDate":"2018-10-27 06:18:15","commitOrder":6,"curCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n        server.verifyReauthenticationMetrics(0, 0);\n    }\n","date":"2018-10-27 06:18:15","endLine":406,"groupId":"103280","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownUserSaslScram","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/ff32702cbe44a18dbafe5c4b6e982366acf97b.src","preCode":"    public void testUnknownUserSaslScram() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_SSL;\n        TestJaasConfig jaasConfig = configureMechanisms(\"SCRAM-SHA-256\", Arrays.asList(\"SCRAM-SHA-256\"));\n        Map<String, Object> options = new HashMap<>();\n        options.put(\"username\", \"unknownUser\");\n        options.put(\"password\", TestJaasConfig.PASSWORD);\n        jaasConfig.createOrUpdateEntry(TestJaasConfig.LOGIN_CONTEXT_CLIENT, ScramLoginModule.class.getName(), options);\n\n        String node = \"0\";\n        server = createEchoServer(securityProtocol);\n        updateScramCredentialCache(TestJaasConfig.USERNAME, TestJaasConfig.PASSWORD);\n        createAndCheckClientAuthenticationFailure(securityProtocol, node, \"SCRAM-SHA-256\", null);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"e8a3bc74254a8e4e4aaca41395177fa4a98b480c","commitMessage":"@@@KAFKA-7352; Allow SASL Connections to Periodically Re-Authenticate (KIP-368) (#5582)\n\nKIP-368 implementation to enable periodic re-authentication of SASL clients. Also adds a broker configuration option to terminate client connections that do not re-authenticate within the configured interval.","date":"2018-10-27 06:18:15","modifiedFileCount":"35","status":"M","submitter":"Ron Dagostino"}]
