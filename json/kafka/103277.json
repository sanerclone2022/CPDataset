[{"authorTime":"2018-08-31 19:04:33","codes":[{"authorDate":"2018-08-31 19:04:33","commitOrder":2,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2018-08-31 19:04:33","endLine":189,"groupId":"8767","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b0/dfc7a123b18ce01c581f87eb2436256a943c0d.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2018-08-31 19:04:33","commitOrder":2,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2018-08-31 19:04:33","endLine":1458,"groupId":"8767","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/74/058eb1cd578484f283cd7cb0c7adb941b5be90.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1448,"status":"MB"}],"commitId":"5d1bfa0665ce0850ee76cee152e397c23ac329a7","commitMessage":"@@@KAFKA-6950: Delay response to failed client authentication to prevent potential DoS issues (KIP-306) (#5082)\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n","date":"2018-08-31 19:04:33","modifiedFileCount":"10","status":"M","submitter":"Dhruvil Shah"},{"authorTime":"2018-10-27 06:18:15","codes":[{"authorDate":"2018-10-27 06:18:15","commitOrder":3,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2018-10-27 06:18:15","endLine":189,"groupId":"8767","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/77/3fffbb287f5a19f5398a854b49751e511e8be4.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2018-10-27 06:18:15","commitOrder":3,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2018-10-27 06:18:15","endLine":1766,"groupId":"8767","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/ff32702cbe44a18dbafe5c4b6e982366acf97b.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1756,"status":"M"}],"commitId":"e8a3bc74254a8e4e4aaca41395177fa4a98b480c","commitMessage":"@@@KAFKA-7352; Allow SASL Connections to Periodically Re-Authenticate (KIP-368) (#5582)\n\nKIP-368 implementation to enable periodic re-authentication of SASL clients. Also adds a broker configuration option to terminate client connections that do not re-authenticate within the configured interval.","date":"2018-10-27 06:18:15","modifiedFileCount":"35","status":"M","submitter":"Ron Dagostino"},{"authorTime":"2020-01-07 06:27:30","codes":[{"authorDate":"2020-01-07 06:27:30","commitOrder":4,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time, true,\n                new LogContext());\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2020-01-07 06:27:30","endLine":191,"groupId":"103277","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/59/9345a110ac375cb87d688e9068cf1f61cdf40a.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2020-01-07 06:27:30","commitOrder":4,"curCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time,\n                true, new LogContext());\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","date":"2020-01-07 06:27:30","endLine":1940,"groupId":"103277","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSelector","params":"(SecurityProtocolsecurityProtocol@Map<String@Object>clientConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/76/894a9991c9cfe73f7c866cb14ae055d4f39962.src","preCode":"    private void createSelector(SecurityProtocol securityProtocol, Map<String, Object> clientConfigs) {\n        if (selector != null) {\n            selector.close();\n            selector = null;\n        }\n\n        String saslMechanism = (String) saslClientConfigs.get(SaslConfigs.SASL_MECHANISM);\n        this.channelBuilder = ChannelBuilders.clientChannelBuilder(securityProtocol, JaasContext.Type.CLIENT,\n                new TestSecurityConfig(clientConfigs), null, saslMechanism, time, true);\n        this.selector = NetworkTestUtils.createSelector(channelBuilder, time);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1929,"status":"M"}],"commitId":"2ac78ff621b1755b84daa8196197b774865357e7","commitMessage":"@@@MINOR: Propagate LogContext to channel builders and SASL authenticator (#7867)\n\nThe log context is useful when debugging applications which have multiple clients. This patch propagates the context to the channel builders and the SASL authenticator.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>.  Manikumar Reddy <manikumar.reddy@gmail.com>","date":"2020-01-07 06:27:30","modifiedFileCount":"16","status":"M","submitter":"Jason Gustafson"}]
