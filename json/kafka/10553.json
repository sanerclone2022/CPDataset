[{"authorTime":"2018-06-07 06:16:21","codes":[{"authorDate":"2018-06-07 06:16:21","commitOrder":2,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", () -> null);\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2018-06-07 06:16:21","endLine":718,"groupId":"283","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/75/52637dc26f839ca2054a86c42168cc5be1de1e.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", () -> null);\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":685,"status":"MB"},{"authorDate":"2018-06-07 06:16:21","commitOrder":2,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2018-06-07 06:16:21","endLine":748,"groupId":"3728","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/75/52637dc26f839ca2054a86c42168cc5be1de1e.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":721,"status":"B"}],"commitId":"0eddddb82be563bee9e4b65030e27efd5148ff4b","commitMessage":"@@@KAFKA-6967: TopologyTestDriver does not allow pre-populating state stores that have change logging (#5096)\n\nReviewers: Guozhang Wang <guozhang@confluent.io>.  James Cheng <jylcheng@yahoo.com>.  Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>","date":"2018-06-07 06:16:21","modifiedFileCount":"7","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2018-06-07 06:16:21","codes":[{"authorDate":"2018-06-15 11:26:01","commitOrder":3,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", () -> null, \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2018-06-15 11:26:01","endLine":741,"groupId":"283","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/d4ed149ffbd2430bfc1ab5de2433e4c626468d.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", () -> null);\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":708,"status":"M"},{"authorDate":"2018-06-07 06:16:21","commitOrder":3,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2018-06-07 06:16:21","endLine":748,"groupId":"3728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/75/52637dc26f839ca2054a86c42168cc5be1de1e.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":721,"status":"N"}],"commitId":"339fc2379dd0d01bc039518f70b017b7520dcc9f","commitMessage":"@@@KAFKA-7055: Update InternalTopologyBuilder to throw TopologyException if a processor or sink is added with no upstream node attached (#5215)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <guozhang@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2018-06-15 11:26:01","modifiedFileCount":"7","status":"M","submitter":"nixsticks"},{"authorTime":"2020-09-10 01:37:21","codes":[{"authorDate":"2020-09-10 01:37:21","commitOrder":4,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", (ProcessorSupplier<Object, Object, Object, Object>) () -> null, \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            (ProcessorSupplier<byte[], byte[], Void, Void>) () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2020-09-10 01:37:21","endLine":1037,"groupId":"19326","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7a/e43effd8364a94fbb04073791b67f140cb29d1.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", () -> null, \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1004,"status":"M"},{"authorDate":"2020-09-10 01:37:21","commitOrder":4,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            (ProcessorSupplier<byte[], byte[], Void, Void>) () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2020-09-10 01:37:21","endLine":1341,"groupId":"19328","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7a/e43effd8364a94fbb04073791b67f140cb29d1.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1314,"status":"M"}],"commitId":"09d1498e3065eccc26a2d396ea13e7c8b553b974","commitMessage":"@@@KAFKA-10436: Implement KIP-478 Topology changes (#9221)\n\nConvert Topology#addProcessor and #addGlobalStore\nAlso.  convert some of the internals in support of addProcessor\n\nReviewers: Bill Bejeck <bbejeck@apache.org>","date":"2020-09-10 01:37:21","modifiedFileCount":"45","status":"M","submitter":"John Roesler"},{"authorTime":"2020-11-04 09:30:15","codes":[{"authorDate":"2020-11-04 09:30:15","commitOrder":5,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2020-11-04 09:30:15","endLine":1070,"groupId":"2735","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7e/bf6f8d21960bb469ce9e754d89a468d2ec64e0.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", (ProcessorSupplier<Object, Object, Object, Object>) () -> null, \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            (ProcessorSupplier<byte[], byte[], Void, Void>) () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1037,"status":"M"},{"authorDate":"2020-11-04 09:30:15","commitOrder":5,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2020-11-04 09:30:15","endLine":1381,"groupId":"21842","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7e/bf6f8d21960bb469ce9e754d89a468d2ec64e0.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            (ProcessorSupplier<byte[], byte[], Void, Void>) () -> null);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1354,"status":"M"}],"commitId":"b3e77dfad93b9e4d2798ecf84e777c99905d380f","commitMessage":"@@@KAFKA-10036: Improve handling and documentation of Suppliers (#9000)\n\nReviewer: Matthias J. Sax <matthias@confluent.io>","date":"2020-11-04 09:30:15","modifiedFileCount":"25","status":"M","submitter":"Igor Soarez"},{"authorTime":"2020-12-05 02:51:12","codes":[{"authorDate":"2020-12-05 02:51:12","commitOrder":6,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2020-12-05 02:51:12","endLine":1065,"groupId":"5956","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/db65840462cc14ba727ac945b68fa01b38743c.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1032,"status":"M"},{"authorDate":"2020-12-05 02:51:12","commitOrder":6,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2020-12-05 02:51:12","endLine":1376,"groupId":"21842","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/db65840462cc14ba727ac945b68fa01b38743c.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1349,"status":"M"}],"commitId":"4e9c7fc8a5db6e59e43a67586867c3b1c9fbe567","commitMessage":"@@@KAFKA-10629: TopologyTestDriver should not require a Properties argument (#9660)\n\nImplements KIP-680.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  Matthias J. Sax <matthias@confluent.io>","date":"2020-12-05 02:51:12","modifiedFileCount":"8","status":"M","submitter":"Rohit Deshpande"},{"authorTime":"2021-07-03 02:02:20","codes":[{"authorDate":"2021-07-03 02:02:20","commitOrder":7,"curCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","date":"2021-07-03 02:02:20","endLine":898,"groupId":"10553","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"shouldReturnAllStores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/7951fc00f4a1a9715f7bd065d51e7292e56383.src","preCode":"    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()),\n            \"processor\");\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        final Map<String, StateStore> allStores = testDriver.getAllStateStores();\n        assertThat(allStores.keySet(), equalTo(expectedStoreNames));\n        for (final StateStore store : allStores.values()) {\n            assertNotNull(store);\n        }\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":865,"status":"M"},{"authorDate":"2021-07-03 02:02:20","commitOrder":7,"curCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology, config);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","date":"2021-07-03 02:02:20","endLine":1209,"groupId":"10553","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"shouldReturnAllStoresNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/7951fc00f4a1a9715f7bd065d51e7292e56383.src","preCode":"    public void shouldReturnAllStoresNames() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"store\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()));\n        topology.addGlobalStore(\n            new KeyValueStoreBuilder<>(\n                Stores.inMemoryKeyValueStore(\"globalStore\"),\n                Serdes.ByteArray(),\n                Serdes.ByteArray(),\n                new SystemTime()).withLoggingDisabled(),\n            \"sourceProcessorName\",\n            Serdes.ByteArray().deserializer(),\n            Serdes.ByteArray().deserializer(),\n            \"globalTopicName\",\n            \"globalProcessorName\",\n            voidProcessorSupplier);\n\n        testDriver = new TopologyTestDriver(topology);\n\n        final Set<String> expectedStoreNames = new HashSet<>();\n        expectedStoreNames.add(\"store\");\n        expectedStoreNames.add(\"globalStore\");\n        assertThat(testDriver.getAllStateStores().keySet(), equalTo(expectedStoreNames));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1182,"status":"M"}],"commitId":"08757d0d19f95ad6a911cb164ca4b146a23ef3f4","commitMessage":"@@@MINOR: Add default serde in stream test to fix QA ERROR (#10958)\n\nWe changed the default serde in Streams to be null in #10813.  but forgot to add some in tests.  for example TestTopicsTest and TopologyTestDriverTest.\n\nReviewers: David Jacot <djacot@confluent.io>.  Bruno Cadonna <cadonna@apache.org>","date":"2021-07-03 02:02:20","modifiedFileCount":"3","status":"M","submitter":"dengziming"}]
