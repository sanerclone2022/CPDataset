[{"authorTime":"2018-01-17 07:13:30","codes":[{"authorDate":"2018-01-17 07:13:30","commitOrder":1,"curCode":"    public void testInner() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","date":"2018-01-17 07:13:30","endLine":84,"groupId":"15242","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInner","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5f/c768dc82b7d033a12a20f262cbc31bca092908.src","preCode":"    public void testInner() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-01-17 07:13:30","commitOrder":1,"curCode":"    public void testLeft() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                Collections.singletonList(\"A-null\"),\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                Collections.singletonList(\"C-null\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","date":"2018-01-17 07:13:30","endLine":111,"groupId":"15243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5f/c768dc82b7d033a12a20f262cbc31bca092908.src","preCode":"    public void testLeft() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                Collections.singletonList(\"A-null\"),\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                Collections.singletonList(\"C-null\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"8ded496c9be619fe29d00b406b3c1e094abc202c","commitMessage":"@@@MINOR: Improve Join integration test coverage.  PART II\n\n1. Replaced KStreamKTableJoinIntegrationTest with the abstract based StreamTableJoinIntegrationTest. Added details on per-step verifications.\n2. Minor renaming on GlobalKTableIntegrationTest.\n\nAuthor: Guozhang Wang <wangguoz@gmail.com>\n\nReviewers: Damian Guy <damian.guy@gmail.com>.  Bill Bejeck <bill@confluent.io>\n\nCloses #4419 from guozhangwang/KMinor-join-integration-tests-II\n","date":"2018-01-17 07:13:30","modifiedFileCount":"1","status":"B","submitter":"Guozhang Wang"},{"authorTime":"2019-05-31 00:46:12","codes":[{"authorDate":"2019-05-31 00:46:12","commitOrder":2,"curCode":"    public void testInner() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<KeyValueTimestamp<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"B-a\", 5L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"D-d\", 15L))\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","date":"2019-05-31 00:46:12","endLine":114,"groupId":"846","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInner","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/77/2c91d7b36afd99115fcd0f05454ba4bddc1b4d.src","preCode":"    public void testInner() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-05-31 00:46:12","commitOrder":2,"curCode":"    public void testLeft() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<KeyValueTimestamp<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"A-null\", 3L)),\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"B-a\", 5L)),\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"C-null\", 9L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"D-d\", 15L))\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","date":"2019-05-31 00:46:12","endLine":141,"groupId":"847","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/77/2c91d7b36afd99115fcd0f05454ba4bddc1b4d.src","preCode":"    public void testLeft() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<String>> expectedResult = Arrays.asList(\n                null,\n                null,\n                Collections.singletonList(\"A-null\"),\n                null,\n                Collections.singletonList(\"B-a\"),\n                null,\n                null,\n                null,\n                Collections.singletonList(\"C-null\"),\n                null,\n                null,\n                null,\n                null,\n                null,\n                Collections.singletonList(\"D-d\")\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"77e6e8ec054608a30626271b4952b63294a93c3b","commitMessage":"@@@KAFKA-6455: Update integration tests to verify result timestamps (#6751)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>","date":"2019-05-31 00:46:12","modifiedFileCount":"12","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-11-23 05:25:57","codes":[{"authorDate":"2019-11-23 05:25:57","commitOrder":3,"curCode":"    public void testInner() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n        STREAMS_CONFIG.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"topology_driver:0000\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null,  15L))\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n        runTestWithDriver(expectedResult);\n    }\n","date":"2019-11-23 05:25:57","endLine":114,"groupId":"13703","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInner","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/66/f0a04b91b55cfbd9a4bf0a42caf2fef3269d1f.src","preCode":"    public void testInner() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<KeyValueTimestamp<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"B-a\", 5L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"D-d\", 15L))\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-11-23 05:25:57","commitOrder":3,"curCode":"    public void testLeft() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n        STREAMS_CONFIG.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"topology_driver:0000\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"A-null\", null, 3L)),\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"C-null\", null, 9L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null, 15L))\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTestWithDriver(expectedResult);\n    }\n","date":"2019-11-23 05:25:57","endLine":142,"groupId":"13704","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/66/f0a04b91b55cfbd9a4bf0a42caf2fef3269d1f.src","preCode":"    public void testLeft() throws Exception {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<KeyValueTimestamp<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"A-null\", 3L)),\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"B-a\", 5L)),\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"C-null\", 9L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY, \"D-d\", 15L))\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTest(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"e499c960e4f9cfc462f1a05a110d79ffa1c5b322","commitMessage":"@@@MINOR: Updated StreamTableJoinIntegrationTest to use TTD (#7722)\n\nConvert StreamTableJoinIntegrationTest to use the ToplogyTestDriver to eliminate flakiness and speed up the build.\n\nReviewers: John Roesler <john@confluent.io>","date":"2019-11-23 05:25:57","modifiedFileCount":"2","status":"M","submitter":"Bill Bejeck"},{"authorTime":"2020-08-16 00:27:36","codes":[{"authorDate":"2020-08-16 00:27:36","commitOrder":4,"curCode":"    public void testInner() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null,  15L))\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n        runTestWithDriver(expectedResult);\n    }\n","date":"2020-08-16 00:27:36","endLine":83,"groupId":"102568","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testInner","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0f/7e8aa95f01237055ef2c78deff22841bed361f.src","preCode":"    public void testInner() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-inner\");\n        STREAMS_CONFIG.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"topology_driver:0000\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null,  15L))\n        );\n\n        leftStream.join(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n        runTestWithDriver(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-08-16 00:27:36","commitOrder":4,"curCode":"    public void testLeft() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"A-null\", null, 3L)),\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"C-null\", null, 9L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null, 15L))\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTestWithDriver(expectedResult);\n    }\n","date":"2020-08-16 00:27:36","endLine":110,"groupId":"102568","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0f/7e8aa95f01237055ef2c78deff22841bed361f.src","preCode":"    public void testLeft() {\n        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, appID + \"-left\");\n        STREAMS_CONFIG.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"topology_driver:0000\");\n\n        final List<List<TestRecord<Long, String>>> expectedResult = Arrays.asList(\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"A-null\", null, 3L)),\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"B-a\", null, 5L)),\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"C-null\", null, 9L)),\n            null,\n            null,\n            null,\n            null,\n            null,\n            Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY, \"D-d\", null, 15L))\n        );\n\n        leftStream.leftJoin(rightTable, valueJoiner).to(OUTPUT_TOPIC);\n\n        runTestWithDriver(expectedResult);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"153db488660575e8c033c3c4424211a6f567bb57","commitMessage":"@@@KAFKA-9273: Extract testShouldAutoShutdownOnIncompleteMetadata from S? (#9108)\n\nThe main goal is to remove usage of embedded broker (EmbeddedKafkaCluster) in AbstractJoinIntegrationTest and its subclasses.\nThis is because the tests under this class are no longer using the embedded broker.  except for two.\ntestShouldAutoShutdownOnIncompleteMetadata is one of such tests.\nFurthermore.  this test does not actually perfom stream-table join; it is testing an edge case of joining with a non-existent topic.  so it should be in a separate test.\n\nTesting strategy: run existing unit and integration test\n\nReviewers: Boyang Chen <boyang@confluent.io>.  Bill Bejeck <bbejeck@apache.org>","date":"2020-08-16 00:27:36","modifiedFileCount":"3","status":"M","submitter":"albert02lowis"}]
