[{"authorTime":"2015-11-09 14:11:03","codes":[{"authorDate":"2015-02-18 08:18:35","commitOrder":2,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","date":"2015-02-18 08:18:35","endLine":125,"groupId":"22594","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/49/90692efa6f01c62e1d7b05fbf31bec50e398c9.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"NB"},{"authorDate":"2015-11-09 14:11:03","commitOrder":2,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","date":"2015-11-09 14:11:03","endLine":121,"groupId":"2541","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/21/f0944a0abeaf55cf34365cbd8a318d482ac93a.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"f2031d40639ef34c1591c22971394ef41c87652c","commitMessage":"@@@KAFKA-2774: Rename Copycat to Kafka Connect\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: Gwen Shapira\n\nCloses #456 from ewencp/kafka-2774-rename-copycat\n","date":"2015-11-09 14:11:03","modifiedFileCount":"1","status":"M","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2015-11-09 14:11:03","codes":[{"authorDate":"2016-02-19 23:56:40","commitOrder":3,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-02-19 23:56:40","endLine":176,"groupId":"22594","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/b4d8ddf1c0c8062f15540b23086ebaa9a2b420.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2015-11-09 14:11:03","commitOrder":3,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","date":"2015-11-09 14:11:03","endLine":121,"groupId":"2541","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/21/f0944a0abeaf55cf34365cbd8a318d482ac93a.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"45c8195fa14c766b200c720f316836dbb84e9d8b","commitMessage":"@@@KAFKA-3025; Added timetamp to Message and use relative offset.\n\nSee KIP-31 and KIP-32 for details.\n\nA few notes on the patch:\n1. This patch implements KIP-31 and KIP-32. The patch includes features in both KAFKA-3025.   KAFKA-3026 and KAFKA-3036\n2. All unit tests passed.\n3. The unit tests were run with new and old message format.\n4. When message format conversion occurs during consumption.  the consumer will not be able to detect the message size too large situation. I did not try to fix this because the situation seems rare and only happen during migration phase.\n\nAuthor: Jiangjie Qin <becket.qin@gmail.com>\nAuthor: Ismael Juma <ismael@juma.me.uk>\nAuthor: Jiangjie (Becket) Qin <becket.qin@gmail.com>\n\nReviewers: Jason Gustafson <jason@confluent.io>.  Anna Povzner <anna@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <wangguoz@gmail.com>.  Jun Rao <junrao@gmail.com>\n\nCloses #764 from becketqin/KAFKA-3025\n","date":"2016-02-19 23:56:40","modifiedFileCount":"43","status":"M","submitter":"Jiangjie Qin"},{"authorTime":"2016-07-01 04:59:31","codes":[{"authorDate":"2016-02-19 23:56:40","commitOrder":4,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-02-19 23:56:40","endLine":176,"groupId":"22594","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/b4d8ddf1c0c8062f15540b23086ebaa9a2b420.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"N"},{"authorDate":"2016-07-01 04:59:31","commitOrder":4,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (value != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-07-01 04:59:31","endLine":130,"groupId":"2541","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/25/690a26e7b11e37ffa18d7ec646d070d0189900.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"44ad7b574e376f958cf1d3893156d666f904cdd3","commitMessage":"@@@KAFKA-3846: KIP-65: include timestamp in Connect record types\n\nhttps://cwiki.apache.org/confluence/display/KAFKA/KIP-65%3A+Expose+timestamps+to+Connect\n\nAuthor: Shikhar Bhushan <shikhar@confluent.io>\n\nReviewers: Jason Gustafson <jason@confluent.io>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1537 from shikhar/kafka-3846\n","date":"2016-07-01 04:59:31","modifiedFileCount":"8","status":"M","submitter":"Shikhar Bhushan"},{"authorTime":"2016-10-24 13:32:03","codes":[{"authorDate":"2016-02-19 23:56:40","commitOrder":5,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-02-19 23:56:40","endLine":176,"groupId":"22594","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/b4d8ddf1c0c8062f15540b23086ebaa9a2b420.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"N"},{"authorDate":"2016-10-24 13:32:03","commitOrder":5,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-10-24 13:32:03","endLine":130,"groupId":"2541","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d6/319a171198c4ef2e3965a254ed64273ddf0a85.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (value != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"ed5076923483bba36df6d4b70575ee0ffd6a046c","commitMessage":"@@@MINOR: Check for null timestamp rather than value in hashcode\n\nAuthor: Andrew Stevenson <andrew@datamountaineer.com>\n\nReviewers: Shikhar Bhushan <shikhar@confluent.io>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #2055 from andrewstevenson/kafka-4334\n","date":"2016-10-24 13:32:03","modifiedFileCount":"1","status":"M","submitter":"Andrew Stevenson"},{"authorTime":"2016-10-24 13:32:03","codes":[{"authorDate":"2017-04-29 10:17:57","commitOrder":6,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (headers != null ? headers.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2017-04-29 10:18:27","endLine":228,"groupId":"22594","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/428e58c42b0fb881e364b66dbc8d2f487f70f4.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2016-10-24 13:32:03","commitOrder":6,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2016-10-24 13:32:03","endLine":130,"groupId":"2541","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d6/319a171198c4ef2e3965a254ed64273ddf0a85.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"6185bc0276c03075022c30d3c36f7f5c09ef19c6","commitMessage":"@@@KAFKA-4208; Add Record Headers\n\nAs per KIP-82\n\nAdding record headers api to ProducerRecord.  ConsumerRecord\nSupport to convert from protocol to api added Kafka Producer.  Kafka Fetcher (Consumer)\nUpdated MirrorMaker.  ConsoleConsumer and scala BaseConsumer\nAdd RecordHeaders and RecordHeader implementation of the interfaces Headers and Header\n\nSome bits using are reverted to being Java 7 compatible.  for the moment until KIP-118 is implemented.\n\nAuthor: Michael Andre Pearce <Michael.Andre.Pearce@me.com>\n\nReviewers: Radai Rosenblatt <radai.rosenblatt@gmail.com>.  Jiangjie Qin <becket.qin@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>\n\nCloses #2772 from michaelandrepearce/KIP-82\n","date":"2017-04-29 10:18:27","modifiedFileCount":"26","status":"M","submitter":"Michael Andre Pearce"},{"authorTime":"2018-02-01 02:40:24","codes":[{"authorDate":"2017-04-29 10:17:57","commitOrder":7,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (headers != null ? headers.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","date":"2017-04-29 10:18:27","endLine":228,"groupId":"104251","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/428e58c42b0fb881e364b66dbc8d2f487f70f4.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (partition != null ? partition.hashCode() : 0);\n        result = 31 * result + (headers != null ? headers.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/ProducerRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2018-02-01 02:40:24","commitOrder":7,"curCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        result = 31 * result + headers.hashCode();\n        return result;\n    }\n","date":"2018-02-01 02:40:24","endLine":189,"groupId":"104251","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"hashCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2a/d8a046d768a44a6479aea6fd12b4b3e8efa983.src","preCode":"    public int hashCode() {\n        int result = topic != null ? topic.hashCode() : 0;\n        result = 31 * result + (kafkaPartition != null ? kafkaPartition.hashCode() : 0);\n        result = 31 * result + (keySchema != null ? keySchema.hashCode() : 0);\n        result = 31 * result + (key != null ? key.hashCode() : 0);\n        result = 31 * result + (valueSchema != null ? valueSchema.hashCode() : 0);\n        result = 31 * result + (value != null ? value.hashCode() : 0);\n        result = 31 * result + (timestamp != null ? timestamp.hashCode() : 0);\n        return result;\n    }\n","realPath":"connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"4c48942f9d9e1428e21f934746cb7ce22b3df746","commitMessage":"@@@KAFKA-5142: Add Connect support for message headers (KIP-145)\n\n**[KIP-145](https://cwiki.apache.org/confluence/display/KAFKA/KIP-145+-+Expose+Record+Headers+in+Kafka+Connect) has been accepted.  and this PR implements KIP-145 except without the SMTs.**\n\nChanged the Connect API and runtime to support message headers as described in [KIP-145](https://cwiki.apache.org/confluence/display/KAFKA/KIP-145+-+Expose+Record+Headers+in+Kafka+Connect).\n\nThe new `Header` interface defines an immutable representation of a Kafka header (key-value pair) with support for the Connect value types and schemas. This interface provides methods for easily converting between many of the built-in primitive.  structured.  and logical data types.\n\nThe new `Headers` interface defines an ordered collection of headers and is used to track all headers associated with a `ConnectRecord` (and thus `SourceRecord` and `SinkRecord`). This does allow multiple headers with the same key. The `Headers` contains methods for adding.  removing.  finding.  and modifying headers. Convenience methods allow connectors and transforms to easily use and modify the headers for a record.\n\nA new `HeaderConverter` interface is also defined to enable the Connect runtime framework to be able to serialize and deserialize headers between the in-memory representation and Kafka?s byte[] representation. A new `SimpleHeaderConverter` implementation has been added.  and this serializes to strings and deserializes by inferring the schemas (`Struct` header values are serialized without the schemas.  so they can only be deserialized as `Map` instances without a schema.) The `StringConverter`.  `JsonConverter`.  and `ByteArrayConverter` have all been extended to also be `HeaderConverter` implementations. Each connector can be configured with a different header converter.  although by default the `SimpleHeaderConverter` is used to serialize header values as strings without schemas.\n\nUnit and integration tests are added for `ConnectHeader` and `ConnectHeaders`.  the two implementation classes for headers. Additional test methods are added for the methods added to the `Converter` implementations. Finally.  the `ConnectRecord` object is already used heavily.  so only limited tests need to be added while quite a few of the existing tests already cover the changes.\n\nAuthor: Randall Hauch <rhauch@gmail.com>\n\nReviewers: Arjun Satish <arjun@confluent.io>.  Ted Yu <yuzhihong@gmail.com>.  Magesh Nandakumar <magesh.n.kumar@gmail.com>.  Konstantine Karantasis <konstantine@confluent.io>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #4319 from rhauch/kafka-5142-b\n","date":"2018-02-01 02:40:24","modifiedFileCount":"21","status":"M","submitter":"Randall Hauch"}]
