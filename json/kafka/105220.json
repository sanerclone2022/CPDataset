[{"authorTime":"2015-11-09 14:11:03","codes":[{"authorDate":"2015-11-09 14:11:03","commitOrder":1,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        ConnectorState state = connectors.get(connName);\n        if (state == null) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (int i = 0; i < state.taskConfigs.size(); i++) {\n            TaskInfo info = new TaskInfo(new ConnectorTaskId(connName, i), state.taskConfigs.get(i));\n            result.add(info);\n        }\n        callback.onCompletion(null, result);\n    }\n","date":"2015-11-09 14:11:03","endLine":181,"groupId":"11156","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/89/847ab80d282059b607d536066526c92e79e5f7.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        ConnectorState state = connectors.get(connName);\n        if (state == null) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (int i = 0; i < state.taskConfigs.size(); i++) {\n            TaskInfo info = new TaskInfo(new ConnectorTaskId(connName, i), state.taskConfigs.get(i));\n            result.add(info);\n        }\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"},{"authorDate":"2015-11-09 14:11:03","commitOrder":1,"curCode":"    public synchronized void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (!checkConfigSynced(callback))\n                            return null;\n\n                        if (!configState.connectors().contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2015-11-09 14:11:03","endLine":374,"groupId":"14569","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/db1685057699e0815f8baea0941e29010929b6.src","preCode":"    public synchronized void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (!checkConfigSynced(callback))\n                            return null;\n\n                        if (!configState.connectors().contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"B"}],"commitId":"f2031d40639ef34c1591c22971394ef41c87652c","commitMessage":"@@@KAFKA-2774: Rename Copycat to Kafka Connect\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: Gwen Shapira\n\nCloses #456 from ewencp/kafka-2774-rename-copycat\n","date":"2015-11-09 14:11:03","modifiedFileCount":"1","status":"B","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2016-04-21 05:09:59","codes":[{"authorDate":"2016-04-21 05:09:59","commitOrder":2,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2016-04-21 05:09:59","endLine":196,"groupId":"8169","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ad/02e99587c127fb044cf4bad07394f3e9bd6aef.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        ConnectorState state = connectors.get(connName);\n        if (state == null) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (int i = 0; i < state.taskConfigs.size(); i++) {\n            TaskInfo info = new TaskInfo(new ConnectorTaskId(connName, i), state.taskConfigs.get(i));\n            result.add(info);\n        }\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2016-04-21 05:09:59","commitOrder":2,"curCode":"    public synchronized void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2016-04-21 05:09:59","endLine":418,"groupId":"18666","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/15/126034fbd769e09226b2d68f4932eeddbb3971.src","preCode":"    public synchronized void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (!checkConfigSynced(callback))\n                            return null;\n\n                        if (!configState.connectors().contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"M"}],"commitId":"c9485b78a6e43747daf1314ae9532839fb7bc810","commitMessage":"@@@KAFKA-2370: kafka connect pause/resume API\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Liquan Pei <liquanpei@gmail.com>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1087 from hachikuji/KAFKA-2370\n","date":"2016-04-21 05:09:59","modifiedFileCount":"29","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2016-12-02 06:42:15","codes":[{"authorDate":"2016-04-21 05:09:59","commitOrder":3,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2016-04-21 05:09:59","endLine":196,"groupId":"8169","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ad/02e99587c127fb044cf4bad07394f3e9bd6aef.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"},{"authorDate":"2016-12-02 06:42:15","commitOrder":3,"curCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2016-12-02 06:42:15","endLine":434,"groupId":"18666","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ce/2e72a8ffecb4d8bd5d3677b590d48009a998c6.src","preCode":"    public synchronized void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"M"}],"commitId":"b65f9a777d46fbe4edfed8a4c7216dd1e741be53","commitMessage":"@@@KAFKA-3008: Parallel start and stop of connectors and tasks in Connect\n\nAuthor: Konstantine Karantasis <konstantine@confluent.io>\nAuthor: Konstantine Karantasis <k.karantasis@gmail.com>\n\nReviewers: Jason Gustafson <jason@confluent.io>.  Shikhar Bhushan <shikhar@confluent.io>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1788 from kkonstantine/KAFKA-3008-Parallel-start-and-stop-of-connectors-and-tasks\n","date":"2016-12-02 06:42:15","modifiedFileCount":"7","status":"M","submitter":"Konstantine Karantasis"},{"authorTime":"2017-09-21 05:01:43","codes":[{"authorDate":"2016-04-21 05:09:59","commitOrder":4,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2016-04-21 05:09:59","endLine":196,"groupId":"8169","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ad/02e99587c127fb044cf4bad07394f3e9bd6aef.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"},{"authorDate":"2017-09-21 05:01:43","commitOrder":4,"curCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            Map<String, String> config = configState.connectorConfig(connName);\n                            callback.onCompletion(null, new ConnectorInfo(connName, config,\n                                configState.tasks(connName),\n                                connectorTypeForClass(config.get(ConnectorConfig.CONNECTOR_CLASS_CONFIG))));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2017-09-21 05:01:43","endLine":443,"groupId":"1851","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/39/0f8c3fd790bd4f789f722e25f808fec3418598.src","preCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, new ConnectorInfo(connName, configState.connectorConfig(connName), configState.tasks(connName)));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":420,"status":"M"}],"commitId":"552b1707871fd92656debe33b03381f597be2578","commitMessage":"@@@KAFKA-5657: Connect REST API should include the connector type when describing a connector (KIP-151)\n\nEmbed the type of connector in ConnectorInfo\n\nAuthor: tedyu <yuzhihong@gmail.com>\n\nReviewers: Randall Hauch <rhauch@gmail.com>.  Jason Gustafson <jason@confluent.io>.  Konstantine Karantasis <konstantine@confluent.io>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #3812 from tedyu/trunk\n","date":"2017-09-21 05:01:43","modifiedFileCount":"9","status":"M","submitter":"tedyu"},{"authorTime":"2019-01-24 03:00:23","codes":[{"authorDate":"2019-01-24 03:00:23","commitOrder":5,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.rawTaskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2019-01-24 03:00:23","endLine":237,"groupId":"8169","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/95/b53e5d730700967cd2238a7678ad60f62e8e73.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.taskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2019-01-24 03:00:23","commitOrder":5,"curCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            Map<String, String> config = configState.rawConnectorConfig(connName);\n                            callback.onCompletion(null, new ConnectorInfo(connName, config,\n                                configState.tasks(connName),\n                                connectorTypeForClass(config.get(ConnectorConfig.CONNECTOR_CLASS_CONFIG))));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2019-01-24 03:00:23","endLine":464,"groupId":"1851","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/71/1b6c9dfc80af49cfc6cc0767464edc3d37df7c.src","preCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            Map<String, String> config = configState.connectorConfig(connName);\n                            callback.onCompletion(null, new ConnectorInfo(connName, config,\n                                configState.tasks(connName),\n                                connectorTypeForClass(config.get(ConnectorConfig.CONNECTOR_CLASS_CONFIG))));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"}],"commitId":"743607af5aa625a19377688709870b021014dee2","commitMessage":"@@@KAFKA-5117: Stop resolving externalized configs in Connect REST API\n\n[KIP-297](https://cwiki.apache.org/confluence/display/KAFKA/KIP-297%3A+Externalizing+Secrets+for+Connect+Configurations#KIP-297:ExternalizingSecretsforConnectConfigurations-PublicInterfaces) introduced the `ConfigProvider` mechanism.  which was primarily intended for externalizing secrets provided in connector configurations. However.  when querying the Connect REST API for the configuration of a connector or its tasks.  those secrets are still exposed. The changes here prevent the Connect REST API from ever exposing resolved configurations in order to address that. rhauch has given a more thorough writeup of the thinking behind this in [KAFKA-5117](https://issues.apache.org/jira/browse/KAFKA-5117)\n\nTested and verified manually. If these changes are approved unit tests can be added to prevent a regression.\n\nAuthor: Chris Egerton <chrise@confluent.io>\n\nReviewers: Robert Yokota <rayokota@gmail.com>.  Randall Hauch <rhauch@gmail.com.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #6129 from C0urante/hide-provided-connect-configs\n","date":"2019-01-24 03:00:23","modifiedFileCount":"4","status":"M","submitter":"Chris Egerton"},{"authorTime":"2019-05-17 05:29:30","codes":[{"authorDate":"2019-01-24 03:00:23","commitOrder":6,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.rawTaskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2019-01-24 03:00:23","endLine":237,"groupId":"8169","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/95/b53e5d730700967cd2238a7678ad60f62e8e73.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.rawTaskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"N"},{"authorDate":"2019-05-17 05:29:30","commitOrder":6,"curCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, connectorInfo(connName));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","date":"2019-05-17 05:29:29","endLine":461,"groupId":"18666","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/96/d4bfcc73ed8a3baacce4915deb670d5c366a6c.src","preCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            Map<String, String> config = configState.rawConnectorConfig(connName);\n                            callback.onCompletion(null, new ConnectorInfo(connName, config,\n                                configState.tasks(connName),\n                                connectorTypeForClass(config.get(ConnectorConfig.CONNECTOR_CLASS_CONFIG))));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"}],"commitId":"5a95c2e1cd555d5f3ec148cc7c765d1bb7d716f9","commitMessage":"@@@Add '?expand' query param for additional info on '/connectors'. (#6658)\n\nPer KIP-465.  kept existing behavior of `/connectors` resource in the Connect's REST API.  but added the ability to specify `?expand` query parameter to get list of connectors with status details on each connector. Added unit tests.  and verified passing existing system tests (which use the older list form).\n\nSee https://cwiki.apache.org/confluence/display/KAFKA/KIP-465%3A+Add+Consolidated+Connector+Endpoint+to+Connect+REST+API.\n\nAuthor: Dan Norwood <norwood@confluent.io>\nReviewer: Randall Hauch <rhauch@gmail.com>","date":"2019-05-17 05:29:29","modifiedFileCount":"9","status":"M","submitter":"dan norwood"},{"authorTime":"2021-02-05 01:15:49","codes":[{"authorDate":"2019-01-24 03:00:23","commitOrder":7,"curCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.rawTaskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","date":"2019-01-24 03:00:23","endLine":237,"groupId":"105220","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"taskConfigs","params":"(StringconnName@Callback<List<TaskInfo>>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/95/b53e5d730700967cd2238a7678ad60f62e8e73.src","preCode":"    public synchronized void taskConfigs(String connName, Callback<List<TaskInfo>> callback) {\n        if (!configState.contains(connName)) {\n            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\", null), null);\n            return;\n        }\n\n        List<TaskInfo> result = new ArrayList<>();\n        for (ConnectorTaskId taskId : configState.tasks(connName))\n            result.add(new TaskInfo(taskId, configState.rawTaskConfig(taskId)));\n        callback.onCompletion(null, result);\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"N"},{"authorDate":"2021-02-05 01:15:49","commitOrder":7,"curCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n            () -> {\n                if (checkRebalanceNeeded(callback))\n                    return null;\n\n                if (!configState.contains(connName)) {\n                    callback.onCompletion(\n                        new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                } else {\n                    callback.onCompletion(null, connectorInfo(connName));\n                }\n                return null;\n            },\n            forwardErrorCallback(callback)\n        );\n    }\n","date":"2021-02-05 01:15:49","endLine":738,"groupId":"105220","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorInfo","params":"(finalStringconnName@finalCallback<ConnectorInfo>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/dd/3ecf42ba5899b13086a91426adf57cb4f25548.src","preCode":"    public void connectorInfo(final String connName, final Callback<ConnectorInfo> callback) {\n        log.trace(\"Submitting connector info request {}\", connName);\n\n        addRequest(\n                new Callable<Void>() {\n                    @Override\n                    public Void call() throws Exception {\n                        if (checkRebalanceNeeded(callback))\n                            return null;\n\n                        if (!configState.contains(connName)) {\n                            callback.onCompletion(new NotFoundException(\"Connector \" + connName + \" not found\"), null);\n                        } else {\n                            callback.onCompletion(null, connectorInfo(connName));\n                        }\n                        return null;\n                    }\n                },\n                forwardErrorCallback(callback)\n        );\n    }\n","realPath":"connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":720,"status":"M"}],"commitId":"c19a35d1b740c85559a7ff4e882fc95b4737808d","commitMessage":"@@@KAFKA-10835: Replace Runnable and Callable overrides with lambdas in Connect (#9867)\n\nReviewers: Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-02-05 01:15:49","modifiedFileCount":"50","status":"M","submitter":"Lev Zemlyanov"}]
