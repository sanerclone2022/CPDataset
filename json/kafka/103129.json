[{"authorTime":"2017-05-13 12:38:49","codes":[{"authorDate":"2017-05-13 12:38:49","commitOrder":1,"curCode":"    public Serde defaultKeySerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure key serde %s\", get(DEFAULT_KEY_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","date":"2017-05-13 12:38:49","endLine":661,"groupId":"5643","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c1/fd2d69968b55a1ca5237308c4cb66f1b4f6c2c.src","preCode":"    public Serde defaultKeySerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure key serde %s\", get(DEFAULT_KEY_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":653,"status":"B"},{"authorDate":"2017-05-13 12:38:49","commitOrder":1,"curCode":"    public Serde defaultValueSerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure value serde %s\", get(DEFAULT_VALUE_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","date":"2017-05-13 12:38:49","endLine":699,"groupId":"5643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c1/fd2d69968b55a1ca5237308c4cb66f1b4f6c2c.src","preCode":"    public Serde defaultValueSerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure value serde %s\", get(DEFAULT_VALUE_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":691,"status":"B"}],"commitId":"9198467eb293435385edcef9028a59fa41a3828a","commitMessage":"@@@KAFKA-4144: Allow per stream/table timestamp extractor\n\nAuthor: Jeyhun Karimov <je.karimov@gmail.com>\n\nReviewers: Damian Guy.  Eno Thereska.  Matthias J. Sax.  Guozhang Wang\n\nCloses #2466 from jeyhunkarimov/KAFKA-4144\n","date":"2017-05-13 12:38:49","modifiedFileCount":"40","status":"B","submitter":"Jeyhun Karimov"},{"authorTime":"2017-07-11 08:59:43","codes":[{"authorDate":"2017-07-11 08:59:43","commitOrder":2,"curCode":"    public Serde defaultKeySerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(KEY_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", get(DEFAULT_KEY_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","date":"2017-07-11 08:59:43","endLine":755,"groupId":"5643","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/dfe8a5ff770a9f46cadbfc409a962d6e504cae.src","preCode":"    public Serde defaultKeySerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure key serde %s\", get(DEFAULT_KEY_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":743,"status":"M"},{"authorDate":"2017-07-11 08:59:43","commitOrder":2,"curCode":"    public Serde defaultValueSerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), false);\n\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", get(DEFAULT_VALUE_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","date":"2017-07-11 08:59:43","endLine":791,"groupId":"5643","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/dfe8a5ff770a9f46cadbfc409a962d6e504cae.src","preCode":"    public Serde defaultValueSerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(String.format(\"Failed to configure value serde %s\", get(DEFAULT_VALUE_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":778,"status":"M"}],"commitId":"2628695356de87aba7d046855fbe1f1963d3f911","commitMessage":"@@@MINOR: need to be backwards compatible with deprecated default configs until removed\n\n?s until removed\n\nAuthor: Bill Bejeck <bill@confluent.io>\n\nReviewers: Damian Guy <damian.guy@gmail.com>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3461 from bbejeck/MINOR_make_sure_deprecated_streams_configs_still_usable\n","date":"2017-07-11 08:59:43","modifiedFileCount":"2","status":"M","submitter":"Bill Bejeck"},{"authorTime":"2017-07-27 03:58:33","codes":[{"authorDate":"2017-07-27 03:58:33","commitOrder":3,"curCode":"    public Serde defaultKeySerde() {\n        Object keySerdeConfigSetting = get(KEY_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(KEY_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n                serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","date":"2017-07-27 03:58:33","endLine":772,"groupId":"5643","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e4/869ee1f7b04101a197a6a35cdad0f04d34299b.src","preCode":"    public Serde defaultKeySerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(KEY_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", get(DEFAULT_KEY_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"M"},{"authorDate":"2017-07-27 03:58:33","commitOrder":3,"curCode":"    public Serde defaultValueSerde() {\n        Object valueSerdeConfigSetting = get(VALUE_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n                serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), false);\n\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","date":"2017-07-27 03:58:33","endLine":806,"groupId":"5643","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e4/869ee1f7b04101a197a6a35cdad0f04d34299b.src","preCode":"    public Serde defaultValueSerde() {\n        try {\n            Serde<?> serde = getConfiguredInstance(VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), false);\n\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", get(DEFAULT_VALUE_SERDE_CLASS_CONFIG)), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"M"}],"commitId":"f8498ec9e27ca0f08e3791d7a19ad8c6a97e210f","commitMessage":"@@@MINOR: updated configs to use one try/catch for serdes\n\nremoved `try/catch` from `keySerde` and `valueSerde` methods so only the `try\\catch` blocks in `defaultKeySerde` and `defaultValueSerde` perform error handling resulting in correct error message.\n\nAuthor: Bill Bejeck <bill@confluent.io>\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3568 from bbejeck/MINOR_ensure_correct_error_messages_for_configs\n","date":"2017-07-27 03:58:33","modifiedFileCount":"2","status":"M","submitter":"Bill Bejeck"},{"authorTime":"2018-04-27 04:16:51","codes":[{"authorDate":"2018-04-27 04:16:51","commitOrder":4,"curCode":"    public Serde defaultKeySerde() {\n        Object keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","date":"2018-04-27 04:16:51","endLine":930,"groupId":"5643","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/e69c5cbc733fdd84594430d144fa7dc9b206b1.src","preCode":"    public Serde defaultKeySerde() {\n        Object keySerdeConfigSetting = get(KEY_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(KEY_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n                serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":920,"status":"M"},{"authorDate":"2018-04-27 04:16:51","commitOrder":4,"curCode":"    public Serde defaultValueSerde() {\n        Object valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","date":"2018-04-27 04:16:51","endLine":948,"groupId":"5643","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/e69c5cbc733fdd84594430d144fa7dc9b206b1.src","preCode":"    public Serde defaultValueSerde() {\n        Object valueSerdeConfigSetting = get(VALUE_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            if (serde == null) {\n                valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n                serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            }\n            serde.configure(originals(), false);\n\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":938,"status":"M"}],"commitId":"8725e3604b31d0bf822959fc6d870512411c7a05","commitMessage":"@@@MINOR: Remove deprecated streams config (#4906)\n\nRemoved the following: \"zookeeper.connect\".  \"key.serde\".  \"value.serde\".  \"timestamp.extractor\"\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Jason Gustafson <jason@confluent.io>","date":"2018-04-27 04:16:51","modifiedFileCount":"2","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-31 13:39:42","codes":[{"authorDate":"2018-05-31 13:39:42","commitOrder":5,"curCode":"    public Serde defaultKeySerde() {\n        final Object keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","date":"2018-05-31 13:39:42","endLine":1128,"groupId":"5643","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/549960de45f1cd56731cb122a338374e61717b.src","preCode":"    public Serde defaultKeySerde() {\n        Object keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1118,"status":"M"},{"authorDate":"2018-05-31 13:39:42","commitOrder":5,"curCode":"    public Serde defaultValueSerde() {\n        final Object valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","date":"2018-05-31 13:39:42","endLine":1147,"groupId":"5643","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/549960de45f1cd56731cb122a338374e61717b.src","preCode":"    public Serde defaultValueSerde() {\n        Object valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n        try {\n            Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1137,"status":"M"}],"commitId":"d166485be15d95192ec1b2818f815fa58726ec54","commitMessage":"@@@KAFKA-6054: Add 'version probing' to Kafka Streams rebalance (#4636)\n\nimplements KIP-268\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2018-05-31 13:39:42","modifiedFileCount":"13","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2021-07-02 05:58:29","codes":[{"authorDate":"2021-07-02 05:58:29","commitOrder":6,"curCode":"    public Serde defaultKeySerde() {\n        final Object keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n        if (keySerdeConfigSetting ==  null) {\n            throw new ConfigException(\"Please specify a key serde or set one through StreamsConfig#DEFAULT_KEY_SERDE_CLASS_CONFIG\");\n        }\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","date":"2021-07-02 05:58:29","endLine":1437,"groupId":"103129","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"defaultKeySerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/67/92ff778151b3e94b5adf7832ebdf52e3f182ff.src","preCode":"    public Serde defaultKeySerde() {\n        final Object keySerdeConfigSetting = get(DEFAULT_KEY_SERDE_CLASS_CONFIG);\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_KEY_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), true);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure key serde %s\", keySerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1424,"status":"M"},{"authorDate":"2021-07-02 05:58:29","commitOrder":6,"curCode":"    public Serde defaultValueSerde() {\n        final Object valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n        if (valueSerdeConfigSetting == null) {\n            throw new ConfigException(\"Please specify a value serde or set one through StreamsConfig#DEFAULT_VALUE_SERDE_CLASS_CONFIG\");\n        }\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","date":"2021-07-02 05:58:29","endLine":1459,"groupId":"103129","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultValueSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/67/92ff778151b3e94b5adf7832ebdf52e3f182ff.src","preCode":"    public Serde defaultValueSerde() {\n        final Object valueSerdeConfigSetting = get(DEFAULT_VALUE_SERDE_CLASS_CONFIG);\n        try {\n            final Serde<?> serde = getConfiguredInstance(DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serde.class);\n            serde.configure(originals(), false);\n            return serde;\n        } catch (final Exception e) {\n            throw new StreamsException(\n                String.format(\"Failed to configure value serde %s\", valueSerdeConfigSetting), e);\n        }\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1446,"status":"M"}],"commitId":"4fd71a7ef1c79ec3f110ee2f9d38fa7d5194937e","commitMessage":"@@@KAFKA-9559: Change default serde to be `null` (#10813)\n\nImplements KIP-741\n\nReviewers: Matthias J. Sax <matthias@confluent.io>","date":"2021-07-02 05:58:29","modifiedFileCount":"38","status":"M","submitter":"leah"}]
