[{"authorTime":"2017-05-25 06:26:46","codes":[{"authorDate":"2017-05-20 09:51:37","commitOrder":2,"curCode":"    private void prepareAddOffsetsToTxnResponse(Errors error, final String consumerGroupId, final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","date":"2017-05-20 09:51:42","endLine":766,"groupId":"11798","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(Errorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fc/f04885498ae8a097da4076d9c7122ed43b7ea9.src","preCode":"    private void prepareAddOffsetsToTxnResponse(Errors error, final String consumerGroupId, final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"NB"},{"authorDate":"2017-05-25 06:26:46","commitOrder":2,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId, final long producerId,\n                                                final short producerEpoch, Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) body;\n                assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n                assertEquals(producerId, txnOffsetCommitRequest.producerId());\n                assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n                return true;\n            }\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n\n    }\n","date":"2017-05-25 06:26:46","endLine":871,"groupId":"11798","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e9/363d054e54b5c24d0ce06c965bc584cc9e64d2.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId, final long producerId,\n                                                final short producerEpoch, Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) body;\n                assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n                assertEquals(producerId, txnOffsetCommitRequest.producerId());\n                assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n                return true;\n            }\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":858,"status":"B"}],"commitId":"38f6cae9e879baa35c5dbc5829bf09ecd59930c2","commitMessage":"@@@KAFKA-5259; TransactionalId auth implies ProducerId auth\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Apurva Mehta <apurva@confluent.io>.  Jun Rao <junrao@gmail.com>\n\nCloses #3075 from hachikuji/KAFKA-5259-FIXED\n","date":"2017-05-25 06:26:46","modifiedFileCount":"25","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2017-05-25 06:26:46","codes":[{"authorDate":"2018-08-17 00:37:32","commitOrder":3,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","date":"2018-08-17 00:37:32","endLine":2430,"groupId":"11798","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/60/6fa714a3420eddb96b89e8c99f24fd3af757e9.src","preCode":"    private void prepareAddOffsetsToTxnResponse(Errors error, final String consumerGroupId, final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2415,"status":"M"},{"authorDate":"2017-05-25 06:26:46","commitOrder":3,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId, final long producerId,\n                                                final short producerEpoch, Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) body;\n                assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n                assertEquals(producerId, txnOffsetCommitRequest.producerId());\n                assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n                return true;\n            }\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n\n    }\n","date":"2017-05-25 06:26:46","endLine":871,"groupId":"11798","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e9/363d054e54b5c24d0ce06c965bc584cc9e64d2.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId, final long producerId,\n                                                final short producerEpoch, Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) body;\n                assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n                assertEquals(producerId, txnOffsetCommitRequest.producerId());\n                assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n                return true;\n            }\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":858,"status":"N"}],"commitId":"4f25f1fb7118825384f89ed9d00c08a54870e3aa","commitMessage":"@@@KAFKA-7296; Handle coordinator loading error in TxnOffsetCommit (#5514)\n\nWe should check TxnOffsetCommit responses for the COORDINATOR_LOADING_IN_PROGRESS error code and retry if we see it. Additionally.  if we encounter an abortable error.  we need to ensure that pending transaction offset commits are cleared.\n\nReviewers: Viktor Somogyi <viktorsomogyi@gmail.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-08-17 00:37:32","modifiedFileCount":"2","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-09-09 15:14:57","codes":[{"authorDate":"2018-08-17 00:37:32","commitOrder":4,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","date":"2018-08-17 00:37:32","endLine":2430,"groupId":"11798","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/60/6fa714a3420eddb96b89e8c99f24fd3af757e9.src","preCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2415,"status":"N"},{"authorDate":"2018-09-09 15:14:57","commitOrder":4,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n            assertEquals(producerId, txnOffsetCommitRequest.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","date":"2018-09-09 15:17:25","endLine":2443,"groupId":"11798","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/730b9cb120b92e1f7b84fbd0517275be88583e.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId, final long producerId,\n                                                final short producerEpoch, Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) body;\n                assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n                assertEquals(producerId, txnOffsetCommitRequest.producerId());\n                assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n                return true;\n            }\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2432,"status":"M"}],"commitId":"05ba5aa00847b18b74369a821e972bbba9f155eb","commitMessage":"@@@KAFKA-7333; Protocol changes for KIP-320\n\nThis patch contains the protocol updates needed for KIP-320 as well as some of the basic consumer APIs (e.g. `OffsetAndMetadata` and `ConsumerRecord`). The inter-broker format version has not been changed and the brokers will continue to use the current API versions.\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Dong Lin <lindong28@gmail.com>\n\nCloses #5564 from hachikuji/KAFKA-7333\n","date":"2018-09-09 15:17:25","modifiedFileCount":"83","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-09-09 15:14:57","codes":[{"authorDate":"2018-12-03 13:32:05","commitOrder":5,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","date":"2018-12-03 13:32:05","endLine":2401,"groupId":"11798","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b8/f5caedcb243a11d42eccbf12847674a14e07fd.src","preCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n                assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n                assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n                assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n                assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n                return true;\n            }\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2389,"status":"M"},{"authorDate":"2018-09-09 15:14:57","commitOrder":5,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n            assertEquals(producerId, txnOffsetCommitRequest.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","date":"2018-09-09 15:17:25","endLine":2443,"groupId":"11798","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/730b9cb120b92e1f7b84fbd0517275be88583e.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n            assertEquals(producerId, txnOffsetCommitRequest.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2432,"status":"N"}],"commitId":"c4822648ef1bb0cd6825d8dbe465c8a5a26a76bc","commitMessage":"@@@MINOR: hygene cleanup in TransactionManagerTest (#5951)\n\n\nReviewers: Andras Katona <41361962+akatona84@users.noreply.github.com>.  Manikumar Reddy <manikumar.reddy@gmail.com>","date":"2018-12-03 13:32:05","modifiedFileCount":"1","status":"M","submitter":"Viktor Somogyi"},{"authorTime":"2019-09-06 14:07:42","codes":[{"authorDate":"2018-12-03 13:32:05","commitOrder":6,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","date":"2018-12-03 13:32:05","endLine":2401,"groupId":"11798","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b8/f5caedcb243a11d42eccbf12847674a14e07fd.src","preCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2389,"status":"N"},{"authorDate":"2019-09-06 14:07:42","commitOrder":6,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.data.groupId());\n            assertEquals(producerId, txnOffsetCommitRequest.data.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.data.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","date":"2019-09-06 14:07:42","endLine":2834,"groupId":"5632","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3d/33a43e60d567c2823cd9753cd6a4d8c664c678.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.consumerGroupId());\n            assertEquals(producerId, txnOffsetCommitRequest.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2823,"status":"M"}],"commitId":"c0019e653891182d7a95464175c9b4ef63f8bae1","commitMessage":"@@@KAFKA-8590; Use automated TxnOffsetCommit type and add tests for OffsetCommit  (#6994)\n\nThis PR changes the TxnOffsetCommit protocol to auto-generated types.  and add more unit test coverage to the plain OffsetCommit protocol.\n\nReviewers: Jason Gustafson <jason@confluent.io>","date":"2019-09-06 14:07:42","modifiedFileCount":"11","status":"M","submitter":"Boyang Chen"},{"authorTime":"2019-09-06 14:07:42","codes":[{"authorDate":"2020-04-11 19:54:53","commitOrder":7,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.data.groupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.data.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.data.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.data.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(\n            new AddOffsetsToTxnResponseData()\n                .setErrorCode(error.code()))\n        );\n    }\n","date":"2020-04-11 19:54:53","endLine":3271,"groupId":"22614","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/56/50110f1668799780cfd181ac413e702fdc11fa.src","preCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.consumerGroupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(0, error));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":3256,"status":"M"},{"authorDate":"2019-09-06 14:07:42","commitOrder":7,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.data.groupId());\n            assertEquals(producerId, txnOffsetCommitRequest.data.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.data.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","date":"2019-09-06 14:07:42","endLine":2834,"groupId":"5632","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3d/33a43e60d567c2823cd9753cd6a4d8c664c678.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.data.groupId());\n            assertEquals(producerId, txnOffsetCommitRequest.data.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.data.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2823,"status":"N"}],"commitId":"430e00ea95da959d6d8308dd49c4ed1cdffa7914","commitMessage":"@@@KAFKA-8436: use automated protocol for AddOffsetsToTxn  (#7015)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>","date":"2020-04-11 19:54:53","modifiedFileCount":"8","status":"M","submitter":"Boyang Chen"},{"authorTime":"2020-12-15 21:33:36","codes":[{"authorDate":"2020-12-15 21:33:36","commitOrder":8,"curCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.data().groupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.data().transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.data().producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.data().producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(\n            new AddOffsetsToTxnResponseData()\n                .setErrorCode(error.code()))\n        );\n    }\n","date":"2020-12-15 21:33:36","endLine":3456,"groupId":"123638","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareAddOffsetsToTxnResponse","params":"(finalErrorserror@finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c2/977ea9f66d10a83c4bd8800a036e7e6968a0cd.src","preCode":"    private void prepareAddOffsetsToTxnResponse(final Errors error,\n                                                final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch) {\n        client.prepareResponse(body -> {\n            AddOffsetsToTxnRequest addOffsetsToTxnRequest = (AddOffsetsToTxnRequest) body;\n            assertEquals(consumerGroupId, addOffsetsToTxnRequest.data.groupId());\n            assertEquals(transactionalId, addOffsetsToTxnRequest.data.transactionalId());\n            assertEquals(producerId, addOffsetsToTxnRequest.data.producerId());\n            assertEquals(producerEpoch, addOffsetsToTxnRequest.data.producerEpoch());\n            return true;\n        }, new AddOffsetsToTxnResponse(\n            new AddOffsetsToTxnResponseData()\n                .setErrorCode(error.code()))\n        );\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":3441,"status":"M"},{"authorDate":"2020-12-15 21:33:36","commitOrder":8,"curCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.data().groupId());\n            assertEquals(producerId, txnOffsetCommitRequest.data().producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.data().producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","date":"2020-12-15 21:33:36","endLine":3469,"groupId":"123638","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareTxnOffsetCommitResponse","params":"(finalStringconsumerGroupId@finallongproducerId@finalshortproducerEpoch@Map<TopicPartition@Errors>txnOffsetCommitResponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c2/977ea9f66d10a83c4bd8800a036e7e6968a0cd.src","preCode":"    private void prepareTxnOffsetCommitResponse(final String consumerGroupId,\n                                                final long producerId,\n                                                final short producerEpoch,\n                                                Map<TopicPartition, Errors> txnOffsetCommitResponse) {\n        client.prepareResponse(request -> {\n            TxnOffsetCommitRequest txnOffsetCommitRequest = (TxnOffsetCommitRequest) request;\n            assertEquals(consumerGroupId, txnOffsetCommitRequest.data.groupId());\n            assertEquals(producerId, txnOffsetCommitRequest.data.producerId());\n            assertEquals(producerEpoch, txnOffsetCommitRequest.data.producerEpoch());\n            return true;\n        }, new TxnOffsetCommitResponse(0, txnOffsetCommitResponse));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":3458,"status":"M"}],"commitId":"1a10c3445e157da1d2fd670c043f19c385465eb0","commitMessage":"@@@KAFKA-10525: Emit JSONs with new auto-generated schema (KIP-673) (#9526)\n\nThis patch updates the request logger to output request and response payloads in JSON. Payloads are converted to JSON based on their auto-generated schema.\n\nReviewers:  Lucas Bradstreet <lucas@confluent.io>.  David Mao <dmao@confluent.io>.  David Jacot <djacot@confluent.io>\n","date":"2020-12-15 21:33:36","modifiedFileCount":"124","status":"M","submitter":"Anastasia Vela"}]
