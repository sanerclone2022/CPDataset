[{"authorTime":"2018-02-02 02:27:59","codes":[{"authorDate":"2018-02-02 02:27:59","commitOrder":1,"curCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","date":"2018-02-02 02:27:59","endLine":75,"groupId":"11837","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a2/3e787198a62805df931cc9c3ff0648d9376e93.src","preCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2018-02-02 02:27:59","commitOrder":1,"curCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","date":"2018-02-02 02:27:59","endLine":75,"groupId":"11837","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/75/07d7a4def24a0ae9a49086b2796e32476ede74.src","preCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"86de4a86b87c1b45732303c07d263e317ffd0ebf","commitMessage":"@@@KAFKA-6378: For KStream-GlobalKTable joins let null KeyValueMapper results indicate no match (#4494)\n\nReviewers: Damian Guy <damian@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-02-02 02:27:59","modifiedFileCount":"4","status":"B","submitter":"Andy Bryant"},{"authorTime":"2018-02-02 02:27:59","codes":[{"authorDate":"2018-04-18 04:13:15","commitOrder":2,"curCode":"    public void setUp() {\n        final File stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","date":"2018-04-18 04:13:15","endLine":73,"groupId":"11837","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/85/1808ce37a7c53b715d327f4ebad9fe17a06246.src","preCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2018-02-02 02:27:59","commitOrder":2,"curCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","date":"2018-02-02 02:27:59","endLine":75,"groupId":"11837","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/75/07d7a4def24a0ae9a49086b2796e32476ede74.src","preCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"ac9c3ed0b43ee848e6e555a01c55ea2eee78540a","commitMessage":"@@@KAFKA-6376: preliminary cleanup (#4872)\n\nGeneral cleanup of Streams code.  mostly resolving compiler warnings and re-formatting.\n\nThe regular testing suite should be sufficient.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-04-18 04:13:15","modifiedFileCount":"57","status":"M","submitter":"John Roesler"},{"authorTime":"2018-04-27 02:30:42","codes":[{"authorDate":"2018-04-27 02:30:42","commitOrder":3,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n    }\n","date":"2018-04-27 02:30:42","endLine":83,"groupId":"11837","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5b/2a797b1e2cf7cb689584d8520a2410f909c228.src","preCode":"    public void setUp() {\n        final File stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-04-27 02:30:42","commitOrder":3,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-left-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n    }\n","date":"2018-04-27 02:30:42","endLine":80,"groupId":"11837","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/66/9f4c7712f0dc7b6a386c335fb68de936bcec89.src","preCode":"    public void setUp() throws IOException {\n        stateDir = TestUtils.tempDirectory(\"kafka-test\");\n\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        driver.setUp(builder, stateDir);\n        driver.setTime(0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"885abbfcd40aab57acec278d976956f07be15090","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [partial] (#4832)\n\n* Remove ProcessorTopologyTestDriver from TopologyTest\n* Fix ProcessorTopologyTest\n* Remove ProcessorTopologyTestDriver and InternalTopologyAccessor\n* Partially refactored StreamsBuilderTest but missing one test\n* Refactor KStreamBuilderTest\n* Refactor AbstractStreamTest\n* Further cleanup of AbstractStreamTest\n* Refactor GlobalKTableJoinsTest\n* Refactor InternalStreamsBuilderTest\n* Fix circular dependency in build.gradle\n* Refactor KGroupedStreamImplTest\n* Partial modifications to KGroupedTableImplTest\n* Refactor KGroupedTableImplTest\n* Refactor KStreamBranchTest\n* Refactor KStreamFilterTest\n* Refactor KStreamFlatMapTest KStreamFlatMapValuesTest\n* Refactor KStreamForeachTest\n* Refactor KStreamGlobalKTableJoinTest\n* Refactor KStreamGlobalKTableLeftJoinTest\n* Refactor KStreamImplTest\n* Refactor KStreamImplTest\n* Refactor KStreamKStreamJoinTest\n* Refactor KStreamKStreamLeftJoinTest\n* Refactor KStreamKTableJoinTest\n* Refactor KStreamKTableLeftJoinTest\n* Refactor KStreamMapTest and KStreamMapValuesTest\n* Refactor KStreamPeekTest and KStreamTransformTest\n* Refactor KStreamSelectKeyTest\n* Refactor KStreamTransformValuesTest\n* Refactor KStreamWindowAggregateTest\n* Add Depercation anotation to KStreamTestDriver and rollback failing tests in StreamsBuilderTest and KTableAggregateTest\n* Refactor KTableFilterTest\n* Refactor KTableForeachTest\n* Add getter for ProcessorTopology.  and simplify tests in StreamsBuilderTest\n* Refactor KTableImplTest\n* Remove unused imports\n* Refactor KTableAggregateTest\n* Fix style errors\n* Fix gradle build\n* Address reviewer comments:\n  - Remove properties new instance\n  - Remove extraneous line\n  - Remove unnecessary TopologyTestDriver instances from StreamsBuilderTest\n  - Move props.clear() to @After\n  - Clarify use of timestamp in KStreamFlatMapValuesTest\n  - Keep test using old Punctuator in KStreamTransformTest\n  - Add comment to clarify clock advances in KStreamTransformTest\n  - Add TopologyTestDriverWrapper class to access the protected constructor of TopologyTestDriver\n  - Revert KTableImplTest.testRepartition to KStreamTestDriver to avoid exposing the TopologyTestDriver processor topology\n  - Revert partially migrated classes: KTableAggregateTest.  KTableFilterTest.  and KTableImplTest\n* Rebase on current trunk an fix conflicts\n\nReviewers: Matthias J Sax <matthias@confluentio>.  Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>","date":"2018-04-27 02:30:42","modifiedFileCount":"33","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2018-05-04 23:42:01","codes":[{"authorDate":"2018-05-04 23:42:01","commitOrder":4,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-05-04 23:42:01","endLine":88,"groupId":"3768","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ec/31b5a1d607e962d696ec38bf66d4b46faea7d5.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-05-04 23:42:01","commitOrder":4,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-left-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-05-04 23:42:01","endLine":84,"groupId":"3768","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/73/5f71c2ef0c8a9a788f4548a76f6e03fddc7e8c.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        processor = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(processor);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-left-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"af983267be7a2d0f81527f5a348af377f30caee4","commitMessage":"@@@MINOR: Removed deprecated schedule function (#4908)\n\nWhile working on this.  I also refactored the MockProcessor out of the MockProcessorSupplier to cleanup the unit test paths.\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2018-05-04 23:42:01","modifiedFileCount":"62","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-08 00:21:20","codes":[{"authorDate":"2018-05-08 00:21:20","commitOrder":5,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.topologyTestConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-05-08 00:21:20","endLine":79,"groupId":"5389","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0c/e27ab51cbf208ff669986fb2e5d442dca61e4d.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-05-08 00:21:20","commitOrder":5,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.topologyTestConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-05-08 00:21:20","endLine":75,"groupId":"5389","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ee/dda074a41a46eb28c672793c2c2e5cf6b19f41.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(intSerde, stringSerde);\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = new Properties();\n        props.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"kstream-ktable-left-join-test\");\n        props.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9091\");\n        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"6f641fef6a88036ab4dacb59ab21bc8b21ef9bcf","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [cleanup] (#4939)\n\n* Add method to create test properties to StreamsTestUtils\n* Make TopologyTestDriver protected constructor package-private\n* Add comment suggesting the use of TopologyTestDriver to KStreamTestDriver\n* Cleanup:\n    - GlobalKTableJoinsTest\n    - KGroupedStreamImplTest\n    - KGroupedTableImplTest\n    - KStreamBranchTest\n    - KStreamFilterTest\n    - KStreamFlatMapTest\n    - KStreamFlatMapValuesTest\n    - KStreamForeachTest\n    - KStreamGlobalKTableJoinTest\n    - KStreamGlobalKTableLeftJoinTest\n    - KStreamImplTest\n    - KStreamKStreamJoinTest\n    - KStreamKStreamLeftJoinTest\n    - KStreamGlobalKTableLeftJoinTest\n    - KStreamKTableJoinTest\n    - KStreamKTableLeftJoinTest\n    - KStreamMapTest\n    - KStreamMapValuesTest\n    - KStreamPeekTest\n    - StreamsBuilderTest\n    - KStreamSelectKeyTest\n    - KStreamTransformTest\n    - KStreamTransformValuesTest\n    - KStreamWindowAggregateTest\n    - KTableForeachTest\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-05-08 00:21:20","modifiedFileCount":"27","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2018-08-18 00:35:38","codes":[{"authorDate":"2018-08-18 00:35:38","commitOrder":6,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-08-18 00:35:38","endLine":79,"groupId":"5389","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/eb/6536d37a6bcd8c9cbad177ecb50db267449365.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.topologyTestConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-08-18 00:35:38","commitOrder":6,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2018-08-18 00:35:38","endLine":75,"groupId":"5389","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/57038b042bafea7e9669350fd0c5ec8947d30d.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.topologyTestConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"0d778987ee3b920b5c876696385c0792671adef8","commitMessage":"@@@KAFKA-6998: Disable Caching when max.cache.bytes are zero. (#5488)\n\n1) As titled.  add a rewriteTopology that 1) sets application id.  2) maybe disable caching.  3) adjust for source KTable. This optimization can hence be applied for both DSL or PAPI generated Topology.\n\n2) Defer the building of globalStateStores in rewriteTopology so that we can also disable caching. But we still need to build the state stores before InternalTopologyBuilder.build() since we should only build global stores once for all threads.\n\n3) Added withCachingDisabled to StoreBuilder.  it is a public API change.\n\n4) [Optional] Fixed unit test config setting functionalities.  and set the necessary config to shorten the unit test latency (now it reduces from 5min to 3.5min on my laptop).\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Ted Yu <yuzhihong@gmail.com>","date":"2018-08-18 00:35:38","modifiedFileCount":"59","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2019-03-20 08:27:32","codes":[{"authorDate":"2019-03-20 08:27:32","commitOrder":7,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-03-20 08:27:32","endLine":79,"groupId":"5389","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ef/36b6edb75b5fc251943485bc37319ea693de6d.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-03-20 08:27:32","commitOrder":7,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-03-20 08:27:32","endLine":74,"groupId":"5389","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e0/4da173328c0c4e87026d6f3cac56008569dcae.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props, 0L);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"b5ce093a24d0fe212b5d1374330fc720b4913bee","commitMessage":"@@@MINOR: capture result timestamps in Kafka Streams DSL tests (#6447)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>\n","date":"2019-03-20 08:27:32","modifiedFileCount":"29","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-10-07 16:01:58","codes":[{"authorDate":"2019-10-07 16:01:58","commitOrder":8,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-10-07 16:01:58","endLine":85,"groupId":"5389","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7d/71456395f9442ce9590e6d60eaf85d6831a942.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-10-07 16:01:58","commitOrder":8,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-10-07 16:01:58","endLine":81,"groupId":"5389","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/30/e0ff86e11bc6ccc9060c478a9a564d55545ed0.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"a5a6938c69f4310f7ec519036f0df77d8022326a","commitMessage":"@@@KAFKA-8233: TopologyTestDriver test input and output usability improvements (#7378)\n\nImplements KIP-470\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2019-10-07 16:01:58","modifiedFileCount":"47","status":"M","submitter":"Jukka Karvanen"},{"authorTime":"2019-10-07 16:01:58","codes":[{"authorDate":"2019-10-20 04:45:36","commitOrder":9,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-10-20 04:45:36","endLine":86,"groupId":"101649","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7b/ee745d2cc0d5d581024e439ef6e386d0033593.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.join(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-10-07 16:01:58","commitOrder":9,"curCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","date":"2019-10-07 16:01:58","endLine":81,"groupId":"101649","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/30/e0ff86e11bc6ccc9060c478a9a564d55545ed0.src","preCode":"    public void setUp() {\n        builder = new StreamsBuilder();\n\n        final KStream<Integer, String> stream;\n        final KTable<Integer, String> table;\n\n        final MockProcessorSupplier<Integer, String> supplier = new MockProcessorSupplier<>();\n        final Consumed<Integer, String> consumed = Consumed.with(Serdes.Integer(), Serdes.String());\n        stream = builder.stream(streamTopic, consumed);\n        table = builder.table(tableTopic, consumed);\n        stream.leftJoin(table, MockValueJoiner.TOSTRING_JOINER).process(supplier);\n\n        final Properties props = StreamsTestUtils.getStreamsConfig(Serdes.Integer(), Serdes.String());\n        driver = new TopologyTestDriver(builder.build(), props);\n        inputStreamTopic = driver.createInputTopic(streamTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n        inputTableTopic = driver.createInputTopic(tableTopic, new IntegerSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);\n\n        processor = supplier.theCapturedProcessor();\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"2298c7f84fd0e29b304eb11078bfe76ca5b04a97","commitMessage":"@@@KAFKA-8964: Refactor thread-level metrics depending on built-in metrics version (#7474)\n\n* Made commit-over-tasks sensor and skipped-records sensor optional since they are removed in the latest version\n* Refactored methods for sensor creation\n* Adapted unit and integration tests\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>","date":"2019-10-20 04:45:36","modifiedFileCount":"50","status":"M","submitter":"Bruno Cadonna"}]
