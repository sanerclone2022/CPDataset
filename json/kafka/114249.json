[{"authorTime":"2018-06-13 03:52:51","codes":[{"authorDate":"2018-06-13 03:52:51","commitOrder":1,"curCode":"    public ConfigData get(String path) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            Enumeration<Object> keys = properties.keys();\n            while (keys.hasMoreElements()) {\n                String key = keys.nextElement().toString();\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","date":"2018-06-13 03:52:51","endLine":69,"groupId":"20188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"get","params":"(Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d2/5183a80119a464efc4202c5f30c7dc28b139db.src","preCode":"    public ConfigData get(String path) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            Enumeration<Object> keys = properties.keys();\n            while (keys.hasMoreElements()) {\n                String key = keys.nextElement().toString();\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/config/provider/FileConfigProvider.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2018-06-13 03:52:51","commitOrder":1,"curCode":"    public ConfigData get(String path, Set<String> keys) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            for (String key : keys) {\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","date":"2018-06-13 03:52:51","endLine":96,"groupId":"8476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"get","params":"(Stringpath@Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d2/5183a80119a464efc4202c5f30c7dc28b139db.src","preCode":"    public ConfigData get(String path, Set<String> keys) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            for (String key : keys) {\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/config/provider/FileConfigProvider.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"16190e9bfd2db13a886b4122127fbe4f96ed8f65","commitMessage":"@@@MINOR: Move FileConfigProvider to provider subpackage (#5194)\n\nThis moves FileConfigProvider to the org.apache.common.config.provider package to more easily isolate provider implementations going forward.\n\nReviewers: Konstantine Karantasis <konstantine@confluent.io>.  Randall Hauch <rhauch@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>","date":"2018-06-13 03:52:51","modifiedFileCount":"16","status":"B","submitter":"Robert Yokota"},{"authorTime":"2021-08-05 00:56:37","codes":[{"authorDate":"2021-08-05 00:56:37","commitOrder":2,"curCode":"    public ConfigData get(String path) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            Enumeration<Object> keys = properties.keys();\n            while (keys.hasMoreElements()) {\n                String key = keys.nextElement().toString();\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path, e);\n        }\n    }\n","date":"2021-08-05 00:56:37","endLine":67,"groupId":"114249","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"get","params":"(Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/39/20da083d68fd6622968bedf2c4ad72359a6173.src","preCode":"    public ConfigData get(String path) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            Enumeration<Object> keys = properties.keys();\n            while (keys.hasMoreElements()) {\n                String key = keys.nextElement().toString();\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/config/provider/FileConfigProvider.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2021-08-05 00:56:37","commitOrder":2,"curCode":"    public ConfigData get(String path, Set<String> keys) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            for (String key : keys) {\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path, e);\n        }\n    }\n","date":"2021-08-05 00:56:37","endLine":94,"groupId":"114249","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"get","params":"(Stringpath@Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/39/20da083d68fd6622968bedf2c4ad72359a6173.src","preCode":"    public ConfigData get(String path, Set<String> keys) {\n        Map<String, String> data = new HashMap<>();\n        if (path == null || path.isEmpty()) {\n            return new ConfigData(data);\n        }\n        try (Reader reader = reader(path)) {\n            Properties properties = new Properties();\n            properties.load(reader);\n            for (String key : keys) {\n                String value = properties.getProperty(key);\n                if (value != null) {\n                    data.put(key, value);\n                }\n            }\n            return new ConfigData(data);\n        } catch (IOException e) {\n            throw new ConfigException(\"Could not read properties from file \" + path);\n        }\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/config/provider/FileConfigProvider.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"ad13c66d8e98cc526e97ec8ec6b5f5cea96dc275","commitMessage":"@@@MINOR: FileConfigProvider#get should keep failure exception (#11130)\n\nReviewers: Luke Chen <showuon@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2021-08-05 00:56:37","modifiedFileCount":"1","status":"M","submitter":"Colin Patrick McCabe"}]
