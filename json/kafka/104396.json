[{"authorTime":"2020-09-23 02:32:44","codes":[{"authorDate":"2020-09-23 02:32:44","commitOrder":1,"curCode":"    public void testFollowerToCandidate() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToCandidate();\n        assertTrue(state.isCandidate());\n        CandidateState candidateState = state.candidateStateOrThrow();\n        assertEquals(9, candidateState.epoch());\n        assertEquals(electionTimeoutMs + jitterMs,\n            candidateState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","date":"2020-09-23 02:32:44","endLine":741,"groupId":"2833","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFollowerToCandidate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/56e16d43af8827a5bcb302daa03bc6bbbf19ff.src","preCode":"    public void testFollowerToCandidate() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToCandidate();\n        assertTrue(state.isCandidate());\n        CandidateState candidateState = state.candidateStateOrThrow();\n        assertEquals(9, candidateState.epoch());\n        assertEquals(electionTimeoutMs + jitterMs,\n            candidateState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","realPath":"raft/src/test/java/org/apache/kafka/raft/QuorumStateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":725,"status":"B"},{"authorDate":"2020-09-23 02:32:44","commitOrder":1,"curCode":"    public void testFollowerToVotedHigherEpoch() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToVoted(9, node1);\n        assertTrue(state.isVoted());\n        VotedState votedState = state.votedStateOrThrow();\n        assertEquals(9, votedState.epoch());\n        assertEquals(node1, votedState.votedId());\n        assertEquals(electionTimeoutMs + jitterMs,\n            votedState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","date":"2020-09-23 02:32:44","endLine":805,"groupId":"12715","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFollowerToVotedHigherEpoch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/56e16d43af8827a5bcb302daa03bc6bbbf19ff.src","preCode":"    public void testFollowerToVotedHigherEpoch() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToVoted(9, node1);\n        assertTrue(state.isVoted());\n        VotedState votedState = state.votedStateOrThrow();\n        assertEquals(9, votedState.epoch());\n        assertEquals(node1, votedState.votedId());\n        assertEquals(electionTimeoutMs + jitterMs,\n            votedState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","realPath":"raft/src/test/java/org/apache/kafka/raft/QuorumStateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":788,"status":"B"}],"commitId":"b7c8490cf47b0c18253d6a776b2b35c76c71c65d","commitMessage":"@@@KAFKA-10492; Core Kafka Raft Implementation (KIP-595) (#9130)\n\nThis is the core Raft implementation specified by KIP-595: https://cwiki.apache.org/confluence/display/KAFKA/KIP-595%3A+A+Raft+Protocol+for+the+Metadata+Quorum. We have created a separate \"raft\" module where most of the logic resides. The new APIs introduced in this patch in order to support Raft election and such are disabled in the server until the integration with the controller is complete. Until then.  there is a standalone server which can be used for testing the performance of the Raft implementation. See `raft/README.md` for details.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Boyang Chen <boyang@confluent.io>\n\nCo-authored-by: Boyang Chen <boyang@confluent.io>\nCo-authored-by: Guozhang Wang <wangguoz@gmail.com> ","date":"2020-09-23 02:32:44","modifiedFileCount":"24","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2021-09-06 23:55:52","codes":[{"authorDate":"2021-09-06 23:55:52","commitOrder":2,"curCode":"    public void testFollowerToCandidate() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        random.mockNextInt(electionTimeoutMs, jitterMs);\n        state.transitionToCandidate();\n        assertTrue(state.isCandidate());\n        CandidateState candidateState = state.candidateStateOrThrow();\n        assertEquals(9, candidateState.epoch());\n        assertEquals(electionTimeoutMs + jitterMs,\n            candidateState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","date":"2021-09-06 23:55:52","endLine":807,"groupId":"104396","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFollowerToCandidate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/63a5d763c04f982af05acc039351373ee8ef9c.src","preCode":"    public void testFollowerToCandidate() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToCandidate();\n        assertTrue(state.isCandidate());\n        CandidateState candidateState = state.candidateStateOrThrow();\n        assertEquals(9, candidateState.epoch());\n        assertEquals(electionTimeoutMs + jitterMs,\n            candidateState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","realPath":"raft/src/test/java/org/apache/kafka/raft/QuorumStateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"M"},{"authorDate":"2021-09-06 23:55:52","commitOrder":2,"curCode":"    public void testFollowerToVotedHigherEpoch() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        random.mockNextInt(electionTimeoutMs, jitterMs);\n        state.transitionToVoted(9, node1);\n        assertTrue(state.isVoted());\n        VotedState votedState = state.votedStateOrThrow();\n        assertEquals(9, votedState.epoch());\n        assertEquals(node1, votedState.votedId());\n        assertEquals(electionTimeoutMs + jitterMs,\n            votedState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","date":"2021-09-06 23:55:52","endLine":871,"groupId":"104396","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFollowerToVotedHigherEpoch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/63a5d763c04f982af05acc039351373ee8ef9c.src","preCode":"    public void testFollowerToVotedHigherEpoch() throws IOException {\n        int node1 = 1;\n        int node2 = 2;\n        Set<Integer> voters = Utils.mkSet(localId, node1, node2);\n        QuorumState state = initializeEmptyState(voters);\n        state.initialize(new OffsetAndEpoch(0L, logEndEpoch));\n        state.transitionToFollower(8, node2);\n\n        int jitterMs = 2500;\n        Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs);\n        state.transitionToVoted(9, node1);\n        assertTrue(state.isVoted());\n        VotedState votedState = state.votedStateOrThrow();\n        assertEquals(9, votedState.epoch());\n        assertEquals(node1, votedState.votedId());\n        assertEquals(electionTimeoutMs + jitterMs,\n            votedState.remainingElectionTimeMs(time.milliseconds()));\n    }\n","realPath":"raft/src/test/java/org/apache/kafka/raft/QuorumStateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":854,"status":"M"}],"commitId":"0118330103e992253a7875a523de3526cad4a6c5","commitMessage":"@@@KAFKA-13273: Add support for Java 17 (#11296)\n\nJava 17 is at release candidate stage and it will be a LTS release once\nit's out (previous LTS release was Java 11).\n\nDetails:\n* Replace Java 16 with Java 17 in Jenkins and Readme.\n* Replace `--illegal-access=permit` (which was removed from Java 17)\n   with  `--add-opens` for the packages we require internal access to.\n   Filed KAFKA-13275 for updating the tests not to require `--add-opens`\n   (where possible).\n* Update `release.py` to use JDK8. and JDK 17 (instead of JDK 8 and JDK 15).\n* Removed all but one Streams test from `testsToExclude`. The\n   Connect test exclusion list remains the same.\n* Add notable change to upgrade.html\n* Upgrade to Gradle 7.2 as it's required for proper Java 17 support.\n* Upgrade mockito to 3.12.4 for better Java 17 support.\n* Adjusted `KafkaRaftClientTest` and `QuorumStateTest` not to require\n   private access to `jdk.internal.util.random`.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>.  Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-09-06 23:55:52","modifiedFileCount":"3","status":"M","submitter":"Ismael Juma"}]
