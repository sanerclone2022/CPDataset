[{"authorTime":"2016-04-19 01:50:58","codes":[{"authorDate":"2016-04-19 01:50:58","commitOrder":2,"curCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.putConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.<Map<String, String>>isNull(), EasyMock.eq(true), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-04-19 01:50:58","endLine":237,"groupId":"8060","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fa/7d997924c722d63e5c07f4c321d135a08fc6f7.src","preCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.putConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.<Map<String, String>>isNull(), EasyMock.eq(true), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"MB"},{"authorDate":"2016-04-19 01:50:58","commitOrder":2,"curCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-04-19 01:50:58","endLine":357,"groupId":"10663","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fa/7d997924c722d63e5c07f4c321d135a08fc6f7.src","preCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"B"}],"commitId":"89c67727c2793bf56b0b005a7d758beebedb5aed","commitMessage":"@@@KAFKA-3506: Kafka Connect restart APIs\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1189 from hachikuji/KAFKA-3506\n","date":"2016-04-19 01:50:58","modifiedFileCount":"12","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2016-04-19 01:50:58","codes":[{"authorDate":"2016-11-13 08:11:04","commitOrder":3,"curCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-11-13 08:11:28","endLine":255,"groupId":"10663","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1c/8bd380d64867d405a06b498d3465acb1509023.src","preCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.putConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.<Map<String, String>>isNull(), EasyMock.eq(true), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2016-04-19 01:50:58","commitOrder":3,"curCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-04-19 01:50:58","endLine":357,"groupId":"10663","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fa/7d997924c722d63e5c07f4c321d135a08fc6f7.src","preCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"N"}],"commitId":"b7d36b7261ddefea68667a65cc5e2ee0734ed4a1","commitMessage":"@@@KAFKA-3829: Ensure valid configuration prior to creating connector\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Shikhar Bhushan <shikhar@schmizz.net>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1911 from hachikuji/KAFKA-3829\n","date":"2016-11-13 08:11:28","modifiedFileCount":"15","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-06-04 10:06:00","codes":[{"authorDate":"2019-06-04 10:06:00","commitOrder":4,"curCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-06-04 10:06:00","endLine":453,"groupId":"10663","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/90df03afb6d6b896a49f72d47a6b70d82ca8f9.src","preCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"M"},{"authorDate":"2019-06-04 10:06:00","commitOrder":4,"curCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-06-04 10:06:00","endLine":661,"groupId":"10663","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/90df03afb6d6b896a49f72d47a6b70d82ca8f9.src","preCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":651,"status":"M"}],"commitId":"1a3fe9aa52555eb24ce692963e4461d6f05b771d","commitMessage":"@@@KAFKA-8404: Add HttpHeader to RestClient HTTP Request and Connector REST API (#6791)\n\nWhen Connect forwards a REST request from one worker to another.  the Authorization header was not forwarded. This commit changes the Connect framework to add include the authorization header when forwarding requests to other workers.\n\nAuthor: Hai-Dang Dam <damquanghaidang@gmail.com>\nReviewers: Robert Yokota <rayokota@gmail.com>.  Randall Hauch <rhauch@gmail.com>\n","date":"2019-06-04 10:06:00","modifiedFileCount":"7","status":"M","submitter":"Hai-Dang Dam"},{"authorTime":"2021-01-10 20:20:13","codes":[{"authorDate":"2021-01-10 20:20:13","commitOrder":5,"curCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () -> connectorsResource.destroyConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD));\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-01-10 20:20:13","endLine":477,"groupId":"10663","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/94/692437252b07f44f63ee3d4b5dd85b782d6fa2.src","preCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.destroyConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2021-01-10 20:20:13","commitOrder":5,"curCode":"    public void testRestartConnectorNotFound() {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () -> connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD));\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-01-10 20:20:13","endLine":736,"groupId":"10663","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/94/692437252b07f44f63ee3d4b5dd85b782d6fa2.src","preCode":"    public void testRestartConnectorNotFound() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"M"}],"commitId":"913a019d6c9b03eb44706deb7fb164f79c1f601f","commitMessage":"@@@MINOR: replace test \"expected\" parameter by assertThrows (#9520)\n\nThis PR includes following changes.\n\n1. @Test(expected = Exception.class) is replaced by assertThrows\n2. remove reference to org.scalatest.Assertions\n3. change the magic code from 1 to 2 for testAppendAtInvalidOffset to test ZSTD\n4. rename testMaybeAddPartitionToTransactionXXXX to testNotReadyForSendXXX\n5. increase maxBlockMs from 1s to 3s to avoid unexpected timeout from TransactionsTest#testTimeout\n\nReviewers: Ismael Juma <ismael@confluent.io>","date":"2021-01-10 20:20:13","modifiedFileCount":"166","status":"M","submitter":"Chia-Ping Tsai"},{"authorTime":"2021-07-01 12:13:07","codes":[{"authorDate":"2021-01-10 20:20:13","commitOrder":6,"curCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () -> connectorsResource.destroyConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD));\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-01-10 20:20:13","endLine":477,"groupId":"104961","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/94/692437252b07f44f63ee3d4b5dd85b782d6fa2.src","preCode":"    public void testDeleteConnectorNotFound() throws Throwable {\n        final Capture<Callback<Herder.Created<ConnectorInfo>>> cb = Capture.newInstance();\n        herder.deleteConnectorConfig(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () -> connectorsResource.destroyConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD));\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"N"},{"authorDate":"2021-07-01 12:13:07","commitOrder":6,"curCode":"    public void testRestartConnectorNotFound() {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () ->\n                connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, FORWARD)\n        );\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-01 12:13:07","endLine":863,"groupId":"104961","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/57/2c60a524d4cdf6dd6c889c5602cfbe0b569587.src","preCode":"    public void testRestartConnectorNotFound() {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackException(cb, new NotFoundException(\"not found\"));\n\n        PowerMock.replayAll();\n\n        assertThrows(NotFoundException.class, () -> connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, FORWARD));\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":851,"status":"M"}],"commitId":"527ba111c73aa32deaef102fc953f3d20a8670d7","commitMessage":"@@@KAFKA-4793: Connect API to restart connector and tasks (KIP-745) (#10822)\n\nImplements KIP-745 https://cwiki.apache.org/confluence/display/KAFKA/KIP-745%3A+Connect+API+to+restart+connector+and+tasks to change connector REST API to restart a connector and its tasks as a whole.\n\nTesting strategy \n- [x]  Unit tests added for all possible combinations of onlyFailed and includeTasks\n- [x]  Integration tests added for all possible combinations of onlyFailed and includeTasks\n- [x]  System tests for happy path \n\nReviewers: Randall Hauch <rhauch@gmail.com>.  Diego Erdody <erdody@gmail.com>.  Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-07-01 12:13:07","modifiedFileCount":"27","status":"M","submitter":"kpatelatwork"}]
