[{"authorTime":"2020-04-01 07:39:28","codes":[{"authorDate":"2020-04-01 07:39:28","commitOrder":2,"curCode":"    public static Sensor processRatioSensor(final String threadId,\n                                            final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, PROCESS + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            PROCESS + RATIO_SUFFIX,\n            PROCESS_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","date":"2020-04-01 07:39:28","endLine":246,"groupId":"3437","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"processRatioSensor","params":"(finalStringthreadId@finalStreamsMetricsImplstreamsMetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/41/929c2f0e41a02498660ded9c0357ce5c37b8e3.src","preCode":"    public static Sensor processRatioSensor(final String threadId,\n                                            final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, PROCESS + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            PROCESS + RATIO_SUFFIX,\n            PROCESS_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"MB"},{"authorDate":"2020-04-01 07:39:28","commitOrder":2,"curCode":"    public static Sensor commitRatioSensor(final String threadId,\n                                           final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, COMMIT + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            COMMIT + RATIO_SUFFIX,\n            COMMIT_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","date":"2020-04-01 07:39:28","endLine":291,"groupId":"3440","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"commitRatioSensor","params":"(finalStringthreadId@finalStreamsMetricsImplstreamsMetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/41/929c2f0e41a02498660ded9c0357ce5c37b8e3.src","preCode":"    public static Sensor commitRatioSensor(final String threadId,\n                                           final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, COMMIT + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            COMMIT + RATIO_SUFFIX,\n            COMMIT_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"MB"}],"commitId":"353aa6206d43b4923d21510797709bbbb210f6b6","commitMessage":"@@@KAFKA-9753: Add active tasks process ratio (#8370)\n\nMeasure the percentage ratio the stream thread spent on processing each task among all assigned active tasks (KIP-444). Also add unit tests to cover the added metrics in this PR and the previous #8358. Also trying to fix the flaky test reported in KAFKA-5842\n\nCo-authored-by: John Roesler <vvcephei@apache.org>\n\nReviewers: Bruno Cadonna <bruno@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-04-01 07:39:28","modifiedFileCount":"12","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2021-06-01 20:05:08","codes":[{"authorDate":"2021-06-01 20:05:08","commitOrder":3,"curCode":"    public static Sensor processRatioSensor(final String threadId,\n                                            final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, PROCESS + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            THREAD_LEVEL_GROUP,\n            tagMap,\n            PROCESS + RATIO_SUFFIX,\n            PROCESS_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","date":"2021-06-01 20:05:08","endLine":266,"groupId":"103090","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"processRatioSensor","params":"(finalStringthreadId@finalStreamsMetricsImplstreamsMetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/cb10f09f59305a8d92b999a10b94c9472d9ce5.src","preCode":"    public static Sensor processRatioSensor(final String threadId,\n                                            final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, PROCESS + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            PROCESS + RATIO_SUFFIX,\n            PROCESS_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-06-01 20:05:08","commitOrder":3,"curCode":"    public static Sensor commitRatioSensor(final String threadId,\n                                           final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, COMMIT + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            THREAD_LEVEL_GROUP,\n            tagMap,\n            COMMIT + RATIO_SUFFIX,\n            COMMIT_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","date":"2021-06-01 20:05:08","endLine":311,"groupId":"103090","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"commitRatioSensor","params":"(finalStringthreadId@finalStreamsMetricsImplstreamsMetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/cb10f09f59305a8d92b999a10b94c9472d9ce5.src","preCode":"    public static Sensor commitRatioSensor(final String threadId,\n                                           final StreamsMetricsImpl streamsMetrics) {\n        final Sensor sensor =\n            streamsMetrics.threadLevelSensor(threadId, COMMIT + RATIO_SUFFIX, Sensor.RecordingLevel.INFO);\n        final Map<String, String> tagMap = streamsMetrics.threadLevelTagMap(threadId);\n        addValueMetricToSensor(\n            sensor,\n            threadLevelGroup(streamsMetrics),\n            tagMap,\n            COMMIT + RATIO_SUFFIX,\n            COMMIT_RATIO_DESCRIPTION\n        );\n        return sensor;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"}],"commitId":"cfe642edee80977173279f4a41e23aa822b9d19f","commitMessage":"@@@KAFKA-12519: Remove built-in Streams metrics for versions 0.10.0-2.4 (#10765)\n\nAs specified in KIP-743.  this PR removes the built-in metrics\nin Streams that are superseded by the refactoring proposed in KIP-444.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Luke Chen <showuon@gmail.com>","date":"2021-06-01 20:05:08","modifiedFileCount":"73","status":"M","submitter":"Bruno Cadonna"}]
