[{"authorTime":"2020-04-10 07:52:41","codes":[{"authorDate":"2019-05-31 00:46:12","commitOrder":3,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kgroupedstream-test-\" + testNo);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","date":"2019-05-31 00:46:12","endLine":249,"groupId":"5402","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keyDeserializer@finalDeserializer<V>valueDeserializer@finalList<KeyValueTimestamp<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/61/f6356853a3a45b3cc300ecac8b3679e40f6689.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kgroupedstream-test-\" + testNo);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationDedupIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"NB"},{"authorDate":"2020-04-10 07:52:41","commitOrder":3,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kstream-repartition-test-\" + TEST_NUM.get());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","date":"2020-04-10 07:52:41","endLine":825,"groupId":"5402","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keySerializer@finalDeserializer<V>valueSerializer@finalList<KeyValue<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/90/7d4c830102b67133d93cecee4d6c30aa02111c.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kstream-repartition-test-\" + TEST_NUM.get());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":803,"status":"B"}],"commitId":"e131a9963484e46f45a7302267507ed54dab6871","commitMessage":"@@@KAFKA-8611: Add KStream#repartition operation (#7170)\n\nImplements KIP-221.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  John Roesler <john@confluent.io>.  A. Sophie Blee-Goldman <sophie@confluent.io>","date":"2020-04-10 07:52:41","modifiedFileCount":"23","status":"M","submitter":"Levani Kokhreidze"},{"authorTime":"2020-04-23 05:29:23","codes":[{"authorDate":"2020-04-23 05:29:23","commitOrder":4,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kgroupedstream-test-\" + testName.getMethodName());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","date":"2020-04-23 05:29:23","endLine":252,"groupId":"5402","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keyDeserializer@finalDeserializer<V>valueDeserializer@finalList<KeyValueTimestamp<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/91/2e4977a4158c9bbb15c29bd75fb0d9ee806c40.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kgroupedstream-test-\" + testNo);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationDedupIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2020-04-23 05:29:23","commitOrder":4,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kstream-repartition-test-\" + testName.getMethodName());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","date":"2020-04-23 05:29:23","endLine":833,"groupId":"5402","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keySerializer@finalDeserializer<V>valueSerializer@finalList<KeyValue<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/d75d1ebd0e36935efb6864e96f05358a48c5ce.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kstream-repartition-test-\" + TEST_NUM.get());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":811,"status":"M"}],"commitId":"fbd8cf0d861dec5b7bac237e8221cfae51bec14a","commitMessage":"@@@KAFKA-9388: Refactor integration tests to always use different application ids (#8530)\n\nWhen debugging KAFKA-9388.  I found the reason that the second test method test takes much longer (10s) than the previous one (~500ms) is because they used the same app.id. When the previous clients are shutdown.  they would not send leave-group and hence we are still depending on the session timeout (10s) for the members to be removed out of the group.\n\nWhen the second test is triggered.  they will join the same group because of the same application id.  and the prepare-rebalance phase would would for the full rebalance timeout before it kicks out the previous members.\n\nSetting different application ids could resolve such issues for integration tests --- I did a quick search and found some other integration tests have the same issue. And after this PR my local unit test runtime reduced from about 14min to 7min.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  John Roesler <john@confluent.io>","date":"2020-04-23 05:29:23","modifiedFileCount":"22","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2020-04-30 06:11:49","codes":[{"authorDate":"2020-04-30 06:11:49","commitOrder":5,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","date":"2020-04-30 06:11:49","endLine":255,"groupId":"5402","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keyDeserializer@finalDeserializer<V>valueDeserializer@finalList<KeyValueTimestamp<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/db/e0b047a7a97992aec94115bb29dd2c62330a9e.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kgroupedstream-test-\" + testName.getMethodName());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationDedupIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2020-04-30 06:11:49","commitOrder":5,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","date":"2020-04-30 06:11:49","endLine":831,"groupId":"5402","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keySerializer@finalDeserializer<V>valueSerializer@finalList<KeyValue<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6b/b1269cc9477ecad10e13737ac5e63fdac05efb.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"kstream-repartition-test-\" + testName.getMethodName());\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"}],"commitId":"dc4d439825b2d117707b01c7c64769e700246fc6","commitMessage":"@@@KAFKA-9875: Make integration tests more resilient (#8578)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>","date":"2020-04-30 06:11:49","modifiedFileCount":"25","status":"M","submitter":"John Roesler"},{"authorTime":"2020-05-08 14:01:11","codes":[{"authorDate":"2020-05-08 14:01:11","commitOrder":6,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n            throws Exception {\n\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","date":"2020-05-08 14:01:11","endLine":256,"groupId":"102640","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keyDeserializer@finalDeserializer<V>valueDeserializer@finalList<KeyValueTimestamp<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/80/b339689cbbae6d8976a2c853cb0429f8c983f5.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keyDeserializer,\n                                                 final Deserializer<V> valueDeserializer,\n                                                 final List<KeyValueTimestamp<K, V>> expectedRecords)\n        throws InterruptedException {\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer.getClass().getName());\n        consumerProperties.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer.getClass().getName());\n\n        IntegrationTestUtils.waitUntilFinalKeyValueTimestampRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationDedupIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2020-05-08 14:01:11","commitOrder":6,"curCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws Exception {\n\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","date":"2020-05-08 14:01:11","endLine":831,"groupId":"102640","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateReceivedMessages","params":"(finalDeserializer<K>keySerializer@finalDeserializer<V>valueSerializer@finalList<KeyValue<K@V>>expectedRecords)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/17/7d6db4a8d312ac1ca6a81d926eb42e17250d91.src","preCode":"    private <K, V> void validateReceivedMessages(final Deserializer<K> keySerializer,\n                                                 final Deserializer<V> valueSerializer,\n                                                 final List<KeyValue<K, V>> expectedRecords) throws InterruptedException {\n\n        final String safeTestName = safeUniqueTestName(getClass(), testName);\n        final Properties consumerProperties = new Properties();\n        consumerProperties.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerProperties.setProperty(ConsumerConfig.GROUP_ID_CONFIG, \"group-\" + safeTestName);\n        consumerProperties.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n        consumerProperties.setProperty(\n            ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,\n            keySerializer.getClass().getName()\n        );\n        consumerProperties.setProperty(\n            ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG,\n            valueSerializer.getClass().getName()\n        );\n\n        IntegrationTestUtils.waitUntilFinalKeyValueRecordsReceived(\n            consumerProperties,\n            outputTopic,\n            expectedRecords\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"}],"commitId":"611831b051080543d94ef5bea9b3aa02b4992140","commitMessage":"@@@KAFKA-9928: Fix flaky GlobalKTableEOSIntegrationTest (#8600)\n\nReviewer: Guozhang Wang <guozhang@confluent.io>","date":"2020-05-08 14:01:11","modifiedFileCount":"7","status":"M","submitter":"Matthias J. Sax"}]
