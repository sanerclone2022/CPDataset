[{"authorTime":"2019-05-03 08:44:53","codes":[{"authorDate":"2019-02-26 23:22:25","commitOrder":5,"curCode":"    public void shouldExtractGraceFromKStreamWindowAggregateNode() {\n        final TimeWindows windows = TimeWindows.of(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> node = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamWindowAggregate<String, Long, Integer, TimeWindow>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs()));\n    }\n","date":"2019-02-26 23:22:25","endLine":99,"groupId":"8226","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExtractGraceFromKStreamWindowAggregateNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/61c73837ce271d3ff944f5f73bec34f3ee2953.src","preCode":"    public void shouldExtractGraceFromKStreamWindowAggregateNode() {\n        final TimeWindows windows = TimeWindows.of(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> node = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamWindowAggregate<String, Long, Integer, TimeWindow>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs()));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"NB"},{"authorDate":"2019-05-03 08:44:53","commitOrder":5,"curCode":"    public void shouldExtractGraceFromSessionAncestorThroughStatelessParent() {\n        final SessionWindows windows = SessionWindows.with(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> graceGrandparent = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamSessionWindowAggregate<String, Long, Integer>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final ProcessorGraphNode<String, Long> statelessParent = new ProcessorGraphNode<>(\"stateless\", null);\n        graceGrandparent.addChild(statelessParent);\n\n        final ProcessorGraphNode<String, Long> node = new ProcessorGraphNode<>(\"stateless\", null);\n        statelessParent.addChild(node);\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs() + windows.inactivityGap()));\n    }\n","date":"2019-05-03 08:44:53","endLine":187,"groupId":"17451","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExtractGraceFromSessionAncestorThroughStatelessParent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/42/80e9cac0d3c64665ac62b67e2a518290067b9b.src","preCode":"    public void shouldExtractGraceFromSessionAncestorThroughStatelessParent() {\n        final SessionWindows windows = SessionWindows.with(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> graceGrandparent = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamSessionWindowAggregate<String, Long, Integer>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final ProcessorGraphNode<String, Long> statelessParent = new ProcessorGraphNode<>(\"stateless\", null);\n        graceGrandparent.addChild(statelessParent);\n\n        final ProcessorGraphNode<String, Long> node = new ProcessorGraphNode<>(\"stateless\", null);\n        statelessParent.addChild(node);\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs() + windows.inactivityGap()));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"eab855541a4b776b150a849cecda9c758598cdca","commitMessage":"@@@KAFKA-8289: Fix Session Expiration and Suppression (#6654)\n\nFix two problems in Streams:\n\n* Session windows expired prematurely (off-by-one error).  since the window end is inclusive.  unlike other windows\n* Suppress duration for sessions incorrectly waited only the grace period.  but session windows aren't closed until gracePeriod + sessionGap\n\nUpdate the tests accordingly\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Boyang Chen <boyang@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-03 08:44:53","modifiedFileCount":"5","status":"M","submitter":"John Roesler"},{"authorTime":"2020-03-20 05:29:15","codes":[{"authorDate":"2020-03-20 05:29:15","commitOrder":6,"curCode":"    public void shouldExtractGraceFromKStreamWindowAggregateNode() {\n        final TimeWindows windows = TimeWindows.of(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> node = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamWindowAggregate<String, Long, Integer, TimeWindow>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<?>) null\n        );\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs()));\n    }\n","date":"2020-03-20 05:29:15","endLine":98,"groupId":"101416","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldExtractGraceFromKStreamWindowAggregateNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0d/75452a798fc2739368e573e19def4fb687a34e.src","preCode":"    public void shouldExtractGraceFromKStreamWindowAggregateNode() {\n        final TimeWindows windows = TimeWindows.of(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> node = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamWindowAggregate<String, Long, Integer, TimeWindow>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs()));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-03-20 05:29:15","commitOrder":6,"curCode":"    public void shouldExtractGraceFromSessionAncestorThroughStatelessParent() {\n        final SessionWindows windows = SessionWindows.with(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> graceGrandparent = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamSessionWindowAggregate<String, Long, Integer>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<?>) null\n        );\n\n        final ProcessorGraphNode<String, Long> statelessParent = new ProcessorGraphNode<>(\"stateless\", null);\n        graceGrandparent.addChild(statelessParent);\n\n        final ProcessorGraphNode<String, Long> node = new ProcessorGraphNode<>(\"stateless\", null);\n        statelessParent.addChild(node);\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs() + windows.inactivityGap()));\n    }\n","date":"2020-03-20 05:29:15","endLine":186,"groupId":"101416","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldExtractGraceFromSessionAncestorThroughStatelessParent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0d/75452a798fc2739368e573e19def4fb687a34e.src","preCode":"    public void shouldExtractGraceFromSessionAncestorThroughStatelessParent() {\n        final SessionWindows windows = SessionWindows.with(ofMillis(10L)).grace(ofMillis(1234L));\n        final StatefulProcessorNode<String, Long> graceGrandparent = new StatefulProcessorNode<>(\n            \"asdf\",\n            new ProcessorParameters<>(\n                new KStreamSessionWindowAggregate<String, Long, Integer>(\n                    windows,\n                    \"asdf\",\n                    null,\n                    null,\n                    null\n                ),\n                \"asdf\"\n            ),\n            (StoreBuilder<? extends StateStore>) null\n        );\n\n        final ProcessorGraphNode<String, Long> statelessParent = new ProcessorGraphNode<>(\"stateless\", null);\n        graceGrandparent.addChild(statelessParent);\n\n        final ProcessorGraphNode<String, Long> node = new ProcessorGraphNode<>(\"stateless\", null);\n        statelessParent.addChild(node);\n\n        final long extracted = GraphGraceSearchUtil.findAndVerifyWindowGrace(node);\n        assertThat(extracted, is(windows.gracePeriodMs() + windows.inactivityGap()));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"21cfd0b453c878780236f623249b3b5ddec52e6e","commitMessage":"@@@MINOR: Fix generic types in StreamsBuilder and Topology (#8273)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  Guozhang Wang <guozhang@confluent.io>.  John Roesler <john@confluent.io>","date":"2020-03-20 05:29:15","modifiedFileCount":"32","status":"M","submitter":"Matthias J. Sax"}]
