[{"authorTime":"2016-04-19 01:50:58","codes":[{"authorDate":"2016-04-19 01:50:58","commitOrder":1,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-04-19 01:50:58","endLine":374,"groupId":"13906","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fa/7d997924c722d63e5c07f4c321d135a08fc6f7.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"B"},{"authorDate":"2016-04-19 01:50:58","commitOrder":1,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-04-19 01:50:58","endLine":392,"groupId":"13909","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fa/7d997924c722d63e5c07f4c321d135a08fc6f7.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"B"}],"commitId":"89c67727c2793bf56b0b005a7d758beebedb5aed","commitMessage":"@@@KAFKA-3506: Kafka Connect restart APIs\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #1189 from hachikuji/KAFKA-3506\n","date":"2016-04-19 01:50:58","modifiedFileCount":"12","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2018-01-31 07:09:40","codes":[{"authorDate":"2018-01-31 07:09:40","commitOrder":2,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2018-01-31 07:09:40","endLine":458,"groupId":"8572","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6e/173497c46109aa9a8ffd178096253376e51355.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"},{"authorDate":"2018-01-31 07:09:40","commitOrder":2,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2018-01-31 07:09:40","endLine":476,"groupId":"10666","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6e/173497c46109aa9a8ffd178096253376e51355.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestServer.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject()))\n                .andReturn(new RestServer.HttpResponse<>(202, new HashMap<String, List<String>>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"}],"commitId":"3431be2aeb4f16599c419f89360856b72d0d335d","commitMessage":"@@@KAFKA-4029: SSL support for Connect REST API (KIP-208)\n\nThis PR implements the JIRA issue [KAFKA-4029: SSL support for Connect REST API](https://issues.apache.org/jira/browse/KAFKA-4029) / [KIP-208](https://cwiki.apache.org/confluence/display/KAFKA/KIP-208%3A+Add+SSL+support+to+Kafka+Connect+REST+interface).\n\nSummary of the main changes:\n- Jetty `HttpClient` is used as HTTP client instead of the one shipped with Java. That allows to keep the SSL configuration for Server and Client be in single place (both use the Jetty `SslContextFactory`). It also has much richer configuration than the JDK client (it is easier to configure things such as supported cipher suites etc.).\n- The `RestServer` class has been broker into 3 parts. `RestServer` contains the server it self. `RestClient` contains the HTTP client used for forwarding requests etc. and `SSLUtils` contain some helper classes for configuring SSL. One of the reasons for this was Findbugs complaining about the class complexity.\n- A new method `valuesWithPrefixAllOrNothing` has been added to `AbstractConfig` to make it easier to handle the situation that we want to use either only the prefixed SSL options or only the non-prefixed. But not mixed them.\n\nAuthor: Jakub Scholz <www@scholzj.com>\n\nReviewers: Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #4429 from scholzj/kip-208\n","date":"2018-01-31 07:09:40","modifiedFileCount":"9","status":"M","submitter":"Jakub Scholz"},{"authorTime":"2019-06-04 10:06:00","codes":[{"authorDate":"2019-06-04 10:06:00","commitOrder":3,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-06-04 10:06:00","endLine":678,"groupId":"14003","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/90df03afb6d6b896a49f72d47a6b70d82ca8f9.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":664,"status":"M"},{"authorDate":"2019-06-04 10:06:00","commitOrder":3,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-06-04 10:06:00","endLine":696,"groupId":"9498","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/90df03afb6d6b896a49f72d47a6b70d82ca8f9.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":681,"status":"M"}],"commitId":"1a3fe9aa52555eb24ce692963e4461d6f05b771d","commitMessage":"@@@KAFKA-8404: Add HttpHeader to RestClient HTTP Request and Connector REST API (#6791)\n\nWhen Connect forwards a REST request from one worker to another.  the Authorization header was not forwarded. This commit changes the Connect framework to add include the authorization header when forwarding requests to other workers.\n\nAuthor: Hai-Dang Dam <damquanghaidang@gmail.com>\nReviewers: Robert Yokota <rayokota@gmail.com>.  Randall Hauch <rhauch@gmail.com>\n","date":"2019-06-04 10:06:00","modifiedFileCount":"7","status":"M","submitter":"Hai-Dang Dam"},{"authorTime":"2021-02-05 09:08:56","codes":[{"authorDate":"2021-02-05 09:08:56","commitOrder":4,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-02-05 09:08:56","endLine":802,"groupId":"14003","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/d42a2f588e308565e11220f8db0325846d38e4.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":788,"status":"M"},{"authorDate":"2021-02-05 09:08:56","commitOrder":4,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-02-05 09:08:56","endLine":820,"groupId":"9498","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/d42a2f588e308565e11220f8db0325846d38e4.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<String, String>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":805,"status":"M"}],"commitId":"07843cfbf4e3e7a2d26d63904bbf0da0fcd07ca2","commitMessage":"@@@KAFKA-10834: Remove redundant type casts in Connect (#10053)\n\nCleanup up to remove redundant type casts in Connect and use the diamond operator when needed \n\nReviewers: Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-02-05 09:08:56","modifiedFileCount":"41","status":"M","submitter":"Lev Zemlyanov"},{"authorTime":"2021-07-01 12:13:07","codes":[{"authorDate":"2021-07-01 12:13:07","commitOrder":5,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-01 12:13:07","endLine":880,"groupId":"14003","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/57/2c60a524d4cdf6dd6c889c5602cfbe0b569587.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":866,"status":"M"},{"authorDate":"2021-07-01 12:13:07","commitOrder":5,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-01 12:13:07","endLine":898,"groupId":"9498","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/57/2c60a524d4cdf6dd6c889c5602cfbe0b569587.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":883,"status":"M"}],"commitId":"527ba111c73aa32deaef102fc953f3d20a8670d7","commitMessage":"@@@KAFKA-4793: Connect API to restart connector and tasks (KIP-745) (#10822)\n\nImplements KIP-745 https://cwiki.apache.org/confluence/display/KAFKA/KIP-745%3A+Connect+API+to+restart+connector+and+tasks to change connector REST API to restart a connector and its tasks as a whole.\n\nTesting strategy \n- [x]  Unit tests added for all possible combinations of onlyFailed and includeTasks\n- [x]  Integration tests added for all possible combinations of onlyFailed and includeTasks\n- [x]  System tests for happy path \n\nReviewers: Randall Hauch <rhauch@gmail.com>.  Diego Erdody <erdody@gmail.com>.  Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-07-01 12:13:07","modifiedFileCount":"27","status":"M","submitter":"kpatelatwork"},{"authorTime":"2021-07-08 00:24:31","codes":[{"authorDate":"2021-07-08 00:24:31","commitOrder":6,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, null);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-08 00:24:31","endLine":880,"groupId":"15616","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/94fa16eb67770d699003dea103ce5bf33cf8b8.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":866,"status":"M"},{"authorDate":"2021-07-08 00:24:31","commitOrder":6,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, true);\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-08 00:24:31","endLine":898,"groupId":"15616","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/94fa16eb67770d699003dea103ce5bf33cf8b8.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.<TypeReference>anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":883,"status":"M"}],"commitId":"862f814cc3a55e20a01e2d0da719b1610a634f42","commitMessage":"@@@KAFKA-7613: Enable -Xlint:rawtypes for connect.  fixing warnings (#8571)\n\nReviewers: Konstantine Karantasis <konstantine@confluent.io>","date":"2021-07-08 00:24:31","modifiedFileCount":"21","status":"M","submitter":"Tom Bentley"},{"authorTime":"2021-07-28 04:47:16","codes":[{"authorDate":"2021-07-28 04:47:16","commitOrder":7,"curCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        Response response = connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, null);\n        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n        PowerMock.verifyAll();\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-28 04:47:16","endLine":883,"groupId":"104975","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"testRestartConnectorLeaderRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3a/419b8c5ca27236d504eb71a4d7763401962b06.src","preCode":"    public void testRestartConnectorLeaderRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        expectAndCallbackNotLeaderException(cb);\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, null);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":867,"status":"M"},{"authorDate":"2021-07-28 04:47:16","commitOrder":7,"curCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        Response response = connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, true);\n        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n        PowerMock.verifyAll();\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-07-28 04:47:16","endLine":903,"groupId":"104975","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"testRestartConnectorOwnerRedirect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3a/419b8c5ca27236d504eb71a4d7763401962b06.src","preCode":"    public void testRestartConnectorOwnerRedirect() throws Throwable {\n        final Capture<Callback<Void>> cb = Capture.newInstance();\n        herder.restartConnector(EasyMock.eq(CONNECTOR_NAME), EasyMock.capture(cb));\n        String ownerUrl = \"http://owner:8083\";\n        expectAndCallbackException(cb, new NotAssignedException(\"not owner test\", ownerUrl));\n\n        EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),\n                EasyMock.eq(\"POST\"), EasyMock.isNull(), EasyMock.isNull(), EasyMock.anyObject(), EasyMock.anyObject(WorkerConfig.class)))\n                .andReturn(new RestClient.HttpResponse<>(202, new HashMap<>(), null));\n\n        PowerMock.replayAll();\n\n        connectorsResource.restartConnector(CONNECTOR_NAME, NULL_HEADERS, false, false, true);\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":886,"status":"M"}],"commitId":"f6f6e52c7416e8bacef4b5fc265dc1aa0ff52520","commitMessage":"@@@KAFKA-13139: Empty response after requesting to restart a connector without the tasks results in NPE (#11132)\n\nEven after the implementation of KIP-745 it makes sense to return a response code of 204 NO CONTENT when the request is to restart the connector but not the tasks. \n\nThis maintains the current behavior for this existing REST call and is also aligned with the description in the RFC: \nhttps://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.5\n\nReviewers: Kalpesh Patel <kpatel@confluent.io>.  Randall Hauch <rhauch@gmail.com>","date":"2021-07-28 04:47:16","modifiedFileCount":"2","status":"M","submitter":"Konstantine Karantasis"}]
