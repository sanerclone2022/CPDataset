[{"authorTime":"2017-06-06 20:57:20","codes":[{"authorDate":"2017-06-06 20:57:20","commitOrder":1,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginAbortingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2017-06-06 20:58:51","endLine":195,"groupId":"3883","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f6/61bafeca73c74105644aec9fc5e32fd10b6ed9.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginAbortingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2017-06-06 20:57:20","commitOrder":1,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginCommittingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2017-06-06 20:58:51","endLine":222,"groupId":"3883","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f6/61bafeca73c74105644aec9fc5e32fd10b6ed9.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginCommittingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"cb78ba1294d1a27b2c4d842a125486ffec593d98","commitMessage":"@@@KAFKA-5364; ensurePartitionAdded does not handle pending partitions in abortable error state\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Apurva Mehta <apurva@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #3231 from hachikuji/KAFKA-5364\n","date":"2017-06-06 20:58:51","modifiedFileCount":"6","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2017-06-16 08:17:54","codes":[{"authorDate":"2017-06-16 08:17:54","commitOrder":2,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2017-06-16 08:17:54","endLine":214,"groupId":"12957","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/b283520d5fb3246a00dced0cb0d3fb61f1d381.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginAbortingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2017-06-16 08:17:54","commitOrder":2,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2017-06-16 08:17:54","endLine":241,"groupId":"20987","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/b283520d5fb3246a00dced0cb0d3fb61f1d381.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginCommittingTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"54a3718a900a5286baf2193713ea8d58ca2c08f6","commitMessage":"@@@KAFKA-5449; Fix race condition on producer dequeuing of EndTxn request\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Apurva Mehta <apurva@confluent.io>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #3348 from hachikuji/fix-has-unflushed-synchronization\n","date":"2017-06-16 08:17:54","modifiedFileCount":"7","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-05-03 00:29:22","codes":[{"authorDate":"2019-05-03 00:29:22","commitOrder":3,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2019-05-03 00:29:22","endLine":253,"groupId":"14785","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2d/3487f5126ba73f89ee4e5ccd503ab16bff3efa.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2019-05-03 00:29:22","commitOrder":3,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2019-05-03 00:29:22","endLine":280,"groupId":"14786","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2d/3487f5126ba73f89ee4e5ccd503ab16bff3efa.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.run(time.milliseconds());\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"c34330c5481803c91705cbfcc499021360ff7fdc","commitMessage":"@@@KAFKA-8248; Ensure time updated before sending transactional request (#6613)\n\nThis patch fixes a bug in the sending of transactional requests. We need to call `KafkaClient.send` with an updated current time. Failing to do so can result in an `IllegalStateExcepton` which leaves the producer effectively dead since the in-flight correlation id has been set.  but no request has been sent. To avoid the same problem in the future.  we update the in flight correlationId only after sending the request.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Apurva Mehta <apurva@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-03 00:29:22","modifiedFileCount":"7","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-08-02 05:36:12","codes":[{"authorDate":"2019-08-02 05:36:12","commitOrder":4,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2019-08-02 05:36:12","endLine":263,"groupId":"21607","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/a5771002cd836b6a11e556b115da3de5a477cc.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2019-08-02 05:36:12","commitOrder":4,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","date":"2019-08-02 05:36:12","endLine":291,"groupId":"21607","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/a5771002cd836b6a11e556b115da3de5a477cc.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"717c55be971df862c55f55d245b9997f1d6f998c","commitMessage":"@@@KAFKA-8601: Implement KIP-480: Sticky Partitioning for keyless records (#6997)\n\nImplement KIP-480.  which specifies that the default partitioner should use a \"sticky\" partitioning strategy for records that have a null key.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>.  Lucas Bradstreet <lucasbradstreet@gmail.com>.  Stanislav Kozlovski <stanislav_kozlovski@outlook.com>.  Jun Rao <junrao@gmail.com>.  Kamal Chandraprakash  <kamal.chandraprakash@gmail.com>","date":"2019-08-02 05:36:12","modifiedFileCount":"9","status":"M","submitter":"Justine Olshan"},{"authorTime":"2020-01-24 00:14:31","codes":[{"authorDate":"2020-01-24 00:14:31","commitOrder":5,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        runUntil(transactionManager::hasOngoingTransaction);\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","date":"2020-01-24 00:14:31","endLine":269,"groupId":"18451","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/4f50d3d2f8f17311f972c1c07372c89ad77d90.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2020-01-24 00:14:31","commitOrder":5,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","date":"2020-01-24 00:14:31","endLine":296,"groupId":"3218","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/4f50d3d2f8f17311f972c1c07372c89ad77d90.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        sender.runOnce();\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        sender.runOnce();\n        assertFalse(transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"df13fc93d0aebfe0ecc40dd4af3c5fb19b35f710","commitMessage":"@@@KAFKA-7737; Use single path in producer for initializing the producerId (#7920)\n\nPreviously the idempotent producer and transactional producer use separate logic when initializing the producerId. This patch consolidates the two paths. We also do some cleanup in `TransactionManagerTest` to eliminate brittle expectations on `Sender`.\n\nReviewers: Bob Barrett <bob.barrett@confluent.io>.  Viktor Somogyi <viktorsomogyi@gmail.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-01-24 00:14:31","modifiedFileCount":"6","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2020-04-03 12:48:37","codes":[{"authorDate":"2020-04-03 12:48:37","commitOrder":6,"curCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions();\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        runUntil(transactionManager::hasOngoingTransaction);\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, producerId, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","date":"2020-04-03 12:48:37","endLine":273,"groupId":"103617","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/00605a5989bf08c894080ea48908bf7e6337c5.src","preCode":"    public void testHasOngoingTransactionSuccessfulAbort() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        runUntil(transactionManager::hasOngoingTransaction);\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginAbort();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.ABORT, pid, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2020-04-03 12:48:37","commitOrder":6,"curCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions();\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, producerId, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","date":"2020-04-03 12:48:37","endLine":298,"groupId":"103617","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testHasOngoingTransactionSuccessfulCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/00605a5989bf08c894080ea48908bf7e6337c5.src","preCode":"    public void testHasOngoingTransactionSuccessfulCommit() {\n        long pid = 13131L;\n        short epoch = 1;\n        TopicPartition partition = new TopicPartition(\"foo\", 0);\n\n        assertFalse(transactionManager.hasOngoingTransaction());\n        doInitTransactions(pid, epoch);\n        assertFalse(transactionManager.hasOngoingTransaction());\n\n        transactionManager.beginTransaction();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(partition);\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareAddPartitionsToTxn(partition, Errors.NONE);\n        runUntil(() -> transactionManager.isPartitionAdded(partition));\n\n        transactionManager.beginCommit();\n        assertTrue(transactionManager.hasOngoingTransaction());\n\n        prepareEndTxnResponse(Errors.NONE, TransactionResult.COMMIT, pid, epoch);\n        runUntil(() -> !transactionManager.hasOngoingTransaction());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"7f640f13b4d486477035c3edb28466734f053beb","commitMessage":"@@@KAFKA-9776: Downgrade TxnCommit API v3 when broker doesn't support (#8375)\n\nRevert the decision for the sendOffsetsToTransaction(groupMetadata) API to fail with old version of brokers for the sake of making the application easier to adapt between versions. This PR silently downgrade the TxnOffsetCommit API when the build version is small than 3.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-04-03 12:48:37","modifiedFileCount":"12","status":"M","submitter":"Boyang Chen"}]
