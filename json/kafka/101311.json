[{"authorTime":"2020-03-28 09:36:10","codes":[{"authorDate":"2020-03-28 09:36:10","commitOrder":1,"curCode":"    public void shouldRemoveMetricsOnClose() {\n        innerStoreMock.close();\n        expectLastCall();\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        assertThat(storeMetrics(), not(empty()));\n        store.close();\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","date":"2020-03-28 09:36:10","endLine":354,"groupId":"18123","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRemoveMetricsOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/56/9203eb146f8d0fcacc9df5506c61ca252760f1.src","preCode":"    public void shouldRemoveMetricsOnClose() {\n        innerStoreMock.close();\n        expectLastCall();\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        assertThat(storeMetrics(), not(empty()));\n        store.close();\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"B"},{"authorDate":"2020-03-28 09:36:10","commitOrder":1,"curCode":"    public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n        innerStoreMock.close();\n        expectLastCall().andThrow(new RuntimeException(\"Oops!\"));\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        \r\n        assertThat(storeMetrics(), not(empty()));\n        assertThrows(RuntimeException.class, store::close);\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","date":"2020-03-28 09:36:10","endLine":368,"groupId":"904","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/56/9203eb146f8d0fcacc9df5506c61ca252760f1.src","preCode":"    public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n        innerStoreMock.close();\n        expectLastCall().andThrow(new RuntimeException(\"Oops!\"));\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        \r\n        assertThat(storeMetrics(), not(empty()));\n        assertThrows(RuntimeException.class, store::close);\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"B"}],"commitId":"c595470713be1fd2daf93816a5dbf0e245a707a0","commitMessage":"@@@KAFKA-9770: Close underlying state store also when flush throws (#8368)\n\nWhen a caching state store is closed it calls its flush() method.\nIf flush() throws an exception the underlying state store is not closed.\n\nThis commit ensures that state stores underlying a wrapped state stores\nare closed even when preceding operations in the close method throw.\n\nCo-authored-by: John Roesler <vvcephei@apache.org>\nReviewers: John Roesler <vvcephei@apache.org>.  Guozhang Wang <wangguoz@gmail.com>.  Matthias J. Sax <matthias@confluent.io>","date":"2020-03-28 09:36:10","modifiedFileCount":"13","status":"B","submitter":"Bruno Cadonna"},{"authorTime":"2020-10-03 07:49:12","codes":[{"authorDate":"2020-10-03 07:49:12","commitOrder":2,"curCode":"    public void shouldRemoveMetricsOnClose() {\n        innerStoreMock.close();\n        expectLastCall();\n        replay(innerStoreMock);\n        store.init((StateStoreContext) context, store);\n\n        assertThat(storeMetrics(), not(empty()));\n        store.close();\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","date":"2020-10-03 07:49:12","endLine":414,"groupId":"101311","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRemoveMetricsOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/73/0169476f3403154f62b6a95917630b44046bff.src","preCode":"    public void shouldRemoveMetricsOnClose() {\n        innerStoreMock.close();\n        expectLastCall();\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        assertThat(storeMetrics(), not(empty()));\n        store.close();\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"M"},{"authorDate":"2020-10-03 07:49:12","commitOrder":2,"curCode":"    public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n        innerStoreMock.close();\n        expectLastCall().andThrow(new RuntimeException(\"Oops!\"));\n        replay(innerStoreMock);\n        store.init((StateStoreContext) context, store);\n\n        \r\n        assertThat(storeMetrics(), not(empty()));\n        assertThrows(RuntimeException.class, store::close);\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","date":"2020-10-03 07:49:12","endLine":428,"groupId":"101311","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/73/0169476f3403154f62b6a95917630b44046bff.src","preCode":"    public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n        innerStoreMock.close();\n        expectLastCall().andThrow(new RuntimeException(\"Oops!\"));\n        replay(innerStoreMock);\n        store.init(context, store);\n\n        \r\n        assertThat(storeMetrics(), not(empty()));\n        assertThrows(RuntimeException.class, store::close);\n        assertThat(storeMetrics(), empty());\n        verify(innerStoreMock);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"M"}],"commitId":"69790a1463bafc1f63e3c288a6636b3f4586c1b4","commitMessage":"@@@KAFKA-10535: Split ProcessorContext into Processor/StateStore/Record Contexts (#9361)\n\nMigrate different components of the old ProcessorContext interface\ninto separate interfaces that are more appropriate for their usages.\nSee KIP-478 for the details.\n\nReviewers: Guozhang Wang <guozhang@apache.org>.  Paul Whalen <pgwhalen@gmail.com>","date":"2020-10-03 07:49:12","modifiedFileCount":"71","status":"M","submitter":"John Roesler"}]
