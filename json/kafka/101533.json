[{"authorTime":"2017-09-21 16:10:17","codes":[{"authorDate":"2017-09-21 16:10:17","commitOrder":1,"curCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n    }\n","date":"2017-09-21 16:10:17","endLine":155,"groupId":"20862","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/bcf33f3122e7d10249890d22fcd2f751da3a47.src","preCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"},{"authorDate":"2017-09-21 16:10:17","commitOrder":1,"curCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n    }\n","date":"2017-09-21 16:10:17","endLine":173,"groupId":"20862","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/bcf33f3122e7d10249890d22fcd2f751da3a47.src","preCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"a2da064cbf01558d0af64adc9d6fc9444cd744ec","commitMessage":"@@@KAFKA-5922: Add SessionWindowedKStream\n\nAdd `SessionWindowedKStream` and implementation. Deprecate existing `SessionWindow` `aggregate` methods on `KGroupedStream`\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3902 from dguy/kafka-5922\n","date":"2017-09-21 16:10:17","modifiedFileCount":"4","status":"B","submitter":"Damian Guy"},{"authorTime":"2018-05-22 23:48:54","codes":[{"authorDate":"2018-05-22 23:48:54","commitOrder":2,"curCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","date":"2018-05-22 23:48:54","endLine":165,"groupId":"17338","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7b/885b23bf2863ea3ced8e95d6fe57674b8c0063.src","preCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2018-05-22 23:48:54","commitOrder":2,"curCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","date":"2018-05-22 23:48:54","endLine":184,"groupId":"17338","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7b/885b23bf2863ea3ced8e95d6fe57674b8c0063.src","preCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        processData();\n        final WindowStore<String, String> windowStore = (WindowStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"6281fbcb6ad3c1f7172af0ba590fa1e2605093de","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [part 3] (#5052)\n\n* KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [part 3]\n\n* Refactor:\n  - KStreamWindowReduceTest\n  - KTableMapKeysTest\n  - SessionWindowedKStreamImplTest\n  - TimeWindowedKStreamImplTest\n\n* Remove unnecessary @SuppressWarnings(unchecked)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-05-22 23:48:54","modifiedFileCount":"4","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2018-10-05 04:51:39","codes":[{"authorDate":"2018-10-05 04:51:39","commitOrder":3,"curCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","date":"2018-10-05 04:51:39","endLine":167,"groupId":"17338","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f9/51ebb415504ceaf4818b14e80ef579999b2180.src","preCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(MockReducer.STRING_ADDER,\n                              Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                                      .withKeySerde(Serdes.String())\n                                      .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2018-10-05 04:51:39","commitOrder":3,"curCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","date":"2018-10-05 04:51:39","endLine":186,"groupId":"17338","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f9/51ebb415504ceaf4818b14e80ef579999b2180.src","preCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(MockInitializer.STRING_INIT,\n                                 MockAggregator.TOSTRING_ADDER,\n                                 Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                                         .withKeySerde(Serdes.String())\n                                         .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", 0, 1000));\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"ca641b3e2e48c14ff308181c775775408f5f35f7","commitMessage":"@@@KAFKA-7277: Migrate Streams API to Duration instead of longMs times (#5682)\n\nReviewers: Johne Roesler <john@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2018-10-05 04:51:39","modifiedFileCount":"97","status":"M","submitter":"Nikolay"},{"authorTime":"2019-03-20 08:27:32","codes":[{"authorDate":"2019-03-20 08:27:32","commitOrder":4,"curCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(\n            MockReducer.STRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","date":"2019-03-20 08:27:32","endLine":159,"groupId":"13751","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/74/3d710093445dc6df0e10365dc1db30a99e3824.src","preCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(\n            MockReducer.STRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2019-03-20 08:27:32","commitOrder":4,"curCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","date":"2019-03-20 08:27:32","endLine":181,"groupId":"13751","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/74/3d710093445dc6df0e10365dc1db30a99e3824.src","preCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"b5ce093a24d0fe212b5d1374330fc720b4913bee","commitMessage":"@@@MINOR: capture result timestamps in Kafka Streams DSL tests (#6447)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>\n","date":"2019-03-20 08:27:32","modifiedFileCount":"29","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-05-18 07:48:07","codes":[{"authorDate":"2019-05-18 07:48:07","commitOrder":5,"curCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(\n            MockReducer.STRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            {\n                final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n                final List<KeyValue<Windowed<String>, String>> data =\n                    StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n                assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"10+20\"))));\n            }\n            {\n                final WindowStore<String, ValueAndTimestamp<String>> windowStore = driver.getTimestampedWindowStore(\"reduced\");\n                final List<KeyValue<Windowed<String>, ValueAndTimestamp<String>>> data =\n                    StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n                assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), ValueAndTimestamp.make(\"1+2\", 15L)),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), ValueAndTimestamp.make(\"3\", 500L)),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), ValueAndTimestamp.make(\"10+20\", 550L)))));\n            }\n        }\n    }\n","date":"2019-05-18 07:48:07","endLine":211,"groupId":"101533","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0c/4685a45e3a4198e3d2bfec154fc50c380a6298.src","preCode":"    public void shouldMaterializeReduced() {\n        windowedStream.reduce(\n            MockReducer.STRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"reduced\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2019-05-18 07:48:07","commitOrder":5,"curCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            {\n                final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n                final List<KeyValue<Windowed<String>, String>> data =\n                    StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n                assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+10+20\"))));\n            }\n            {\n                final WindowStore<String, ValueAndTimestamp<String>> windowStore = driver.getTimestampedWindowStore(\"aggregated\");\n                final List<KeyValue<Windowed<String>, ValueAndTimestamp<String>>> data =\n                    StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n                assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), ValueAndTimestamp.make(\"0+1+2\", 15L)),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), ValueAndTimestamp.make(\"0+3\", 500L)),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), ValueAndTimestamp.make(\"0+10+20\", 550L)))));\n            }\n        }\n    }\n","date":"2019-05-18 07:48:07","endLine":245,"groupId":"101533","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0c/4685a45e3a4198e3d2bfec154fc50c380a6298.src","preCode":"    public void shouldMaterializeAggregated() {\n        windowedStream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"aggregated\")\n                .withKeySerde(Serdes.String())\n                .withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final WindowStore<String, String> windowStore = driver.getWindowStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data =\n                StreamsTestUtils.toList(windowStore.fetch(\"1\", \"2\", ofEpochMilli(0), ofEpochMilli(1000L)));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(0, 500)), \"0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new TimeWindow(500, 1000)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new TimeWindow(500, 1000)), \"0+1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"6a2749faa63397caa93dae7bfdc3f1d0573a2ff4","commitMessage":"@@@KAFKA-6455: Improve DSL operator timestamp semantics (#6725)\n\nBasic idea:\nKTable-KTable join: set max(left-ts. right-ts) for result\n#agg(...) (stream/table windowed/non-windowed): set max(ts1.  ts2.  ts3. ...) of all input records that contribute to the aggregation result\nfor all stateless transformation: input-ts -> output-ts\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.   John Roesler <john@confluent.io>.  Andy Coates <andy@confluent.io>.   Bill Bejeck <bbejeck@gmail.com","date":"2019-05-18 07:48:07","modifiedFileCount":"61","status":"M","submitter":"Matthias J. Sax"}]
