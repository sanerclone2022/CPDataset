[{"authorTime":"2015-08-27 08:20:51","codes":[{"authorDate":"2015-05-08 08:04:51","commitOrder":3,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2015-05-08 08:04:51","endLine":50,"groupId":"16131","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/f8334f848be4cc043d5a573975609a3681fe7e.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"NB"},{"authorDate":"2015-08-27 08:20:51","commitOrder":3,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2015-08-27 08:20:51","endLine":48,"groupId":"16131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/76/25218422ae79659172280e8852c6cdc88b7ea1.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"MB"}],"commitId":"35eaef7bb4ebcf6b209312db774564451b052ca9","commitMessage":"@@@KAFKA-2388: refactor KafkaConsumer subscribe API\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Edward Ribeiro.  Onur Karaman.  Ismael Juma.  Guozhang Wang\n\nCloses #139 from hachikuji/KAFKA-2388 and squashes the following commits:\n\n377c67e [Jason Gustafson] KAFKA-2388; refactor KafkaConsumer subscribe API\n","date":"2015-08-27 08:20:51","modifiedFileCount":"14","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2016-03-19 07:07:20","codes":[{"authorDate":"2015-05-08 08:04:51","commitOrder":4,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2015-05-08 08:04:51","endLine":50,"groupId":"16131","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/f8334f848be4cc043d5a573975609a3681fe7e.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"},{"authorDate":"2016-03-19 07:07:20","commitOrder":4,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2016-03-19 07:07:20","endLine":59,"groupId":"16131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ff/07461ac7845779b910fe4ae517ad6373290eec.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"4332175c11dda5deb491f27a6ecf66661676ca47","commitMessage":"@@@KAFKA-3006: standardize KafkaConsumer API to use Collection\n\nAuthor: Pierre-Yves Ritschard <pyr@spootnik.org>\n\nReviewers: Jason Gustafson.  Gwen Shapira\n\nCloses #1098 from hachikuji/KAFKA-3006\n","date":"2016-03-19 07:07:20","modifiedFileCount":"17","status":"M","submitter":"Pierre-Yves Ritschard"},{"authorTime":"2016-08-13 06:26:41","codes":[{"authorDate":"2015-05-08 08:04:51","commitOrder":5,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2015-05-08 08:04:51","endLine":50,"groupId":"16131","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/f8334f848be4cc043d5a573975609a3681fe7e.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"},{"authorDate":"2016-08-13 06:26:41","commitOrder":5,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2016-08-13 06:26:41","endLine":102,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8b/526641b02801a7c39ef87ad14394d7aa2e769c.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"be36b322749003581474e2c84a3ec9ba2aaec53c","commitMessage":"@@@KAFKA-4034; Avoid unnecessary consumer coordinator lookup\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #1720 from hachikuji/KAFKA-4034\n","date":"2016-08-13 06:26:41","modifiedFileCount":"7","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2016-08-18 02:50:04","codes":[{"authorDate":"2015-05-08 08:04:51","commitOrder":6,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2015-05-08 08:04:51","endLine":50,"groupId":"16131","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/f8334f848be4cc043d5a573975609a3681fe7e.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"},{"authorDate":"2016-08-18 02:50:04","commitOrder":6,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2016-08-18 02:50:04","endLine":101,"groupId":"10962","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8d/2ac0068e8abffe19971931d649642797aa20e9.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<>(\n                    props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"40b1dd3f495a59abef8a0cba5450526994c92c04","commitMessage":"@@@KAFKA-3888: send consumer heartbeats from a background thread (KIP-62)\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Ewen Cheslack-Postava <ewen@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #1627 from hachikuji/KAFKA-3888\n","date":"2016-08-18 02:50:04","modifiedFileCount":"24","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2016-08-18 02:50:04","codes":[{"authorDate":"2016-10-14 11:17:43","commitOrder":7,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","date":"2016-10-14 11:17:57","endLine":73,"groupId":"16131","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c8/2b18b23d58964e63afc06bcbf98ecdb355d891.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2016-08-18 02:50:04","commitOrder":7,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2016-08-18 02:50:04","endLine":101,"groupId":"10962","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8d/2ac0068e8abffe19971931d649642797aa20e9.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"1a67739c2f3d0418a8f2d8f7b15d5af2ed3a324a","commitMessage":"@@@KAFKA-4254; Update producer's metadata before failing on non-existent partitions\n\nAuthor: Konstantine Karantasis <konstantine@confluent.io>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>\n\nCloses #1995 from kkonstantine/KAFKA-4254-Update-producers-metadata-before-failing-on-non-existent-partition\n","date":"2016-10-14 11:17:57","modifiedFileCount":"4","status":"M","submitter":"Konstantine Karantasis"},{"authorTime":"2017-02-16 22:37:45","codes":[{"authorDate":"2017-02-16 22:37:45","commitOrder":8,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","date":"2017-02-16 22:37:52","endLine":89,"groupId":"16131","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ae/e6fc7a49d07ca80bdfa05359c02095b7d94cab.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2017-02-16 22:37:45","commitOrder":8,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2017-02-16 22:37:52","endLine":134,"groupId":"10962","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/55aa18d095d5945bfd82ac64a488b125e3566c.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"a1900ada7fdc3318f24e94e4aac956dca3463bbf","commitMessage":"@@@KAFKA-4765; Fixed Intentionally Broken Hosts Resolving to 127.0.53.53 in tests\n\nWe are now using  artificially broken hosts that are not resolved as potential\ncollisions (127.0.53.53s) by some DNS servers.\n\nThis change is the only way to build while using Google's `8.8.8.8` (at least in my network).\n\nAuthor: Armin Braun <me@obrown.io>\n\nReviewers: Dong Lin <lindong28@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #2552 from original-brownbear/KAFKA-4765\n","date":"2017-02-16 22:37:52","modifiedFileCount":"4","status":"M","submitter":"Armin Braun"},{"authorTime":"2017-02-16 22:37:45","codes":[{"authorDate":"2017-05-13 01:36:44","commitOrder":9,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","date":"2017-05-13 01:36:44","endLine":98,"groupId":"16131","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3a/6426a13afe39f9cde543d74afafde4dca7ca7d.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            Assert.assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            Assert.assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            Assert.assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2017-02-16 22:37:45","commitOrder":9,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","date":"2017-02-16 22:37:52","endLine":134,"groupId":"10962","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/55aa18d095d5945bfd82ac64a488b125e3566c.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"}],"commitId":"1c2bbaa501c2d0fd4db9c2dacacc3ff7f5236d3d","commitMessage":"@@@MINOR: Fix consumer and producer to actually support metrics recording level\n\nAlso add tests and a few clean-ups.\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Eno Thereska <eno.thereska@gmail.com>.  Jason Gustafson <jason@confluent.io>\n\nCloses #2937 from ijuma/metrics-recording-level-producer\n","date":"2017-05-13 01:36:44","modifiedFileCount":"6","status":"M","submitter":"Ismael Juma"},{"authorTime":"2017-07-20 01:51:28","codes":[{"authorDate":"2017-07-20 01:51:28","commitOrder":10,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","date":"2017-07-20 01:51:28","endLine":97,"groupId":"22409","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/dd/62457fe1505fb29fc665c9d32efcf045ce30fc.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<byte[], byte[]>(\n                    props, new ByteArraySerializer(), new ByteArraySerializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n            return;\n        }\n        fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2017-07-20 01:51:28","commitOrder":10,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","date":"2017-07-20 01:51:28","endLine":138,"groupId":"1236","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9f/d7e19810e7606f24396caaf4e8822cf7f701bd.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n            return;\n        }\n        Assert.fail(\"should have caught an exception and returned\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"f87d58b796977fdaefb089d17cb30b2071cd4485","commitMessage":"@@@MINOR: Code Cleanup\n\nClean up includes:\n\n- Switching try-catch-finally blocks to try-with-resources when possible\n- Removing some seemingly unnecessary `SuppressWarnings` annotations\n- Resolving some Java warnings\n- Closing unclosed Closable objects\n- Removing unused code\n\nAuthor: Vahid Hashemian <vahidhashemian@us.ibm.com>\n\nReviewers: Balint Molnar <balintmolnar91@gmail.com>.  Guozhang Wang <wangguoz@gmail.com>.  Matthias J. Sax <matthias@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>\n\nCloses #3222 from vahidhashemian/minor/code_cleanup_1706\n","date":"2017-07-20 01:51:28","modifiedFileCount":"62","status":"M","submitter":"Vahid Hashemian"},{"authorTime":"2018-02-15 02:52:46","codes":[{"authorDate":"2017-07-20 01:51:28","commitOrder":11,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","date":"2017-07-20 01:51:28","endLine":97,"groupId":"22409","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/dd/62457fe1505fb29fc665c9d32efcf045ce30fc.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2018-02-15 02:52:46","commitOrder":11,"curCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","date":"2018-02-15 02:52:46","endLine":149,"groupId":"1236","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/147a58f770e0b6dec37c8bafd31798ab712ea3.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"6d18d882b850a8d757c32bb124b1e42e60587c69","commitMessage":"@@@KAFKA-6397: Consumer should not block setting positions of unavailable partitions (#4557)\n\nPrior to this patch.  the consumer always blocks in poll() if there are any partitions which are awaiting their initial positions. This behavior was inconsistent with normal fetch behavior since we allow fetching on available partitions even if one or more of the assigned partitions becomes unavailable _after_ initial offset lookup. With this patch.  the consumer will do offset resets asynchronously.  which allows other partitions to make progress even if the initial positions for some partitions cannot be found.\n\nI have added several new unit tests in `FetcherTest` and `KafkaConsumerTest` to verify the new behavior. One minor compatibility implication worth mentioning is apparent from the change I made in `DynamicBrokerReconfigurationTest`. Previously it was possible to assume that all partitions had a fetch position after `poll()` completed with a non-empty assignment. This assumption is no longer generally true.  but you can force the positions to be updated using the `position()` API which still blocks indefinitely until a position is available.\n\nNote that this this patch also removes the logic to cache committed offsets in `SubscriptionState` since it was no longer needed (the consumer's `committed()` API always does an offset lookup anyway). In addition to avoiding the complexity of maintaining the cache.  this avoids wasteful offset lookups to refresh the cache when `commitAsync()` is used.\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>","date":"2018-02-15 02:52:46","modifiedFileCount":"12","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-08-04 08:25:07","codes":[{"authorDate":"2017-07-20 01:51:28","commitOrder":12,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","date":"2017-07-20 01:51:28","endLine":97,"groupId":"22409","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/dd/62457fe1505fb29fc665c9d32efcf045ce30fc.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2018-08-04 08:25:07","commitOrder":12,"curCode":"    public void testConstructorClose() {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","date":"2018-08-04 08:25:07","endLine":156,"groupId":"1236","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a0/f95c4aabf8b343a3dcb96ff8b84c3b1056bf56.src","preCode":"    public void testConstructorClose() throws Exception {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"fc5f6b0e46ff81302b3e445fed0cdf454c942792","commitMessage":"@@@MINOR: Add Timer to simplify timeout bookkeeping and use it in the consumer (#5087)\n\nWe currently do a lot of bookkeeping for timeouts which is both error-prone and distracting. This patch adds a new `Timer` class to simplify this logic and control unnecessary calls to system time. In particular.  this helps with nested timeout operations. The consumer has been updated to use the new class.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-08-04 08:25:07","modifiedFileCount":"17","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-08-04 08:25:07","codes":[{"authorDate":"2018-08-23 21:40:33","commitOrder":13,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> ignored = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","date":"2018-08-23 21:40:33","endLine":108,"groupId":"22409","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/22/fa0a1bfc0f4c02dedce9afbe6a2ef225714ea8.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-08-04 08:25:07","commitOrder":13,"curCode":"    public void testConstructorClose() {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","date":"2018-08-04 08:25:07","endLine":156,"groupId":"1236","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a0/f95c4aabf8b343a3dcb96ff8b84c3b1056bf56.src","preCode":"    public void testConstructorClose() {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"N"}],"commitId":"b1090e52a3c7ea83ef2d79cc4b6ff7084a5070a4","commitMessage":"@@@MINOR: Eliminate warnings from KafkaProducerTest (#5548)\n\nAnd code clean-ups in the same file.\n\nReviewers: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n","date":"2018-08-23 21:40:33","modifiedFileCount":"1","status":"M","submitter":"Viktor Somogyi"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2018-08-23 21:40:33","commitOrder":14,"curCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> ignored = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","date":"2018-08-23 21:40:33","endLine":108,"groupId":"103709","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructorFailureCloseResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/22/fa0a1bfc0f4c02dedce9afbe6a2ef225714ea8.src","preCode":"    public void testConstructorFailureCloseResource() {\n        Properties props = new Properties();\n        props.setProperty(ProducerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"some.invalid.hostname.foo.bar.local:9999\");\n        props.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try (KafkaProducer<byte[], byte[]> ignored = new KafkaProducer<>(props, new ByteArraySerializer(), new ByteArraySerializer())) {\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka producer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"N"},{"authorDate":"2021-01-14 08:17:45","commitOrder":14,"curCode":"    public void testConstructorClose() {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","date":"2021-01-14 08:17:45","endLine":210,"groupId":"103709","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/19/999534f79d51d468b71915dd651682d853f971.src","preCode":"    public void testConstructorClose() {\n        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n\n        final int oldInitCount = MockMetricsReporter.INIT_COUNT.get();\n        final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n        try {\n            new KafkaConsumer<>(props, new ByteArrayDeserializer(), new ByteArrayDeserializer());\n            Assert.fail(\"should have caught an exception and returned\");\n        } catch (KafkaException e) {\n            assertEquals(oldInitCount + 1, MockMetricsReporter.INIT_COUNT.get());\n            assertEquals(oldCloseCount + 1, MockMetricsReporter.CLOSE_COUNT.get());\n            assertEquals(\"Failed to construct kafka consumer\", e.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
