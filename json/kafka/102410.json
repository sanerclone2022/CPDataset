[{"authorTime":"2018-11-30 07:09:50","codes":[{"authorDate":"2018-11-30 07:09:50","commitOrder":1,"curCode":"    public void testLatencyMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2018-11-30 07:09:50","endLine":148,"groupId":"14962","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLatencyMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ca/dfdb0cef12b61bacd4dd4d238b0b5708446ce1.src","preCode":"    public void testLatencyMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2018-11-30 07:09:50","commitOrder":1,"curCode":"    public void testThroughputMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2018-11-30 07:09:50","endLine":167,"groupId":"14963","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testThroughputMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ca/dfdb0cef12b61bacd4dd4d238b0b5708446ce1.src","preCode":"    public void testThroughputMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"bfbc32d9bc9e63c5e02840aeed4de157654dc5e8","commitMessage":"@@@KAFKA-7660: fix parentSensors memory leak (#5953)\n\nIn StreamsMetricsImpl.  the parentSensors map was keeping references to Sensors after the sensors themselves had been removed.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-11-30 07:09:50","modifiedFileCount":"2","status":"B","submitter":"John Roesler"},{"authorTime":"2019-09-17 12:48:25","codes":[{"authorDate":"2019-09-17 12:48:25","commitOrder":2,"curCode":"    public void testLatencyMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2019-09-17 12:48:25","endLine":189,"groupId":"14962","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLatencyMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f1/d951bab968af3ac7ea4418e160ed8c4d0385c5.src","preCode":"    public void testLatencyMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2019-09-17 12:48:25","commitOrder":2,"curCode":"    public void testThroughputMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2019-09-17 12:48:25","endLine":207,"groupId":"14963","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testThroughputMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f1/d951bab968af3ac7ea4418e160ed8c4d0385c5.src","preCode":"    public void testThroughputMetrics() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), \"\");\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"bab3e082dc48bc3db68692694bd114a39b41fa68","commitMessage":"@@@KAFKA-8859: Expose built-in streams metrics version in `StreamsMetricsImpl` (#7323)\n\nThe streams config built.in.metrics.version is needed to add metrics in\na backward-compatible way. However.  not in every location where metrics are\nadded a streams config is available to check built.in.metrics.version. Thus. \nthe config value needs to be exposed through the StreamsMetricsImpl object.\n\nReviewers: John Roesler <vvcephei@users.noreply.github.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-09-17 12:48:25","modifiedFileCount":"13","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2019-12-10 04:23:39","codes":[{"authorDate":"2019-12-10 04:23:39","commitOrder":3,"curCode":"    public void testLatencyMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2019-12-10 04:23:39","endLine":399,"groupId":"13809","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLatencyMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/980a94e5d67dc2b72e609648c8a176c88d9d0a.src","preCode":"    public void testLatencyMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"M"},{"authorDate":"2019-12-10 04:23:39","commitOrder":3,"curCode":"    public void testThroughputMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2019-12-10 04:23:39","endLine":418,"groupId":"13810","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testThroughputMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/980a94e5d67dc2b72e609648c8a176c88d9d0a.src","preCode":"    public void testThroughputMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":403,"status":"M"}],"commitId":"bcfe8c76dd5a5b2913813cfd2ff733b7fa94a130","commitMessage":"@@@KAFKA-9230: Refactor user-customizable Streams metrics (#7762)\n\nAs proposed in KIP-444.  the user customizable metrics shall be refactored. The refactoring consists of:\n\n* adding methods addLatencyRateTotalSensor and addRateTotalSensor to interface StreamMetrics\n* implement the newly added methods in StreamsMetricsImpl\n* deprecate methods recordThroughput() and recordLatency() in StreamsMetrics\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-12-10 04:23:39","modifiedFileCount":"6","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2021-05-21 18:37:35","codes":[{"authorDate":"2021-05-21 18:37:35","commitOrder":4,"curCode":"    public void testLatencyMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyRateTotalSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2021-05-21 18:37:35","endLine":788,"groupId":"102410","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLatencyMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fd/b96db6868e718af9180a4e4b6011c96bcb99be.src","preCode":"    public void testLatencyMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        \r\n        final int meterMetricsCount = 2; \r\n        final int otherMetricsCount = 4;\n        assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":772,"status":"M"},{"authorDate":"2021-05-21 18:37:35","commitOrder":4,"curCode":"    public void testThroughputMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addRateTotalSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","date":"2021-05-21 18:37:35","endLine":806,"groupId":"102410","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testThroughputMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fd/b96db6868e718af9180a4e4b6011c96bcb99be.src","preCode":"    public void testThroughputMetrics() {\n        final int defaultMetrics = streamsMetrics.metrics().size();\n\n        final String scope = \"scope\";\n        final String entity = \"entity\";\n        final String operation = \"put\";\n\n        final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope, entity, operation, RecordingLevel.DEBUG);\n\n        final int meterMetricsCount = 2; \r\n        \r\n        assertEquals(defaultMetrics + meterMetricsCount * 2, streamsMetrics.metrics().size());\n\n        streamsMetrics.removeSensor(sensor1);\n        assertEquals(defaultMetrics, streamsMetrics.metrics().size());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"M"}],"commitId":"b46e17b1d7f58f2af8e3c634b3c0ba8c97a16d80","commitMessage":"@@@KAFKA-12808: Remove Deprecated Methods under StreamsMetrics (#10724)\n\nRemoval of methods already deprecated since 2.5.\nAdapt test to use the new alternative method.\n\nReviewers: Bruno Cadonna <cadonna@apache.org>","date":"2021-05-21 18:37:35","modifiedFileCount":"3","status":"M","submitter":"Josep Prat"}]
