[{"authorTime":"2021-02-20 10:03:23","codes":[{"authorDate":"2021-02-20 10:03:23","commitOrder":1,"curCode":"    ControllerResult<Map<ConfigResource, ApiError>> incrementalAlterConfigs(\n            Map<ConfigResource, Map<String, Entry<OpType, String>>> configChanges) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, Entry<OpType, String>>> resourceEntry :\n                configChanges.entrySet()) {\n            incrementalAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","date":"2021-02-20 10:03:23","endLine":87,"groupId":"21642","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"incrementalAlterConfigs","params":"(Map<ConfigResource@Map<String@Entry<OpType@String>>>configChanges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/02b3a117d831fc6986b9ae056f4d80297f26bd.src","preCode":"    ControllerResult<Map<ConfigResource, ApiError>> incrementalAlterConfigs(\n            Map<ConfigResource, Map<String, Entry<OpType, String>>> configChanges) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, Entry<OpType, String>>> resourceEntry :\n                configChanges.entrySet()) {\n            incrementalAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","realPath":"metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2021-02-20 10:03:23","commitOrder":1,"curCode":"    ControllerResult<Map<ConfigResource, ApiError>> legacyAlterConfigs(\n        Map<ConfigResource, Map<String, String>> newConfigs) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, String>> resourceEntry :\n            newConfigs.entrySet()) {\n            legacyAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","date":"2021-02-20 10:03:23","endLine":175,"groupId":"4506","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyAlterConfigs","params":"(Map<ConfigResource@Map<String@String>>newConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/02b3a117d831fc6986b9ae056f4d80297f26bd.src","preCode":"    ControllerResult<Map<ConfigResource, ApiError>> legacyAlterConfigs(\n        Map<ConfigResource, Map<String, String>> newConfigs) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, String>> resourceEntry :\n            newConfigs.entrySet()) {\n            legacyAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","realPath":"metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"5eac5a822fe4eb8691d2411fb25fcba1d4203b55","commitMessage":"@@@KAFKA-12276: Add the quorum controller code (#10070)\n\nThe quorum controller stores metadata in the KIP-500 metadata log.  not in Apache\nZooKeeper. Each controller node is a voter in the metadata quorum. The leader of the\nquorum is the active controller.  which processes write requests. The followers are standby\ncontrollers.  which replay the operations written to the log. If the active controller goes away. \na standby controller can take its place.\n\nLike the ZooKeeper-based controller.  the quorum controller is based on an event queue\nbacked by a single-threaded executor. However.  unlike the ZK-based controller.  the quorum\ncontroller can have multiple operations in flight-- it does not need to wait for one operation\nto be finished before starting another. Therefore.  calls into the QuorumController return\nCompleteableFuture objects which are completed with either a result or an error when the\noperation is done. The QuorumController will also time out operations that have been\nsitting on the queue too long without being processed. In this case.  the future is completed\nwith a TimeoutException.\n\nThe controller uses timeline data structures to store multiple \"versions\" of its in-memory \nstate simultaneously. \"Read operations\" read only committed state.  which is slightly older\nthan the most up-to-date in-memory state. \"Write operations\" read and write the latest\nin-memory state. However.  we can not return a successful result for a write operation until\nits state has been committed to the log. Therefore.  if a client receives an RPC response.  it\nknows that the requested operation has been performed.  and can not be undone by a\ncontroller failover.\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ron Dagostino <rdagostino@confluent.io>","date":"2021-02-20 10:03:23","modifiedFileCount":"8","status":"B","submitter":"Colin Patrick McCabe"},{"authorTime":"2021-03-05 02:55:43","codes":[{"authorDate":"2021-03-05 02:55:43","commitOrder":2,"curCode":"    ControllerResult<Map<ConfigResource, ApiError>> incrementalAlterConfigs(\n            Map<ConfigResource, Map<String, Entry<OpType, String>>> configChanges) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, Entry<OpType, String>>> resourceEntry :\n                configChanges.entrySet()) {\n            incrementalAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return ControllerResult.atomicOf(outputRecords, outputResults);\n    }\n","date":"2021-03-05 02:55:43","endLine":87,"groupId":"10129","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"incrementalAlterConfigs","params":"(Map<ConfigResource@Map<String@Entry<OpType@String>>>configChanges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5b/c82ecafa477d04d7350644ac8124d4cc23cd3c.src","preCode":"    ControllerResult<Map<ConfigResource, ApiError>> incrementalAlterConfigs(\n            Map<ConfigResource, Map<String, Entry<OpType, String>>> configChanges) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, Entry<OpType, String>>> resourceEntry :\n                configChanges.entrySet()) {\n            incrementalAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","realPath":"metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2021-03-05 02:55:43","commitOrder":2,"curCode":"    ControllerResult<Map<ConfigResource, ApiError>> legacyAlterConfigs(\n        Map<ConfigResource, Map<String, String>> newConfigs) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, String>> resourceEntry :\n            newConfigs.entrySet()) {\n            legacyAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return ControllerResult.atomicOf(outputRecords, outputResults);\n    }\n","date":"2021-03-05 02:55:43","endLine":175,"groupId":"10129","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyAlterConfigs","params":"(Map<ConfigResource@Map<String@String>>newConfigs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5b/c82ecafa477d04d7350644ac8124d4cc23cd3c.src","preCode":"    ControllerResult<Map<ConfigResource, ApiError>> legacyAlterConfigs(\n        Map<ConfigResource, Map<String, String>> newConfigs) {\n        List<ApiMessageAndVersion> outputRecords = new ArrayList<>();\n        Map<ConfigResource, ApiError> outputResults = new HashMap<>();\n        for (Entry<ConfigResource, Map<String, String>> resourceEntry :\n            newConfigs.entrySet()) {\n            legacyAlterConfigResource(resourceEntry.getKey(),\n                resourceEntry.getValue(),\n                outputRecords,\n                outputResults);\n        }\n        return new ControllerResult<>(outputRecords, outputResults);\n    }\n","realPath":"metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"96a2b7aac4f1c4a9e020ccc08dadc7a71b460abc","commitMessage":"@@@KAFKA-12376: Apply atomic append to the log (#10253)\n\n","date":"2021-03-05 02:55:43","modifiedFileCount":"14","status":"M","submitter":"Jos? Armando Garc?a Sancio"}]
