[{"authorTime":"2018-06-06 02:12:57","codes":[{"authorDate":"2018-06-06 02:12:57","commitOrder":1,"curCode":"    public void kTableNonMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter((key, value) -> false);\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000003\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \"    Processor: KTABLE-FILTER-0000000003 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\\n\",\n            describe.toString());\n    }\n","date":"2018-06-06 02:12:57","endLine":954,"groupId":"22511","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"kTableNonMaterializedFilterShouldPreserveTopologyStructure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8b/478852c4116bf1389357dd03876c41ee002a87.src","preCode":"    public void kTableNonMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter((key, value) -> false);\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000003\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \"    Processor: KTABLE-FILTER-0000000003 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\\n\",\n            describe.toString());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/TopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"B"},{"authorDate":"2018-06-06 02:12:57","commitOrder":1,"curCode":"    public void kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter(\n            (key, value) -> false,\n            Materialized.with(null, null));\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000004\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \r\n                \r\n                \r\n                \"    Processor: KTABLE-FILTER-0000000004 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\" +\n                \"\\n\",\n            describe.toString());\n    }\n","date":"2018-06-06 02:12:57","endLine":980,"groupId":"4697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8b/478852c4116bf1389357dd03876c41ee002a87.src","preCode":"    public void kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter(\n            (key, value) -> false,\n            Materialized.with(null, null));\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000004\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \r\n                \r\n                \r\n                \"    Processor: KTABLE-FILTER-0000000004 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\" +\n                \"\\n\",\n            describe.toString());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/TopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":957,"status":"B"}],"commitId":"ba5fd3c8a40836dd91389e566253affb0677776f","commitMessage":"@@@MINOR: Add regression tests for KTable mapValues and filter (#5134)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-06-06 02:12:57","modifiedFileCount":"1","status":"B","submitter":"John Roesler"},{"authorTime":"2018-12-09 14:49:48","codes":[{"authorDate":"2018-12-09 14:49:48","commitOrder":2,"curCode":"    public void kTableNonMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter((key, value) -> false);\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [])\\n\" +\n                \"      --> KTABLE-FILTER-0000000003\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \"    Processor: KTABLE-FILTER-0000000003 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\\n\",\n            describe.toString());\n    }\n","date":"2018-12-09 14:49:48","endLine":1040,"groupId":"101876","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"kTableNonMaterializedFilterShouldPreserveTopologyStructure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/04/6ffb0cd8b5256355a33ac100a83ad4d35633cf.src","preCode":"    public void kTableNonMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter((key, value) -> false);\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000003\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \"    Processor: KTABLE-FILTER-0000000003 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\\n\",\n            describe.toString());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/TopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1023,"status":"M"},{"authorDate":"2018-12-09 14:49:48","commitOrder":2,"curCode":"    public void kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter((key, value) -> false, Materialized.with(null, null));\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [])\\n\" +\n                \"      --> KTABLE-FILTER-0000000004\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \r\n                \r\n                \r\n                \"    Processor: KTABLE-FILTER-0000000004 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\" +\n                \"\\n\",\n            describe.toString());\n    }\n","date":"2018-12-09 14:49:48","endLine":1064,"groupId":"101876","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/04/6ffb0cd8b5256355a33ac100a83ad4d35633cf.src","preCode":"    public void kTableAnonymousMaterializedFilterShouldPreserveTopologyStructure() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KTable<Object, Object> table = builder.table(\"input-topic\");\n        table.filter(\n            (key, value) -> false,\n            Materialized.with(null, null));\n        final TopologyDescription describe = builder.build().describe();\n        Assert.assertEquals(\n            \"Topologies:\\n\" +\n                \"   Sub-topology: 0\\n\" +\n                \"    Source: KSTREAM-SOURCE-0000000001 (topics: [input-topic])\\n\" +\n                \"      --> KTABLE-SOURCE-0000000002\\n\" +\n                \"    Processor: KTABLE-SOURCE-0000000002 (stores: [input-topic-STATE-STORE-0000000000])\\n\" +\n                \"      --> KTABLE-FILTER-0000000004\\n\" +\n                \"      <-- KSTREAM-SOURCE-0000000001\\n\" +\n                \r\n                \r\n                \r\n                \"    Processor: KTABLE-FILTER-0000000004 (stores: [])\\n\" +\n                \"      --> none\\n\" +\n                \"      <-- KTABLE-SOURCE-0000000002\\n\" +\n                \"\\n\",\n            describe.toString());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/TopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1043,"status":"M"}],"commitId":"c0353d8ddce88bac6fc04f85dd40cb95b8ca5cf9","commitMessage":"@@@KAFKA-6036: Local Materialization for Source KTable (#5779)\n\nRefactor the materialization for source KTables in the way that:\n\nIf Materialized.as(queryableName) is specified.  materialize;\nIf the downstream operator requires to fetch from this KTable via ValueGetters.  materialize;\nIf the downstream operator requires to send old values.  materialize.\nOtherwise do not materialize the KTable. E.g. builder.table(\"topic\").filter().toStream().to(\"topic\") would not create any state stores.\n\nThere's a couple of minor changes along with PR as well:\n\nKTableImpl's queryableStoreName and isQueryable are merged into queryableStoreName only.  and if it is null it means not queryable. As long as it is not null.  it should be queryable (i.e. internally generated names will not be used any more).\nTo achieve this.  splitted MaterializedInternal.storeName() and MaterializedInternal.queryableName(). The former can be internally generated and will not be exposed to users. QueryableName can be modified to set to the internal store name if we decide to materialize it during the DSL parsing / physical topology generation phase. And only if queryableName is specified the corresponding KTable is determined to be materialized.\n\nFound some overlapping unit tests among KTableImplTest.  and KTableXXTest.  removed them.\n\nThere are a few typing bugs found along the way.  fixed them as well.\n\n-----------------------\n\nThis PR is an illustration of experimenting a poc towards logical materializations.\n\nToday we've logically materialized the KTable for filter / mapValues / transformValues if queryableName is not specified via Materialized.  but whenever users specify queryableName we will still always materialize. My original goal is to also consider logically materialize for queryable stores.  but when implementing it via a wrapped store to apply the transformations on the fly I realized it is tougher than I thought.  because we not only need to support fetch or get.  but also needs to support range queries.  approximateNumEntries.  and isOpen etc as well.  which are not efficient to support. So in the end I'd suggest we still stick with the rule of always materializing if queryableName is specified.  and only consider logical materialization otherwise.\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <mjsax@apache.org>","date":"2018-12-09 14:49:48","modifiedFileCount":"32","status":"M","submitter":"Guozhang Wang"}]
