[{"authorTime":"2019-05-17 16:37:32","codes":[{"authorDate":"2019-05-17 16:37:32","commitOrder":3,"curCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<String, Object>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","date":"2019-05-17 16:37:32","endLine":870,"groupId":"4179","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerConfigsWithOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/b83eb5e87714874f25ed2b293e47e6b790a02f.src","preCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<String, Object>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":854,"status":"MB"},{"authorDate":"2019-05-17 16:37:32","commitOrder":3,"curCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        Map<String, Object> connConfig = new HashMap<String, Object>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","date":"2019-05-17 16:37:32","endLine":893,"groupId":"4542","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testProducerConfigsWithClientOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/b83eb5e87714874f25ed2b293e47e6b790a02f.src","preCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        Map<String, Object> connConfig = new HashMap<String, Object>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"B"}],"commitId":"2e91a310d7bf9e7d4d46b0bc0ca0c11cb4531e10","commitMessage":"@@@KAFKA-8265: Initial implementation for ConnectorClientConfigPolicy to enable overrides (KIP-458) (#6624)\n\nImplementation to enable policy for Connector Client config overrides. This is\nimplemented per the KIP-458.\n\nReviewers: Randall Hauch <rhauch@gmail.com>","date":"2019-05-17 16:37:32","modifiedFileCount":"22","status":"M","submitter":"Magesh Nandakumar"},{"authorTime":"2020-05-28 09:18:36","codes":[{"authorDate":"2020-05-28 09:18:36","commitOrder":4,"curCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<String, Object>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","date":"2020-05-28 09:18:36","endLine":1029,"groupId":"4179","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerConfigsWithOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/48/ab58f11c3e1da38f9598cd20e229fb716da953.src","preCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<String, Object>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1011,"status":"M"},{"authorDate":"2020-05-28 09:18:36","commitOrder":4,"curCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        Map<String, Object> connConfig = new HashMap<String, Object>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","date":"2020-05-28 09:18:36","endLine":1054,"groupId":"19276","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testProducerConfigsWithClientOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/48/ab58f11c3e1da38f9598cd20e229fb716da953.src","preCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        Map<String, Object> connConfig = new HashMap<String, Object>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n                     Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1032,"status":"M"}],"commitId":"9c833f665f349e5c292228f75188f5521282835d","commitMessage":"@@@KAFKA-9960: implement KIP-606 to add metadata context to MetricsReporter (#8691)\n\nImplemented KIP-606 to add metadata context to MetricsReporter.\n\nAuthor: Xiaodong Du <xdu@confluent.io>\nReviewers: David Arthur <mumrah@gmail.com>.  Randall Hauch <rhauch@gmail.com>.  Xavier L?aut? <xavier@confluent.io>.  Ryan Pridgeon <ryan.n.pridgeon@gmail.com>","date":"2020-05-28 09:18:36","modifiedFileCount":"35","status":"M","submitter":"xiaodongdu"},{"authorTime":"2021-02-05 09:08:56","codes":[{"authorDate":"2021-02-05 09:08:56","commitOrder":5,"curCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","date":"2021-02-05 09:08:56","endLine":1103,"groupId":"104699","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerConfigsWithOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cb/f0802cd4b28d9a0d3ab73349753b1b56e657da.src","preCode":"    public void testProducerConfigsWithOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(\n            new HashMap<String, Object>());\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1085,"status":"M"},{"authorDate":"2021-02-05 09:08:56","commitOrder":5,"curCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        Map<String, Object> connConfig = new HashMap<>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","date":"2021-02-05 09:08:56","endLine":1128,"groupId":"104699","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testProducerConfigsWithClientOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cb/f0802cd4b28d9a0d3ab73349753b1b56e657da.src","preCode":"    public void testProducerConfigsWithClientOverrides() {\n        Map<String, String> props = new HashMap<>(workerProps);\n        props.put(\"producer.acks\", \"-1\");\n        props.put(\"producer.linger.ms\", \"1000\");\n        props.put(\"producer.client.id\", \"producer-test-id\");\n        WorkerConfig configWithOverrides = new StandaloneConfig(props);\n\n        Map<String, String> expectedConfigs = new HashMap<>(defaultProducerConfigs);\n        expectedConfigs.put(\"acks\", \"-1\");\n        expectedConfigs.put(\"linger.ms\", \"5000\");\n        expectedConfigs.put(\"batch.size\", \"1000\");\n        expectedConfigs.put(\"client.id\", \"producer-test-id\");\n        expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\", CLUSTER_ID);\n\n        Map<String, Object> connConfig = new HashMap<String, Object>();\n        connConfig.put(\"linger.ms\", \"5000\");\n        connConfig.put(\"batch.size\", \"1000\");\n        EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX))\n            .andReturn(connConfig);\n        PowerMock.replayAll();\n        assertEquals(expectedConfigs,\n            Worker.producerConfigs(TASK_ID, \"connector-producer-\" + TASK_ID, configWithOverrides, connectorConfig, null, allConnectorClientConfigOverridePolicy, CLUSTER_ID));\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1106,"status":"M"}],"commitId":"07843cfbf4e3e7a2d26d63904bbf0da0fcd07ca2","commitMessage":"@@@KAFKA-10834: Remove redundant type casts in Connect (#10053)\n\nCleanup up to remove redundant type casts in Connect and use the diamond operator when needed \n\nReviewers: Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-02-05 09:08:56","modifiedFileCount":"41","status":"M","submitter":"Lev Zemlyanov"}]
