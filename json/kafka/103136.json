[{"authorTime":"2019-10-08 00:21:14","codes":[{"authorDate":"2019-10-08 00:21:14","commitOrder":1,"curCode":"    public void testGetErrorResponse() {\n        for (short version = UPDATE_METADATA.oldestVersion(); version < UPDATE_METADATA.latestVersion(); version++) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2019-10-08 00:21:14","endLine":70,"groupId":"8225","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fe/688ce75cc9acaf975d3255948bb746205c74c9.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = UPDATE_METADATA.oldestVersion(); version < UPDATE_METADATA.latestVersion(); version++) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/UpdateMetadataRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2019-10-08 00:21:14","commitOrder":1,"curCode":"    public void testGetErrorResponse() {\n        for (short version = CONTROLLED_SHUTDOWN.oldestVersion(); version < CONTROLLED_SHUTDOWN.latestVersion(); version++) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2019-10-08 00:21:14","endLine":49,"groupId":"19028","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/ec3da9d1b013b27804f49fabe2d4f78e98c3d4.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = CONTROLLED_SHUTDOWN.oldestVersion(); version < CONTROLLED_SHUTDOWN.latestVersion(); version++) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/ControlledShutdownRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"}],"commitId":"c06e45a215072b1f909ccc9d1a9a82ae521b4bab","commitMessage":"@@@KAFKA-8985; Add flexible version support to inter-broker APIs (#7453)\n\nThis patch adds flexible version support for the following inter-broker APIs: ControlledShutdown.  LeaderAndIsr.  UpdateMetadata.  and StopReplica. Version checks have been removed from `getErrorResponse` methods since they were redundant given the checks in `AbstractRequest` and the respective`*Data` types.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>","date":"2019-10-08 00:21:14","modifiedFileCount":"7","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2019-10-08 00:21:14","codes":[{"authorDate":"2020-12-19 05:30:52","commitOrder":2,"curCode":"    public void testGetErrorResponse() {\n        for (short version = UPDATE_METADATA.oldestVersion(); version < UPDATE_METADATA.latestVersion(); version++) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList(), Collections.emptyMap());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2020-12-19 05:30:52","endLine":72,"groupId":"4628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/79/d94e8f929f398db2519097bd1bc5607230d1e8.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = UPDATE_METADATA.oldestVersion(); version < UPDATE_METADATA.latestVersion(); version++) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/UpdateMetadataRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-10-08 00:21:14","commitOrder":2,"curCode":"    public void testGetErrorResponse() {\n        for (short version = CONTROLLED_SHUTDOWN.oldestVersion(); version < CONTROLLED_SHUTDOWN.latestVersion(); version++) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2019-10-08 00:21:14","endLine":49,"groupId":"19028","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/ec3da9d1b013b27804f49fabe2d4f78e98c3d4.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = CONTROLLED_SHUTDOWN.oldestVersion(); version < CONTROLLED_SHUTDOWN.latestVersion(); version++) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/ControlledShutdownRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"}],"commitId":"5c921afa4a593478f7d1c49e5db9d787558d0d5e","commitMessage":"@@@KAFKA-10547; Add TopicId in MetadataResponse (#9622)\n\nIncludes:\n- Bump the version of MetadataRequest and MetadataResponse.  add topicId in MetadataResponse\n- Alter describeTopic in AdminClientTopicService and ZookeeperTopicService\n- TopicMetadata is cached in MetadataCache.  so we need to add topicId to MetadataCache\n- MetadataCache is updated by UpdateMetadataRequest.  bump the version of UpdateMetadataReq and UpdateMetadataResp.  add topicId in UpdateMetadataReq.\n\nReviewers: Justine Olshan <jolshan@confluent.io>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n","date":"2020-12-19 05:30:52","modifiedFileCount":"9","status":"M","submitter":"dengziming"},{"authorTime":"2021-03-05 00:22:57","codes":[{"authorDate":"2021-03-05 00:22:57","commitOrder":3,"curCode":"    public void testGetErrorResponse() {\n        for (short version : UPDATE_METADATA.allVersions()) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList(), Collections.emptyMap());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2021-03-05 00:22:57","endLine":72,"groupId":"103136","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6f/9d5c24546063ae9e98f13ec0803ab3fdd78940.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = UPDATE_METADATA.oldestVersion(); version < UPDATE_METADATA.latestVersion(); version++) {\n            UpdateMetadataRequest.Builder builder = new UpdateMetadataRequest.Builder(\n                    version, 0, 0, 0, Collections.emptyList(), Collections.emptyList(), Collections.emptyMap());\n            UpdateMetadataRequest request = builder.build();\n            UpdateMetadataResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/UpdateMetadataRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2021-03-05 00:22:57","commitOrder":3,"curCode":"    public void testGetErrorResponse() {\n        for (short version : CONTROLLED_SHUTDOWN.allVersions()) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","date":"2021-03-05 00:22:57","endLine":49,"groupId":"103136","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetErrorResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/86/7be713ba2e2b4f65cb80c876e5f44fe2f6940f.src","preCode":"    public void testGetErrorResponse() {\n        for (short version = CONTROLLED_SHUTDOWN.oldestVersion(); version < CONTROLLED_SHUTDOWN.latestVersion(); version++) {\n            ControlledShutdownRequest.Builder builder = new ControlledShutdownRequest.Builder(\n                    new ControlledShutdownRequestData().setBrokerId(1), version);\n            ControlledShutdownRequest request = builder.build();\n            ControlledShutdownResponse response = request.getErrorResponse(0,\n                    new ClusterAuthorizationException(\"Not authorized\"));\n            assertEquals(Errors.CLUSTER_AUTHORIZATION_FAILED, response.error());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/ControlledShutdownRequestTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"be1476869fc93553b3099d387d26bfd0092a9d65","commitMessage":"@@@MINOR: make sure all generated data tests cover all versions (#10078)\n\nReviewers: David Jacot <djacot@confluent.io>","date":"2021-03-05 00:22:57","modifiedFileCount":"27","status":"M","submitter":"Chia-Ping Tsai"}]
