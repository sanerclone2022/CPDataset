[{"authorTime":"2018-04-07 08:00:52","codes":[{"authorDate":"2018-04-07 08:00:52","commitOrder":1,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2018-04-07 08:00:52","endLine":79,"groupId":"16679","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/dc/b05ca5d72da8269ccc2afceeeae1291c521df5.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0101/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2018-04-07 08:00:52","commitOrder":1,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2018-04-07 08:00:52","endLine":76,"groupId":"16679","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/32/f96a01d99d413592fd5c5ee01b93185e76a0d3.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0100/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"}],"commitId":"0c0d8363e5787e97cce5e0b9b86486d737a6890c","commitMessage":"@@@KAFKA-6054: Fix upgrade path from Kafka Streams v0.10.0 (#4779)\n\nReviewers: Guozhang Wang <guozhang@confluent.io>.  Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Damian Guy <damian@confluent.io>","date":"2018-04-07 08:00:52","modifiedFileCount":"10","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2019-10-24 22:28:29","codes":[{"authorDate":"2019-10-24 22:28:29","commitOrder":2,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2019-10-24 22:28:29","endLine":75,"groupId":"134","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/53/ee0dcc42b80edeab9e8eb211c3c1dd75d70aae.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0101/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-10-24 22:28:29","commitOrder":2,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2019-10-24 22:28:29","endLine":72,"groupId":"134","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3c/1d99fde25854a636742da3bc3abe58f11eba15.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 3) {\n            System.err.println(\"StreamsUpgradeTest requires three argument (kafka-url, zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\")\n                + (args.length > 1 ? args[1] : \"\"));\n        }\n        final String kafka = args[0];\n        final String zookeeper = args[1];\n        final String propFileName = args.length > 2 ? args[2] : null;\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"kafka=\" + kafka);\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, kafka);\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0100/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"c015169aa6ae835978cadbcb1d17a123e8c475f8","commitMessage":"@@@MINOR: Streams upgrade system test cleanup (#7571)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Sophie Blee-Goldman <sophie@confluent.io>.  Boyang Chen <boyang@confluent.io>. ","date":"2019-10-24 22:28:29","modifiedFileCount":"11","status":"M","submitter":"Bill Bejeck"},{"authorTime":"2021-05-22 06:05:39","codes":[{"authorDate":"2021-05-22 06:05:39","commitOrder":3,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000L);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2021-05-22 06:05:39","endLine":75,"groupId":"103131","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/37/9720b95627394e40254916a437411d2d479bc2.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.1)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0101/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2021-05-22 06:05:39","commitOrder":3,"curCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000L);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","date":"2021-05-22 06:05:39","endLine":72,"groupId":"103131","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(finalString[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/27/712cc5ace4e61781154d121ffd18011d6a8706.src","preCode":"    public static void main(final String[] args) throws Exception {\n        if (args.length < 2) {\n            System.err.println(\"StreamsUpgradeTest requires two arguments (zookeeper-url, properties-file) but only \" + args.length + \" provided: \"\n                + (args.length > 0 ? args[0] + \" \" : \"\"));\n        }\n        final String zookeeper = args[0];\n        final String propFileName = args[1];\n\n        final Properties streamsProperties = Utils.loadProps(propFileName);\n\n        System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v0.10.0)\");\n        System.out.println(\"zookeeper=\" + zookeeper);\n        System.out.println(\"props=\" + streamsProperties);\n\n        final KStreamBuilder builder = new KStreamBuilder();\n        final KStream dataStream = builder.stream(\"data\");\n        dataStream.process(printProcessorSupplier());\n        dataStream.to(\"echo\");\n\n        final Properties config = new Properties();\n        config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, \"StreamsUpgradeTest\");\n        config.setProperty(StreamsConfig.ZOOKEEPER_CONNECT_CONFIG, zookeeper);\n        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n        config.putAll(streamsProperties);\n\n        final KafkaStreams streams = new KafkaStreams(builder, config);\n        streams.start();\n\n        Runtime.getRuntime().addShutdownHook(new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"closing Kafka Streams instance\");\n                System.out.flush();\n                streams.close();\n                System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n                System.out.flush();\n            }\n        });\n    }\n","realPath":"streams/upgrade-system-tests-0100/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"ae8b7845374b6bb01e1ae9ca27f6ab967561e011","commitMessage":"@@@KAFKA-12499: add transaction timeout verification (#10482)\n\nThis PR tries to add the check for transaction timeout for a comparison against commit interval of streams. If transaction timeout is smaller than commit interval.  stream should crash and inform user to update their commit interval to be larger or equal to the given transaction timeout.  or vise versa.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>.  A. Sophie Blee-Goldman <sophie@confluent.io>","date":"2021-05-22 06:05:39","modifiedFileCount":"65","status":"M","submitter":"Boyang Chen"}]
