[{"authorTime":"2017-06-07 23:14:09","codes":[{"authorDate":"2017-06-07 23:14:09","commitOrder":1,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","date":"2017-06-07 23:36:57","endLine":419,"groupId":"12966","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/55/c92415e1a888c09a12deb7edf22a2017166673.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":403,"status":"B"},{"authorDate":"2017-06-07 23:14:09","commitOrder":1,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","date":"2017-06-07 23:36:57","endLine":437,"groupId":"12966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/55/c92415e1a888c09a12deb7edf22a2017166673.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"B"}],"commitId":"dcbdce31ba525771016be5be4abc4a2067e0890b","commitMessage":"@@@KAFKA-5378; Return LSO in FetchResponse plus some metrics\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #3248 from hachikuji/KAFKA-5378\n","date":"2017-06-07 23:36:57","modifiedFileCount":"7","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2019-05-03 00:29:22","codes":[{"authorDate":"2019-05-03 00:29:22","commitOrder":2,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","date":"2019-05-03 00:29:22","endLine":545,"groupId":"14792","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2d/3487f5126ba73f89ee4e5ccd503ab16bff3efa.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"},{"authorDate":"2019-05-03 00:29:22","commitOrder":2,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","date":"2019-05-03 00:29:22","endLine":563,"groupId":"14792","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2d/3487f5126ba73f89ee4e5ccd503ab16bff3efa.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.run(time.milliseconds());\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"M"}],"commitId":"c34330c5481803c91705cbfcc499021360ff7fdc","commitMessage":"@@@KAFKA-8248; Ensure time updated before sending transactional request (#6613)\n\nThis patch fixes a bug in the sending of transactional requests. We need to call `KafkaClient.send` with an updated current time. Failing to do so can result in an `IllegalStateExcepton` which leaves the producer effectively dead since the in-flight correlation id has been set.  but no request has been sent. To avoid the same problem in the future.  we update the in flight correlationId only after sending the request.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Apurva Mehta <apurva@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-03 00:29:22","modifiedFileCount":"7","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-08-02 05:36:12","codes":[{"authorDate":"2019-08-02 05:36:12","commitOrder":3,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","date":"2019-08-02 05:36:12","endLine":573,"groupId":"14792","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/a5771002cd836b6a11e556b115da3de5a477cc.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":556,"status":"M"},{"authorDate":"2019-08-02 05:36:12","commitOrder":3,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","date":"2019-08-02 05:36:12","endLine":592,"groupId":"14792","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/a5771002cd836b6a11e556b115da3de5a477cc.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"M"}],"commitId":"717c55be971df862c55f55d245b9997f1d6f998c","commitMessage":"@@@KAFKA-8601: Implement KIP-480: Sticky Partitioning for keyless records (#6997)\n\nImplement KIP-480.  which specifies that the default partitioner should use a \"sticky\" partitioning strategy for records that have a null key.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>.  Lucas Bradstreet <lucasbradstreet@gmail.com>.  Stanislav Kozlovski <stanislav_kozlovski@outlook.com>.  Jun Rao <junrao@gmail.com>.  Kamal Chandraprakash  <kamal.chandraprakash@gmail.com>","date":"2019-08-02 05:36:12","modifiedFileCount":"9","status":"M","submitter":"Justine Olshan"},{"authorTime":"2020-01-24 00:14:31","codes":[{"authorDate":"2020-01-24 00:14:31","commitOrder":4,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","date":"2020-01-24 00:14:31","endLine":576,"groupId":"7069","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/4f50d3d2f8f17311f972c1c07372c89ad77d90.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"M"},{"authorDate":"2020-01-24 00:14:31","commitOrder":4,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","date":"2020-01-24 00:14:31","endLine":595,"groupId":"7069","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a3/4f50d3d2f8f17311f972c1c07372c89ad77d90.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n        sender.runOnce();\n        assertFalse(transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":579,"status":"M"}],"commitId":"df13fc93d0aebfe0ecc40dd4af3c5fb19b35f710","commitMessage":"@@@KAFKA-7737; Use single path in producer for initializing the producerId (#7920)\n\nPreviously the idempotent producer and transactional producer use separate logic when initializing the producerId. This patch consolidates the two paths. We also do some cleanup in `TransactionManagerTest` to eliminate brittle expectations on `Sender`.\n\nReviewers: Bob Barrett <bob.barrett@confluent.io>.  Viktor Somogyi <viktorsomogyi@gmail.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-01-24 00:14:31","modifiedFileCount":"6","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2020-04-03 12:48:37","codes":[{"authorDate":"2020-04-03 12:48:37","commitOrder":5,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        doInitTransactions();\n\n        transactionManager.beginTransaction();\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, producerId);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","date":"2020-04-03 12:48:37","endLine":545,"groupId":"103625","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/00605a5989bf08c894080ea48908bf7e6337c5.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterAbortableError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToAbortableError(new KafkaException());\n\n        assertTrue(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasAbortableError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"M"},{"authorDate":"2020-04-03 12:48:37","commitOrder":5,"curCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        doInitTransactions();\n\n        transactionManager.beginTransaction();\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, producerId);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","date":"2020-04-03 12:48:37","endLine":561,"groupId":"103625","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/00605a5989bf08c894080ea48908bf7e6337c5.src","preCode":"    public void testIsSendToPartitionAllowedWithAddedPartitionAfterFatalError() {\n        final long pid = 13131L;\n        final short epoch = 1;\n\n        doInitTransactions(pid, epoch);\n\n        transactionManager.beginTransaction();\n        transactionManager.failIfNotReadyForSend();\n        transactionManager.maybeAddPartitionToTransaction(tp0);\n        prepareAddPartitionsToTxnResponse(Errors.NONE, tp0, epoch, pid);\n\n        runUntil(() -> !transactionManager.hasPartitionsToAdd());\n        transactionManager.transitionToFatalError(new KafkaException());\n\n        assertFalse(transactionManager.isSendToPartitionAllowed(tp0));\n        assertTrue(transactionManager.hasFatalError());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"M"}],"commitId":"7f640f13b4d486477035c3edb28466734f053beb","commitMessage":"@@@KAFKA-9776: Downgrade TxnCommit API v3 when broker doesn't support (#8375)\n\nRevert the decision for the sendOffsetsToTransaction(groupMetadata) API to fail with old version of brokers for the sake of making the application easier to adapt between versions. This PR silently downgrade the TxnOffsetCommit API when the build version is small than 3.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-04-03 12:48:37","modifiedFileCount":"12","status":"M","submitter":"Boyang Chen"}]
