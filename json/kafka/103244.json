[{"authorTime":"2018-06-06 04:07:30","codes":[{"authorDate":"2018-06-06 04:07:30","commitOrder":1,"curCode":"    public void missingPrincipal() {\n        String subject = null;\n        long issuedAt = 100;\n        Long expirationTime = null;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","date":"2018-06-06 04:07:30","endLine":92,"groupId":"9981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"missingPrincipal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a9/9e75bfb8ec88033485a95b2d69fcb6249126a8.src","preCode":"    public void missingPrincipal() {\n        String subject = null;\n        long issuedAt = 100;\n        Long expirationTime = null;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJwsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2018-06-06 04:07:30","commitOrder":1,"curCode":"    public void blankPrincipalName() {\n        String subject = \"   \";\n        long issuedAt = 100;\n        long expirationTime = issuedAt + 60 * 60;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","date":"2018-06-06 04:07:30","endLine":102,"groupId":"9981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"blankPrincipalName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a9/9e75bfb8ec88033485a95b2d69fcb6249126a8.src","preCode":"    public void blankPrincipalName() {\n        String subject = \"   \";\n        long issuedAt = 100;\n        long expirationTime = issuedAt + 60 * 60;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJwsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"7c69de42df78bbb4a651b293038d4e957e528970","commitMessage":"@@@MINOR: Rename package `internal` to `internals` for consistency (#5137)\n\n","date":"2018-06-06 04:07:30","modifiedFileCount":"12","status":"B","submitter":"Rajini Sivaram"},{"authorTime":"2021-01-10 20:20:13","codes":[{"authorDate":"2021-01-10 20:20:13","commitOrder":2,"curCode":"    public void missingPrincipal() {\n        String subject = null;\n        long issuedAt = 100;\n        Long expirationTime = null;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        assertThrows(OAuthBearerIllegalTokenException.class,\n            () -> new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\"));\n    }\n","date":"2021-01-10 20:20:13","endLine":94,"groupId":"103244","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"missingPrincipal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/43/31a151c2b72a6235271087dfc94bd57c3b7f96.src","preCode":"    public void missingPrincipal() {\n        String subject = null;\n        long issuedAt = 100;\n        Long expirationTime = null;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJwsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-01-10 20:20:13","commitOrder":2,"curCode":"    public void blankPrincipalName() {\n        String subject = \"   \";\n        long issuedAt = 100;\n        long expirationTime = issuedAt + 60 * 60;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        assertThrows(OAuthBearerIllegalTokenException.class,\n            () -> new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\"));\n    }\n","date":"2021-01-10 20:20:13","endLine":105,"groupId":"103244","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"blankPrincipalName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/43/31a151c2b72a6235271087dfc94bd57c3b7f96.src","preCode":"    public void blankPrincipalName() {\n        String subject = \"   \";\n        long issuedAt = 100;\n        long expirationTime = issuedAt + 60 * 60;\n        List<String> scope = Arrays.asList(\"scopeValue1\", \"scopeValue2\");\n        String validCompactSerialization = compactSerialization(subject, issuedAt, expirationTime, scope);\n        new OAuthBearerUnsecuredJws(validCompactSerialization, \"sub\", \"scope\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJwsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"913a019d6c9b03eb44706deb7fb164f79c1f601f","commitMessage":"@@@MINOR: replace test \"expected\" parameter by assertThrows (#9520)\n\nThis PR includes following changes.\n\n1. @Test(expected = Exception.class) is replaced by assertThrows\n2. remove reference to org.scalatest.Assertions\n3. change the magic code from 1 to 2 for testAppendAtInvalidOffset to test ZSTD\n4. rename testMaybeAddPartitionToTransactionXXXX to testNotReadyForSendXXX\n5. increase maxBlockMs from 1s to 3s to avoid unexpected timeout from TransactionsTest#testTimeout\n\nReviewers: Ismael Juma <ismael@confluent.io>","date":"2021-01-10 20:20:13","modifiedFileCount":"166","status":"M","submitter":"Chia-Ping Tsai"}]
