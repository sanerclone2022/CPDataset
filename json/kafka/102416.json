[{"authorTime":"2019-08-03 00:51:03","codes":[{"authorDate":"2019-08-03 00:51:03","commitOrder":1,"curCode":"    public void shouldAddAmountRateAndSum() {\n        StreamsMetricsImpl\n            .addRateOfSumAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 72.0;\n        final long defaultWindowSizeInSeconds = Duration.ofMillis(new MetricConfig().timeWindowMs()).getSeconds();\n        final double expectedRateMetricValue = (valueToRecord1 + valueToRecord2) / defaultWindowSizeInSeconds;\n        verifyMetric(metricNamePrefix + \"-rate\", description1, valueToRecord1, valueToRecord2, expectedRateMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","date":"2019-08-03 00:51:03","endLine":275,"groupId":"17144","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAddAmountRateAndSum","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/67/8d9f30635ab2baf1c0143305a7cf0e3b8acc85.src","preCode":"    public void shouldAddAmountRateAndSum() {\n        StreamsMetricsImpl\n            .addRateOfSumAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 72.0;\n        final long defaultWindowSizeInSeconds = Duration.ofMillis(new MetricConfig().timeWindowMs()).getSeconds();\n        final double expectedRateMetricValue = (valueToRecord1 + valueToRecord2) / defaultWindowSizeInSeconds;\n        verifyMetric(metricNamePrefix + \"-rate\", description1, valueToRecord1, valueToRecord2, expectedRateMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"B"},{"authorDate":"2019-08-03 00:51:03","commitOrder":1,"curCode":"    public void shouldAddAvgAndTotalMetricsToSensor() {\n        StreamsMetricsImpl\n            .addAvgAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 42.0;\n        final double expectedAvgMetricValue = (valueToRecord1 + valueToRecord2) / 2;\n        verifyMetric(metricNamePrefix + \"-avg\", description1, valueToRecord1, valueToRecord2, expectedAvgMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","date":"2019-08-03 00:51:03","endLine":328,"groupId":"383","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAddAvgAndTotalMetricsToSensor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/67/8d9f30635ab2baf1c0143305a7cf0e3b8acc85.src","preCode":"    public void shouldAddAvgAndTotalMetricsToSensor() {\n        StreamsMetricsImpl\n            .addAvgAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 42.0;\n        final double expectedAvgMetricValue = (valueToRecord1 + valueToRecord2) / 2;\n        verifyMetric(metricNamePrefix + \"-avg\", description1, valueToRecord1, valueToRecord2, expectedAvgMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"}],"commitId":"a7d0fdd534ef55533a868ea7388bbc081ee42718","commitMessage":"@@@KAFKA-8578: Add basic functionality to expose RocksDB metrics (#6979)\n\n* Adds RocksDBMetrics class that provides methods to get sensors from the Kafka metrics registry and to setup the sensors to record RocksDB metrics\n\n* Extends StreamsMetricsImpl with functionality to add the required metrics to the sensors.\n\nReviewers: Boyang Chen <boyang@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  John Roesler <vvcephei@users.noreply.github.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-08-03 00:51:03","modifiedFileCount":"2","status":"B","submitter":"cadonna"},{"authorTime":"2020-08-28 07:04:28","codes":[{"authorDate":"2020-08-28 07:04:28","commitOrder":2,"curCode":"    public void shouldAddAmountRateAndSum() {\n        StreamsMetricsImpl\n            .addRateOfSumAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, DESCRIPTION1, DESCRIPTION2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 72.0;\n        final long defaultWindowSizeInSeconds = Duration.ofMillis(new MetricConfig().timeWindowMs()).getSeconds();\n        final double expectedRateMetricValue = (valueToRecord1 + valueToRecord2) / defaultWindowSizeInSeconds;\n        verifyMetric(metricNamePrefix + \"-rate\", DESCRIPTION1, valueToRecord1, valueToRecord2, expectedRateMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", DESCRIPTION2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","date":"2020-08-28 07:04:28","endLine":1086,"groupId":"102416","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAddAmountRateAndSum","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/81/26ba6632d49e737619d2ab419e6176635df97c.src","preCode":"    public void shouldAddAmountRateAndSum() {\n        StreamsMetricsImpl\n            .addRateOfSumAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 72.0;\n        final long defaultWindowSizeInSeconds = Duration.ofMillis(new MetricConfig().timeWindowMs()).getSeconds();\n        final double expectedRateMetricValue = (valueToRecord1 + valueToRecord2) / defaultWindowSizeInSeconds;\n        verifyMetric(metricNamePrefix + \"-rate\", description1, valueToRecord1, valueToRecord2, expectedRateMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1074,"status":"M"},{"authorDate":"2020-08-28 07:04:28","commitOrder":2,"curCode":"    public void shouldAddAvgAndTotalMetricsToSensor() {\n        StreamsMetricsImpl\n            .addAvgAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, DESCRIPTION1, DESCRIPTION2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 42.0;\n        final double expectedAvgMetricValue = (valueToRecord1 + valueToRecord2) / 2;\n        verifyMetric(metricNamePrefix + \"-avg\", DESCRIPTION1, valueToRecord1, valueToRecord2, expectedAvgMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", DESCRIPTION2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","date":"2020-08-28 07:04:28","endLine":1139,"groupId":"102416","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAddAvgAndTotalMetricsToSensor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/81/26ba6632d49e737619d2ab419e6176635df97c.src","preCode":"    public void shouldAddAvgAndTotalMetricsToSensor() {\n        StreamsMetricsImpl\n            .addAvgAndSumMetricsToSensor(sensor, group, tags, metricNamePrefix, description1, description2);\n\n        final double valueToRecord1 = 18.0;\n        final double valueToRecord2 = 42.0;\n        final double expectedAvgMetricValue = (valueToRecord1 + valueToRecord2) / 2;\n        verifyMetric(metricNamePrefix + \"-avg\", description1, valueToRecord1, valueToRecord2, expectedAvgMetricValue);\n        final double expectedSumMetricValue = 2 * valueToRecord1 + 2 * valueToRecord2; \r\n        verifyMetric(metricNamePrefix + \"-total\", description2, valueToRecord1, valueToRecord2, expectedSumMetricValue);\n        assertThat(metrics.metrics().size(), equalTo(2 + 1)); \r\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1128,"status":"M"}],"commitId":"9da32b6bd014f1bdeeee5da8fcd00995a5916323","commitMessage":"@@@KAFKA-9924: Add RocksDB metric num-entries-active-mem-table (#9177)\n\n* Add the first RocksDB metric that exposes a RocksDB property: num-entries-active-mem-table.\n* Add code StreamsMetricsImpl in support of exposing RocksDB properties\n* unit tests and intergration tests\n\nThis commit only contains one metric to keep the PR at a reasonable size.\nAll other RocksDB metrics described in KIP-607 will be added in other PRs.\n\nImplements: KIP-607\nReviewers: Guozhang Wang <guozhang@apache.org>.  John Roesler <vvcephei@apache.org>","date":"2020-08-28 07:04:28","modifiedFileCount":"22","status":"M","submitter":"Bruno Cadonna"}]
