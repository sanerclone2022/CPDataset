[{"authorTime":"2017-10-23 22:52:30","codes":[{"authorDate":"2017-10-23 22:52:30","commitOrder":2,"curCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.close(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","date":"2017-10-23 22:52:30","endLine":258,"groupId":"3270","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConnectionDelayDisconnectedWithNoExponentialBackoff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ed/bd72db88868d02a270d527e78cf5ccc606521c.src","preCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.close(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"B"},{"authorDate":"2017-10-23 22:52:30","commitOrder":2,"curCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.2;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.4;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","date":"2017-10-23 22:52:30","endLine":304,"groupId":"3272","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectionDelayDisconnected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ed/bd72db88868d02a270d527e78cf5ccc606521c.src","preCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.2;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.4;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"MB"}],"commitId":"277fc927c0d6c2699b64a5a54461fb96a50f58ae","commitMessage":"@@@KAFKA-6101; Reconnecting to broker does not exponentially backoff\n\nAuthor: tedyu <yuzhihong@gmail.com>\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Soenke Liebau <soenke.liebau@opencore.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #4118 from tedyu/trunk\n","date":"2017-10-23 22:52:30","modifiedFileCount":"3","status":"M","submitter":"tedyu"},{"authorTime":"2017-12-02 05:01:18","codes":[{"authorDate":"2017-10-23 22:52:30","commitOrder":3,"curCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.close(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","date":"2017-10-23 22:52:30","endLine":258,"groupId":"3270","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConnectionDelayDisconnectedWithNoExponentialBackoff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ed/bd72db88868d02a270d527e78cf5ccc606521c.src","preCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.close(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"N"},{"authorDate":"2017-12-02 05:01:18","commitOrder":3,"curCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","date":"2017-12-02 05:01:18","endLine":304,"groupId":"3272","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectionDelayDisconnected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b9/66494f6d06a1b38b98d00055724bd1767fdecd.src","preCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.2;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.4;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"8c1e1cf27a58d7433c0230ff2b8ecefb30f73fd0","commitMessage":"@@@KAFKA-6296; Increase jitter to fix transient failure in NetworkClientTest.testConnectionDelayDisconnected\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Ted Yu <yuzhihong@gmail.com>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #4285 from hachikuji/KAFKA-6296\n","date":"2017-12-02 05:01:18","modifiedFileCount":"1","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2017-12-08 18:54:31","codes":[{"authorDate":"2017-12-08 18:54:31","commitOrder":4,"curCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.serverDisconnect(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","date":"2017-12-08 18:54:31","endLine":262,"groupId":"3270","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testConnectionDelayDisconnectedWithNoExponentialBackoff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/2428e4492650903f51e46a08ff84ac97e9dbd2.src","preCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.close(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2017-12-08 18:54:31","commitOrder":4,"curCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","date":"2017-12-08 18:54:31","endLine":308,"groupId":"3272","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectionDelayDisconnected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/2428e4492650903f51e46a08ff84ac97e9dbd2.src","preCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.close(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"2bf2348b5fc9f9f62bee5b91a431b8703a20cdbb","commitMessage":"@@@KAFKA-6289; NetworkClient should not expose failed internal ApiVersions requests\n\nThe NetworkClient internally ApiVersion requests to each broker following connection establishment. If this request happens to fail (perhaps due to an incompatible broker).  the NetworkClient includes the response in the result of poll(). Applications will generally not be expecting this response which may lead to failed assertions (or in the case of AdminClient.  an obscure log message).\n\nI've added test cases which await the ApiVersion request sent by NetworkClient to be in-flight.  and then disconnect the connection and verify that the response is not included from poll().\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nCloses #4280 from hachikuji/KAFKA-6289\n","date":"2017-12-08 18:54:31","modifiedFileCount":"3","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-06-14 07:21:30","codes":[{"authorDate":"2018-06-14 07:21:30","commitOrder":5,"curCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.serverDisconnect(node.idString());\n        clientWithNoExponentialBackoff.poll(minRequestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","date":"2018-06-14 07:21:30","endLine":368,"groupId":"3270","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testConnectionDelayDisconnectedWithNoExponentialBackoff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e1/3fcefaec994ce8f555367d17c19c4d23764702.src","preCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.serverDisconnect(node.idString());\n        clientWithNoExponentialBackoff.poll(requestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"},{"authorDate":"2018-06-14 07:21:30","commitOrder":5,"curCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","date":"2018-06-14 07:21:30","endLine":414,"groupId":"3272","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectionDelayDisconnected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e1/3fcefaec994ce8f555367d17c19c4d23764702.src","preCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(requestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"443091b844d4119637d252a5303568e22d4f1d48","commitMessage":"@@@KAFKA-7050; Decrease default consumer request timeout to 30s (#5203)\n\nThis patch changes the default `request.timeout.ms` of the consumer to 30 seconds. Additionally.  it adds logic to `NetworkClient` and related to components to support timeouts at the request level. We use this to handle the special case of the JoinGroup request.  which may block for as long as the value configured by `max.poll.interval.ms`.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <guozhang@confluent.io>","date":"2018-06-14 07:21:30","modifiedFileCount":"18","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-08-03 02:02:38","codes":[{"authorDate":"2018-08-03 02:02:38","commitOrder":6,"curCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.serverDisconnect(node.idString());\n        clientWithNoExponentialBackoff.poll(defaultRequestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(defaultRequestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","date":"2018-08-03 02:02:38","endLine":370,"groupId":"103762","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testConnectionDelayDisconnectedWithNoExponentialBackoff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/76570b2bfab1a611ae8df3641f68284feda28d.src","preCode":"    public void testConnectionDelayDisconnectedWithNoExponentialBackoff() {\n        awaitReady(clientWithNoExponentialBackoff, node);\n\n        selector.serverDisconnect(node.idString());\n        clientWithNoExponentialBackoff.poll(minRequestTimeoutMs, time.milliseconds());\n        long delay = clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds());\n\n        assertEquals(reconnectBackoffMsTest, delay);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, clientWithNoExponentialBackoff.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n\n        \r\n        assertEquals(reconnectBackoffMsTest, delay);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"},{"authorDate":"2018-08-03 02:02:38","commitOrder":6,"curCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.serverDisconnect(node.idString());\n        client.poll(defaultRequestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(defaultRequestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","date":"2018-08-03 02:02:38","endLine":416,"groupId":"103762","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectionDelayDisconnected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/76570b2bfab1a611ae8df3641f68284feda28d.src","preCode":"    public void testConnectionDelayDisconnected() {\n        awaitReady(client, node);\n\n        \r\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n        long delay = client.connectionDelay(node, time.milliseconds());\n        long expectedDelay = reconnectBackoffMsTest;\n        double jitter = 0.3;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n\n        \r\n        time.sleep(delay);\n        assertEquals(0, client.connectionDelay(node, time.milliseconds()));\n\n        \r\n        client.ready(node, time.milliseconds());\n        selector.serverDisconnect(node.idString());\n        client.poll(minRequestTimeoutMs, time.milliseconds());\n\n        \r\n        expectedDelay = Math.round(delay * 2);\n        delay = client.connectionDelay(node, time.milliseconds());\n        jitter = 0.6;\n        assertEquals(expectedDelay, delay, expectedDelay * jitter);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"596c6c0c0b27c13f2017c770ea37cd39e27e5dcf","commitMessage":"@@@KAFKA-7231; Ensure NetworkClient uses overridden request timeout (#5444)\n\nFixed incorrect use of default timeout instead of the argument explicitly passed to `newClientRequest`.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>.  Ismael Juma <ismael@juma.me.uk>","date":"2018-08-03 02:02:38","modifiedFileCount":"2","status":"M","submitter":"Jason Gustafson"}]
