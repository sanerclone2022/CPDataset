[{"authorTime":"2020-07-30 21:10:30","codes":[{"authorDate":"2020-07-30 21:10:30","commitOrder":1,"curCode":"    private static void assertDescriptionContains(Map<String, LogDirDescription> descriptionsMap, String logDir,\n                                           TopicPartition tp, long partitionSize, long offsetLag) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertNull(descriptionsMap.get(logDir).error());\n        Map<TopicPartition, ReplicaInfo> descriptionsReplicaInfos = descriptionsMap.get(logDir).replicaInfos();\n        assertEquals(Collections.singleton(tp), descriptionsReplicaInfos.keySet());\n        assertEquals(partitionSize, descriptionsReplicaInfos.get(tp).size());\n        assertEquals(offsetLag, descriptionsReplicaInfos.get(tp).offsetLag());\n        assertFalse(descriptionsReplicaInfos.get(tp).isFuture());\n    }\n","date":"2020-07-30 21:10:30","endLine":1418,"groupId":"21237","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDescriptionContains","params":"(Map<String@LogDirDescription>descriptionsMap@StringlogDir@TopicPartitiontp@longpartitionSize@longoffsetLag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/30/5e6bfda5c8087e03ab10ca2a38f5b9f059089d.src","preCode":"    private static void assertDescriptionContains(Map<String, LogDirDescription> descriptionsMap, String logDir,\n                                           TopicPartition tp, long partitionSize, long offsetLag) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertNull(descriptionsMap.get(logDir).error());\n        Map<TopicPartition, ReplicaInfo> descriptionsReplicaInfos = descriptionsMap.get(logDir).replicaInfos();\n        assertEquals(Collections.singleton(tp), descriptionsReplicaInfos.keySet());\n        assertEquals(partitionSize, descriptionsReplicaInfos.get(tp).size());\n        assertEquals(offsetLag, descriptionsReplicaInfos.get(tp).offsetLag());\n        assertFalse(descriptionsReplicaInfos.get(tp).isFuture());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1408,"status":"B"},{"authorDate":"2020-07-30 21:10:30","commitOrder":1,"curCode":"    private static  void assertDescriptionContains(Map<String, DescribeLogDirsResponse.LogDirInfo> descriptionsMap,\n                                           String logDir, TopicPartition tp, Errors error,\n                                           int offsetLag, long partitionSize) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertEquals(error, descriptionsMap.get(logDir).error);\n        Map<TopicPartition, DescribeLogDirsResponse.ReplicaInfo> allReplicaInfos =\n                descriptionsMap.get(logDir).replicaInfos;\n        assertEquals(Collections.singleton(tp), allReplicaInfos.keySet());\n        assertEquals(partitionSize, allReplicaInfos.get(tp).size);\n        assertEquals(offsetLag, allReplicaInfos.get(tp).offsetLag);\n        assertFalse(allReplicaInfos.get(tp).isFuture);\n    }\n","date":"2020-07-30 21:10:30","endLine":1462,"groupId":"4706","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDescriptionContains","params":"(Map<String@DescribeLogDirsResponse.LogDirInfo>descriptionsMap@StringlogDir@TopicPartitiontp@Errorserror@intoffsetLag@longpartitionSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/30/5e6bfda5c8087e03ab10ca2a38f5b9f059089d.src","preCode":"    private static  void assertDescriptionContains(Map<String, DescribeLogDirsResponse.LogDirInfo> descriptionsMap,\n                                           String logDir, TopicPartition tp, Errors error,\n                                           int offsetLag, long partitionSize) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertEquals(error, descriptionsMap.get(logDir).error);\n        Map<TopicPartition, DescribeLogDirsResponse.ReplicaInfo> allReplicaInfos =\n                descriptionsMap.get(logDir).replicaInfos;\n        assertEquals(Collections.singleton(tp), allReplicaInfos.keySet());\n        assertEquals(partitionSize, allReplicaInfos.get(tp).size);\n        assertEquals(offsetLag, allReplicaInfos.get(tp).offsetLag);\n        assertFalse(allReplicaInfos.get(tp).isFuture);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1450,"status":"B"}],"commitId":"819cd454f9b3078515a86e43a4486794df0a7971","commitMessage":"@@@KAFKA-10120: Deprecate DescribeLogDirsResult.all() and .values() (#9007)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>.  David Jacot <djacot@confluent.io>.  Lee Dongjin <dongjin@apache.org>.  Chia-Ping Tsai <chia7712@gmail.com>","date":"2020-07-30 21:10:30","modifiedFileCount":"5","status":"B","submitter":"Tom Bentley"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2021-01-14 08:17:45","commitOrder":2,"curCode":"    private static void assertDescriptionContains(Map<String, LogDirDescription> descriptionsMap, String logDir,\n                                           TopicPartition tp, long partitionSize, long offsetLag) {\n        assertNotNull(descriptionsMap);\n        assertEquals(singleton(logDir), descriptionsMap.keySet());\n        assertNull(descriptionsMap.get(logDir).error());\n        Map<TopicPartition, ReplicaInfo> descriptionsReplicaInfos = descriptionsMap.get(logDir).replicaInfos();\n        assertEquals(singleton(tp), descriptionsReplicaInfos.keySet());\n        assertEquals(partitionSize, descriptionsReplicaInfos.get(tp).size());\n        assertEquals(offsetLag, descriptionsReplicaInfos.get(tp).offsetLag());\n        assertFalse(descriptionsReplicaInfos.get(tp).isFuture());\n    }\n","date":"2021-01-14 08:17:45","endLine":1468,"groupId":"113837","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDescriptionContains","params":"(Map<String@LogDirDescription>descriptionsMap@StringlogDir@TopicPartitiontp@longpartitionSize@longoffsetLag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/cc9f1cd04326662520255628602b4fd114e430.src","preCode":"    private static void assertDescriptionContains(Map<String, LogDirDescription> descriptionsMap, String logDir,\n                                           TopicPartition tp, long partitionSize, long offsetLag) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertNull(descriptionsMap.get(logDir).error());\n        Map<TopicPartition, ReplicaInfo> descriptionsReplicaInfos = descriptionsMap.get(logDir).replicaInfos();\n        assertEquals(Collections.singleton(tp), descriptionsReplicaInfos.keySet());\n        assertEquals(partitionSize, descriptionsReplicaInfos.get(tp).size());\n        assertEquals(offsetLag, descriptionsReplicaInfos.get(tp).offsetLag());\n        assertFalse(descriptionsReplicaInfos.get(tp).isFuture());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1458,"status":"M"},{"authorDate":"2021-01-14 08:17:45","commitOrder":2,"curCode":"    private static  void assertDescriptionContains(Map<String, DescribeLogDirsResponse.LogDirInfo> descriptionsMap,\n                                           String logDir, TopicPartition tp, Errors error,\n                                           int offsetLag, long partitionSize) {\n        assertNotNull(descriptionsMap);\n        assertEquals(singleton(logDir), descriptionsMap.keySet());\n        assertEquals(error, descriptionsMap.get(logDir).error);\n        Map<TopicPartition, DescribeLogDirsResponse.ReplicaInfo> allReplicaInfos =\n                descriptionsMap.get(logDir).replicaInfos;\n        assertEquals(singleton(tp), allReplicaInfos.keySet());\n        assertEquals(partitionSize, allReplicaInfos.get(tp).size);\n        assertEquals(offsetLag, allReplicaInfos.get(tp).offsetLag);\n        assertFalse(allReplicaInfos.get(tp).isFuture);\n    }\n","date":"2021-01-14 08:17:45","endLine":1512,"groupId":"113837","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDescriptionContains","params":"(Map<String@DescribeLogDirsResponse.LogDirInfo>descriptionsMap@StringlogDir@TopicPartitiontp@Errorserror@intoffsetLag@longpartitionSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/cc9f1cd04326662520255628602b4fd114e430.src","preCode":"    private static  void assertDescriptionContains(Map<String, DescribeLogDirsResponse.LogDirInfo> descriptionsMap,\n                                           String logDir, TopicPartition tp, Errors error,\n                                           int offsetLag, long partitionSize) {\n        assertNotNull(descriptionsMap);\n        assertEquals(Collections.singleton(logDir), descriptionsMap.keySet());\n        assertEquals(error, descriptionsMap.get(logDir).error);\n        Map<TopicPartition, DescribeLogDirsResponse.ReplicaInfo> allReplicaInfos =\n                descriptionsMap.get(logDir).replicaInfos;\n        assertEquals(Collections.singleton(tp), allReplicaInfos.keySet());\n        assertEquals(partitionSize, allReplicaInfos.get(tp).size);\n        assertEquals(offsetLag, allReplicaInfos.get(tp).offsetLag);\n        assertFalse(allReplicaInfos.get(tp).isFuture);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1500,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
