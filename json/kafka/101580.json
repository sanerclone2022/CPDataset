[{"authorTime":"2017-05-04 07:15:54","codes":[{"authorDate":"2017-05-04 07:15:54","commitOrder":6,"curCode":"    public void testCount() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-05-04 07:15:54","endLine":253,"groupId":"371","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/372302d904f96e24806b9617af791ece2a4b46.src","preCode":"    public void testCount() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"MB"},{"authorDate":"2017-05-04 07:15:54","commitOrder":6,"curCode":"    public void testCountWithInternalStore() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-05-04 07:15:54","endLine":268,"groupId":"371","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/372302d904f96e24806b9617af791ece2a4b46.src","preCode":"    public void testCountWithInternalStore() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"ec9e4eafa406fec897713310bafdedf6bbb3c0c5","commitMessage":"@@@KAFKA-5045: Clarify on KTable APIs for queryable stores\n\nThis is the implementation of KIP-114: KTable state stores and improved semantics:\n- Allow for decoupling between querying and materialisation\n- consistent APIs.  overloads with queryableName and without\n- depreciated several KTable calls\n- new unit and integration tests\n\nIn this implementation.  state stores are materialized if the user desires them to be queryable. In subsequent versions we can offer a second option.  to have a view-like state store. The tradeoff then would be between storage space (materialize) and re-computation (view). That tradeoff can be exploited by later query optimizers.\n\nAuthor: Eno Thereska <eno.thereska@gmail.com>\n\nReviewers: Damian Guy.  Matthias J. Sax.  Guozhang Wang\n\nCloses #2832 from enothereska/KAFKA-5045-ktable\n","date":"2017-05-04 07:15:54","modifiedFileCount":"26","status":"M","submitter":"Eno Thereska"},{"authorTime":"2017-08-01 06:28:59","codes":[{"authorDate":"2017-08-01 06:28:59","commitOrder":7,"curCode":"    public void testCount() throws IOException {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-08-01 06:28:59","endLine":252,"groupId":"371","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f4/ad34608dbf10c214c01b869734bae3fa6fb2d9.src","preCode":"    public void testCount() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2017-08-01 06:28:59","commitOrder":7,"curCode":"    public void testCountWithInternalStore() throws IOException {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-08-01 06:28:59","endLine":267,"groupId":"371","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f4/ad34608dbf10c214c01b869734bae3fa6fb2d9.src","preCode":"    public void testCountWithInternalStore() throws IOException {\n        final KStreamBuilder builder = new KStreamBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"}],"commitId":"da2205578be3228ce40eb5e59f6bbcb0c8da0aba","commitMessage":"@@@KAFKA-5671: Add StreamsBuilder and Deprecate KStreamBuilder\n\nAuthor: Matthias J. Sax <matthias@confluent.io>\n\nReviewers: Damian Guy <damian.guy@gmail.com>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3602 from mjsax/kafka-5671-add-streamsbuilder\n","date":"2017-08-01 06:28:59","modifiedFileCount":"83","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2017-08-03 06:13:02","codes":[{"authorDate":"2017-08-03 06:13:02","commitOrder":8,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-08-03 06:13:02","endLine":243,"groupId":"371","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/1e232c2cfdeaa969064e34a8e81e27ad60f357.src","preCode":"    public void testCount() throws IOException {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2017-08-03 06:13:02","commitOrder":8,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-08-03 06:13:02","endLine":258,"groupId":"371","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f3/1e232c2cfdeaa969064e34a8e81e27ad60f357.src","preCode":"    public void testCountWithInternalStore() throws IOException {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"125d69caee993710bc07523fdd3deb0e06b10636","commitMessage":"@@@KAFKA-5671 Followup: Remove reflections in unit test classes\n\n1. Remove rest deprecation warnings in streams:jar.\n\n2. Consolidate all unit test classes' reflections to access internal topology builder from packages other than `o.a.k.streams`. We need to refactor the hierarchies of StreamTask.  StreamThread and KafkaStreams to remove these hacky reflections.\n\n3. Minor fixes such as reference path.  etc.\n\n4. Minor edits on web docs for the describe function under developer-guide.\n\nAuthor: Guozhang Wang <wangguoz@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Damian Guy <damian.guy@gmail.com>\n\nCloses #3603 from guozhangwang/K5671-followup-comments\n","date":"2017-08-03 06:13:02","modifiedFileCount":"41","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2017-09-07 19:35:31","codes":[{"authorDate":"2017-09-07 19:35:31","commitOrder":9,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-09-07 19:35:31","endLine":242,"groupId":"12352","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/47cc8419073149c97e40b283e35a62b23b9f95.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"},{"authorDate":"2017-09-07 19:35:31","commitOrder":9,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-09-07 19:35:31","endLine":257,"groupId":"12352","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/47cc8419073149c97e40b283e35a62b23b9f95.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerde, stringSerde)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"329d5fa64a2a3ac1d39ac37fdacbf6e43d500d11","commitMessage":"@@@KAFKA-5844; add groupBy(selector.  serialized) to Ktable\n\nadd `KTable#groupBy(KeyValueMapper.  Serialized)` and deprecate the overload with `Serde` params\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>.  Bill Bejeck <bill@confluent.io>\n\nCloses #3802 from dguy/kip-182-ktable-groupby\n","date":"2017-09-07 19:35:31","modifiedFileCount":"6","status":"M","submitter":"Damian Guy"},{"authorTime":"2017-09-18 22:53:44","codes":[{"authorDate":"2017-09-18 22:53:44","commitOrder":10,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-09-18 22:53:44","endLine":244,"groupId":"12352","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0a/e95dd9c5aabeb7ba5fcab48672da93a61df56b.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2017-09-18 22:53:44","commitOrder":10,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2017-09-18 22:53:44","endLine":259,"groupId":"12352","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0a/e95dd9c5aabeb7ba5fcab48672da93a61df56b.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(Serdes.String(), Serdes.String(), input, \"anyStoreName\")\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"f2b74aa1c36bf2882006c14f7cbd56b493f39d26","commitMessage":"@@@KAFKA-5873; add materialized overloads to StreamsBuilder\n\nAdd overloads for `table` and `globalTable` that use `Materialized`\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3837 from dguy/kafka-5873\n","date":"2017-09-18 22:53:44","modifiedFileCount":"36","status":"M","submitter":"Damian Guy"},{"authorTime":"2018-01-11 03:14:20","codes":[{"authorDate":"2018-01-11 03:14:20","commitOrder":11,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2018-01-11 03:14:20","endLine":244,"groupId":"12352","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/df/8d2923a04535e82a2f61f111367dba0fbd5b5e.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n                .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2018-01-11 03:14:20","commitOrder":11,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","date":"2018-01-11 03:14:20","endLine":259,"groupId":"12352","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/df/8d2923a04535e82a2f61f111367dba0fbd5b5e.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n            .groupBy(MockKeyValueMapper.<String, String>SelectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"fa5ebc8a019f8cb24823dd29ef84d422d93624dc","commitMessage":"@@@KAFKA-6398: fix KTable.filter that does not include its parent's queryable storename\n\n1. Include the parent's queryable store name in KTable.filter if this operator is not materialized.\n2. Augment InternalTopologyBuilder checking on null processor / store names from the enum.\n3. Unit test.\n\nAuthor: Guozhang Wang <wangguoz@gmail.com>\n\nReviewers: Damian Guy <damian.guy@gmail.com>.  Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>\n\nCloses #4384 from guozhangwang/K6398-topology-builder-exception\n","date":"2018-01-11 03:14:20","modifiedFileCount":"17","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-04 23:42:01","codes":[{"authorDate":"2018-05-04 23:42:01","commitOrder":12,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2018-05-04 23:42:01","endLine":243,"groupId":"12516","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a7/69b49d4cf22ccbbbf78b2be030bc6244fe98a8.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2018-05-04 23:42:01","commitOrder":12,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2018-05-04 23:42:01","endLine":257,"groupId":"19077","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a7/69b49d4cf22ccbbbf78b2be030bc6244fe98a8.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n        final MockProcessorSupplier<String, Long> proc = new MockProcessorSupplier<>();\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(proc);\n\n        testCountHelper(builder, input, proc);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"af983267be7a2d0f81527f5a348af377f30caee4","commitMessage":"@@@MINOR: Removed deprecated schedule function (#4908)\n\nWhile working on this.  I also refactored the MockProcessor out of the MockProcessorSupplier to cleanup the unit test paths.\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2018-05-04 23:42:01","modifiedFileCount":"62","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-04 23:42:01","codes":[{"authorDate":"2018-05-08 08:34:34","commitOrder":13,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(Materialized.<String, Long, KeyValueStore<Bytes, byte[]>>as(\"count\"))\n                .toStream()\n                .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2018-05-08 08:34:34","endLine":243,"groupId":"12516","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/12/1017e150d7f643e4b3eade2d2667021a7ea294.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(\"count\")\n                .toStream()\n                .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2018-05-04 23:42:01","commitOrder":13,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2018-05-04 23:42:01","endLine":257,"groupId":"19077","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a7/69b49d4cf22ccbbbf78b2be030bc6244fe98a8.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"N"}],"commitId":"2b5a59406622affa1e333e073546f075f59b4ac9","commitMessage":"@@@KAFKA-6813: Remove deprecated APIs in KIP-182.  Part I (#4919)\n\nI'm breaking KAFKA-6813 into a couple of \"smaller\" PRs and this is the first one. It focused on:\n\nRemove deprecated APIs in KStream.  KTable.  KGroupedStream.  KGroupedTable.  SessionWindowedKStream.  TimeWindowedKStream.\n\nAlso found a couple of overlooked bugs while working on them:\n\n2.a) In KTable.filter / mapValues without the additional parameter indicating the materialized stores.  originally we will not materialize the store. After KIP-182 we mistakenly diverge the semantics: for KTable.mapValues it is still the case.  for KTable.filter we will always materialize.\n\n2.b) In XXStream/Table.reduce/count.  we used to try to reuse the serdes since their types are pre-known (for reduce it is the same types for both key / value.  for count it is the same types for key.  and Long for value). This was somehow lost in the past refactoring.\n\n2.c) We are enforcing to cast a Serde<V> to Serde<VR> for XXStream / Table.aggregate.  for which the returned value type is NOT known.  such the enforced casting should not be applied and we should require users to provide us the value serde if they believe the default ones are not applicable.\n\n2.d) Whenever we are creating a new MaterializedInternal we are effectively incrementing the suffix index for the store / processor-node names. However in some places this MaterializedInternal is only used for validation.  so the resulted processor-node / store suffix is not monotonic.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2018-05-08 08:34:34","modifiedFileCount":"33","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2019-03-01 01:33:53","codes":[{"authorDate":"2019-03-01 01:33:53","commitOrder":14,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialzied)\n            .count(Materialized.as(\"count\"))\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2019-03-01 01:33:53","endLine":249,"groupId":"10444","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2e/4f318cc4112b7828d82e52ecd18a74dde153d8.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n                .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n                .count(Materialized.<String, Long, KeyValueStore<Bytes, byte[]>>as(\"count\"))\n                .toStream()\n                .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2019-03-01 01:33:53","commitOrder":14,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2019-03-01 01:33:53","endLine":264,"groupId":"10446","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2e/4f318cc4112b7828d82e52ecd18a74dde153d8.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder.table(input, consumed)\n            .groupBy(MockMapper.<String, String>selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"3c46b5669de856f4510b8d291a8af7dbd809c07b","commitMessage":"@@@MINOR: Remove types from caching stores (#6331)\n\n* MINOR: remove types from caching stores\n\n* Github comments and rebased\n","date":"2019-03-01 01:33:53","modifiedFileCount":"32","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-05-19 10:18:14","codes":[{"authorDate":"2019-05-19 10:18:14","commitOrder":15,"curCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialized)\n            .count(Materialized.as(\"count\"))\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2019-05-19 10:18:14","endLine":220,"groupId":"101580","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/04e13c3250a996267025cfb945a5eba042185e.src","preCode":"    public void testCount() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialzied)\n            .count(Materialized.as(\"count\"))\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"},{"authorDate":"2019-05-19 10:18:14","commitOrder":15,"curCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialized)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","date":"2019-05-19 10:18:14","endLine":235,"groupId":"101580","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountWithInternalStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b7/04e13c3250a996267025cfb945a5eba042185e.src","preCode":"    public void testCountWithInternalStore() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"count-test-input\";\n\n        builder\n            .table(input, consumed)\n            .groupBy(MockMapper.selectValueKeyValueMapper(), stringSerialzied)\n            .count()\n            .toStream()\n            .process(supplier);\n\n        testCountHelper(builder, input, supplier);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"c140f09406b119d86d43bba6248d17fe0120a4dd","commitMessage":"@@@KAFKA-6474: remove KStreamTestDriver (#6732)\n\nThe implementation of KIP-258 broke the state store methods in KStreamTestDriver.\nThese methods were unused in this project.  so the breakage was not detected.\nSince this is an internal testing utility.  and it was deprecated and partially removed in\nfavor of TopologyTestDriver.  I opted to just complete the removal of the class.\n\nReviewers: A. Sophie Blee-Goldman <ableegoldman@gmail.com>.  Boyang Chen <boyang@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-19 10:18:14","modifiedFileCount":"3","status":"M","submitter":"John Roesler"}]
