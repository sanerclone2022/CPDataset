[{"authorTime":"2020-10-08 21:08:24","codes":[{"authorDate":"2020-10-03 07:49:12","commitOrder":3,"curCode":"    public void shouldFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","date":"2020-10-03 07:49:12","endLine":299,"groupId":"4709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchExactKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bb/425a9f8e8d61b71d7b27e4231d563d933ef5ed.src","preCode":"    public void shouldFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractSessionBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"NB"},{"authorDate":"2020-10-08 21:08:24","commitOrder":3,"curCode":"    public void shouldBackwardFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","date":"2020-10-08 21:08:24","endLine":442,"groupId":"4709","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldBackwardFetchExactKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b3/55f0e34dacde78d3d93de1b79df079962c938a.src","preCode":"    public void shouldBackwardFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractSessionBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"B"}],"commitId":"d0e6943bdd048aa6e0a4dbbdad3c8da460db16dc","commitMessage":"@@@KAFKA-9929: Support backward iterator on SessionStore (#9139)\n\nImplements KIP-617 for `SessionStore`\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-10-08 21:08:24","modifiedFileCount":"14","status":"M","submitter":"Jorge Esteban Quilcate Otoya"},{"authorTime":"2021-05-07 06:29:26","codes":[{"authorDate":"2021-05-07 06:29:26","commitOrder":4,"curCode":"    public void shouldFetchExactKeys() {\n        sessionStore.close();\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","date":"2021-05-07 06:29:26","endLine":407,"groupId":"101080","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFetchExactKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ed/60837400d2fad2fadffa281493dca208f549fc.src","preCode":"    public void shouldFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.findSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractSessionBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"},{"authorDate":"2021-05-07 06:29:26","commitOrder":4,"curCode":"    public void shouldBackwardFetchExactKeys() {\n        sessionStore.close();\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","date":"2021-05-07 06:29:26","endLine":445,"groupId":"101080","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldBackwardFetchExactKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ed/60837400d2fad2fadffa281493dca208f549fc.src","preCode":"    public void shouldBackwardFetchExactKeys() {\n        sessionStore = buildSessionStore(0x7a00000000000000L, Serdes.String(), Serdes.Long());\n        sessionStore.init((StateStoreContext) context, sessionStore);\n\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(0, 0)), 1L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(0, 10)), 2L);\n        sessionStore.put(new Windowed<>(\"a\", new SessionWindow(10, 20)), 3L);\n        sessionStore.put(new Windowed<>(\"aa\", new SessionWindow(10, 20)), 4L);\n        sessionStore.put(new Windowed<>(\"a\",\n            new SessionWindow(0x7a00000000000000L - 2, 0x7a00000000000000L - 1)), 5L);\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 3L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(2L, 4L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 0, Long.MAX_VALUE)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(asList(1L, 2L, 3L, 4L, 5L))));\n        }\n\n        try (final KeyValueIterator<Windowed<String>, Long> iterator =\n                 sessionStore.backwardFindSessions(\"a\", \"aa\", 10, 0)\n        ) {\n            assertThat(valuesToSet(iterator), equalTo(new HashSet<>(Collections.singletonList(2L))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractSessionBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"M"}],"commitId":"90fc875e24121fd0a39143983ce9eb8a93849d7e","commitMessage":"@@@KAFKA-8897: Upgrade RocksDB to 6.19.3 (#10568)\n\nThis PR upgrades RocksDB to 6.19.3. After the upgrade the Gradle build exited with code 134 due to SIGABRT signals (\"Pure virtual function called!\") coming from the C++ part of RocksDB. This error was caused by RocksDB state stores not properly closed in Streams' code. This PR adds the missing closings and updates the RocksDB option adapter.\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>.  Guozhang Wang <wangguoz@gmail.com>","date":"2021-05-07 06:29:26","modifiedFileCount":"22","status":"M","submitter":"Bruno Cadonna"}]
