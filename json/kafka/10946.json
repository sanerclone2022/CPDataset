[{"authorTime":"2019-06-13 21:48:15","codes":[{"authorDate":"2019-06-13 21:48:15","commitOrder":1,"curCode":"    public void shouldStoreDifferentValuesWithPriorNull() {\n        final byte[] priorValue = null;\n        final byte[] oldValue = {(byte) 1};\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertNull(bufferValue.priorValue());\n        assertSame(oldValue, bufferValue.oldValue());\n    }\n","date":"2019-06-13 21:48:15","endLine":67,"groupId":"6015","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldStoreDifferentValuesWithPriorNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d6/63461a8cf9b9d822ab59b1df0657cc58afaabc.src","preCode":"    public void shouldStoreDifferentValuesWithPriorNull() {\n        final byte[] priorValue = null;\n        final byte[] oldValue = {(byte) 1};\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertNull(bufferValue.priorValue());\n        assertSame(oldValue, bufferValue.oldValue());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2019-06-13 21:48:15","commitOrder":1,"curCode":"    public void shouldStoreDifferentValuesWithOldNull() {\n        final byte[] priorValue = {(byte) 0};\n        final byte[] oldValue = null;\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertSame(priorValue, bufferValue.priorValue());\n        assertNull(bufferValue.oldValue());\n    }\n","date":"2019-06-13 21:48:15","endLine":76,"groupId":"6016","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldStoreDifferentValuesWithOldNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d6/63461a8cf9b9d822ab59b1df0657cc58afaabc.src","preCode":"    public void shouldStoreDifferentValuesWithOldNull() {\n        final byte[] priorValue = {(byte) 0};\n        final byte[] oldValue = null;\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertSame(priorValue, bufferValue.priorValue());\n        assertNull(bufferValue.oldValue());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"e54ab292e7e2fd1d18e82387a586969ba57eb7ea","commitMessage":"@@@KAFKA-8452: Compressed BufferValue (#6848)\n\nDe-duplicate the common case in which the prior value is the same as the old value.\n\nReviewers: Sophie Blee-Goldman <sophie@confluent.io>.   Bill Bejeck <bbejeck@gmail.com>","date":"2019-06-13 21:48:15","modifiedFileCount":"13","status":"B","submitter":"John Roesler"},{"authorTime":"2019-06-20 00:45:35","codes":[{"authorDate":"2019-06-20 00:45:35","commitOrder":2,"curCode":"    public void shouldStoreDifferentValuesWithPriorNull() {\n        final byte[] priorValue = null;\n        final byte[] oldValue = {(byte) 1};\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertNull(bufferValue.priorValue());\n        assertSame(oldValue, bufferValue.oldValue());\n        assertNotEquals(bufferValue.priorValue(), bufferValue.oldValue());\n    }\n","date":"2019-06-20 00:45:35","endLine":70,"groupId":"10946","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldStoreDifferentValuesWithPriorNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ad/9b5f8aabc94608f27398ee59652e49781dfe15.src","preCode":"    public void shouldStoreDifferentValuesWithPriorNull() {\n        final byte[] priorValue = null;\n        final byte[] oldValue = {(byte) 1};\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertNull(bufferValue.priorValue());\n        assertSame(oldValue, bufferValue.oldValue());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-06-20 00:45:35","commitOrder":2,"curCode":"    public void shouldStoreDifferentValuesWithOldNull() {\n        final byte[] priorValue = {(byte) 0};\n        final byte[] oldValue = null;\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertSame(priorValue, bufferValue.priorValue());\n        assertNull(bufferValue.oldValue());\n        assertNotEquals(bufferValue.priorValue(), bufferValue.oldValue());\n    }\n","date":"2019-06-20 00:45:35","endLine":80,"groupId":"10946","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldStoreDifferentValuesWithOldNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ad/9b5f8aabc94608f27398ee59652e49781dfe15.src","preCode":"    public void shouldStoreDifferentValuesWithOldNull() {\n        final byte[] priorValue = {(byte) 0};\n        final byte[] oldValue = null;\n        final BufferValue bufferValue = new BufferValue(priorValue, oldValue, null, null);\n        assertSame(priorValue, bufferValue.priorValue());\n        assertNull(bufferValue.oldValue());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"a7e771c6da72bb7f3c5c5cbab3dc9c4fd403f866","commitMessage":"@@@KAFKA-8452: Compressed BufferValue review follow-up (#6940)\n\nBelatedly address a few code review comments from #6848\n\nReviewers: Bill Bejeck <bbejeck@gmail.com>","date":"2019-06-20 00:45:35","modifiedFileCount":"7","status":"M","submitter":"John Roesler"}]
