[{"authorTime":"2016-04-30 02:15:20","codes":[{"authorDate":"2016-11-15 08:31:04","commitOrder":4,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2016-11-15 08:31:04","endLine":303,"groupId":"15569","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/27/c5695a9583de24ab8b4be9a3accd92bdd4407c.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"MB"},{"authorDate":"2016-04-30 02:15:20","commitOrder":4,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2016-04-30 02:15:20","endLine":349,"groupId":"8791","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/36/8b5a78ce035434a26923c5a9672ea624a4b6fc.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"NB"}],"commitId":"3b4c347949c02b1e2b1dd473deda0f8d2304d027","commitMessage":"@@@KAFKA-2066; Use client-side FetchRequest/FetchResponse on server\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>\n\nCloses #2069 from hachikuji/KAFKA-2066\n","date":"2016-11-15 08:31:04","modifiedFileCount":"80","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2017-01-27 09:24:39","codes":[{"authorDate":"2017-01-27 09:24:39","commitOrder":5,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2017-01-27 09:24:56","endLine":430,"groupId":"15569","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/967af100c4afc824f8fbdbbc5ae03c98602205.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"M"},{"authorDate":"2017-01-27 09:24:39","commitOrder":5,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2017-01-27 09:24:56","endLine":537,"groupId":"8791","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/967af100c4afc824f8fbdbbc5ae03c98602205.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = NetworkTestUtils.createEchoServer(securityProtocol, saslServerConfigs);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":504,"status":"M"}],"commitId":"ca0c071c108c9fd31a759e1cd1c4f89bdc5ac47e","commitMessage":"@@@KAFKA-4636; Per listener security settings overrides (KIP-103)\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n\nCloses #2406 from ijuma/kafka-4636-per-listener-security-settings\n","date":"2017-01-27 09:24:56","modifiedFileCount":"30","status":"M","submitter":"Ismael Juma"},{"authorTime":"2017-05-16 06:13:20","codes":[{"authorDate":"2017-05-16 06:13:20","commitOrder":6,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2017-05-16 06:13:20","endLine":429,"groupId":"15569","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/402f0ca15347e8f630f18e3ecd152f23dbaafd.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"M"},{"authorDate":"2017-05-16 06:13:20","commitOrder":6,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2017-05-16 06:13:20","endLine":536,"groupId":"8791","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/402f0ca15347e8f630f18e3ecd152f23dbaafd.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"M"}],"commitId":"4c75f31a5f80e6a717d040b0534c79f5ed8d9346","commitMessage":"@@@KAFKA-5179; Log connection termination during authentication\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma.  Jun Rao\n\nCloses #2980 from rajinisivaram/KAFKA-5179\n","date":"2017-05-16 06:13:20","modifiedFileCount":"11","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-05-16 06:13:20","codes":[{"authorDate":"2017-08-26 01:23:11","commitOrder":7,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2017-08-26 01:23:11","endLine":435,"groupId":"10864","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6b/0eca3878386864fc317bf14e86462a577af0a2.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"M"},{"authorDate":"2017-05-16 06:13:20","commitOrder":7,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2017-05-16 06:13:20","endLine":536,"groupId":"8791","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/28/402f0ca15347e8f630f18e3ecd152f23dbaafd.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"N"}],"commitId":"c4d629a0b3cbd11c174cb8b09a50bc8de77825e9","commitMessage":"@@@MINOR: Consolidate broker request/response handling\n\nThis patch contains a few small improvements to make request/response handling more consistent. Primarily it consolidates request/response serialization logic so that `SaslServerAuthenticator` and `KafkaApis` follow the same path. It also reduces the amount of custom logic needed to handle unsupported versions of the ApiVersions requests.\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #3673 from hachikuji/consolidate-response-handling\n","date":"2017-08-26 01:23:11","modifiedFileCount":"20","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2017-09-16 00:16:29","codes":[{"authorDate":"2017-09-16 00:16:29","commitOrder":8,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        \r\n        \r\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2017-09-16 00:16:29","endLine":470,"groupId":"10864","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/1d61a4a4553d823e3d4b39591b4e4008351eb0.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2017-09-16 00:16:29","commitOrder":8,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1, (short) 1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2017-09-16 00:16:29","endLine":576,"groupId":"8791","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/1d61a4a4553d823e3d4b39591b4e4008351eb0.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY);\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":543,"status":"M"}],"commitId":"8fca432223da521b78e60e0cf8fa881ced19589c","commitMessage":"@@@KAFKA-4764; Wrap SASL tokens in Kafka headers to improve diagnostics (KIP-152)\n\nSASL handshake protocol changes from KIP-152.\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Manikumar Reddy <manikumar.reddy@gmail.com>\n\nCloses #3708 from rajinisivaram/KAFKA-4764-SASL-diagnostics\n","date":"2017-09-16 00:16:29","modifiedFileCount":"22","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-09-16 00:16:29","codes":[{"authorDate":"2019-02-25 13:50:07","commitOrder":9,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = buildSaslHandshakeRequest(\"PLAIN\", ApiKeys.SASL_HANDSHAKE.latestVersion());\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        \n        selector.send(request.toSend(node1, header));\n        \r\n        \r\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2019-02-25 13:50:07","endLine":723,"groupId":"6244","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/97/d114fcc8234a2b966b25a955e000c79deb0702.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\");\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        selector.send(request.toSend(node1, header));\n        \r\n        \r\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"M"},{"authorDate":"2017-09-16 00:16:29","commitOrder":9,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1, (short) 1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2017-09-16 00:16:29","endLine":576,"groupId":"8791","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/1d61a4a4553d823e3d4b39591b4e4008351eb0.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1, (short) 1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":543,"status":"N"}],"commitId":"4824dc994d7fc56b7540b643a78aadb4bdd0f14d","commitMessage":"@@@KAFKA-7972: Use automatic RPC generation in SaslHandshake\n\nAuthor: Mickael Maison <mickael.maison@gmail.com>\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>\n\nCloses #6301 from mimaison/sasl-handshake\n","date":"2019-02-25 13:50:07","modifiedFileCount":"8","status":"M","submitter":"Mickael Maison"},{"authorTime":"2020-12-10 03:15:58","codes":[{"authorDate":"2020-12-10 03:15:58","commitOrder":10,"curCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = buildSaslHandshakeRequest(\"PLAIN\", ApiKeys.SASL_HANDSHAKE.latestVersion());\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        \n        selector.send(new NetworkSend(node1, request.toSend(header)));\n        \r\n        \r\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","date":"2020-12-10 03:15:58","endLine":848,"groupId":"103283","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testSaslHandshakeRequestWithUnsupportedVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/75a9b9996a2db5c60e525285470985b757311f.src","preCode":"    public void testSaslHandshakeRequestWithUnsupportedVersion() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        SaslHandshakeRequest request = buildSaslHandshakeRequest(\"PLAIN\", ApiKeys.SASL_HANDSHAKE.latestVersion());\n        RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE, Short.MAX_VALUE, \"someclient\", 2);\n        \n        selector.send(request.toSend(node1, header));\n        \r\n        \r\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":829,"status":"M"},{"authorDate":"2020-12-10 03:15:58","commitOrder":10,"curCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1, (short) 1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, ByteBufferSend.sizePrefixed(buffer)));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, ByteBufferSend.sizePrefixed(buffer)));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","date":"2020-12-10 03:15:58","endLine":954,"groupId":"103283","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testPacketSizeTooBig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/75a9b9996a2db5c60e525285470985b757311f.src","preCode":"    public void testPacketSizeTooBig() throws Exception {\n        SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT;\n        configureMechanisms(\"PLAIN\", Arrays.asList(\"PLAIN\"));\n        server = createEchoServer(securityProtocol);\n\n        \r\n        String node1 = \"invalid1\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node1);\n        sendHandshakeRequestReceiveResponse(node1, (short) 1);\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node1, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node1, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good1\");\n\n        \r\n        String node2 = \"invalid2\";\n        createClientConnection(SecurityProtocol.PLAINTEXT, node2);\n        buffer.clear();\n        buffer.putInt(Integer.MAX_VALUE);\n        buffer.put(new byte[buffer.capacity() - 4]);\n        buffer.rewind();\n        selector.send(new NetworkSend(node2, buffer));\n        NetworkTestUtils.waitForChannelClose(selector, node2, ChannelState.READY.state());\n        selector.close();\n\n        \r\n        createAndCheckClientConnection(securityProtocol, \"good2\");\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":921,"status":"M"}],"commitId":"1f98112e993bc4ae098936b1b0661fdb2c4b1880","commitMessage":"@@@MINOR: Remove connection id from Send and consolidate request/message utils (#9714)\n\nConnection id is now only present in `NetworkSend`.  which is now\nthe class used by `Selector`/`NetworkClient`/`KafkaChannel` (which\nworks well since `NetworkReceive` is the class used for\nreceived data).\n\nThe previous `NetworkSend` was also responsible for adding a size\nprefix. This logic is already present in `SendBuilder`.  but for the\nminority of cases where `SendBuilder` is not used (including\na number of tests).  we now have `ByteBufferSend.sizePrefixed()`.\n\nWith regards to the request/message utilities:\n* Renamed `toByteBuffer`/`toBytes` in `MessageUtil` to\n`toVersionPrefixedByteBuffer`/`toVersionPrefixedBytes` for clarity.\n* Introduced new `MessageUtil.toByteBuffer` that does not include\nthe version as the prefix.\n* Renamed `serializeBody` in `AbstractRequest/Response` to\n`serialize` for symmetry with `parse`.\n* Introduced `RequestTestUtils` and moved relevant methods from\n`TestUtils`.\n* Moved `serializeWithHeader` methods that were only used in\ntests to `RequestTestUtils`.\n* Deleted `MessageTestUtil`.\n\nFinally.  a couple of changes to simplify coding patterns:\n* Added `flip()` and `buffer()` to `ByteBufferAccessor`.\n* Added `MessageSizeAccumulator.sizeExcludingZeroCopy`.\n* Used lambdas instead of `TestCondition`.\n* Used `Arrays.copyOf` instead of `System.arraycopy` in `MessageUtil`.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2020-12-10 03:15:58","modifiedFileCount":"80","status":"M","submitter":"Ismael Juma"}]
