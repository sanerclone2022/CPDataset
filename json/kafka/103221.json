[{"authorTime":"2016-01-19 02:09:17","codes":[{"authorDate":"2016-01-19 02:09:17","commitOrder":1,"curCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(\"Error codes must be unique\", codeSet.size(), Errors.values().length);\n    }\n","date":"2016-01-19 02:09:17","endLine":38,"groupId":"20649","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUniqueErrorCodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b5/11b4bd051a13e5a2fbafb68d427a49be86e569.src","preCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(\"Error codes must be unique\", codeSet.size(), Errors.values().length);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2016-01-19 02:09:17","commitOrder":1,"curCode":"    public void testUniqueExceptions() {\n        Set<Class> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(\"Exceptions must be unique\", exceptionSet.size(), Errors.values().length - 1); \r\n    }\n","date":"2016-01-19 02:09:17","endLine":48,"groupId":"14817","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUniqueExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b5/11b4bd051a13e5a2fbafb68d427a49be86e569.src","preCode":"    public void testUniqueExceptions() {\n        Set<Class> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(\"Exceptions must be unique\", exceptionSet.size(), Errors.values().length - 1); \r\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"}],"commitId":"cc3570d1a28354acd082c41a15d9c9efde540b16","commitMessage":"@@@KAFKA-2999: Errors enum should be a 1 to 1 mapping of error codes and?\n\n? exceptions\n\nAuthor: Grant Henke <granthenke@gmail.com>\n\nReviewers: Gwen Shapira\n\nCloses #766 from granthenke/errors-map\n","date":"2016-01-19 02:09:17","modifiedFileCount":"1","status":"B","submitter":"Grant Henke"},{"authorTime":"2020-02-20 22:54:37","codes":[{"authorDate":"2016-01-19 02:09:17","commitOrder":2,"curCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(\"Error codes must be unique\", codeSet.size(), Errors.values().length);\n    }\n","date":"2016-01-19 02:09:17","endLine":38,"groupId":"20649","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUniqueErrorCodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b5/11b4bd051a13e5a2fbafb68d427a49be86e569.src","preCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(\"Error codes must be unique\", codeSet.size(), Errors.values().length);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"},{"authorDate":"2020-02-20 22:54:37","commitOrder":2,"curCode":"    public void testUniqueExceptions() {\n        Set<Class<?>> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(\"Exceptions must be unique\", exceptionSet.size(), Errors.values().length - 1); \r\n    }\n","date":"2020-02-20 22:54:37","endLine":49,"groupId":"14817","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUniqueExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2c/68b86fb8ae47f82fed5268c7652dbf9ed1df1e.src","preCode":"    public void testUniqueExceptions() {\n        Set<Class> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(\"Exceptions must be unique\", exceptionSet.size(), Errors.values().length - 1); \r\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"8ab0994919752cd4870e771221ba934a6a539a67","commitMessage":"@@@MINOR: Fix a number of warnings in clients test (#8073)\n\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Andrew Choi <li_andchoi@microsoft.com>","date":"2020-02-20 22:54:37","modifiedFileCount":"14","status":"M","submitter":"Mickael Maison"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2021-01-14 08:17:45","commitOrder":3,"curCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(codeSet.size(), Errors.values().length, \"Error codes must be unique\");\n    }\n","date":"2021-01-14 08:17:45","endLine":39,"groupId":"103221","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testUniqueErrorCodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/523f47768b6a4730e5c608917c78ff2c3e4cb2.src","preCode":"    public void testUniqueErrorCodes() {\n        Set<Short> codeSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            codeSet.add(error.code());\n        }\n        assertEquals(\"Error codes must be unique\", codeSet.size(), Errors.values().length);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2021-01-14 08:17:45","commitOrder":3,"curCode":"    public void testUniqueExceptions() {\n        Set<Class<?>> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(exceptionSet.size(), Errors.values().length - 1, \"Exceptions must be unique\"); \r\n    }\n","date":"2021-01-14 08:17:45","endLine":49,"groupId":"103221","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testUniqueExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/523f47768b6a4730e5c608917c78ff2c3e4cb2.src","preCode":"    public void testUniqueExceptions() {\n        Set<Class<?>> exceptionSet = new HashSet<>();\n        for (Errors error : Errors.values()) {\n            if (error != Errors.NONE)\n                exceptionSet.add(error.exception().getClass());\n        }\n        assertEquals(\"Exceptions must be unique\", exceptionSet.size(), Errors.values().length - 1); \r\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/protocol/ErrorsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
