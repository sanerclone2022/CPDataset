[{"authorTime":"2018-06-06 04:07:30","codes":[{"authorDate":"2018-06-06 04:07:30","commitOrder":1,"curCode":"        public SaslServer createSaslServer(String mechanism, String protocol, String serverName, Map<String, ?> props,\n                CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                    return new OAuthBearerSaslServer(callbackHandler);\n                }\n            }\n            return null;\n        }\n","date":"2018-06-06 04:07:30","endLine":217,"groupId":"13937","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSaslServer","params":"(Stringmechanism@Stringprotocol@StringserverName@Map<String@?>props@CallbackHandlercallbackHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5d/1f224883bde04745d129dd2a44ca2032db5415.src","preCode":"        public SaslServer createSaslServer(String mechanism, String protocol, String serverName, Map<String, ?> props,\n                CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                    return new OAuthBearerSaslServer(callbackHandler);\n                }\n            }\n            return null;\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServer.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2018-06-06 04:07:30","commitOrder":1,"curCode":"        public SaslClient createSaslClient(String[] mechanisms, String authorizationId, String protocol,\n                String serverName, Map<String, ?> props, CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (String mechanism : mechanisms) {\n                for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                    if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                        if (!(Objects.requireNonNull(callbackHandler) instanceof AuthenticateCallbackHandler))\n                            throw new IllegalArgumentException(String.format(\n                                    \"Callback handler must be castable to %s: %s\",\n                                    AuthenticateCallbackHandler.class.getName(), callbackHandler.getClass().getName()));\n                        return new OAuthBearerSaslClient((AuthenticateCallbackHandler) callbackHandler);\n                    }\n                }\n            }\n            return null;\n        }\n","date":"2018-06-06 04:07:30","endLine":171,"groupId":"13937","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSaslClient","params":"(String[]mechanisms@StringauthorizationId@Stringprotocol@StringserverName@Map<String@?>props@CallbackHandlercallbackHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/66/942ba96bd17645a4b9bd1f811c81058c55e832.src","preCode":"        public SaslClient createSaslClient(String[] mechanisms, String authorizationId, String protocol,\n                String serverName, Map<String, ?> props, CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (String mechanism : mechanisms) {\n                for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                    if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                        if (!(Objects.requireNonNull(callbackHandler) instanceof AuthenticateCallbackHandler))\n                            throw new IllegalArgumentException(String.format(\n                                    \"Callback handler must be castable to %s: %s\",\n                                    AuthenticateCallbackHandler.class.getName(), callbackHandler.getClass().getName()));\n                        return new OAuthBearerSaslClient((AuthenticateCallbackHandler) callbackHandler);\n                    }\n                }\n            }\n            return null;\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClient.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"}],"commitId":"7c69de42df78bbb4a651b293038d4e957e528970","commitMessage":"@@@MINOR: Rename package `internal` to `internals` for consistency (#5137)\n\n","date":"2018-06-06 04:07:30","modifiedFileCount":"12","status":"B","submitter":"Rajini Sivaram"},{"authorTime":"2018-09-10 05:25:30","codes":[{"authorDate":"2018-09-10 05:25:30","commitOrder":2,"curCode":"        public SaslServer createSaslServer(String mechanism, String protocol, String serverName, Map<String, ?> props,\n                CallbackHandler callbackHandler) {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                    return new OAuthBearerSaslServer(callbackHandler);\n                }\n            }\n            return null;\n        }\n","date":"2018-09-10 05:25:30","endLine":236,"groupId":"104175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSaslServer","params":"(Stringmechanism@Stringprotocol@StringserverName@Map<String@?>props@CallbackHandlercallbackHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/db/332b415351799b91d5c18d28627ebffec28e94.src","preCode":"        public SaslServer createSaslServer(String mechanism, String protocol, String serverName, Map<String, ?> props,\n                CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                    return new OAuthBearerSaslServer(callbackHandler);\n                }\n            }\n            return null;\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServer.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2018-09-10 05:25:30","commitOrder":2,"curCode":"        public SaslClient createSaslClient(String[] mechanisms, String authorizationId, String protocol,\n                String serverName, Map<String, ?> props, CallbackHandler callbackHandler) {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (String mechanism : mechanisms) {\n                for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                    if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                        if (!(Objects.requireNonNull(callbackHandler) instanceof AuthenticateCallbackHandler))\n                            throw new IllegalArgumentException(String.format(\n                                    \"Callback handler must be castable to %s: %s\",\n                                    AuthenticateCallbackHandler.class.getName(), callbackHandler.getClass().getName()));\n                        return new OAuthBearerSaslClient((AuthenticateCallbackHandler) callbackHandler);\n                    }\n                }\n            }\n            return null;\n        }\n","date":"2018-09-10 05:25:30","endLine":190,"groupId":"104175","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createSaslClient","params":"(String[]mechanisms@StringauthorizationId@Stringprotocol@StringserverName@Map<String@?>props@CallbackHandlercallbackHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e3/2e16d5a09281972c87e3009e23c07cc7320d59.src","preCode":"        public SaslClient createSaslClient(String[] mechanisms, String authorizationId, String protocol,\n                String serverName, Map<String, ?> props, CallbackHandler callbackHandler) throws SaslException {\n            String[] mechanismNamesCompatibleWithPolicy = getMechanismNames(props);\n            for (String mechanism : mechanisms) {\n                for (int i = 0; i < mechanismNamesCompatibleWithPolicy.length; i++) {\n                    if (mechanismNamesCompatibleWithPolicy[i].equals(mechanism)) {\n                        if (!(Objects.requireNonNull(callbackHandler) instanceof AuthenticateCallbackHandler))\n                            throw new IllegalArgumentException(String.format(\n                                    \"Callback handler must be castable to %s: %s\",\n                                    AuthenticateCallbackHandler.class.getName(), callbackHandler.getClass().getName()));\n                        return new OAuthBearerSaslClient((AuthenticateCallbackHandler) callbackHandler);\n                    }\n                }\n            }\n            return null;\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClient.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"b8651d4e82d45463d2c71798bd5852f8a605b440","commitMessage":"@@@MINOR: Code cleanup of 'clients' module (#5427)\n\nCleanup involves:\n* Refactoring to use Java 8 constructs (lambdas. \ndiamond for `empty` collection methods) and library\nmethods (`computeIfAbsent`)\n* Simplifying code (including unnecessarily complex\n`equals` and `hashCode` implementations)\n* Removing redundant code\n* Fixing typos\n\nReviewers: Ryanne Dolan.  Ismael Juma <ismael@juma.me.uk>","date":"2018-09-10 05:25:30","modifiedFileCount":"96","status":"M","submitter":"Vahid Hashemian"}]
