[{"authorTime":"2018-03-17 07:02:11","codes":[{"authorDate":"2018-03-17 07:02:11","commitOrder":2,"curCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createSimpleTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","date":"2018-03-17 07:02:11","endLine":329,"groupId":"19677","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConsiderTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/7274a32a92e7d7b739d618f52b0fe20a3050df.src","preCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createSimpleTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"MB"},{"authorDate":"2018-03-17 07:02:11","commitOrder":2,"curCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createTimestampTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","date":"2018-03-17 07:02:11","endLine":341,"groupId":"19677","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConsiderModifiedTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/7274a32a92e7d7b739d618f52b0fe20a3050df.src","preCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createTimestampTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"B"}],"commitId":"394aa7426117d0d04666c1c2a63d5f98229b7894","commitMessage":"@@@KAFKA-6454: Allow timestamp manipulation in Processor API (#4519)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Damian Guy <damian@confluent.io>.  Guozhang Wang <guozhang@confluent.io>\n","date":"2018-03-17 07:02:11","modifiedFileCount":"22","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2018-04-27 02:30:42","codes":[{"authorDate":"2018-04-27 02:30:42","commitOrder":3,"curCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createSimpleTopology(partition).internalTopologyBuilder, props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","date":"2018-04-27 02:30:42","endLine":330,"groupId":"9800","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConsiderTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a8/0b25d0271516a45ce3315f314d5280f282353b.src","preCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createSimpleTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"},{"authorDate":"2018-04-27 02:30:42","commitOrder":3,"curCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createTimestampTopology(partition).internalTopologyBuilder, props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","date":"2018-04-27 02:30:42","endLine":342,"groupId":"9800","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConsiderModifiedTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a8/0b25d0271516a45ce3315f314d5280f282353b.src","preCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new ProcessorTopologyTestDriver(config, createTimestampTopology(partition).internalTopologyBuilder);\n        driver.process(INPUT_TOPIC_1, \"key1\", \"value1\", STRING_SERIALIZER, STRING_SERIALIZER, 10L);\n        driver.process(INPUT_TOPIC_1, \"key2\", \"value2\", STRING_SERIALIZER, STRING_SERIALIZER, 20L);\n        driver.process(INPUT_TOPIC_1, \"key3\", \"value3\", STRING_SERIALIZER, STRING_SERIALIZER, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"M"}],"commitId":"885abbfcd40aab57acec278d976956f07be15090","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [partial] (#4832)\n\n* Remove ProcessorTopologyTestDriver from TopologyTest\n* Fix ProcessorTopologyTest\n* Remove ProcessorTopologyTestDriver and InternalTopologyAccessor\n* Partially refactored StreamsBuilderTest but missing one test\n* Refactor KStreamBuilderTest\n* Refactor AbstractStreamTest\n* Further cleanup of AbstractStreamTest\n* Refactor GlobalKTableJoinsTest\n* Refactor InternalStreamsBuilderTest\n* Fix circular dependency in build.gradle\n* Refactor KGroupedStreamImplTest\n* Partial modifications to KGroupedTableImplTest\n* Refactor KGroupedTableImplTest\n* Refactor KStreamBranchTest\n* Refactor KStreamFilterTest\n* Refactor KStreamFlatMapTest KStreamFlatMapValuesTest\n* Refactor KStreamForeachTest\n* Refactor KStreamGlobalKTableJoinTest\n* Refactor KStreamGlobalKTableLeftJoinTest\n* Refactor KStreamImplTest\n* Refactor KStreamImplTest\n* Refactor KStreamKStreamJoinTest\n* Refactor KStreamKStreamLeftJoinTest\n* Refactor KStreamKTableJoinTest\n* Refactor KStreamKTableLeftJoinTest\n* Refactor KStreamMapTest and KStreamMapValuesTest\n* Refactor KStreamPeekTest and KStreamTransformTest\n* Refactor KStreamSelectKeyTest\n* Refactor KStreamTransformValuesTest\n* Refactor KStreamWindowAggregateTest\n* Add Depercation anotation to KStreamTestDriver and rollback failing tests in StreamsBuilderTest and KTableAggregateTest\n* Refactor KTableFilterTest\n* Refactor KTableForeachTest\n* Add getter for ProcessorTopology.  and simplify tests in StreamsBuilderTest\n* Refactor KTableImplTest\n* Remove unused imports\n* Refactor KTableAggregateTest\n* Fix style errors\n* Fix gradle build\n* Address reviewer comments:\n  - Remove properties new instance\n  - Remove extraneous line\n  - Remove unnecessary TopologyTestDriver instances from StreamsBuilderTest\n  - Move props.clear() to @After\n  - Clarify use of timestamp in KStreamFlatMapValuesTest\n  - Keep test using old Punctuator in KStreamTransformTest\n  - Add comment to clarify clock advances in KStreamTransformTest\n  - Add TopologyTestDriverWrapper class to access the protected constructor of TopologyTestDriver\n  - Revert KTableImplTest.testRepartition to KStreamTestDriver to avoid exposing the TopologyTestDriver processor topology\n  - Revert partially migrated classes: KTableAggregateTest.  KTableFilterTest.  and KTableImplTest\n* Rebase on current trunk an fix conflicts\n\nReviewers: Matthias J Sax <matthias@confluentio>.  Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>","date":"2018-04-27 02:30:42","modifiedFileCount":"33","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2018-05-10 08:13:05","codes":[{"authorDate":"2018-05-10 08:13:05","commitOrder":4,"curCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createSimpleTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","date":"2018-05-10 08:13:05","endLine":326,"groupId":"9800","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConsiderTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9f/2b2422ba25d3df42c1e37637873a9f0ec5482c.src","preCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createSimpleTopology(partition).internalTopologyBuilder, props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"},{"authorDate":"2018-05-10 08:13:05","commitOrder":4,"curCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createTimestampTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","date":"2018-05-10 08:13:05","endLine":338,"groupId":"9800","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConsiderModifiedTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9f/2b2422ba25d3df42c1e37637873a9f0ec5482c.src","preCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createTimestampTopology(partition).internalTopologyBuilder, props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"0b1a118f45418aba6af03e71e7169e38cb3ec9af","commitMessage":"@@@KAFKA-6813: Remove deprecated APIs in KIP-182.  Part II (#4976)\n\n1. Remove the deprecated StateStoreSuppliers.  and the corresponding Stores.create() functions and factories: only the base StateStoreSupplier and MockStoreSupplier were still preserved as they are needed by the deprecated TopologyBuilder and KStreamBuilder. Will remove them in a follow-up PR.\n\n2. Add TopologyWrapper.java as the original InternalTopologyBuilderAccessor was removed.  but I realized it is still needed as of now.\n\n3. Minor: removed StateStoreTestUtils.java and inline its logic in its callers since now with StoreBuilder it is just a one-liner.\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2018-05-10 08:13:05","modifiedFileCount":"20","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-12 02:38:02","codes":[{"authorDate":"2018-05-12 02:38:02","commitOrder":5,"curCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createSimpleTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","date":"2018-05-12 02:38:02","endLine":327,"groupId":"9800","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConsiderTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e2/476479ceef14cb681f38038e95fa2509b36e25.src","preCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createSimpleTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"},{"authorDate":"2018-05-12 02:38:02","commitOrder":5,"curCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createTimestampTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","date":"2018-05-12 02:38:02","endLine":339,"groupId":"9800","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConsiderModifiedTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e2/476479ceef14cb681f38038e95fa2509b36e25.src","preCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriverWrapper(createTimestampTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"}],"commitId":"caca1fdc90b6ef877385b044b2a3230f8e6e9874","commitMessage":"@@@KAFKA-6813: Remove deprecated APIs in KIP-182.  Part III (#4991)\n\n1. Remove TopologyBuilder.  TopologyBuilderException.  KStreamBuilder. \n\n2. Completed the leftover work of https://issues.apache.org/jira/browse/KAFKA-5660.  when we remove TopologyBuilderException.\n\n3. Added MockStoreBuilder to replace MockStateStoreSupplier.  remove all XXStoreSupplier except StateStoreSupplier as it is still referenced in the logical streams graph.\n\n4. Minor: rename KStreamsFineGrainedAutoResetIntegrationTest.java to FineGrainedAutoResetIntegrationTest.java.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>","date":"2018-05-12 02:38:02","modifiedFileCount":"17","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2019-10-07 16:01:58","codes":[{"authorDate":"2019-10-07 16:01:58","commitOrder":6,"curCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createSimpleTopology(partition), props);\n        final TestInputTopic<String, String> inputTopic = driver.createInputTopic(INPUT_TOPIC_1, STRING_SERIALIZER, STRING_SERIALIZER);\n        inputTopic.pipeInput(\"key1\", \"value1\", 10L);\n        inputTopic.pipeInput(\"key2\", \"value2\", 20L);\n        inputTopic.pipeInput(\"key3\", \"value3\", 30L);\n        final TestOutputTopic<String, String> outputTopic1 =\n                driver.createOutputTopic(OUTPUT_TOPIC_1, Serdes.String().deserializer(), Serdes.String().deserializer());\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key1\", \"value1\", 10L);\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key2\", \"value2\", 20L);\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key3\", \"value3\", 30L);\n    }\n","date":"2019-10-07 16:01:58","endLine":374,"groupId":"102518","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldConsiderTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5e/3f9b527d56e4d1b077fccd734e335046e9ed18.src","preCode":"    public void shouldConsiderTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createSimpleTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 10L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 30L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"},{"authorDate":"2019-10-07 16:01:58","commitOrder":6,"curCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createTimestampTopology(partition), props);\n        final TestInputTopic<String, String> inputTopic = driver.createInputTopic(INPUT_TOPIC_1, STRING_SERIALIZER, STRING_SERIALIZER);\n        inputTopic.pipeInput(\"key1\", \"value1\", 10L);\n        inputTopic.pipeInput(\"key2\", \"value2\", 20L);\n        inputTopic.pipeInput(\"key3\", \"value3\", 30L);\n        final TestOutputTopic<String, String> outputTopic1 =\n                driver.createOutputTopic(OUTPUT_TOPIC_1, Serdes.String().deserializer(), Serdes.String().deserializer());\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key1\", \"value1\", 20L);\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key2\", \"value2\", 30L);\n        assertNextOutputRecord(outputTopic1.readRecord(), \"key3\", \"value3\", 40L);\n    }\n","date":"2019-10-07 16:01:58","endLine":389,"groupId":"102518","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConsiderModifiedTimeStamps","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5e/3f9b527d56e4d1b077fccd734e335046e9ed18.src","preCode":"    public void shouldConsiderModifiedTimeStamps() {\n        final int partition = 10;\n        driver = new TopologyTestDriver(createTimestampTopology(partition), props);\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key1\", \"value1\", 10L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key2\", \"value2\", 20L));\n        driver.pipeInput(recordFactory.create(INPUT_TOPIC_1, \"key3\", \"value3\", 30L));\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key1\", \"value1\", partition, 20L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key2\", \"value2\", partition, 30L);\n        assertNextOutputRecord(OUTPUT_TOPIC_1, \"key3\", \"value3\", partition, 40L);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"}],"commitId":"a5a6938c69f4310f7ec519036f0df77d8022326a","commitMessage":"@@@KAFKA-8233: TopologyTestDriver test input and output usability improvements (#7378)\n\nImplements KIP-470\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2019-10-07 16:01:58","modifiedFileCount":"47","status":"M","submitter":"Jukka Karvanen"}]
