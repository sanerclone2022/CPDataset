[{"authorTime":"2021-04-16 02:37:15","codes":[{"authorDate":"2021-04-16 02:37:15","commitOrder":1,"curCode":"    public void testCreateOneTopic() throws Throwable {\n        Map<String, NewTopic> newTopics = Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC);\n\n        WorkerUtils.createTopics(log, adminClient, newTopics, true);\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(\n                Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","date":"2021-04-16 02:37:15","endLine":86,"groupId":"203","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateOneTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/73/8ec3c82aa80bdc30fd89b9907a66ed6d64415a.src","preCode":"    public void testCreateOneTopic() throws Throwable {\n        Map<String, NewTopic> newTopics = Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC);\n\n        WorkerUtils.createTopics(log, adminClient, newTopics, true);\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(\n                Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","realPath":"trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2021-04-16 02:37:15","commitOrder":1,"curCode":"    public void testCreatesNotExistingTopics() throws Throwable {\n        \r\n        assertEquals(0, adminClient.listTopics().names().get().size());\n\n        WorkerUtils.createTopics(\n            log, adminClient, Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC), false);\n\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","date":"2021-04-16 02:37:15","endLine":182,"groupId":"203","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatesNotExistingTopics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/73/8ec3c82aa80bdc30fd89b9907a66ed6d64415a.src","preCode":"    public void testCreatesNotExistingTopics() throws Throwable {\n        \r\n        assertEquals(0, adminClient.listTopics().names().get().size());\n\n        WorkerUtils.createTopics(\n            log, adminClient, Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC), false);\n\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","realPath":"trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"}],"commitId":"fc405d792de12a50956195827eaf57bbf64444c9","commitMessage":"@@@Minor: Move trogdor out of tools and into its own gradle module (#10539)\n\nMove Trogdor out of tools and into its own gradle module.  This allows us to minimize\nthe dependencies of the tools module.  We still keep Trogdor in the CLASSPATH\ncreated by kafka-run-class.sh.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>","date":"2021-04-16 02:37:15","modifiedFileCount":"0","status":"B","submitter":"Shay Elkin"},{"authorTime":"2021-08-28 16:00:36","codes":[{"authorDate":"2021-08-28 16:00:36","commitOrder":2,"curCode":"    public void testCreateOneTopic() throws Throwable {\n        Map<String, NewTopic> newTopics = Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC);\n\n        WorkerUtils.createTopics(log, adminClient, newTopics, true);\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(\n                Collections.singleton(TEST_TOPIC)).topicNameValues().get(TEST_TOPIC).get()\n        );\n    }\n","date":"2021-08-28 16:00:36","endLine":86,"groupId":"104316","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreateOneTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a5/fbc85950b380a33d14644bd3dab91234c20aae.src","preCode":"    public void testCreateOneTopic() throws Throwable {\n        Map<String, NewTopic> newTopics = Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC);\n\n        WorkerUtils.createTopics(log, adminClient, newTopics, true);\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(\n                Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","realPath":"trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-08-28 16:00:36","commitOrder":2,"curCode":"    public void testCreatesNotExistingTopics() throws Throwable {\n        \r\n        assertEquals(0, adminClient.listTopics().names().get().size());\n\n        WorkerUtils.createTopics(\n            log, adminClient, Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC), false);\n\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).topicNameValues().get(TEST_TOPIC).get()\n        );\n    }\n","date":"2021-08-28 16:00:36","endLine":182,"groupId":"104316","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreatesNotExistingTopics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a5/fbc85950b380a33d14644bd3dab91234c20aae.src","preCode":"    public void testCreatesNotExistingTopics() throws Throwable {\n        \r\n        assertEquals(0, adminClient.listTopics().names().get().size());\n\n        WorkerUtils.createTopics(\n            log, adminClient, Collections.singletonMap(TEST_TOPIC, NEW_TEST_TOPIC), false);\n\n        assertEquals(Collections.singleton(TEST_TOPIC), adminClient.listTopics().names().get());\n        assertEquals(\n            new TopicDescription(\n                TEST_TOPIC, false,\n                Collections.singletonList(\n                    new TopicPartitionInfo(0, broker1, singleReplica, Collections.<Node>emptyList()))),\n            adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get()\n        );\n    }\n","realPath":"trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"1d22b0d70686aef5689b775ea2ea7610a37f3e8c","commitMessage":"@@@KAFKA-10774; Admin API for Describe topic using topic IDs (#9769)\n\nReviewers: Justine Olshan <jolshan@confluent.io>.  Chia-Ping Tsai <chia7712@gmail.com>.  Satish Duggana <satishd@apache.org>.  Rajini Sivaram <rajinisivaram@googlemail.com>","date":"2021-08-28 16:00:36","modifiedFileCount":"27","status":"M","submitter":"dengziming"}]
