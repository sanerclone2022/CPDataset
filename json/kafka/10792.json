[{"authorTime":"2017-05-19 08:02:51","codes":[{"authorDate":"2017-05-19 08:02:51","commitOrder":2,"curCode":"    private MergedSortedCacheWindowStoreKeyValueIterator<String, String> createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator<>(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","date":"2017-05-19 08:02:51","endLine":131,"groupId":"1620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/11/4a150205a89f28c4ea557c03dcfa35bf8d4882.src","preCode":"    private MergedSortedCacheWindowStoreKeyValueIterator<String, String> createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator<>(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2017-05-19 08:02:51","commitOrder":2,"curCode":"    private MergedSortedCacheSessionStoreIterator<String, String> createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator<>(\n            cacheIterator, storeIterator, new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","date":"2017-05-19 08:02:51","endLine":123,"groupId":"1620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ee/5e5291b85d785302cf81db1fef06130a327754.src","preCode":"    private MergedSortedCacheSessionStoreIterator<String, String> createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator<>(\n            cacheIterator, storeIterator, new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedSessionStoreIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"MB"}],"commitId":"e28752357705568219315375c666f8e500db9c12","commitMessage":"@@@KAFKA-5192: add WindowStore range scan (KIP-155)\n\nImplements range scan for keys in windowed and session stores\n\nModifies caching session and windowed stores to use segmented cache keys.\nCache keys are internally prefixed with their segment id to ensure key ordering in the cache matches the ordering in the underlying store for keys spread across multiple segments.\nThis should also result in fewer cache keys getting scanned for queries spanning only some segments.\n\nAuthor: Xavier L?aut? <xavier@confluent.io>\n\nReviewers: Damian Guy.  Guozhang Wang\n\nCloses #3027 from xvrl/windowstore-range-scan\n","date":"2017-05-19 08:02:51","modifiedFileCount":"40","status":"M","submitter":"Xavier L?aut?"},{"authorTime":"2017-05-19 08:02:51","codes":[{"authorDate":"2017-08-22 18:21:32","commitOrder":3,"curCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","date":"2017-08-22 18:21:32","endLine":144,"groupId":"1620","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/9d3bc9c23a069a3541e8467ecc2bc1cb5e71e0.src","preCode":"    private MergedSortedCacheWindowStoreKeyValueIterator<String, String> createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator<>(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2017-05-19 08:02:51","commitOrder":3,"curCode":"    private MergedSortedCacheSessionStoreIterator<String, String> createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator<>(\n            cacheIterator, storeIterator, new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","date":"2017-05-19 08:02:51","endLine":123,"groupId":"1620","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ee/5e5291b85d785302cf81db1fef06130a327754.src","preCode":"    private MergedSortedCacheSessionStoreIterator<String, String> createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator<>(\n            cacheIterator, storeIterator, new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedSessionStoreIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"N"}],"commitId":"ee8e9349b22277ec69bf831dda66cfc6e767df14","commitMessage":"@@@KAFKA-5689; Add MeteredWindowStore and refactor store hierarchy\n\nAdd MeteredWindowStore and ChangeLoggingWindowBytesStore.\nRefactor Store hierarchy such that Metered is always the outermost store\nDo serialization in MeteredWindowStore\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3692 from dguy/kafka-5689\n","date":"2017-08-22 18:21:32","modifiedFileCount":"9","status":"M","submitter":"Damian Guy"},{"authorTime":"2017-08-26 16:08:46","codes":[{"authorDate":"2017-08-22 18:21:32","commitOrder":4,"curCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","date":"2017-08-22 18:21:32","endLine":144,"groupId":"1620","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/9d3bc9c23a069a3541e8467ecc2bc1cb5e71e0.src","preCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n            = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"},{"authorDate":"2017-08-26 16:08:46","commitOrder":4,"curCode":"    private MergedSortedCacheSessionStoreIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator(cacheIterator, storeIterator, SINGLE_SEGMENT_CACHE_FUNCTION);\n    }\n","date":"2017-08-26 16:08:46","endLine":118,"groupId":"1620","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9d/734b8473b8ce6c48a5c0ee23b0ce6cc4646f1f.src","preCode":"    private MergedSortedCacheSessionStoreIterator<String, String> createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator<>(\n            cacheIterator, storeIterator, new StateSerdes<>(\"name\", Serdes.String(), Serdes.String()),\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedSessionStoreIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"c715f6a5ab94d187eb662efde594f0f14dcd9910","commitMessage":"@@@KAFKA-5749; Add MeteredSessionStore and ChangeloggingSessionBytesStore.\n\nMake MeteredSessionStore the outermost store.\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3729 from dguy/kafka-5749\n","date":"2017-08-26 16:08:46","modifiedFileCount":"11","status":"M","submitter":"Damian Guy"},{"authorTime":"2017-08-26 16:08:46","codes":[{"authorDate":"2020-09-03 06:17:07","commitOrder":5,"curCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs,\n                                                                        final boolean forward) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION,\n            forward\n        );\n    }\n","date":"2020-09-03 06:17:07","endLine":190,"groupId":"1620","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs@finalbooleanforward)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/fe9b87e7e8f78a297d93723082256e7d59f45f.src","preCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(\n        final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs\n    ) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2017-08-26 16:08:46","commitOrder":5,"curCode":"    private MergedSortedCacheSessionStoreIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator(cacheIterator, storeIterator, SINGLE_SEGMENT_CACHE_FUNCTION);\n    }\n","date":"2017-08-26 16:08:46","endLine":118,"groupId":"1620","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9d/734b8473b8ce6c48a5c0ee23b0ce6cc4646f1f.src","preCode":"    private MergedSortedCacheSessionStoreIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator\n                = new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator(cacheIterator, storeIterator, SINGLE_SEGMENT_CACHE_FUNCTION);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedSessionStoreIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"}],"commitId":"4f06d9e7d083c30912c810f9deadea809fd74edf","commitMessage":"@@@KAFKA-9929: Support backward iterator on WindowStore (#9138)\n\nImplements KIP-617 on WindowStore that depends on #9137.\n\nTesting strategy: extend existing tests to validate reverse operations are supported.\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-09-03 06:17:07","modifiedFileCount":"47","status":"M","submitter":"Jorge Esteban Quilcate Otoya"},{"authorTime":"2020-10-08 21:08:24","codes":[{"authorDate":"2020-09-03 06:17:07","commitOrder":6,"curCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs,\n                                                                        final boolean forward) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION,\n            forward\n        );\n    }\n","date":"2020-09-03 06:17:07","endLine":190,"groupId":"10792","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs@finalbooleanforward)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8c/fe9b87e7e8f78a297d93723082256e7d59f45f.src","preCode":"    private MergedSortedCacheWindowStoreKeyValueIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                        final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs,\n                                                                        final boolean forward) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheWindowStoreKeyValueIterator(\n            cacheIterator,\n            storeIterator,\n            new StateSerdes<>(\"name\", Serdes.Bytes(), Serdes.ByteArray()),\n            WINDOW_SIZE,\n            SINGLE_SEGMENT_CACHE_FUNCTION,\n            forward\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"},{"authorDate":"2020-10-08 21:08:24","commitOrder":6,"curCode":"    private MergedSortedCacheSessionStoreIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs,\n                                                                 final boolean forward) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator(cacheIterator, storeIterator, SINGLE_SEGMENT_CACHE_FUNCTION, forward);\n    }\n","date":"2020-10-08 21:08:24","endLine":153,"groupId":"10792","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"createIterator","params":"(finalIterator<KeyValue<Windowed<Bytes>@byte[]>>storeKvs@finalIterator<KeyValue<Bytes@LRUCacheEntry>>cacheKvs@finalbooleanforward)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/4b/d125a2cb11426a15b2a94b9a486cfa6fa6d041.src","preCode":"    private MergedSortedCacheSessionStoreIterator createIterator(final Iterator<KeyValue<Windowed<Bytes>, byte[]>> storeKvs,\n                                                                 final Iterator<KeyValue<Bytes, LRUCacheEntry>> cacheKvs) {\n        final DelegatingPeekingKeyValueIterator<Windowed<Bytes>, byte[]> storeIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"store\", new KeyValueIteratorStub<>(storeKvs));\n\n        final PeekingKeyValueIterator<Bytes, LRUCacheEntry> cacheIterator =\n            new DelegatingPeekingKeyValueIterator<>(\"cache\", new KeyValueIteratorStub<>(cacheKvs));\n        return new MergedSortedCacheSessionStoreIterator(cacheIterator, storeIterator, SINGLE_SEGMENT_CACHE_FUNCTION);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedSessionStoreIteratorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"d0e6943bdd048aa6e0a4dbbdad3c8da460db16dc","commitMessage":"@@@KAFKA-9929: Support backward iterator on SessionStore (#9139)\n\nImplements KIP-617 for `SessionStore`\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-10-08 21:08:24","modifiedFileCount":"14","status":"M","submitter":"Jorge Esteban Quilcate Otoya"}]
