[{"authorTime":"2019-03-27 05:23:01","codes":[{"authorDate":"2019-03-27 05:23:01","commitOrder":1,"curCode":"    public void shouldPutAndFetch() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n\n        final KeyValueIterator<Bytes, byte[]> values = bytesStore.fetch(Bytes.wrap(key.getBytes()), 0, 500);\n\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(values));\n    }\n","date":"2019-03-27 05:23:01","endLine":158,"groupId":"19062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldPutAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/00/4f181c5f613266f7e88e68aa66bd62abc5c74e.src","preCode":"    public void shouldPutAndFetch() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n\n        final KeyValueIterator<Bytes, byte[]> values = bytesStore.fetch(Bytes.wrap(key.getBytes()), 0, 500);\n\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(values));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2019-03-27 05:23:01","commitOrder":1,"curCode":"    public void shouldFindValuesWithinRange() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n        final KeyValueIterator<Bytes, byte[]> results = bytesStore.fetch(Bytes.wrap(key.getBytes()), 1, 999);\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(results));\n    }\n","date":"2019-03-27 05:23:01","endLine":173,"groupId":"19062","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFindValuesWithinRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/00/4f181c5f613266f7e88e68aa66bd62abc5c74e.src","preCode":"    public void shouldFindValuesWithinRange() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n        final KeyValueIterator<Bytes, byte[]> results = bytesStore.fetch(Bytes.wrap(key.getBytes()), 1, 999);\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(results));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"}],"commitId":"dc0601a1c604bea3f426ed25b6c20176ff444079","commitMessage":"@@@KAFKA-3522: Add RocksDBTimestampedSegmentedBytesStore (#6186)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2019-03-27 05:23:01","modifiedFileCount":"10","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2021-07-27 07:25:22","codes":[{"authorDate":"2021-07-27 07:25:22","commitOrder":2,"curCode":"    public void shouldPutAndFetch() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n\n        try (final KeyValueIterator<Bytes, byte[]> values = bytesStore.fetch(Bytes.wrap(key.getBytes()), 0, 500)) {\n\n            final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n                KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n                KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n            );\n\n            assertEquals(expected, toList(values));\n        }\n    }\n","date":"2021-07-27 07:25:22","endLine":162,"groupId":"101313","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldPutAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/21/aaf0fd8378f1292d33b53dd0f05df7bf5ceb25.src","preCode":"    public void shouldPutAndFetch() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n\n        final KeyValueIterator<Bytes, byte[]> values = bytesStore.fetch(Bytes.wrap(key.getBytes()), 0, 500);\n\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(values));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2021-07-27 07:25:22","commitOrder":2,"curCode":"    public void shouldFindValuesWithinRange() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n        try (final KeyValueIterator<Bytes, byte[]> results = bytesStore.fetch(Bytes.wrap(key.getBytes()), 1, 999)) {\n            final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n                KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n                KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n            );\n\n            assertEquals(expected, toList(results));\n        }\n    }\n","date":"2021-07-27 07:25:22","endLine":178,"groupId":"101313","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFindValuesWithinRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/21/aaf0fd8378f1292d33b53dd0f05df7bf5ceb25.src","preCode":"    public void shouldFindValuesWithinRange() {\n        final String key = \"a\";\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[0])), serializeValue(10));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[1])), serializeValue(50));\n        bytesStore.put(serializeKey(new Windowed<>(key, windows[2])), serializeValue(100));\n        final KeyValueIterator<Bytes, byte[]> results = bytesStore.fetch(Bytes.wrap(key.getBytes()), 1, 999);\n        final List<KeyValue<Windowed<String>, Long>> expected = Arrays.asList(\n            KeyValue.pair(new Windowed<>(key, windows[0]), 10L),\n            KeyValue.pair(new Windowed<>(key, windows[1]), 50L)\n        );\n\n        assertEquals(expected, toList(results));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"ded66d92a4e0fd5810311b727f76058386d92c25","commitMessage":"@@@KAFKA-13124: close KeyValueIterator instance in internals tests (part 1) (#11106)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>","date":"2021-07-27 07:25:22","modifiedFileCount":"7","status":"M","submitter":"Luke Chen"}]
