[{"authorTime":"2018-01-30 09:21:48","codes":[{"authorDate":"2018-01-30 09:21:48","commitOrder":1,"curCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n        final ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","date":"2018-01-30 09:21:48","endLine":357,"groupId":"4980","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldProcessRecordForTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/41/00f186566e8cc6129c8845cfd09bc2b9db6fd4.src","preCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n        final ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2018-01-30 09:21:48","commitOrder":1,"curCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n\n        ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readOutput(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","date":"2018-01-30 09:21:48","endLine":563,"groupId":"4980","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldForwardRecordsFromSubtopologyToSubtopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/41/00f186566e8cc6129c8845cfd09bc2b9db6fd4.src","preCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n\n        ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readOutput(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"B"}],"commitId":"a78f66a5ae7865418ee482c535e883598e1ec51f","commitMessage":"@@@KAFKA-3625: Add public test utils for Kafka Streams (#4402)\n\n* KAFKA-3625: Add public test utils for Kafka Streams\n - add new artifact test-utils\n - add TopologyTestDriver\n - add MockTime.  TestRecord.  add TestRecordFactory\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Damian Guy <damian.guy@gmail.com>.  Bill Bejeck <bill@confluent.io>","date":"2018-01-30 09:21:48","modifiedFileCount":"8","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2019-10-07 16:01:58","codes":[{"authorDate":"2019-10-07 16:01:58","commitOrder":2,"curCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","date":"2019-10-07 16:01:58","endLine":436,"groupId":"4980","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldProcessRecordForTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/cfbc602bf4737e805c6d84bcb80cb56cd8ddc0.src","preCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n        final ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"},{"authorDate":"2019-10-07 16:01:58","commitOrder":2,"curCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","date":"2019-10-07 16:01:58","endLine":689,"groupId":"4980","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldForwardRecordsFromSubtopologyToSubtopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/cfbc602bf4737e805c6d84bcb80cb56cd8ddc0.src","preCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        testDriver.pipeInput(consumerRecord1);\n\n        ProducerRecord outputRecord = testDriver.readOutput(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readOutput(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":675,"status":"M"}],"commitId":"a5a6938c69f4310f7ec519036f0df77d8022326a","commitMessage":"@@@KAFKA-8233: TopologyTestDriver test input and output usability improvements (#7378)\n\nImplements KIP-470\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2019-10-07 16:01:58","modifiedFileCount":"47","status":"M","submitter":"Jukka Karvanen"},{"authorTime":"2020-02-12 11:00:17","codes":[{"authorDate":"2020-02-12 11:00:17","commitOrder":3,"curCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","date":"2020-02-12 11:00:17","endLine":464,"groupId":"4980","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldProcessRecordForTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/60/ab516f6f73e743189188f771b4f52f0964681a.src","preCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"},{"authorDate":"2020-02-12 11:00:17","commitOrder":3,"curCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","date":"2020-02-12 11:00:17","endLine":721,"groupId":"4980","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldForwardRecordsFromSubtopologyToSubtopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/60/ab516f6f73e743189188f771b4f52f0964681a.src","preCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":707,"status":"M"}],"commitId":"998f1520f9af2dddfec9a9ac072f8dcf9d9004fd","commitMessage":"@@@KAKFA-9503: Fix TopologyTestDriver output order (#8065)\n\nMigrates TopologyTestDriver processing to be closer to the same processing/ordering\nsemantics as KafkaStreams. This corrects the output order for recursive topologies\nas reported in KAFKA-9503.  and also works similarly in the case of task idling.\n","date":"2020-02-12 11:00:17","modifiedFileCount":"3","status":"M","submitter":"John Roesler"},{"authorTime":"2020-12-05 02:51:12","codes":[{"authorDate":"2020-12-05 02:51:12","commitOrder":4,"curCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology());\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","date":"2020-12-05 02:51:12","endLine":601,"groupId":"4980","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldProcessRecordForTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/db65840462cc14ba727ac945b68fa01b38743c.src","preCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"},{"authorDate":"2020-12-05 02:51:12","commitOrder":4,"curCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies());\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","date":"2020-12-05 02:51:12","endLine":908,"groupId":"4980","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldForwardRecordsFromSubtopologyToSubtopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6c/db65840462cc14ba727ac945b68fa01b38743c.src","preCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":894,"status":"M"}],"commitId":"4e9c7fc8a5db6e59e43a67586867c3b1c9fbe567","commitMessage":"@@@KAFKA-10629: TopologyTestDriver should not require a Properties argument (#9660)\n\nImplements KIP-680.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  Matthias J. Sax <matthias@confluent.io>","date":"2020-12-05 02:51:12","modifiedFileCount":"8","status":"M","submitter":"Rohit Deshpande"},{"authorTime":"2021-07-03 02:02:20","codes":[{"authorDate":"2021-07-03 02:02:20","commitOrder":5,"curCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","date":"2021-07-03 02:02:20","endLine":551,"groupId":"10550","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"shouldProcessRecordForTopic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/7951fc00f4a1a9715f7bd065d51e7292e56383.src","preCode":"    public void shouldProcessRecordForTopic() {\n        testDriver = new TopologyTestDriver(setupSourceSinkTopology());\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n        final ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"},{"authorDate":"2021-07-03 02:02:20","commitOrder":5,"curCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies(), config);\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","date":"2021-07-03 02:02:20","endLine":771,"groupId":"10550","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"shouldForwardRecordsFromSubtopologyToSubtopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/93/7951fc00f4a1a9715f7bd065d51e7292e56383.src","preCode":"    public void shouldForwardRecordsFromSubtopologyToSubtopology() {\n        testDriver = new TopologyTestDriver(setupTopologyWithTwoSubtopologies());\n\n        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n\n        ProducerRecord<byte[], byte[]> outputRecord = testDriver.readRecord(SINK_TOPIC_1);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_1, outputRecord.topic());\n\n        outputRecord = testDriver.readRecord(SINK_TOPIC_2);\n        assertEquals(key1, outputRecord.key());\n        assertEquals(value1, outputRecord.value());\n        assertEquals(SINK_TOPIC_2, outputRecord.topic());\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"M"}],"commitId":"08757d0d19f95ad6a911cb164ca4b146a23ef3f4","commitMessage":"@@@MINOR: Add default serde in stream test to fix QA ERROR (#10958)\n\nWe changed the default serde in Streams to be null in #10813.  but forgot to add some in tests.  for example TestTopicsTest and TopologyTestDriverTest.\n\nReviewers: David Jacot <djacot@confluent.io>.  Bruno Cadonna <cadonna@apache.org>","date":"2021-07-03 02:02:20","modifiedFileCount":"3","status":"M","submitter":"dengziming"}]
