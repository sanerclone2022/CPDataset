[{"authorTime":"2019-05-16 23:16:00","codes":[{"authorDate":"2019-05-16 23:16:00","commitOrder":1,"curCode":"    public void shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                Serdes.Integer(),\n                Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n            Serdes.Integer(),\n            Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props()),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props()),\n            false);\n    }\n","date":"2019-05-16 23:16:00","endLine":483,"groupId":"1817","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ba/5b08f632e83c82596d3a090bccd0218323f056.src","preCode":"    public void shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                Serdes.Integer(),\n                Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n            Serdes.Integer(),\n            Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props()),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props()),\n            false);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"B"},{"authorDate":"2019-05-16 23:16:00","commitOrder":1,"curCode":"    public void shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.persistentWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.persistentTimestampedWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n        final Properties props = props();\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props),\n            true);\n    }\n","date":"2019-05-16 23:16:00","endLine":521,"groupId":"1817","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ba/5b08f632e83c82596d3a090bccd0218323f056.src","preCode":"    public void shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.persistentWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.persistentTimestampedWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n        final Properties props = props();\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props),\n            true);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"B"}],"commitId":"16b408898e75b00ddf6b607246833cdbcd56f507","commitMessage":"@@@KAFAK-3522: Add TopologyTestDriver unit tests (#6179)\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2019-05-16 23:16:00","modifiedFileCount":"2","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2021-02-04 10:01:26","codes":[{"authorDate":"2021-02-04 10:01:26","commitOrder":2,"curCode":"    public void shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                Serdes.Integer(),\n                Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n            Serdes.Integer(),\n            Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            streamsBuilderForOldStore,\n            streamsBuilderForNewStore,\n            false);\n    }\n","date":"2021-02-04 10:01:26","endLine":524,"groupId":"102743","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/70/082a0a175e527d77e2d00f234946227c92a8b7.src","preCode":"    public void shouldMigrateInMemoryWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                Serdes.Integer(),\n                Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.inMemoryWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n            Serdes.Integer(),\n            Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props()),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props()),\n            false);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":490,"status":"M"},{"authorDate":"2021-02-04 10:01:26","commitOrder":2,"curCode":"    public void shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.persistentWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.persistentTimestampedWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            streamsBuilderForOldStore,\n            streamsBuilderForNewStore,\n            true);\n    }\n","date":"2021-02-04 10:01:26","endLine":561,"groupId":"102743","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/70/082a0a175e527d77e2d00f234946227c92a8b7.src","preCode":"    public void shouldMigratePersistentWindowStoreToTimestampedWindowStoreUsingPapi() throws Exception {\n        final StreamsBuilder streamsBuilderForOldStore = new StreamsBuilder();\n\n        streamsBuilderForOldStore\n            .addStateStore(\n                Stores.windowStoreBuilder(\n                    Stores.persistentWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(WindowedProcessor::new, STORE_NAME);\n\n        final StreamsBuilder streamsBuilderForNewStore = new StreamsBuilder();\n        streamsBuilderForNewStore\n            .addStateStore(\n                Stores.timestampedWindowStoreBuilder(\n                    Stores.persistentTimestampedWindowStore(\n                        STORE_NAME,\n                        Duration.ofMillis(1000L),\n                        Duration.ofMillis(1000L),\n                        false),\n                    Serdes.Integer(),\n                    Serdes.Long()))\n            .<Integer, Integer>stream(inputStream)\n            .process(TimestampedWindowedProcessor::new, STORE_NAME);\n\n        final Properties props = props();\n        shouldMigrateWindowStoreToTimestampedWindowStoreUsingPapi(\n            new KafkaStreams(streamsBuilderForOldStore.build(), props),\n            new KafkaStreams(streamsBuilderForNewStore.build(), props),\n            true);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":527,"status":"M"}],"commitId":"706f5097b70ce140e6a0473ad55342b514b6db04","commitMessage":"@@@KAFKA-10716: persist UUID in state directory for stable processId across restarts (#9978)\n\nTo stabilize the task assignment across restarts of the JVM we need some way to persist the process-specific UUID. We can just write it to a file in the state directory.  and initialize it from there or create a new one if no prior UUID exists.\n\nReviewers: Walker Carlson <wcarlson@confluent.io>.  Leah Thomas <lthomas@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2021-02-04 10:01:26","modifiedFileCount":"9","status":"M","submitter":"A. Sophie Blee-Goldman"}]
