[{"authorTime":"2017-05-31 23:46:43","codes":[{"authorDate":"2017-05-31 23:46:43","commitOrder":1,"curCode":"    public void testCode() throws Exception {\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","date":"2017-06-01 00:35:31","endLine":64,"groupId":"10820","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/4d/c4cac7b880c304b118cab20ae7d7b204d3919d.src","preCode":"    public void testCode() throws Exception {\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/resource/ResourceTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2017-05-31 23:46:43","commitOrder":1,"curCode":"    public void testCode() throws Exception {\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","date":"2017-06-01 00:35:31","endLine":63,"groupId":"1166","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8e/7fdc70d0bd00127cf774540d6443fc6b4ecbda.src","preCode":"    public void testCode() throws Exception {\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/acl/AclPermissionTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"da9a171c99eb456378bdda95a563d09dfd9af4d8","commitMessage":"@@@KAFKA-5265; Move ACLs.  Config.  Topic classes into org.apache.kafka.common\n\nAlso introduce TopicConfig.\n\nAuthor: Colin P. Mccabe <cmccabe@confluent.io>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #3120 from cmccabe/KAFKA-5265\n","date":"2017-06-01 00:35:31","modifiedFileCount":"11","status":"B","submitter":"Colin P. Mccabe"},{"authorTime":"2017-06-08 07:26:14","codes":[{"authorDate":"2017-06-08 07:26:14","commitOrder":2,"curCode":"    public void testCode() throws Exception {\n        assertEquals(ResourceType.values().length, INFOS.length);\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","date":"2017-06-08 08:56:08","endLine":65,"groupId":"10820","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9a/dade1ec4aee609da455b11376bfd72c836eafe.src","preCode":"    public void testCode() throws Exception {\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/resource/ResourceTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2017-06-08 07:26:14","commitOrder":2,"curCode":"    public void testCode() throws Exception {\n        assertEquals(AclPermissionType.values().length, INFOS.length);\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","date":"2017-06-08 08:56:08","endLine":64,"groupId":"1166","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/15/b906866ef764d24b2aec8c8dc323114014e5fb.src","preCode":"    public void testCode() throws Exception {\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/acl/AclPermissionTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"2fc91afbad2229ef2f8ef6fbeebc257ab7019746","commitMessage":"@@@KAFKA-5292; Fix authorization checks in AdminClient\n\n* NetworkClient.java: when trace logging is enabled.  show AbstractResponse Struct objects.  rather than just a memory address of the AbstractResponse.\n* AclOperation.java: add documentation of what ACLs imply other ACLs.\n* Resource.java: add CLUSTER.  CLUSTER_NAME constants.\n* Reconcile the Java and Scala classes for ResourceType.  OperationType.  etc.  Add unit tests to ensure they can be converted to each other.\n* AclCommand.scala: we should be able to apply ACLs containing Alter and Describe operations to Cluster resources.\n* SimpleAclAuthorizer: update the authorizer to handle the ACL inheritance rules described in AclOperation.java.\n* KafkaApis.scala: update createAcls and deleteAcls to use ALTER on CLUSTER.  as described in the KIP.  describeAcls should use DESCRIBE on CLUSTER.  Use      fromJava methods instead of fromString methods to convert from Java objects to Scala ones.\n* SaslSslAdminClientIntegrationTest.scala: do not use AllowEveryoneIfNoAclIsFound.  Add a configureSecurityBeforeServerStart hook which installs the ACLs     necessary for the tests.  Add a test of ACL authorization ALLOW and DENY functionality.\n\nAuthor: Colin P. Mccabe <cmccabe@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #3240 from cmccabe/KAFKA-5292\n","date":"2017-06-08 08:56:08","modifiedFileCount":"8","status":"M","submitter":"Colin P. Mccabe"},{"authorTime":"2017-06-08 07:26:14","codes":[{"authorDate":"2018-09-10 05:25:30","commitOrder":3,"curCode":"    public void testCode() {\n        assertEquals(ResourceType.values().length, INFOS.length);\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","date":"2018-09-10 05:25:30","endLine":66,"groupId":"10820","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8e/afba728db3fcde5da7f2961ca86f69a1020a21.src","preCode":"    public void testCode() throws Exception {\n        assertEquals(ResourceType.values().length, INFOS.length);\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/resource/ResourceTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2017-06-08 07:26:14","commitOrder":3,"curCode":"    public void testCode() throws Exception {\n        assertEquals(AclPermissionType.values().length, INFOS.length);\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","date":"2017-06-08 08:56:08","endLine":64,"groupId":"1166","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/15/b906866ef764d24b2aec8c8dc323114014e5fb.src","preCode":"    public void testCode() throws Exception {\n        assertEquals(AclPermissionType.values().length, INFOS.length);\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/acl/AclPermissionTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"b8651d4e82d45463d2c71798bd5852f8a605b440","commitMessage":"@@@MINOR: Code cleanup of 'clients' module (#5427)\n\nCleanup involves:\n* Refactoring to use Java 8 constructs (lambdas. \ndiamond for `empty` collection methods) and library\nmethods (`computeIfAbsent`)\n* Simplifying code (including unnecessarily complex\n`equals` and `hashCode` implementations)\n* Removing redundant code\n* Fixing typos\n\nReviewers: Ryanne Dolan.  Ismael Juma <ismael@juma.me.uk>","date":"2018-09-10 05:25:30","modifiedFileCount":"96","status":"M","submitter":"Vahid Hashemian"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2021-01-14 08:17:45","commitOrder":4,"curCode":"    public void testCode() {\n        assertEquals(ResourceType.values().length, INFOS.length);\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.code, info.resourceType.code(),\n                info.resourceType + \" was supposed to have code == \" + info.code);\n            assertEquals(info.resourceType, ResourceType.fromCode((byte) info.code), \"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType);\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","date":"2021-01-14 08:17:45","endLine":66,"groupId":"103574","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/fc/de96865e60f9274ed3a3cb24d4bc7dc02a2d31.src","preCode":"    public void testCode() {\n        assertEquals(ResourceType.values().length, INFOS.length);\n        for (AclResourceTypeTestInfo info : INFOS) {\n            assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,\n                info.code, info.resourceType.code());\n            assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" +\n                info.resourceType, info.resourceType, ResourceType.fromCode((byte) info.code));\n        }\n        assertEquals(ResourceType.UNKNOWN, ResourceType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/resource/ResourceTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-01-14 08:17:45","commitOrder":4,"curCode":"    public void testCode() throws Exception {\n        assertEquals(AclPermissionType.values().length, INFOS.length);\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.code, info.ty.code(), info.ty + \" was supposed to have code == \" + info.code);\n            assertEquals(info.ty, AclPermissionType.fromCode((byte) info.code),\n                \"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty);\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","date":"2021-01-14 08:17:45","endLine":62,"groupId":"103574","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testCode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8d/a6d2ac6c0e200c22bb0fd0d98097bcb2705fa5.src","preCode":"    public void testCode() throws Exception {\n        assertEquals(AclPermissionType.values().length, INFOS.length);\n        for (AclPermissionTypeTestInfo info : INFOS) {\n            assertEquals(info.ty + \" was supposed to have code == \" + info.code,\n                info.code, info.ty.code());\n            assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" +  info.ty,\n                info.ty, AclPermissionType.fromCode((byte) info.code));\n        }\n        assertEquals(AclPermissionType.UNKNOWN, AclPermissionType.fromCode((byte) 120));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/acl/AclPermissionTypeTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
