[{"authorTime":"2020-01-30 04:45:15","codes":[{"authorDate":"2020-01-30 04:45:15","commitOrder":1,"curCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V0);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(10, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-01-30 04:45:15","endLine":104,"groupId":"16539","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRoundTripV0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ec/07bc35d212b8249809145f338788749378356b.src","preCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V0);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(10, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2020-01-30 04:45:15","commitOrder":1,"curCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V1);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(100, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-01-30 04:45:15","endLine":117,"groupId":"16537","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRoundTripV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ec/07bc35d212b8249809145f338788749378356b.src","preCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V1);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(100, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"}],"commitId":"40b35178e8dc8f6d243f985a3f1f93a79aacd8d1","commitMessage":"@@@KAFKA-9026: Use automatic RPC generation in DescribeAcls (#7560)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>","date":"2020-01-30 04:45:15","modifiedFileCount":"9","status":"B","submitter":"Mickael Maison"},{"authorTime":"2020-02-03 23:12:00","codes":[{"authorDate":"2020-02-03 23:12:00","commitOrder":2,"curCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V0);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(10, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-02-03 23:12:00","endLine":105,"groupId":"16539","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRoundTripV0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/77/ecd1801aab3ba3e93dc0cab1ab1f44c936907c.src","preCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V0);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(10, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-02-03 23:12:00","commitOrder":2,"curCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V1);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(100, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-02-03 23:12:00","endLine":119,"groupId":"16537","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRoundTripV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/77/ecd1801aab3ba3e93dc0cab1ab1f44c936907c.src","preCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V1);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(100, ApiError.NONE, DescribeAclsResponse.aclBindings(resources));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"738e14edb833f3efdf807c506531b3eed4ee7137","commitMessage":"@@@KAFKA-9027.  KAFKA-9028: Convert create/delete acls requests/response to use generated protocol (#7725)\n\nAlso add support for flexible versions to both protocol types.\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>.  Colin Patrick McCabe <cmccabe@apache.org>\n\nCo-authored-by: Rajini Sivaram <rajinisivaram@googlemail.com>\nCo-authored-by: Jason Gustafson <jason@confluent.io>","date":"2020-02-03 23:12:00","modifiedFileCount":"19","status":"M","submitter":"Ismael Juma"},{"authorTime":"2020-12-08 07:39:57","codes":[{"authorDate":"2020-12-08 07:39:57","commitOrder":3,"curCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serializeBody(V0);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(10, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-12-08 07:39:57","endLine":105,"groupId":"11713","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRoundTripV0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/56/bfe8557ddfee38dd05d36c391e7c08d5a26654.src","preCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V0);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(10, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-12-08 07:39:57","commitOrder":3,"curCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serializeBody(V1);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(100, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-12-08 07:39:57","endLine":119,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRoundTripV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/56/bfe8557ddfee38dd05d36c391e7c08d5a26654.src","preCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final Struct struct = original.toStruct(V1);\n\n        final DescribeAclsResponse result = new DescribeAclsResponse(struct, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(100, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"6f27bb02da0dec63a16c0c6aa456b47ba416eb19","commitMessage":"@@@KAFKA-10818: Skip conversion to `Struct` when serializing generated requests/responses (#7409)\n\nGenerated request/response classes have code to serialize/deserialize directly to\n`ByteBuffer` so the intermediate conversion to `Struct` can be skipped for them.\nWe have recently completed the transition to generated request/response classes. \nso we can also remove the `Struct` based fallbacks.\n\nAdditional noteworthy changes:\n* `AbstractRequest.parseRequest` has a more efficient computation of request size that\nrelies on the received buffer instead of the parsed `Struct`.\n* Use `SendBuilder` for `AbstractRequest/Response` `toSend`.  made the superclass\nimplementation final and removed the overrides that are no longer necessary.\n* Removed request/response constructors that assume latest version as they are unsafe\noutside of tests.\n* Removed redundant version fields in requests/responses.\n* Removed unnecessary work in `OffsetFetchResponse`'s constructor when version >= 2.\n* Made `AbstractResponse.throttleTimeMs()` abstract.\n* Using `toSend` in `SaslClientAuthenticator` instead of `serialize`.\n* Various changes in Request/Response classes to make them more consistent and to\nrely on the Data classes as much as possible when it comes to their state.\n* Remove the version argument from `AbstractResponse.toString`.\n* Fix `getErrorResponse` for `ProduceRequest` and `DescribeClientQuotasRequest` to\nuse `ApiError` which processes the error message sent back to the clients. This was\nuncovered by an accidental fix to a `RequestResponseTest` test (it was calling\n`AbstractResponse.toString` instead of `AbstractResponse.toString(short)`).\n\nRely on existing protocol tests to ensure this refactoring does not change \nobserved behavior (aside from improved performance).\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2020-12-08 07:39:57","modifiedFileCount":"174","status":"M","submitter":"Ismael Juma"},{"authorTime":"2020-12-10 03:15:58","codes":[{"authorDate":"2020-12-10 03:15:58","commitOrder":4,"curCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serialize(V0);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(10, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-12-10 03:15:58","endLine":105,"groupId":"103151","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldRoundTripV0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ba/a64ee6965731c9936175ad99a286986190d825.src","preCode":"    public void shouldRoundTripV0() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, LITERAL_ACL2);\n        final DescribeAclsResponse original = buildResponse(10, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serializeBody(V0);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V0);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(10, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-12-10 03:15:58","commitOrder":4,"curCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serialize(V1);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(100, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","date":"2020-12-10 03:15:58","endLine":119,"groupId":"103151","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldRoundTripV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ba/a64ee6965731c9936175ad99a286986190d825.src","preCode":"    public void shouldRoundTripV1() {\n        List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1, PREFIXED_ACL1);\n        final DescribeAclsResponse original = buildResponse(100, Errors.NONE, resources);\n        final ByteBuffer buffer = original.serializeBody(V1);\n\n        final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer, V1);\n        assertResponseEquals(original, result);\n\n        final DescribeAclsResponse result2 = buildResponse(100, Errors.NONE, DescribeAclsResponse.aclsResources(\n            DescribeAclsResponse.aclBindings(resources)));\n        assertResponseEquals(original, result2);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/requests/DescribeAclsResponseTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"1f98112e993bc4ae098936b1b0661fdb2c4b1880","commitMessage":"@@@MINOR: Remove connection id from Send and consolidate request/message utils (#9714)\n\nConnection id is now only present in `NetworkSend`.  which is now\nthe class used by `Selector`/`NetworkClient`/`KafkaChannel` (which\nworks well since `NetworkReceive` is the class used for\nreceived data).\n\nThe previous `NetworkSend` was also responsible for adding a size\nprefix. This logic is already present in `SendBuilder`.  but for the\nminority of cases where `SendBuilder` is not used (including\na number of tests).  we now have `ByteBufferSend.sizePrefixed()`.\n\nWith regards to the request/message utilities:\n* Renamed `toByteBuffer`/`toBytes` in `MessageUtil` to\n`toVersionPrefixedByteBuffer`/`toVersionPrefixedBytes` for clarity.\n* Introduced new `MessageUtil.toByteBuffer` that does not include\nthe version as the prefix.\n* Renamed `serializeBody` in `AbstractRequest/Response` to\n`serialize` for symmetry with `parse`.\n* Introduced `RequestTestUtils` and moved relevant methods from\n`TestUtils`.\n* Moved `serializeWithHeader` methods that were only used in\ntests to `RequestTestUtils`.\n* Deleted `MessageTestUtil`.\n\nFinally.  a couple of changes to simplify coding patterns:\n* Added `flip()` and `buffer()` to `ByteBufferAccessor`.\n* Added `MessageSizeAccumulator.sizeExcludingZeroCopy`.\n* Used lambdas instead of `TestCondition`.\n* Used `Arrays.copyOf` instead of `System.arraycopy` in `MessageUtil`.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2020-12-10 03:15:58","modifiedFileCount":"80","status":"M","submitter":"Ismael Juma"}]
