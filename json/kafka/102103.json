[{"authorTime":"2019-01-31 07:57:56","codes":[{"authorDate":"2019-01-31 07:57:56","commitOrder":1,"curCode":"    public void shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore() {\n        initializeConsumer(1, 0, t1);\n\n        stateManager.initialize();\n        stateManager.register(store1, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(5, restoredRecord.value.length);\n    }\n","date":"2019-01-31 07:57:56","endLine":236,"groupId":"1384","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/03/a431d1729b01a1aaf5176940bff1aca7aeaa53.src","preCode":"    public void shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore() {\n        initializeConsumer(1, 0, t1);\n\n        stateManager.initialize();\n        stateManager.register(store1, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(5, restoredRecord.value.length);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"},{"authorDate":"2019-01-31 07:57:56","commitOrder":1,"curCode":"    public void shouldConvertValuesIfStoreImplementsTimestampedBytesStore() {\n        initializeConsumer(1, 0, t2);\n\n        stateManager.initialize();\n        stateManager.register(store2, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(13, restoredRecord.value.length);\n    }\n","date":"2019-01-31 07:57:56","endLine":300,"groupId":"9094","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConvertValuesIfStoreImplementsTimestampedBytesStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/03/a431d1729b01a1aaf5176940bff1aca7aeaa53.src","preCode":"    public void shouldConvertValuesIfStoreImplementsTimestampedBytesStore() {\n        initializeConsumer(1, 0, t2);\n\n        stateManager.initialize();\n        stateManager.register(store2, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(13, restoredRecord.value.length);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"B"}],"commitId":"201022d19eac50a4bce8ccfa12c8e233f2b5cad6","commitMessage":"@@@KAFKA-3522: Replace RecordConverter with TimestampedBytesStore (#6204)\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2019-01-31 07:57:56","modifiedFileCount":"9","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2020-02-05 13:06:39","codes":[{"authorDate":"2020-02-05 13:06:39","commitOrder":2,"curCode":"    public void shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore() {\n        initializeConsumer(1, 0, t1);\n\n        stateManager.initialize();\n        stateManager.registerStore(store1, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(5, restoredRecord.value.length);\n    }\n","date":"2020-02-05 13:06:39","endLine":270,"groupId":"102103","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/40/8714128a053bfa0169cfd073fc6a455525bece.src","preCode":"    public void shouldNotConvertValuesIfStoreDoesNotImplementTimestampedBytesStore() {\n        initializeConsumer(1, 0, t1);\n\n        stateManager.initialize();\n        stateManager.register(store1, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(5, restoredRecord.value.length);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2020-02-05 13:06:39","commitOrder":2,"curCode":"    public void shouldConvertValuesIfStoreImplementsTimestampedBytesStore() {\n        initializeConsumer(1, 0, t2);\n\n        stateManager.initialize();\n        stateManager.registerStore(store2, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(13, restoredRecord.value.length);\n    }\n","date":"2020-02-05 13:06:39","endLine":298,"groupId":"102103","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldConvertValuesIfStoreImplementsTimestampedBytesStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/40/8714128a053bfa0169cfd073fc6a455525bece.src","preCode":"    public void shouldConvertValuesIfStoreImplementsTimestampedBytesStore() {\n        initializeConsumer(1, 0, t2);\n\n        stateManager.initialize();\n        stateManager.register(store2, stateRestoreCallback);\n\n        final KeyValue<byte[], byte[]> restoredRecord = stateRestoreCallback.restored.get(0);\n        assertEquals(3, restoredRecord.key.length);\n        assertEquals(13, restoredRecord.value.length);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"4090f9a2b0a95e4da127e4786007542276d97520","commitMessage":"@@@KAFKA-9113: Clean up task management and state management (#7997)\n\nThis PR is collaborated by Guozhang Wang and John Roesler. It is a significant tech debt cleanup on task management and state management.  and is broken down by several sub-tasks listed below:\n\nExtract embedded clients (producer and consumer) into RecordCollector from StreamTask.\nguozhangwang#2\nguozhangwang#5\n\nConsolidate the standby updating and active restoring logic into ChangelogReader and extract out of StreamThread.\nguozhangwang#3\nguozhangwang#4\n\nIntroduce Task state life cycle (created.  restoring.  running.  suspended.  closing).  and refactor the task operations based on the current state.\nguozhangwang#6\nguozhangwang#7\n\nConsolidate AssignedTasks into TaskManager and simplify the logic of changelog management and task management (since they are already moved in step 2) and 3)).\nguozhangwang#8\nguozhangwang#9\n\nAlso simplified the StreamThread logic a bit as the embedded clients / changelog restoration logic has been moved into step 1) and 2).\nguozhangwang#10\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Bruno Cadonna <bruno@confluent.io>.  Boyang Chen <boyang@confluent.io>","date":"2020-02-05 13:06:39","modifiedFileCount":"76","status":"M","submitter":"Guozhang Wang"}]
