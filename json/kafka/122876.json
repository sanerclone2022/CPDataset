[{"authorTime":"2020-10-08 12:06:53","codes":[{"authorDate":"2020-10-08 12:06:53","commitOrder":1,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde\n        );\n    }\n","date":"2020-10-08 12:06:53","endLine":138,"groupId":"7241","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8b/9256dc5d91ba2a8349ce9ab4852a0579b5e9c2.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"},{"authorDate":"2020-10-08 12:06:53","commitOrder":1,"curCode":"    void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde);\n    }\n","date":"2020-10-08 12:06:53","endLine":137,"groupId":"7241","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/7233b3b2251bfe329887a145853ae3232ea6da.src","preCode":"    void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"2804257fe221f37e5098bd3f633a5d76ca890634","commitMessage":"@@@KAFKA-10562: Properly invoke new StateStoreContext init (#9388)\n\n* all wrapping stores should pass StateStoreContext init through to the same\n  method on the wrapped store and not translate it to ProcessorContext init\n* base-level stores should handle StateStoreContext init so that callers passing\n  a non-InternalProcessorContext implementation will be able to initialize the store\n* extra tests are added to verify the desired behavior\n\nReviewers: Guozhang Wang <guozhang@apache.org>","date":"2020-10-08 12:06:53","modifiedFileCount":"71","status":"B","submitter":"John Roesler"},{"authorTime":"2020-10-21 06:03:39","codes":[{"authorDate":"2020-10-21 06:03:39","commitOrder":2,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n                WrappingNullableUtils.prepareKeySerde(keySerde, context.keySerde(), context.valueSerde()),\n                WrappingNullableUtils.prepareValueSerde(valueSerde, context.keySerde(), context.valueSerde())\n        );\n    }\n","date":"2020-10-21 06:03:39","endLine":138,"groupId":"19488","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/04/19192e7ec11752392ce0f2d722c3a1e327e479.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2020-10-21 06:03:39","commitOrder":2,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            prepareKeySerde(keySerde, context.keySerde(), context.valueSerde()),\n            prepareValueSerde(valueSerde, context.keySerde(), context.valueSerde()));\n    }\n","date":"2020-10-21 06:03:39","endLine":140,"groupId":"14054","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1b/419ec742633994103b6d0c1f5e8790f3fa5dbd.src","preCode":"    void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            keySerde == null ? (Serde<K>) context.keySerde() : keySerde,\n            valueSerde == null ? (Serde<V>) context.valueSerde() : valueSerde);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"bb47519a42cd3cf157aa5be4687ff4592a3faee4","commitMessage":"@@@KAFKA-10515: Properly initialize nullable Serdes with default values (#9338)\n\nAlso introduced the notion of WrappingNullableSerdes (aligned to the concept\nof WrappingNullableSerializer and WrappingNullableDeserializer) and centralized\ninitialization in WrappingNullables.\n\nThe added integeration test KTableKTableForeignKeyJoinDistributedTest tests\nwhether all serdes are now correctly set on all stream clients.\n\nReviewers: John Roesler <vvcephei@apache.org>","date":"2020-10-21 06:03:39","modifiedFileCount":"14","status":"M","submitter":"Thorsten Hake"},{"authorTime":"2021-07-02 05:58:29","codes":[{"authorDate":"2021-07-02 05:58:29","commitOrder":3,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n                WrappingNullableUtils.prepareKeySerde(keySerde, new SerdeGetter(context)),\n                WrappingNullableUtils.prepareValueSerde(valueSerde, new SerdeGetter(context))\n        );\n    }\n","date":"2021-07-02 05:58:29","endLine":139,"groupId":"19488","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/74/34c0ef3c68537a3af03e1cc9a35e14176827b6.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n                WrappingNullableUtils.prepareKeySerde(keySerde, context.keySerde(), context.valueSerde()),\n                WrappingNullableUtils.prepareValueSerde(valueSerde, context.keySerde(), context.valueSerde())\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2021-07-02 05:58:29","commitOrder":3,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            prepareKeySerde(keySerde, new SerdeGetter(context)),\n            prepareValueSerde(valueSerde, new SerdeGetter(context)));\n    }\n","date":"2021-07-02 05:58:29","endLine":145,"groupId":"14054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/27/cec1d9dc345278352670234db2ba58cfc7ee5b.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            prepareKeySerde(keySerde, context.keySerde(), context.valueSerde()),\n            prepareValueSerde(valueSerde, context.keySerde(), context.valueSerde()));\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"4fd71a7ef1c79ec3f110ee2f9d38fa7d5194937e","commitMessage":"@@@KAFKA-9559: Change default serde to be `null` (#10813)\n\nImplements KIP-741\n\nReviewers: Matthias J. Sax <matthias@confluent.io>","date":"2021-07-02 05:58:29","modifiedFileCount":"38","status":"M","submitter":"leah"},{"authorTime":"2021-07-29 02:18:56","codes":[{"authorDate":"2021-07-29 02:18:56","commitOrder":4,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.namedTopology()),\n            WrappingNullableUtils.prepareKeySerde(keySerde, new SerdeGetter(context)),\n            WrappingNullableUtils.prepareValueSerde(valueSerde, new SerdeGetter(context))\n        );\n    }\n","date":"2021-07-29 02:18:56","endLine":142,"groupId":"4987","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/74/6ec85fc26a04e44a7a3fa4e52ee6ca9de2414e.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n                WrappingNullableUtils.prepareKeySerde(keySerde, new SerdeGetter(context)),\n                WrappingNullableUtils.prepareValueSerde(valueSerde, new SerdeGetter(context))\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2021-07-29 02:18:56","commitOrder":4,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.namedTopology()),\n            prepareKeySerde(keySerde, new SerdeGetter(context)),\n            prepareValueSerde(valueSerde, new SerdeGetter(context)));\n    }\n","date":"2021-07-29 02:18:56","endLine":144,"groupId":"10684","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bc/64db8214803faf6767abe026641366405e5f45.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName),\n            prepareKeySerde(keySerde, new SerdeGetter(context)),\n            prepareValueSerde(valueSerde, new SerdeGetter(context)));\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"4710a491463a91ec12c670ea50c139fc14134e80","commitMessage":"@@@KAFKA-12648: Pt. 2 - Introduce TopologyMetadata to wrap InternalTopologyBuilders of named topologies (#10683)\n\nPt. 1: #10609\nPt. 2: #10683\nPt. 3: #10788\n\nThe TopologyMetadata is next up after Pt. 1 #10609. This PR sets up the basic architecture for running an app with multiple NamedTopologies.  though the APIs to add/remove them dynamically are not implemented until Pt. 3\n\nReviewers: Guozhang Wang <guozhang@confluent.io>.  Walker Carlson <wcarlson@confluent.io>","date":"2021-07-29 02:18:56","modifiedFileCount":"56","status":"M","submitter":"A. Sophie Blee-Goldman"},{"authorTime":"2021-08-10 06:19:21","codes":[{"authorDate":"2021-08-10 06:19:21","commitOrder":5,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.topologyName()),\n            WrappingNullableUtils.prepareKeySerde(keySerde, new SerdeGetter(context)),\n            WrappingNullableUtils.prepareValueSerde(valueSerde, new SerdeGetter(context))\n        );\n    }\n","date":"2021-08-10 06:19:21","endLine":141,"groupId":"122876","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f7/178999b0fd58cf76143c3d52328ee1a53fcc18.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.namedTopology()),\n            WrappingNullableUtils.prepareKeySerde(keySerde, new SerdeGetter(context)),\n            WrappingNullableUtils.prepareValueSerde(valueSerde, new SerdeGetter(context))\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2021-08-10 06:19:21","commitOrder":5,"curCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.topologyName()),\n            prepareKeySerde(keySerde, new SerdeGetter(context)),\n            prepareValueSerde(valueSerde, new SerdeGetter(context)));\n    }\n","date":"2021-08-10 06:19:21","endLine":144,"groupId":"122876","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"initStoreSerde","params":"(finalStateStoreContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/24/c17f2c2b5347a842d7a0c1985cbd8b7454c5a7.src","preCode":"    private void initStoreSerde(final StateStoreContext context) {\n        final String storeName = name();\n        final String changelogTopic = ProcessorContextUtils.changelogFor(context, storeName);\n        serdes = new StateSerdes<>(\n            changelogTopic != null ?\n                changelogTopic :\n                ProcessorStateManager.storeChangelogTopic(context.applicationId(), storeName, taskId.namedTopology()),\n            prepareKeySerde(keySerde, new SerdeGetter(context)),\n            prepareValueSerde(valueSerde, new SerdeGetter(context)));\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"9565a529e08d7aa36beac02c8e6115bcc87d2dc7","commitMessage":"@@@KAFKA-12779: rename namedTopology in TaskId to topologyName #11192\n\nUpdate to KIP-740.\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Konstantine Karantasis <konstantine@confluent.io>.  Israel Ekpo <israelekpo@gmail.com>","date":"2021-08-10 06:19:21","modifiedFileCount":"24","status":"M","submitter":"Walker Carlson"}]
