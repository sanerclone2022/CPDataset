[{"authorTime":"2019-07-16 22:16:15","codes":[{"authorDate":"2019-07-16 22:16:15","commitOrder":1,"curCode":"    public void shouldJoinOnlyIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1));\n\n    }\n","date":"2019-07-16 22:16:15","endLine":185,"groupId":"5409","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldJoinOnlyIfMatchFoundOnStreamUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/348dfaada15d88d07d8d6281944a5ac197e6f1.src","preCode":"    public void shouldJoinOnlyIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1));\n\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"B"},{"authorDate":"2019-07-16 22:16:15","commitOrder":1,"curCode":"    public void shouldJoinRegardlessIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1),\n                new KeyValueTimestamp<>(2, \"X2,FKey2+null\", 2),\n                new KeyValueTimestamp<>(3, \"X3,FKey3+null\", 3));\n\n    }\n","date":"2019-07-16 22:16:15","endLine":191,"groupId":"5409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldJoinRegardlessIfMatchFoundOnStreamUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ce/4454e5641a9f1e329fe008c2d7e4cf35c32df9.src","preCode":"    public void shouldJoinRegardlessIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1),\n                new KeyValueTimestamp<>(2, \"X2,FKey2+null\", 2),\n                new KeyValueTimestamp<>(3, \"X3,FKey3+null\", 3));\n\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"}],"commitId":"00757cd99f6d8bf2760c3708d307347f4cde65f6","commitMessage":"@@@KAFKA-8450: Using KeyValueTimeStamp in MockProcessor (#6933)\n\nThis PR is to use KeyValueTimeStamp Object in MockProcessor Test file instead of String and change all the dependency files with broken test cases.\n\nReviewers: Kamal Chandraprakash.  Matthias J. Sax <mjsax@apache.org>.   Boyang Chen <boyang@confluent.io>.  Bill Bejeck <bbejeck@gmail.com>","date":"2019-07-16 22:16:15","modifiedFileCount":"28","status":"B","submitter":"SuryaTeja Duggi"},{"authorTime":"2020-10-01 02:59:11","codes":[{"authorDate":"2020-10-01 02:59:11","commitOrder":2,"curCode":"    public void shouldJoinOnlyIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true, false);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1));\n\n    }\n","date":"2020-10-01 02:59:11","endLine":191,"groupId":"101675","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldJoinOnlyIfMatchFoundOnStreamUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ab/ebd52141973162eeb7bd1a9ea5d15b93a9e020.src","preCode":"    public void shouldJoinOnlyIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1));\n\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2020-10-01 02:59:11","commitOrder":2,"curCode":"    public void shouldJoinRegardlessIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true, false);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1),\n                new KeyValueTimestamp<>(2, \"X2,FKey2+null\", 2),\n                new KeyValueTimestamp<>(3, \"X3,FKey3+null\", 3));\n\n    }\n","date":"2020-10-01 02:59:11","endLine":197,"groupId":"101675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldJoinRegardlessIfMatchFoundOnStreamUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2b/2541ee4ebb36e066285f5ac0301abaa0bfe9d5.src","preCode":"    public void shouldJoinRegardlessIfMatchFoundOnStreamUpdates() {\n\n        \r\n\n        pushToGlobalTable(2, \"Y\");\n        processor.checkAndClearProcessResult(EMPTY);\n\n        \r\n\n        pushToStream(4, \"X\", true);\n        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, \"X0,FKey0+Y0\", 0),\n                new KeyValueTimestamp<>(1, \"X1,FKey1+Y1\", 1),\n                new KeyValueTimestamp<>(2, \"X2,FKey2+null\", 2),\n                new KeyValueTimestamp<>(3, \"X3,FKey3+null\", 3));\n\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"6e0a10b41ab1a5e68fc1d5b972a91dd43a86c40e","commitMessage":"@@@KAFKA-10277: Allow null keys with non-null mappedKey in KStreamKGlobalTable join (#9186)\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2020-10-01 02:59:11","modifiedFileCount":"3","status":"M","submitter":"JoelWee"}]
