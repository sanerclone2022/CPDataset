[{"authorTime":"2018-08-16 05:30:24","codes":[{"authorDate":"2018-08-16 05:30:24","commitOrder":2,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs;\n    }\n","date":"2018-08-16 05:30:24","endLine":181,"groupId":"1960","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f9/1182e8c2f33c0fae594ecea9f9f1560e245fb1.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2018-08-16 05:30:24","commitOrder":2,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            Objects.equals(grace, that.grace);\n    }\n","date":"2018-08-16 05:30:24","endLine":181,"groupId":"11861","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c4/dd91d3ed506adc024883136478e1cc41bc8ec7.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            Objects.equals(grace, that.grace);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"MB"}],"commitId":"a4a65abcd3e5a01e0910afb10a214f4bb47577a3","commitMessage":"@@@MINOR: (re)add equals/hashCode to *Windows (#5510)\n\nAndy Coates <big-andy-coates@users.noreply.github.com>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-08-16 05:30:24","modifiedFileCount":"9","status":"M","submitter":"John Roesler"},{"authorTime":"2018-08-16 05:30:24","codes":[{"authorDate":"2018-08-24 08:53:10","commitOrder":3,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            segments == that.segments &&\n            Objects.equals(grace, that.grace);\n    }\n","date":"2018-08-24 08:53:10","endLine":233,"groupId":"11861","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5e/742e1a25e0de8b0ef19be3b0d7ef3770eb6fbc.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2018-08-16 05:30:24","commitOrder":3,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            Objects.equals(grace, that.grace);\n    }\n","date":"2018-08-16 05:30:24","endLine":181,"groupId":"11861","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c4/dd91d3ed506adc024883136478e1cc41bc8ec7.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            Objects.equals(grace, that.grace);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"}],"commitId":"1dd85a328f437643a5c135f242c644f47c3767e4","commitMessage":"@@@MINOR: restructure Windows to favor immutable implementation (#5536)\n\nUpdate to KIP-328.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <guozhang@confluent.io>.  Ted Yu <yuzhihong@gmail.com>.  Kamal Chandraprakash <kamal.chandraprakash@gmail.com>","date":"2018-08-24 08:53:10","modifiedFileCount":"11","status":"M","submitter":"John Roesler"},{"authorTime":"2018-12-11 17:54:41","codes":[{"authorDate":"2018-12-11 17:54:41","commitOrder":4,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            segments == that.segments &&\n            graceMs == that.graceMs;\n    }\n","date":"2018-12-11 17:54:41","endLine":297,"groupId":"11861","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/21/9489f9bc4e4e3d31c00ea6fcf4b4ec5bd1c34c.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            segments == that.segments &&\n            Objects.equals(grace, that.grace);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2018-12-11 17:54:41","commitOrder":4,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            graceMs == that.graceMs;\n    }\n","date":"2018-12-11 17:54:41","endLine":208,"groupId":"11861","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/77fa535de9cee4245efdac48efe355a79372f8.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            Objects.equals(grace, that.grace);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"046b0087bd76637bbfd813ccef31693fa358ff2d","commitMessage":"@@@MINOR: improve Streams checkstyle and code cleanup (#5954)\n\nReviewers: Guozhang Wang <guozhang@confluent.io>.  Nikolay Izhikov <nIzhikov@gmail.com>.  Ismael Juma <ismael@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2018-12-11 17:54:41","modifiedFileCount":"74","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2021-03-29 03:33:40","codes":[{"authorDate":"2021-03-29 03:33:40","commitOrder":5,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs &&\n            graceMs == that.graceMs;\n    }\n","date":"2021-03-29 03:33:40","endLine":188,"groupId":"102946","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a5/0dc6a90ceeac695cfe91cd472cbfa4fd86999d.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final JoinWindows that = (JoinWindows) o;\n        return beforeMs == that.beforeMs &&\n            afterMs == that.afterMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            segments == that.segments &&\n            graceMs == that.graceMs;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-03-29 03:33:40","commitOrder":5,"curCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            graceMs == that.graceMs;\n    }\n","date":"2021-03-29 03:33:40","endLine":146,"groupId":"102946","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f4/1dd67c16884209870ab7a9e18de33e7bcc2579.src","preCode":"    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        final SessionWindows that = (SessionWindows) o;\n        return gapMs == that.gapMs &&\n            maintainDurationMs == that.maintainDurationMs &&\n            graceMs == that.graceMs;\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindows.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"d5fd491bf7e92e4b07a0a371dfa766161ac301d2","commitMessage":"@@@KAFKA-7106: remove deprecated Windows APIs (#10378)\n\n1. Remove all deprecated APIs in KIP-328.\n2. Remove deprecated APIs in Windows in KIP-358.\n\nReviewers: John Roesler <vvcephei@apache.org>","date":"2021-03-29 03:33:40","modifiedFileCount":"16","status":"M","submitter":"Guozhang Wang"}]
