[{"authorTime":"2019-05-22 13:51:56","codes":[{"authorDate":"2019-05-22 13:51:56","commitOrder":1,"curCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(newRequest.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","date":"2019-05-22 13:51:56","endLine":121,"groupId":"13107","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHeartbeatVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/7dbc4b9dbbbc981634d4daa779dcaed64f5e7b.src","preCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(newRequest.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2019-05-22 13:51:56","commitOrder":1,"curCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(request.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","date":"2019-05-22 13:51:56","endLine":147,"groupId":"13104","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSyncGroupDefaultGroupInstanceId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/7dbc4b9dbbbc981634d4daa779dcaed64f5e7b.src","preCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(request.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"4f110905975188d0855dc0c7b168724679aae97d","commitMessage":"@@@HOTFIX: Fix recent protocol breakage from KIP-345 and KIP-392 (#6780)\n\nKIP-345 and KIP-392 introduced a couple breaking changes for old versions of bumped protocols. This patch fixes them.\n\nReviewers: Colin Patrick McCabe <cmccabe@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Boyang Chen <bchen11@outlook.com>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-22 13:51:56","modifiedFileCount":"4","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2019-05-25 12:29:51","codes":[{"authorDate":"2019-05-25 12:29:51","commitOrder":2,"curCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-05-25 12:29:51","endLine":121,"groupId":"13107","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHeartbeatVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7c/9d3351a35ccda5be4eebadfbb7b9ce07c3c323.src","preCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(newRequest.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2019-05-25 12:29:51","commitOrder":2,"curCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, request.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-05-25 12:29:51","endLine":147,"groupId":"13104","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSyncGroupDefaultGroupInstanceId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7c/9d3351a35ccda5be4eebadfbb7b9ce07c3c323.src","preCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion(request.get().setGroupInstanceId(\"instanceId\"), (short) 3);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"a1808962e56eaaa3657298baad3fc09abcc49040","commitMessage":"@@@KAFKA-8422; Client should send OffsetForLeaderEpoch only if broker supports latest version (#6806)\n\nIn the olden days.  OffsetForLeaderEpoch was exclusively an inter-broker protocol and\nrequired Cluster level permission. With KIP-320.  clients can use this API as well and\nso we lowered the required permission to Topic Describe. The only way the client can\nbe sure that the new permissions are in use is to require version 3 of the protocol\nwhich was bumped for 2.3. If the broker does not support this version.  we skip the\nvalidation and revert to the old behavior.\n\nAdditionally.  this patch fixes a problem with the newly added replicaId field when\nparsed from older versions which did not have it. If the field was not present.  then\nwe used the consumer's sentinel value.  but this would limit the range of visible\noffsets by the high watermark. To get around this problem.  this patch adds a\nseparate \"debug\" sentinel similar to APIs like Fetch and ListOffsets.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>","date":"2019-05-25 12:29:51","modifiedFileCount":"15","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-07-27 14:13:37","codes":[{"authorDate":"2019-07-27 14:13:37","commitOrder":3,"curCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(memberId)\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-07-27 14:13:37","endLine":129,"groupId":"103547","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testHeartbeatVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/c650a011c80b4142183e24ede0b3fbe70d5bf2.src","preCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2019-07-27 14:13:37","commitOrder":3,"curCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(memberId)\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, request.get().setGroupInstanceId(instanceId));\n    }\n","date":"2019-07-27 14:13:37","endLine":186,"groupId":"103547","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSyncGroupDefaultGroupInstanceId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/c650a011c80b4142183e24ede0b3fbe70d5bf2.src","preCode":"    public void testSyncGroupDefaultGroupInstanceId() throws Exception {\n        Supplier<SyncGroupRequestData> request = () -> new SyncGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15)\n                .setAssignments(new ArrayList<>());\n        testAllMessageRoundTrips(request.get());\n        testAllMessageRoundTrips(request.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, request.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"74c90f46c34727be9484e9826ff543b451ada775","commitMessage":"@@@KAFKA-8221; Add batch leave group request (#6714)\n\nThis patch is part of KIP-345. We are aiming to support batch leave group request issued from admin client. This diff is the first effort to bump leave group request version.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2019-07-27 14:13:37","modifiedFileCount":"10","status":"M","submitter":"Boyang Chen"}]
