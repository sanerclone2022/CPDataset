[{"authorTime":"2019-04-07 22:43:09","codes":[{"authorDate":"2019-04-07 22:43:09","commitOrder":1,"curCode":"    public void connectors() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                callback.getValue().onCompletion(null, expectedConnectors);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertEquals(expectedConnectors, connectClusterState.connectors());\n    }\n","date":"2019-04-07 22:43:09","endLine":70,"groupId":"9452","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"connectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e4/faea4d90754af48be093962302dc83f94a02ec.src","preCode":"    public void connectors() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                callback.getValue().onCompletion(null, expectedConnectors);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertEquals(expectedConnectors, connectClusterState.connectors());\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2019-04-07 22:43:09","commitOrder":1,"curCode":"    public void connectorsFailure() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                Throwable timeout = new TimeoutException();\n                callback.getValue().onCompletion(timeout, null);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertThrows(ConnectException.class, connectClusterState::connectors);\n    }\n","date":"2019-04-07 22:43:09","endLine":86,"groupId":"9453","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"connectorsFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e4/faea4d90754af48be093962302dc83f94a02ec.src","preCode":"    public void connectorsFailure() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                Throwable timeout = new TimeoutException();\n                callback.getValue().onCompletion(timeout, null);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertThrows(ConnectException.class, connectClusterState::connectors);\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"71e721f1354739b183fa7c58a3483098c6832928","commitMessage":"@@@KAFKA-8058: Fix ConnectClusterStateImpl.connectors() method (#6384)\n\nFixed the ConnectClusterStateImpl.connectors() method and throw an exception on timeout. Added unit test.\n\nAuthor: Chris Egerton <chrise@confluent.io>\n\nReviewers: Magesh Nandakumar <magesh.n.kumar@gmail.com>.  Robert Yokota <rayokota@gmail.com>.  Arjun Satish <wicknicks@users.noreply.github.com>.  Konstantine Karantasis <konstantine@confluent.io>.  Randall Hauch <rhauch@gmail.com>.  Ewen Cheslack-Postava <ewen@confluent.io>\n\nCloses #6384 from C0urante:kafka-8058","date":"2019-04-07 22:43:09","modifiedFileCount":"3","status":"B","submitter":"Chris Egerton"},{"authorTime":"2021-02-05 01:15:49","codes":[{"authorDate":"2021-02-05 01:15:49","commitOrder":2,"curCode":"    public void connectors() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(() -> {\n            callback.getValue().onCompletion(null, expectedConnectors);\n            return null;\n        });\n        EasyMock.replay(herder);\n        assertEquals(expectedConnectors, connectClusterState.connectors());\n    }\n","date":"2021-02-05 01:15:49","endLine":71,"groupId":"104797","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"connectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/eb5a9e972221bba358a8acf791776582e3483c.src","preCode":"    public void connectors() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                callback.getValue().onCompletion(null, expectedConnectors);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertEquals(expectedConnectors, connectClusterState.connectors());\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2021-02-05 01:15:49","commitOrder":2,"curCode":"    public void connectorsFailure() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(() -> {\n            Throwable timeout = new TimeoutException();\n            callback.getValue().onCompletion(timeout, null);\n            return null;\n        });\n        EasyMock.replay(herder);\n        assertThrows(ConnectException.class, connectClusterState::connectors);\n    }\n","date":"2021-02-05 01:15:49","endLine":109,"groupId":"104797","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"connectorsFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/eb5a9e972221bba358a8acf791776582e3483c.src","preCode":"    public void connectorsFailure() {\n        Capture<Callback<Collection<String>>> callback = EasyMock.newCapture();\n        herder.connectors(EasyMock.capture(callback));\n        EasyMock.expectLastCall().andAnswer(new IAnswer<Void>() {\n            @Override\n            public Void answer() {\n                Throwable timeout = new TimeoutException();\n                callback.getValue().onCompletion(timeout, null);\n                return null;\n            }\n        });\n        EasyMock.replay(herder);\n        assertThrows(ConnectException.class, connectClusterState::connectors);\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"c19a35d1b740c85559a7ff4e882fc95b4737808d","commitMessage":"@@@KAFKA-10835: Replace Runnable and Callable overrides with lambdas in Connect (#9867)\n\nReviewers: Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-02-05 01:15:49","modifiedFileCount":"50","status":"M","submitter":"Lev Zemlyanov"}]
