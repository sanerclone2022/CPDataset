[{"authorTime":"2020-08-14 03:40:40","codes":[{"authorDate":"2020-08-14 03:40:40","commitOrder":2,"curCode":"    private void shouldAddLatencyRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addLatencyRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(\n                OPERATION_NAME + LATENCY_SUFFIX + AVG_SUFFIX,\n                OPERATION_NAME + LATENCY_SUFFIX + MAX_SUFFIX,\n                OPERATION_NAME + TOTAL_SUFFIX,\n                OPERATION_NAME + RATE_SUFFIX\n            )\n        );\n    }\n","date":"2020-08-14 03:40:40","endLine":686,"groupId":"7974","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAddLatencyRateTotalSensor","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0e/4c1764d85a9be320cc660139b627dfce2f6ab7.src","preCode":"    private void shouldAddLatencyRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addLatencyRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(\n                OPERATION_NAME + LATENCY_SUFFIX + AVG_SUFFIX,\n                OPERATION_NAME + LATENCY_SUFFIX + MAX_SUFFIX,\n                OPERATION_NAME + TOTAL_SUFFIX,\n                OPERATION_NAME + RATE_SUFFIX\n            )\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":674,"status":"MB"},{"authorDate":"2020-08-14 03:40:40","commitOrder":2,"curCode":"    private void shouldAddRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(OPERATION_NAME + TOTAL_SUFFIX, OPERATION_NAME + RATE_SUFFIX)\n        );\n    }\n","date":"2020-08-14 03:40:40","endLine":705,"groupId":"7974","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAddRateTotalSensor","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0e/4c1764d85a9be320cc660139b627dfce2f6ab7.src","preCode":"    private void shouldAddRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(OPERATION_NAME + TOTAL_SUFFIX, OPERATION_NAME + RATE_SUFFIX)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":698,"status":"B"}],"commitId":"5645d906fa319206a9270c080926a21dfddc852a","commitMessage":"@@@KAFKA-9924: Prepare RocksDB and metrics for RocksDB properties recording (#9098)\n\nRefactor the RocksDB store and the metrics infrastructure in Streams\nin preparation of the recordings of the RocksDB properties specified in KIP-607.\n\nThe refactoring includes:\n* wrapper around BlockedBasedTableConfig to make the cache accessible to the\n  RocksDB metrics recorder\n* RocksDB metrics recorder now takes also the DB instance and the cache in addition\n  to the statistics\n* The value providers for the metrics are added to the RockDB metrics recorder also if\n  the recording level is INFO.\n* The creation of the RocksDB metrics recording trigger is moved to StreamsMetricsImpl\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  John Roesler <vvcephei@apache.org>\n","date":"2020-08-14 03:40:40","modifiedFileCount":"27","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2021-06-01 20:05:08","codes":[{"authorDate":"2021-06-01 20:05:08","commitOrder":3,"curCode":"    public void shouldAddLatencyRateTotalSensor() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addLatencyRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(\n                OPERATION_NAME + LATENCY_SUFFIX + AVG_SUFFIX,\n                OPERATION_NAME + LATENCY_SUFFIX + MAX_SUFFIX,\n                OPERATION_NAME + TOTAL_SUFFIX,\n                OPERATION_NAME + RATE_SUFFIX\n            )\n        );\n    }\n","date":"2021-06-01 20:05:08","endLine":857,"groupId":"102411","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAddLatencyRateTotalSensor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bf/e05a6fc48ce204d401e0b29b50bf7bc44c4235.src","preCode":"    private void shouldAddLatencyRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addLatencyRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(\n                OPERATION_NAME + LATENCY_SUFFIX + AVG_SUFFIX,\n                OPERATION_NAME + LATENCY_SUFFIX + MAX_SUFFIX,\n                OPERATION_NAME + TOTAL_SUFFIX,\n                OPERATION_NAME + RATE_SUFFIX\n            )\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":845,"status":"M"},{"authorDate":"2021-06-01 20:05:08","commitOrder":3,"curCode":"    public void shouldAddRateTotalSensor() {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(OPERATION_NAME + TOTAL_SUFFIX, OPERATION_NAME + RATE_SUFFIX)\n        );\n    }\n","date":"2021-06-01 20:05:08","endLine":867,"groupId":"102411","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAddRateTotalSensor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bf/e05a6fc48ce204d401e0b29b50bf7bc44c4235.src","preCode":"    private void shouldAddRateTotalSensor(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, builtInMetricsVersion, time);\n        shouldAddCustomSensor(\n            streamsMetrics.addRateTotalSensor(SCOPE_NAME, ENTITY_NAME, OPERATION_NAME, RecordingLevel.DEBUG),\n            streamsMetrics,\n            Arrays.asList(OPERATION_NAME + TOTAL_SUFFIX, OPERATION_NAME + RATE_SUFFIX)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":860,"status":"M"}],"commitId":"cfe642edee80977173279f4a41e23aa822b9d19f","commitMessage":"@@@KAFKA-12519: Remove built-in Streams metrics for versions 0.10.0-2.4 (#10765)\n\nAs specified in KIP-743.  this PR removes the built-in metrics\nin Streams that are superseded by the refactoring proposed in KIP-444.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Luke Chen <showuon@gmail.com>","date":"2021-06-01 20:05:08","modifiedFileCount":"73","status":"M","submitter":"Bruno Cadonna"}]
