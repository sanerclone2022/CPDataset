[{"authorTime":"2017-09-07 16:39:46","codes":[{"authorDate":"2017-09-07 16:39:46","commitOrder":1,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","date":"2017-09-07 16:39:46","endLine":113,"groupId":"18954","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/25/b8178afd064ac6a8b8a5074046b937b661d6b4.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2017-09-07 16:39:46","commitOrder":1,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredKeyValueBytesStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","date":"2017-09-07 16:39:46","endLine":114,"groupId":"18954","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2d/378d89f4179c7d5aa85d9125f1efc27d956b6d.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredKeyValueBytesStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"9cbb9f0939c88868bf33ae340c5fa756ee2965e8","commitMessage":"@@@KAFKA-5650; add StateStoreBuilder interface and implementations\n\nPart of KIP-182\n\n- Add `StateStoreBuilder` interface and `WindowStateStoreBuilder`.  `KeyValueStateStoreBuilder`.  and `SessionStateStoreBuilder` implementations\n- Add `StoreSupplier`.  `WindowBytesStoreSupplier`.  `KeyValueBytesStoreSupplier`.  `SessionBytesStoreSupplier` interfaces and implementations\n- Add new methods to `Stores` to create the newly added `StoreSupplier` and `StateStoreBuilder` implementations\n- Update `Topology` and `InternalTopology` to use the interfaces\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3767 from dguy/kafka-5650\n","date":"2017-09-07 16:39:46","modifiedFileCount":"13","status":"B","submitter":"Damian Guy"},{"authorTime":"2018-07-19 00:30:52","codes":[{"authorDate":"2017-09-07 16:39:46","commitOrder":2,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","date":"2017-09-07 16:39:46","endLine":113,"groupId":"18954","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/25/b8178afd064ac6a8b8a5074046b937b661d6b4.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2018-07-19 00:30:52","commitOrder":2,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredKeyValueStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.equalTo(inner));\n    }\n","date":"2018-07-19 00:30:52","endLine":114,"groupId":"18954","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/84/8bba6fd19948d876c74a4413773e3ee80bcde0.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredKeyValueBytesStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"06d96628f0e098d93aecc650534c9e9965127d92","commitMessage":"@@@MINOR: remove unused MeteredKeyValueStore (#5380)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>\n","date":"2018-07-19 00:30:52","modifiedFileCount":"7","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-02-15 00:38:01","codes":[{"authorDate":"2019-02-15 00:38:01","commitOrder":3,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","date":"2019-02-15 00:38:01","endLine":113,"groupId":"18954","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/02/2f6ddd85f5c782613f88d3c115cdcaeb3d620f.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2019-02-15 00:38:01","commitOrder":3,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredKeyValueStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.equalTo(inner));\n    }\n","date":"2019-02-15 00:38:01","endLine":114,"groupId":"18954","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/86/42cfac90005e17aa1e9718b00cc86753c6fe77.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrappedStore();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrappedStore();\n        assertThat(store, instanceOf(MeteredKeyValueStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrappedStore(), CoreMatchers.equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"01f0f0af28ea05921868171c88448e299766e773","commitMessage":"@@@KAFKA-7916: Unify store wrapping code for clarity (#6255)\n\nRefactor internal store wrapping for improved maintainability.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2019-02-15 00:38:01","modifiedFileCount":"27","status":"M","submitter":"John Roesler"},{"authorTime":"2019-02-15 00:38:01","codes":[{"authorDate":"2019-05-01 15:28:10","commitOrder":4,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.equalTo(inner));\n    }\n","date":"2019-05-01 15:28:10","endLine":114,"groupId":"101089","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bf/29d4ae52d4c5150fbda19977871be352b2f6e8.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final WindowStore<String, String> store = builder\n                .withLoggingEnabled(Collections.<String, String>emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredWindowStore.class));\n        assertThat(caching, instanceOf(CachingWindowStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingWindowBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.<StateStore>equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2019-02-15 00:38:01","commitOrder":4,"curCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredKeyValueStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.equalTo(inner));\n    }\n","date":"2019-02-15 00:38:01","endLine":114,"groupId":"101089","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldHaveCachingAndChangeLoggingWhenBothEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/86/42cfac90005e17aa1e9718b00cc86753c6fe77.src","preCode":"    public void shouldHaveCachingAndChangeLoggingWhenBothEnabled() {\n        final KeyValueStore<String, String> store = builder\n                .withLoggingEnabled(Collections.emptyMap())\n                .withCachingEnabled()\n                .build();\n        final WrappedStateStore caching = (WrappedStateStore) ((WrappedStateStore) store).wrapped();\n        final WrappedStateStore changeLogging = (WrappedStateStore) caching.wrapped();\n        assertThat(store, instanceOf(MeteredKeyValueStore.class));\n        assertThat(caching, instanceOf(CachingKeyValueStore.class));\n        assertThat(changeLogging, instanceOf(ChangeLoggingKeyValueBytesStore.class));\n        assertThat(changeLogging.wrapped(), CoreMatchers.equalTo(inner));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreBuilderTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"}],"commitId":"c5665e6945c8e63ddfb1056c4893f16cae1f6f99","commitMessage":"@@@KAFAK-3522: add API to create timestamped stores (#6601)\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  Bruno Cadonna <bruno@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2019-05-01 15:28:10","modifiedFileCount":"9","status":"M","submitter":"Matthias J. Sax"}]
