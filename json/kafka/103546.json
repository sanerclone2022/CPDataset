[{"authorTime":"2019-05-29 04:55:38","codes":[{"authorDate":"2019-05-25 12:29:51","commitOrder":3,"curCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-05-25 12:29:51","endLine":121,"groupId":"13107","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHeartbeatVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7c/9d3351a35ccda5be4eebadfbb7b9ce07c3c323.src","preCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"NB"},{"authorDate":"2019-05-29 04:55:38","commitOrder":3,"curCode":"    public void testJoinGroupRequestVersions() throws Exception {\n        Supplier<JoinGroupRequestData> newRequest = () -> new JoinGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setProtocolType(\"consumer\")\n                .setProtocols(new JoinGroupRequestData.JoinGroupRequestProtocolCollection())\n                .setSessionTimeoutMs(10000);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTripsFromVersion((short) 1, newRequest.get().setRebalanceTimeoutMs(20000));\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 5, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-05-29 04:55:38","endLine":137,"groupId":"3745","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinGroupRequestVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/52/13ec2a8f736fa5922be1fe3e7ddf1d5c5995f9.src","preCode":"    public void testJoinGroupRequestVersions() throws Exception {\n        Supplier<JoinGroupRequestData> newRequest = () -> new JoinGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setProtocolType(\"consumer\")\n                .setProtocols(new JoinGroupRequestData.JoinGroupRequestProtocolCollection())\n                .setSessionTimeoutMs(10000);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTripsFromVersion((short) 1, newRequest.get().setRebalanceTimeoutMs(20000));\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 5, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"B"}],"commitId":"901eb3688337a0e173ef7fcff9b3384926520c08","commitMessage":"@@@MINOR: Set default `group.instance.id` in JoinGroupResponse to null (#6831)\n\nAs we are planning to add on more supporting features for rebalancing under static membership.  we need to make sure the behavior for `group.instance.id` is consistent throughout the whole stack. This patch ensures that the default value is null in the JoinGroup response.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2019-05-29 04:55:38","modifiedFileCount":"1","status":"M","submitter":"Boyang Chen"},{"authorTime":"2019-07-27 14:13:37","codes":[{"authorDate":"2019-07-27 14:13:37","commitOrder":4,"curCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(memberId)\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-07-27 14:13:37","endLine":129,"groupId":"103546","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHeartbeatVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/c650a011c80b4142183e24ede0b3fbe70d5bf2.src","preCode":"    public void testHeartbeatVersions() throws Exception {\n        Supplier<HeartbeatRequestData> newRequest = () -> new HeartbeatRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setGenerationId(15);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 3, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2019-07-27 14:13:37","commitOrder":4,"curCode":"    public void testJoinGroupRequestVersions() throws Exception {\n        Supplier<JoinGroupRequestData> newRequest = () -> new JoinGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(memberId)\n                .setProtocolType(\"consumer\")\n                .setProtocols(new JoinGroupRequestData.JoinGroupRequestProtocolCollection())\n                .setSessionTimeoutMs(10000);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTripsFromVersion((short) 1, newRequest.get().setRebalanceTimeoutMs(20000));\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 5, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","date":"2019-07-27 14:13:37","endLine":143,"groupId":"103546","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinGroupRequestVersions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/58/c650a011c80b4142183e24ede0b3fbe70d5bf2.src","preCode":"    public void testJoinGroupRequestVersions() throws Exception {\n        Supplier<JoinGroupRequestData> newRequest = () -> new JoinGroupRequestData()\n                .setGroupId(\"groupId\")\n                .setMemberId(\"memberId\")\n                .setProtocolType(\"consumer\")\n                .setProtocols(new JoinGroupRequestData.JoinGroupRequestProtocolCollection())\n                .setSessionTimeoutMs(10000);\n        testAllMessageRoundTrips(newRequest.get());\n        testAllMessageRoundTripsFromVersion((short) 1, newRequest.get().setRebalanceTimeoutMs(20000));\n        testAllMessageRoundTrips(newRequest.get().setGroupInstanceId(null));\n        testAllMessageRoundTripsFromVersion((short) 5, newRequest.get().setGroupInstanceId(\"instanceId\"));\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/message/MessageTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"74c90f46c34727be9484e9826ff543b451ada775","commitMessage":"@@@KAFKA-8221; Add batch leave group request (#6714)\n\nThis patch is part of KIP-345. We are aiming to support batch leave group request issued from admin client. This diff is the first effort to bump leave group request version.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2019-07-27 14:13:37","modifiedFileCount":"10","status":"M","submitter":"Boyang Chen"}]
