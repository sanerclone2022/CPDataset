[{"authorTime":"2017-05-20 02:26:59","codes":[{"authorDate":"2017-05-20 02:26:59","commitOrder":1,"curCode":"    public void testSchemalessIdentity() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-05-20 02:26:59","endLine":114,"groupId":"12656","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSchemalessIdentity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1b/93874f8bbfb5dafec8da766741d418520006b7.src","preCode":"    public void testSchemalessIdentity() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"},{"authorDate":"2017-05-20 02:26:59","commitOrder":1,"curCode":"    public void testSchemalessUnixToTimestamp() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-05-20 02:26:59","endLine":192,"groupId":"12656","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemalessUnixToTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1b/93874f8bbfb5dafec8da766741d418520006b7.src","preCode":"    public void testSchemalessUnixToTimestamp() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"}],"commitId":"61bab2d875ab5e03d0df4f62217346549a4c64c3","commitMessage":"@@@KAFKA-4714; TimestampConverter transformation (KIP-66)\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: Konstantine Karantasis <konstantine@confluent.io>.  Jason Gustafson <jason@confluent.io>\n\nCloses #3065 from ewencp/kafka-3209-timestamp-converter\n","date":"2017-05-20 02:26:59","modifiedFileCount":"2","status":"B","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2017-06-15 06:24:32","codes":[{"authorDate":"2017-06-15 06:24:32","commitOrder":2,"curCode":"    public void testSchemalessIdentity() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-06-15 06:24:32","endLine":114,"groupId":"12656","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSchemalessIdentity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/12/beef866fd2543be96ba6e6a813f36fc3ac15d7.src","preCode":"    public void testSchemalessIdentity() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2017-06-15 06:24:32","commitOrder":2,"curCode":"    public void testSchemalessUnixToTimestamp() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-06-15 06:24:32","endLine":192,"groupId":"12656","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemalessUnixToTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/12/beef866fd2543be96ba6e6a813f36fc3ac15d7.src","preCode":"    public void testSchemalessUnixToTimestamp() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"b760615f3d58ed1fd4e17bb3ec647b26135cf458","commitMessage":"@@@KAFKA-5448: Change TimestampConverter configuration name to avoid conflicting with reserved 'type' configuration used by all Transformations\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: David Tucker.  Gwen Shapira\n\nCloses #3342 from ewencp/kafka-5448-change-timestamp-converter-config-name\n","date":"2017-06-15 06:24:32","modifiedFileCount":"2","status":"M","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2017-07-20 01:51:28","codes":[{"authorDate":"2017-07-20 01:51:28","commitOrder":3,"curCode":"    public void testSchemalessIdentity() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-07-20 01:51:28","endLine":118,"groupId":"9194","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSchemalessIdentity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/47/5066f74e28152dfc87699f74b9eb8bfd763ed9.src","preCode":"    public void testSchemalessIdentity() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2017-07-20 01:51:28","commitOrder":3,"curCode":"    public void testSchemalessUnixToTimestamp() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2017-07-20 01:51:28","endLine":189,"groupId":"12656","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemalessUnixToTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/47/5066f74e28152dfc87699f74b9eb8bfd763ed9.src","preCode":"    public void testSchemalessUnixToTimestamp() {\n        TimestampConverter<SourceRecord> xform = new TimestampConverter.Value<>();\n        xform.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xform.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"f87d58b796977fdaefb089d17cb30b2071cd4485","commitMessage":"@@@MINOR: Code Cleanup\n\nClean up includes:\n\n- Switching try-catch-finally blocks to try-with-resources when possible\n- Removing some seemingly unnecessary `SuppressWarnings` annotations\n- Resolving some Java warnings\n- Closing unclosed Closable objects\n- Removing unused code\n\nAuthor: Vahid Hashemian <vahidhashemian@us.ibm.com>\n\nReviewers: Balint Molnar <balintmolnar91@gmail.com>.  Guozhang Wang <wangguoz@gmail.com>.  Matthias J. Sax <matthias@confluent.io>.  Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>\n\nCloses #3222 from vahidhashemian/minor/code_cleanup_1706\n","date":"2017-07-20 01:51:28","modifiedFileCount":"62","status":"M","submitter":"Vahid Hashemian"},{"authorTime":"2019-07-13 01:12:20","codes":[{"authorDate":"2019-07-13 01:12:20","commitOrder":4,"curCode":"    public void testSchemalessIdentity() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(createRecordSchemaless(DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2019-07-13 01:12:20","endLine":118,"groupId":"105385","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSchemalessIdentity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3a/1920ed528ce05bc81e5b7d50814e07ebc88edb.src","preCode":"    public void testSchemalessIdentity() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME.getTime()));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-07-13 01:12:20","commitOrder":4,"curCode":"    public void testSchemalessUnixToTimestamp() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(createRecordSchemaless(DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","date":"2019-07-13 01:12:20","endLine":189,"groupId":"105385","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemalessUnixToTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3a/1920ed528ce05bc81e5b7d50814e07ebc88edb.src","preCode":"    public void testSchemalessUnixToTimestamp() {\n        xformValue.configure(Collections.singletonMap(TimestampConverter.TARGET_TYPE_CONFIG, \"Timestamp\"));\n        SourceRecord transformed = xformValue.apply(new SourceRecord(null, null, \"topic\", 0, null, DATE_PLUS_TIME_UNIX));\n\n        assertNull(transformed.valueSchema());\n        assertEquals(DATE_PLUS_TIME.getTime(), transformed.value());\n    }\n","realPath":"connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"fa042bc491cf8b1e8ae0e5b9f7996564ba886d3d","commitMessage":"@@@KAFKA-7157: Fix handling of nulls in TimestampConverter (#7070)\n\nFix handling of nulls in TimestampConverter.\n\nAuthors: Valeria Vasylieva <valeria.vasylieva@gmail.com>.  Robert Yokota <rayokota@gmail.com>\nReviewers: Arjun Satish <arjun@confluent.io>.  Randall Hauch <rhauch@gmail.com>\n\n\n","date":"2019-07-13 01:12:20","modifiedFileCount":"2","status":"M","submitter":"Robert Yokota"}]
