[{"authorTime":"2017-09-21 16:10:17","codes":[{"authorDate":"2017-09-21 16:10:17","commitOrder":1,"curCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER,\n                      Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\")\n                              .withKeySerde(Serdes.String())\n                              .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n    }\n","date":"2017-09-21 16:10:17","endLine":161,"groupId":"4188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/04/2f0f1e492c4aaa0e6beecb0bee198a42832b3e.src","preCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER,\n                      Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\")\n                              .withKeySerde(Serdes.String())\n                              .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2017-09-21 16:10:17","commitOrder":1,"curCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\")\n                                 .withKeySerde(Serdes.String())\n                                 .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n    }\n","date":"2017-09-21 16:10:17","endLine":180,"groupId":"4188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/04/2f0f1e492c4aaa0e6beecb0bee198a42832b3e.src","preCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\")\n                                 .withKeySerde(Serdes.String())\n                                 .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"}],"commitId":"a2da064cbf01558d0af64adc9d6fc9444cd744ec","commitMessage":"@@@KAFKA-5922: Add SessionWindowedKStream\n\nAdd `SessionWindowedKStream` and implementation. Deprecate existing `SessionWindow` `aggregate` methods on `KGroupedStream`\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3902 from dguy/kafka-5922\n","date":"2017-09-21 16:10:17","modifiedFileCount":"4","status":"B","submitter":"Damian Guy"},{"authorTime":"2018-05-08 08:34:34","codes":[{"authorDate":"2018-05-08 08:34:34","commitOrder":2,"curCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\"));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n    }\n","date":"2018-05-08 08:34:34","endLine":157,"groupId":"4188","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6a/84c0368a5cbba4e584b377bd1b79817d9af6f1.src","preCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER,\n                      Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\")\n                              .withKeySerde(Serdes.String())\n                              .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2018-05-08 08:34:34","commitOrder":2,"curCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n    }\n","date":"2018-05-08 08:34:34","endLine":174,"groupId":"4188","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6a/84c0368a5cbba4e584b377bd1b79817d9af6f1.src","preCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\")\n                                 .withKeySerde(Serdes.String())\n                                 .withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"2b5a59406622affa1e333e073546f075f59b4ac9","commitMessage":"@@@KAFKA-6813: Remove deprecated APIs in KIP-182.  Part I (#4919)\n\nI'm breaking KAFKA-6813 into a couple of \"smaller\" PRs and this is the first one. It focused on:\n\nRemove deprecated APIs in KStream.  KTable.  KGroupedStream.  KGroupedTable.  SessionWindowedKStream.  TimeWindowedKStream.\n\nAlso found a couple of overlooked bugs while working on them:\n\n2.a) In KTable.filter / mapValues without the additional parameter indicating the materialized stores.  originally we will not materialize the store. After KIP-182 we mistakenly diverge the semantics: for KTable.mapValues it is still the case.  for KTable.filter we will always materialize.\n\n2.b) In XXStream/Table.reduce/count.  we used to try to reuse the serdes since their types are pre-known (for reduce it is the same types for both key / value.  for count it is the same types for key.  and Long for value). This was somehow lost in the past refactoring.\n\n2.c) We are enforcing to cast a Serde<V> to Serde<VR> for XXStream / Table.aggregate.  for which the returned value type is NOT known.  such the enforced casting should not be applied and we should require users to provide us the value serde if they believe the default ones are not applicable.\n\n2.d) Whenever we are creating a new MaterializedInternal we are effectively incrementing the suffix index for the store / processor-node names. However in some places this MaterializedInternal is only used for validation.  so the resulted processor-node / store suffix is not monotonic.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2018-05-08 08:34:34","modifiedFileCount":"33","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-05-22 23:48:54","codes":[{"authorDate":"2018-05-22 23:48:54","commitOrder":3,"curCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\"));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n        }\n    }\n","date":"2018-05-22 23:48:54","endLine":166,"groupId":"4188","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/82/5edb3eb3786d79726413e3ca6d62ff3344100d.src","preCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\"));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"reduced\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2018-05-22 23:48:54","commitOrder":3,"curCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n        }\n    }\n","date":"2018-05-22 23:48:54","endLine":184,"groupId":"4188","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/82/5edb3eb3786d79726413e3ca6d62ff3344100d.src","preCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        processData();\n        final SessionStore<String, String> sessionStore = (SessionStore<String, String>) driver.allStateStores().get(\"aggregated\");\n        final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n        assertThat(data, equalTo(Arrays.asList(\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"6281fbcb6ad3c1f7172af0ba590fa1e2605093de","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [part 3] (#5052)\n\n* KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [part 3]\n\n* Refactor:\n  - KStreamWindowReduceTest\n  - KTableMapKeysTest\n  - SessionWindowedKStreamImplTest\n  - TimeWindowedKStreamImplTest\n\n* Remove unnecessary @SuppressWarnings(unchecked)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-05-22 23:48:54","modifiedFileCount":"4","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2019-03-20 08:27:32","codes":[{"authorDate":"2019-03-20 08:27:32","commitOrder":4,"curCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.as(\"reduced\"));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n        }\n    }\n","date":"2019-03-20 08:27:32","endLine":149,"groupId":"4188","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b2/c4ec88bf29bc95c823aaa352c7ae610acda0f2.src","preCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"reduced\"));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2019-03-20 08:27:32","commitOrder":4,"curCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            sessionMerger,\n            Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n        }\n    }\n","date":"2019-03-20 08:27:32","endLine":170,"groupId":"4188","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b2/c4ec88bf29bc95c823aaa352c7ae610acda0f2.src","preCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(MockInitializer.STRING_INIT,\n                         MockAggregator.TOSTRING_ADDER,\n                         sessionMerger,\n                         Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props, 0L)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n            assertThat(data, equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"b5ce093a24d0fe212b5d1374330fc720b4913bee","commitMessage":"@@@MINOR: capture result timestamps in Kafka Streams DSL tests (#6447)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>\n","date":"2019-03-20 08:27:32","modifiedFileCount":"29","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-05-13 06:31:44","codes":[{"authorDate":"2019-05-13 06:31:44","commitOrder":5,"curCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.as(\"reduced\"));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(599, 600)), \"1+2\"))));\n        }\n    }\n","date":"2019-05-13 06:31:44","endLine":194,"groupId":"101528","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldMaterializeReduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d1/e5448fad06900d97c4f1edd44e20d6cdf79979.src","preCode":"    public void shouldMaterializeReduced() {\n        stream.reduce(MockReducer.STRING_ADDER, Materialized.as(\"reduced\"));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"reduced\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2019-05-13 06:31:44","commitOrder":5,"curCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            sessionMerger,\n            Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(599, 600)), \"0+0+1+2\"))));\n        }\n    }\n","date":"2019-05-13 06:31:44","endLine":215,"groupId":"101528","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldMaterializeAggregated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d1/e5448fad06900d97c4f1edd44e20d6cdf79979.src","preCode":"    public void shouldMaterializeAggregated() {\n        stream.aggregate(\n            MockInitializer.STRING_INIT,\n            MockAggregator.TOSTRING_ADDER,\n            sessionMerger,\n            Materialized.<String, String, SessionStore<Bytes, byte[]>>as(\"aggregated\").withValueSerde(Serdes.String()));\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            processData(driver);\n            final SessionStore<String, String> sessionStore = driver.getSessionStore(\"aggregated\");\n            final List<KeyValue<Windowed<String>, String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\", \"2\"));\n            assertThat(\n                data,\n                equalTo(Arrays.asList(\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(10, 15)), \"0+0+1+2\"),\n                    KeyValue.pair(new Windowed<>(\"1\", new SessionWindow(600, 600)), \"0+3\"),\n                    KeyValue.pair(new Windowed<>(\"2\", new SessionWindow(600, 600)), \"0+1\"))));\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"8a237f599afa539868a138b5a2534dbf884cb4ec","commitMessage":"@@@KAFKA-6455: Session Aggregation should use window-end-time as record timestamp (#6645)\n\nFor session-windows.  the result record should have the window-end timestamp as record timestamp.\n\nRebased to resolve merge conflicts. Removed unused classes TupleForwarder and ForwardingCacheFlushListener (replace with TimestampedTupleForwarder.  SessionTupleForwarder.  TimestampedCacheFlushListerner.  and SessionCacheFlushListener)\n\nReviewers: John Roesler <john@confluent.io>.  Bruno Cadonna <bruno@confluent.io>.  Boyang Chen <boyang@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-05-13 06:31:44","modifiedFileCount":"14","status":"M","submitter":"Matthias J. Sax"}]
