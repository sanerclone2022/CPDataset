[{"authorTime":"2017-05-04 07:15:54","codes":[{"authorDate":"2017-05-04 07:15:54","commitOrder":4,"curCode":"    public void shouldReduce() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","date":"2017-05-04 07:15:54","endLine":167,"groupId":"20800","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/49b229bc3dfcc3196ba791c7f39f0bf1293978.src","preCode":"    public void shouldReduce() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"MB"},{"authorDate":"2017-05-04 07:15:54","commitOrder":4,"curCode":"    public void shouldReduceWithInternalStoreName() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","date":"2017-05-04 07:15:54","endLine":186,"groupId":"20800","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/49b229bc3dfcc3196ba791c7f39f0bf1293978.src","preCode":"    public void shouldReduceWithInternalStoreName() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"}],"commitId":"ec9e4eafa406fec897713310bafdedf6bbb3c0c5","commitMessage":"@@@KAFKA-5045: Clarify on KTable APIs for queryable stores\n\nThis is the implementation of KIP-114: KTable state stores and improved semantics:\n- Allow for decoupling between querying and materialisation\n- consistent APIs.  overloads with queryableName and without\n- depreciated several KTable calls\n- new unit and integration tests\n\nIn this implementation.  state stores are materialized if the user desires them to be queryable. In subsequent versions we can offer a second option.  to have a view-like state store. The tradeoff then would be between storage space (materialize) and re-computation (view). That tradeoff can be exploited by later query optimizers.\n\nAuthor: Eno Thereska <eno.thereska@gmail.com>\n\nReviewers: Damian Guy.  Matthias J. Sax.  Guozhang Wang\n\nCloses #2832 from enothereska/KAFKA-5045-ktable\n","date":"2017-05-04 07:15:54","modifiedFileCount":"26","status":"M","submitter":"Eno Thereska"},{"authorTime":"2017-09-11 16:42:10","codes":[{"authorDate":"2017-09-11 16:42:10","commitOrder":5,"curCode":"    public void shouldReduce() {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","date":"2017-09-11 16:42:10","endLine":160,"groupId":"20800","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/10/5dd2e2d743a262758e666ed93f1231b14d1e24.src","preCode":"    public void shouldReduce() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2017-09-11 16:42:10","commitOrder":5,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","date":"2017-09-11 16:42:10","endLine":179,"groupId":"20800","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/10/5dd2e2d743a262758e666ed93f1231b14d1e24.src","preCode":"    public void shouldReduceWithInternalStoreName() throws Exception {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"c5464edbb7a6821e0a91a3712b1fe2fd92a22d68","commitMessage":"@@@KAFKA-5531; throw concrete exceptions in streams tests\n\n1. Now instead of just generic `Exception` methods declare more concrete\nexceptions throwing or don't declare any throwing at all.  if not needed.\n2. `SimpleBenchmark.run()` throws `RuntimeException`\n3. `SimpleBenchmark.produce()` throws `IllegalArgumentException`\n4. Expect `ProcessorStateException` in\n`StandbyTaskTest.testUpdateNonPersistentStore()`\n\n/cc enothereska\n\nAuthor: Evgeny Veretennikov <evg.veretennikov@gmail.com>\n\nReviewers: Damian Guy <damian.guy@gmail.com>\n\nCloses #3485 from evis/5531-throw-concrete-exceptions\n","date":"2017-09-11 16:42:10","modifiedFileCount":"106","status":"M","submitter":"Evgeny Veretennikov"},{"authorTime":"2017-09-13 00:20:43","codes":[{"authorDate":"2017-09-13 00:20:43","commitOrder":6,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","date":"2017-09-13 00:20:43","endLine":166,"groupId":"20800","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ff/9726e6d3d75d3c51e3a1ed3b0ab085f121baa1.src","preCode":"    public void shouldReduce() {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2017-09-13 00:20:43","commitOrder":6,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","date":"2017-09-13 00:20:43","endLine":184,"groupId":"20800","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ff/9726e6d3d75d3c51e3a1ed3b0ab085f121baa1.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final String topic = \"input\";\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"8bd2a68b5020f0bf8f79cbe59676d649eebf170f","commitMessage":"@@@KAFKA-5655; materialized count.  aggregate.  reduce to KGroupedTable\n\nAdd overloads of `count`.  `aggregate`.  `reduce` using `Materialized` to `KGroupedTable`\ndeprecate other overloads\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3829 from dguy/kafka-5655\n","date":"2017-09-13 00:20:43","modifiedFileCount":"5","status":"M","submitter":"Damian Guy"},{"authorTime":"2017-09-18 22:53:44","codes":[{"authorDate":"2017-09-18 22:53:44","commitOrder":7,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","date":"2017-09-18 22:53:44","endLine":171,"groupId":"4869","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/70/5cf62f9a60369086fad7e90d1a3fcc0fd9b93a.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2017-09-18 22:53:44","commitOrder":7,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","date":"2017-09-18 22:53:44","endLine":193,"groupId":"4869","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/70/5cf62f9a60369086fad7e90d1a3fcc0fd9b93a.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(Serdes.String(), Serdes.Double(), topic, \"store\")\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"f2b74aa1c36bf2882006c14f7cbd56b493f39d26","commitMessage":"@@@KAFKA-5873; add materialized overloads to StreamsBuilder\n\nAdd overloads for `table` and `globalTable` that use `Materialized`\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>\n\nCloses #3837 from dguy/kafka-5873\n","date":"2017-09-18 22:53:44","modifiedFileCount":"36","status":"M","submitter":"Damian Guy"},{"authorTime":"2018-05-08 00:21:20","codes":[{"authorDate":"2018-05-08 00:21:20","commitOrder":8,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2018-05-08 00:21:20","endLine":175,"groupId":"4869","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/05/d339f9ad96a750b28a1cbfa789ce644cd4f199.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        doShouldReduce(reduced, topic);\n        assertEquals(reduced.queryableStoreName(), \"reduced\");\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2018-05-08 00:21:20","commitOrder":8,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2018-05-08 00:21:20","endLine":200,"groupId":"4869","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/05/d339f9ad96a750b28a1cbfa789ce644cd4f199.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        doShouldReduce(reduced, topic);\n        assertNull(reduced.queryableStoreName());\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"6f641fef6a88036ab4dacb59ab21bc8b21ef9bcf","commitMessage":"@@@KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [cleanup] (#4939)\n\n* Add method to create test properties to StreamsTestUtils\n* Make TopologyTestDriver protected constructor package-private\n* Add comment suggesting the use of TopologyTestDriver to KStreamTestDriver\n* Cleanup:\n    - GlobalKTableJoinsTest\n    - KGroupedStreamImplTest\n    - KGroupedTableImplTest\n    - KStreamBranchTest\n    - KStreamFilterTest\n    - KStreamFlatMapTest\n    - KStreamFlatMapValuesTest\n    - KStreamForeachTest\n    - KStreamGlobalKTableJoinTest\n    - KStreamGlobalKTableLeftJoinTest\n    - KStreamImplTest\n    - KStreamKStreamJoinTest\n    - KStreamKStreamLeftJoinTest\n    - KStreamGlobalKTableLeftJoinTest\n    - KStreamKTableJoinTest\n    - KStreamKTableLeftJoinTest\n    - KStreamMapTest\n    - KStreamMapValuesTest\n    - KStreamPeekTest\n    - StreamsBuilderTest\n    - KStreamSelectKeyTest\n    - KStreamTransformTest\n    - KStreamTransformValuesTest\n    - KStreamWindowAggregateTest\n    - KTableForeachTest\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-05-08 00:21:20","modifiedFileCount":"27","status":"M","submitter":"Filipe Agapito"},{"authorTime":"2018-05-08 00:21:20","codes":[{"authorDate":"2018-05-08 08:34:34","commitOrder":9,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, Materialized.<String, Integer, KeyValueStore<Bytes, byte[]>>as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2018-05-08 08:34:34","endLine":153,"groupId":"4869","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/24/7f631bcb56eaad65340d45818a443bb5e4f579.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, \"reduced\");\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2018-05-08 00:21:20","commitOrder":9,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2018-05-08 00:21:20","endLine":200,"groupId":"4869","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/05/d339f9ad96a750b28a1cbfa789ce644cd4f199.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"}],"commitId":"2b5a59406622affa1e333e073546f075f59b4ac9","commitMessage":"@@@KAFKA-6813: Remove deprecated APIs in KIP-182.  Part I (#4919)\n\nI'm breaking KAFKA-6813 into a couple of \"smaller\" PRs and this is the first one. It focused on:\n\nRemove deprecated APIs in KStream.  KTable.  KGroupedStream.  KGroupedTable.  SessionWindowedKStream.  TimeWindowedKStream.\n\nAlso found a couple of overlooked bugs while working on them:\n\n2.a) In KTable.filter / mapValues without the additional parameter indicating the materialized stores.  originally we will not materialize the store. After KIP-182 we mistakenly diverge the semantics: for KTable.mapValues it is still the case.  for KTable.filter we will always materialize.\n\n2.b) In XXStream/Table.reduce/count.  we used to try to reuse the serdes since their types are pre-known (for reduce it is the same types for both key / value.  for count it is the same types for key.  and Long for value). This was somehow lost in the past refactoring.\n\n2.c) We are enforcing to cast a Serde<V> to Serde<VR> for XXStream / Table.aggregate.  for which the returned value type is NOT known.  such the enforced casting should not be applied and we should require users to provide us the value serde if they believe the default ones are not applicable.\n\n2.d) Whenever we are creating a new MaterializedInternal we are effectively incrementing the suffix index for the store / processor-node names. However in some places this MaterializedInternal is only used for validation.  so the resulted processor-node / store suffix is not monotonic.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2018-05-08 08:34:34","modifiedFileCount":"33","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2018-08-04 04:19:46","codes":[{"authorDate":"2018-08-04 04:19:46","commitOrder":10,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(final String key, final Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, Materialized.<String, Integer, KeyValueStore<Bytes, byte[]>>as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2018-08-04 04:19:46","endLine":153,"groupId":"4869","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/31/863f28e89c7d8e3fca83f5302644d199f5db92.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, Materialized.<String, Integer, KeyValueStore<Bytes, byte[]>>as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2018-08-04 04:19:46","commitOrder":10,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(final String key, final Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2018-08-04 04:19:46","endLine":178,"groupId":"4869","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/31/863f28e89c7d8e3fca83f5302644d199f5db92.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(String key, Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"3637b2c374d48e99e0a7be37605d3c79f2661007","commitMessage":"@@@MINOR: Require final variables in Streams (#5452)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2018-08-04 04:19:46","modifiedFileCount":"212","status":"M","submitter":"John Roesler"},{"authorTime":"2019-01-09 05:32:53","codes":[{"authorDate":"2019-01-09 05:32:53","commitOrder":11,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(\n                MockReducer.INTEGER_ADDER,\n                MockReducer.INTEGER_SUBTRACTOR,\n                Materialized.as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2019-01-09 05:32:53","endLine":178,"groupId":"11534","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/09/f93e7dfefaeee9f36b69216a086ecde7ea7e5e.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(final String key, final Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR, Materialized.<String, Integer, KeyValueStore<Bytes, byte[]>>as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2019-01-09 05:32:53","commitOrder":11,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2019-01-09 05:32:53","endLine":200,"groupId":"4869","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/09/f93e7dfefaeee9f36b69216a086ecde7ea7e5e.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            new KeyValueMapper<String, Number, KeyValue<String, Integer>>() {\n                @Override\n                public KeyValue<String, Integer> apply(final String key, final Number value) {\n                    return KeyValue.pair(key, value.intValue());\n                }\n            };\n\n        final KTable<String, Integer> reduced = builder.table(topic,\n                                                              Consumed.with(Serdes.String(), Serdes.Double()),\n                                                              Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                                                                      .withKeySerde(Serdes.String())\n                                                                      .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"3991d81f6c645bdf36c58e3d56b829ff92dbff3a","commitMessage":"@@@MINOR: code cleanup (#6056)\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2019-01-09 05:32:53","modifiedFileCount":"19","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-05-18 07:48:07","codes":[{"authorDate":"2019-05-18 07:48:07","commitOrder":12,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(\n                MockReducer.INTEGER_ADDER,\n                MockReducer.INTEGER_SUBTRACTOR,\n                Materialized.as(\"reduced\"));\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2019-05-18 07:48:07","endLine":179,"groupId":"11534","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a8/fed6756f04d3d114229f96d8bbf0e3e8649523.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(\n                MockReducer.INTEGER_ADDER,\n                MockReducer.INTEGER_SUBTRACTOR,\n                Materialized.as(\"reduced\"));\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2019-05-18 07:48:07","commitOrder":12,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2019-05-18 07:48:07","endLine":201,"groupId":"4869","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a8/fed6756f04d3d114229f96d8bbf0e3e8649523.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final Map<String, Integer> results = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(results, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"6a2749faa63397caa93dae7bfdc3f1d0573a2ff4","commitMessage":"@@@KAFKA-6455: Improve DSL operator timestamp semantics (#6725)\n\nBasic idea:\nKTable-KTable join: set max(left-ts. right-ts) for result\n#agg(...) (stream/table windowed/non-windowed): set max(ts1.  ts2.  ts3. ...) of all input records that contribute to the aggregation result\nfor all stateless transformation: input-ts -> output-ts\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.   John Roesler <john@confluent.io>.  Andy Coates <andy@confluent.io>.   Bill Bejeck <bbejeck@gmail.com","date":"2019-05-18 07:48:07","modifiedFileCount":"61","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2020-08-21 03:06:16","codes":[{"authorDate":"2020-08-21 03:06:16","commitOrder":13,"curCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(\n                MockReducer.INTEGER_ADDER,\n                MockReducer.INTEGER_SUBTRACTOR,\n                Materialized.as(\"reduced\"));\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey(), topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","date":"2020-08-21 03:06:16","endLine":179,"groupId":"101700","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReduce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e9/ecb51be5a82b18e166cc5ce686459a6a338e98.src","preCode":"    public void shouldReduce() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(\n                MockReducer.INTEGER_ADDER,\n                MockReducer.INTEGER_SUBTRACTOR,\n                Materialized.as(\"reduced\"));\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey, topic, driver);\n            assertEquals(reduced.queryableStoreName(), \"reduced\");\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2020-08-21 03:06:16","commitOrder":13,"curCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey(), topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","date":"2020-08-21 03:06:16","endLine":201,"groupId":"101700","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReduceWithInternalStoreName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e9/ecb51be5a82b18e166cc5ce686459a6a338e98.src","preCode":"    public void shouldReduceWithInternalStoreName() {\n        final KeyValueMapper<String, Number, KeyValue<String, Integer>> intProjection =\n            (key, value) -> KeyValue.pair(key, value.intValue());\n\n        final KTable<String, Integer> reduced = builder\n            .table(\n                topic,\n                Consumed.with(Serdes.String(), Serdes.Double()),\n                Materialized.<String, Double, KeyValueStore<Bytes, byte[]>>as(\"store\")\n                    .withKeySerde(Serdes.String())\n                    .withValueSerde(Serdes.Double()))\n            .groupBy(intProjection)\n            .reduce(MockReducer.INTEGER_ADDER, MockReducer.INTEGER_SUBTRACTOR);\n\n        final MockProcessorSupplier<String, Integer> supplier = getReducedResults(reduced);\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            assertReduced(supplier.theCapturedProcessor().lastValueAndTimestampPerKey, topic, driver);\n            assertNull(reduced.queryableStoreName());\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"88d4bc4641064d21a481ba3b8562a4c97703d64d","commitMessage":"@@@KAFKA-10379: Implement the KIP-478 StreamBuilder#addGlobalStore() (#9148)\n\nFrom KIP-478.  implement the new StreamBuilder#addGlobalStore() overload\nthat takes a stateUpdateSupplier fully typed Processor<KIn.  VIn.  Void.  Void>.\n\nWhere necessary.  use the adapters to make the old APIs defer to the new ones. \nas well as limiting the scope of this change set.\n\nReviewers: Boyang Chen <boyang@apache.org>","date":"2020-08-21 03:06:16","modifiedFileCount":"41","status":"M","submitter":"John Roesler"}]
