[{"authorTime":"2019-10-05 08:07:30","codes":[{"authorDate":"2019-10-05 08:07:30","commitOrder":4,"curCode":"    public void shouldGetStoreLevelTagMap() {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(tagMap.get(StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23), equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-05 08:07:30","endLine":438,"groupId":"17927","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/69/f7546d0e89e71cf9d023d632fbe4aa8932f0b4.src","preCode":"    public void shouldGetStoreLevelTagMap() {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(tagMap.get(StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23), equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"MB"},{"authorDate":"2019-10-05 08:07:30","commitOrder":4,"curCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(\n            tagMap.get(\n                builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST) ? StreamsMetricsImpl.THREAD_ID_TAG\n                    : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(StreamsMetricsImpl.RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-05 08:07:30","endLine":467,"groupId":"17928","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/69/f7546d0e89e71cf9d023d632fbe4aa8932f0b4.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(\n            tagMap.get(\n                builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST) ? StreamsMetricsImpl.THREAD_ID_TAG\n                    : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(StreamsMetricsImpl.RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":450,"status":"MB"}],"commitId":"52007e878aaac3f48d0d949dbe428a2ae5e56f57","commitMessage":"@@@KAFKA-8934: Introduce instance-level metrics for streams applications (#7416)\n\n1. Moves StreamsMetricsImpl from StreamThread to KafkaStreams\n2. Adds instance-level metrics as specified in KIP-444.  i.e.:\n-- version\n-- commit-id\n-- application-id\n-- topology-description\n-- state\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  John Roesler <john@confluent.io>.  Bill Bejeck <bbejeck@gmail.com>","date":"2019-10-05 08:07:30","modifiedFileCount":"65","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2019-10-09 06:24:31","codes":[{"authorDate":"2019-10-09 06:24:31","commitOrder":5,"curCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-09 06:24:31","endLine":450,"groupId":"17927","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f6/8f89d395caeb984462cb1dc6e8db7bf88baac1.src","preCode":"    public void shouldGetStoreLevelTagMap() {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(tagMap.get(StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23), equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"},{"authorDate":"2019-10-09 06:24:31","commitOrder":5,"curCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(StreamsMetricsImpl.RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-09 06:24:31","endLine":478,"groupId":"17928","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f6/8f89d395caeb984462cb1dc6e8db7bf88baac1.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(\n            tagMap.get(\n                builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST) ? StreamsMetricsImpl.THREAD_ID_TAG\n                    : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(StreamsMetricsImpl.RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"M"}],"commitId":"e3c2148b207a6ca98c89211d12cb47abdfaa70b3","commitMessage":"@@@KAFKA-8964: Rename tag client-id for thread-level metrics and below (#7429)\n\n* Renamed tag client-id to thread-id for thread-level metrics and below\n* Corrected metrics tag keys for state store that had suffix \"-id\" instead of \"state-id\"\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2019-10-09 06:24:31","modifiedFileCount":"23","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2019-10-20 04:45:36","codes":[{"authorDate":"2019-10-20 04:45:36","commitOrder":6,"curCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-20 04:45:36","endLine":455,"groupId":"17927","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bd/5104a5ad13e0d5edae65371cab660b4302b112.src","preCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"M"},{"authorDate":"2019-10-20 04:45:36","commitOrder":6,"curCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2019-10-20 04:45:36","endLine":483,"groupId":"13811","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bd/5104a5ad13e0d5edae65371cab660b4302b112.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_23),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(StreamsMetricsImpl.RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"}],"commitId":"2298c7f84fd0e29b304eb11078bfe76ca5b04a97","commitMessage":"@@@KAFKA-8964: Refactor thread-level metrics depending on built-in metrics version (#7474)\n\n* Made commit-over-tasks sensor and skipped-records sensor optional since they are removed in the latest version\n* Refactored methods for sensor creation\n* Adapted unit and integration tests\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>","date":"2019-10-20 04:45:36","modifiedFileCount":"50","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2020-08-14 03:40:40","codes":[{"authorDate":"2020-08-14 03:40:40","commitOrder":7,"curCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion, time);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2020-08-14 03:40:40","endLine":854,"groupId":"17927","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0e/4c1764d85a9be320cc660139b627dfce2f6ab7.src","preCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":839,"status":"M"},{"authorDate":"2020-08-14 03:40:40","commitOrder":7,"curCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion, time);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2020-08-14 03:40:40","endLine":882,"groupId":"13811","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0e/4c1764d85a9be320cc660139b627dfce2f6ab7.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":866,"status":"M"}],"commitId":"5645d906fa319206a9270c080926a21dfddc852a","commitMessage":"@@@KAFKA-9924: Prepare RocksDB and metrics for RocksDB properties recording (#9098)\n\nRefactor the RocksDB store and the metrics infrastructure in Streams\nin preparation of the recordings of the RocksDB properties specified in KIP-607.\n\nThe refactoring includes:\n* wrapper around BlockedBasedTableConfig to make the cache accessible to the\n  RocksDB metrics recorder\n* RocksDB metrics recorder now takes also the DB instance and the cache in addition\n  to the statistics\n* The value providers for the metrics are added to the RockDB metrics recorder also if\n  the recording level is INFO.\n* The creation of the RocksDB metrics recording trigger is moved to StreamsMetricsImpl\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  John Roesler <vvcephei@apache.org>\n","date":"2020-08-14 03:40:40","modifiedFileCount":"27","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2020-08-28 07:04:28","codes":[{"authorDate":"2020-08-28 07:04:28","commitOrder":8,"curCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID1, builtInMetricsVersion, time);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(Thread.currentThread().getName()));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2020-08-28 07:04:28","endLine":1008,"groupId":"7976","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/81/26ba6632d49e737619d2ab419e6176635df97c.src","preCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion, time);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(THREAD_ID, taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":993,"status":"M"},{"authorDate":"2020-08-28 07:04:28","commitOrder":8,"curCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID1, builtInMetricsVersion, time);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID1, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID1)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2020-08-28 07:04:28","endLine":1036,"groupId":"13811","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"(finalStringbuiltInMetricsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/81/26ba6632d49e737619d2ab419e6176635df97c.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID, builtInMetricsVersion, time);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1020,"status":"M"}],"commitId":"9da32b6bd014f1bdeeee5da8fcd00995a5916323","commitMessage":"@@@KAFKA-9924: Add RocksDB metric num-entries-active-mem-table (#9177)\n\n* Add the first RocksDB metric that exposes a RocksDB property: num-entries-active-mem-table.\n* Add code StreamsMetricsImpl in support of exposing RocksDB properties\n* unit tests and intergration tests\n\nThis commit only contains one metric to keep the PR at a reasonable size.\nAll other RocksDB metrics described in KIP-607 will be added in other PRs.\n\nImplements: KIP-607\nReviewers: Guozhang Wang <guozhang@apache.org>.  John Roesler <vvcephei@apache.org>","date":"2020-08-28 07:04:28","modifiedFileCount":"22","status":"M","submitter":"Bruno Cadonna"},{"authorTime":"2021-06-01 20:05:08","codes":[{"authorDate":"2021-06-01 20:05:08","commitOrder":9,"curCode":"    public void shouldGetStoreLevelTagMap() {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID1, VERSION, time);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(\n            tagMap.get(StreamsMetricsImpl.THREAD_ID_TAG),\n            equalTo(Thread.currentThread().getName()));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","date":"2021-06-01 20:05:08","endLine":1006,"groupId":"102413","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldGetStoreLevelTagMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bf/e05a6fc48ce204d401e0b29b50bf7bc44c4235.src","preCode":"    private void shouldGetStoreLevelTagMap(final String builtInMetricsVersion) {\n        final String taskName = \"test-task\";\n        final String storeType = \"remote-window\";\n        final String storeName = \"window-keeper\";\n        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, THREAD_ID1, builtInMetricsVersion, time);\n\n        final Map<String, String> tagMap = streamsMetrics.storeLevelTagMap(taskName, storeType, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(Thread.currentThread().getName()));\n        assertThat(tagMap.get(StreamsMetricsImpl.TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(storeType + \"-\" + StreamsMetricsImpl.STORE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":992,"status":"M"},{"authorDate":"2021-06-01 20:05:08","commitOrder":9,"curCode":"    public void shouldGetCacheLevelTagMap() {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID1, VERSION, time);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID1, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        assertThat(\n            tagMap.get(StreamsMetricsImpl.THREAD_ID_TAG),\n            equalTo(THREAD_ID1)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","date":"2021-06-01 20:05:08","endLine":1024,"groupId":"102413","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldGetCacheLevelTagMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bf/e05a6fc48ce204d401e0b29b50bf7bc44c4235.src","preCode":"    private void shouldGetCacheLevelTagMap(final String builtInMetricsVersion) {\n        final StreamsMetricsImpl streamsMetrics =\n            new StreamsMetricsImpl(metrics, THREAD_ID1, builtInMetricsVersion, time);\n        final String taskName = \"taskName\";\n        final String storeName = \"storeName\";\n\n        final Map<String, String> tagMap = streamsMetrics.cacheLevelTagMap(THREAD_ID1, taskName, storeName);\n\n        assertThat(tagMap.size(), equalTo(3));\n        final boolean isMetricsLatest = builtInMetricsVersion.equals(StreamsConfig.METRICS_LATEST);\n        assertThat(\n            tagMap.get(isMetricsLatest ? StreamsMetricsImpl.THREAD_ID_TAG : StreamsMetricsImpl.THREAD_ID_TAG_0100_TO_24),\n            equalTo(THREAD_ID1)\n        );\n        assertThat(tagMap.get(TASK_ID_TAG), equalTo(taskName));\n        assertThat(tagMap.get(RECORD_CACHE_ID_TAG), equalTo(storeName));\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"}],"commitId":"cfe642edee80977173279f4a41e23aa822b9d19f","commitMessage":"@@@KAFKA-12519: Remove built-in Streams metrics for versions 0.10.0-2.4 (#10765)\n\nAs specified in KIP-743.  this PR removes the built-in metrics\nin Streams that are superseded by the refactoring proposed in KIP-444.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Luke Chen <showuon@gmail.com>","date":"2021-06-01 20:05:08","modifiedFileCount":"73","status":"M","submitter":"Bruno Cadonna"}]
