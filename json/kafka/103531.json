[{"authorTime":"2015-10-08 00:28:22","codes":[{"authorDate":"2015-10-08 00:28:22","commitOrder":1,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.put(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","date":"2015-10-08 00:28:22","endLine":122,"groupId":"15711","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/43/da621f704dd2ddc30fe3b1418041811a0fb84d.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.put(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SSLTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"B"},{"authorDate":"2015-10-08 00:28:22","commitOrder":1,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","date":"2015-10-08 00:28:22","endLine":140,"groupId":"11019","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/43/da621f704dd2ddc30fe3b1418041811a0fb84d.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SSLTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"2047a9afe1ef9cf81e6347fe27f0051c8758d226","commitMessage":"@@@KAFKA-2534: Fixes and unit tests for SSLTransportLayer buffer overflow\n\nUnit tests which mock buffer overflow and underflow in the SSL transport layer and fixes for the couple of issues in buffer overflow handling described in the JIRA.\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Sriharsha Chintalapani <schintalapani@hortonworks.com>.  Jun Rao <junrao@gmail.com>\n\nCloses #205 from rajinisivaram/KAFKA-2534\n","date":"2015-10-08 00:28:22","modifiedFileCount":"4","status":"B","submitter":"Rajini Sivaram"},{"authorTime":"2015-10-25 00:42:19","codes":[{"authorDate":"2015-10-25 00:42:19","commitOrder":2,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","date":"2015-10-25 00:42:19","endLine":121,"groupId":"15711","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/91/bd47c5509a929c47e75d0db1387214ae76a8b0.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.put(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2015-10-25 00:42:19","commitOrder":2,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","date":"2015-10-25 00:42:19","endLine":139,"groupId":"11019","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/91/bd47c5509a929c47e75d0db1387214ae76a8b0.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SSLEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SSLConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"16f194b20ad9795188f1d7781e7cbca1cd2a6a2d","commitMessage":"@@@KAFKA-2460; Fix capitalisation in SSL classes\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Sriharsha Chintalapani <harsha@hortonworks.com>\n\nCloses #355 from ijuma/kafka-2460-fix-capitalisation-in-ssl-classes\n","date":"2015-10-25 00:42:19","modifiedFileCount":"10","status":"M","submitter":"Ismael Juma"},{"authorTime":"2015-10-25 00:42:19","codes":[{"authorDate":"2016-01-07 07:01:18","commitOrder":3,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        createEchoServer(sslServerConfigs);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","date":"2016-01-07 07:01:18","endLine":123,"groupId":"17706","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/f1464f665a5106832ae4bf06a1c0276fba5ef4.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2015-10-25 00:42:19","commitOrder":3,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","date":"2015-10-25 00:42:19","endLine":139,"groupId":"11019","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/91/bd47c5509a929c47e75d0db1387214ae76a8b0.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"85039ab43664577524bf99453cf2b972d3724f60","commitMessage":"@@@KAFKA-2850; Fix SSL invalid endpoint validation test\n\nUse invalid hostname to ensure that test works in all environments\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Jun Rao <junrao@gmail.com>\n\nCloses #546 from rajinisivaram/KAFKA-2850\n","date":"2016-01-07 07:01:18","modifiedFileCount":"2","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2015-10-25 00:42:19","codes":[{"authorDate":"2016-01-28 00:23:25","commitOrder":4,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createEchoServer(sslServerConfigs);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","date":"2016-01-28 00:23:25","endLine":122,"groupId":"17706","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d3/302c87a25addd7a5a255cfe4f2aa45c8da6963.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        createEchoServer(sslServerConfigs);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2015-10-25 00:42:19","commitOrder":4,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","date":"2015-10-25 00:42:19","endLine":139,"groupId":"11019","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/91/bd47c5509a929c47e75d0db1387214ae76a8b0.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"523562c109b29cc5a5e56313f16f1b1ff6c5dd9c","commitMessage":"@@@KAFKA-3152; kafka-acl doesn't allow space in principal name\n\n* Add quotes to `$` in shell scripts\nThis is necessary for correct processing of quotes in the\nuser command.\n\n* Minor improvements to AclCommand messages\n\n* Use a principal with a space in `SslEndToEndAuthorizationTest`\nThis passed without any other changes.  but good avoid regressions.\n\n* Clean-up `TestSslUtils`:\nRemove unused methods.  fix unnecessary verbosity and don't set security.protocol (it should be done at a higher-level).\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Grant Henke <granthenke@gmail.com>.  Jun Rao <junrao@gmail.com\n\nCloses #818 from ijuma/kafka-3152-kafka-acl-space-in-principal\n","date":"2016-01-28 00:23:25","modifiedFileCount":"6","status":"M","submitter":"Ismael Juma"},{"authorTime":"2016-04-29 04:39:22","codes":[{"authorDate":"2016-04-29 04:39:22","commitOrder":5,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = NetworkTestUtils.createEchoServer(SecurityProtocol.SSL, sslServerConfigs);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2016-04-29 04:39:22","endLine":110,"groupId":"9880","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/4e/96411c362a7286e022fa58ebaf8f870c58ebde.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createEchoServer(sslServerConfigs);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        waitForChannelClose(node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2016-04-29 04:39:22","commitOrder":5,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new NioEchoServer(SecurityProtocol.SSL, sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2016-04-29 04:39:22","endLine":128,"groupId":"11019","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/4e/96411c362a7286e022fa58ebaf8f870c58ebde.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new SslEchoServer(sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        testClientConnection(node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"3a496f480d002a4512273477eda9d92731e600c3","commitMessage":"@@@KAFKA-3617; Unit tests for SASL authenticator\n\nUnit tests for SASL authenticator.  tests for SASL/PLAIN and multiple mechanisms.  authorization test for SASL/PLAIN\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #1273 from rajinisivaram/KAFKA-3617\n","date":"2016-04-29 04:39:22","modifiedFileCount":"3","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-01-27 09:24:39","codes":[{"authorDate":"2017-01-27 09:24:39","commitOrder":6,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","date":"2017-01-27 09:24:56","endLine":115,"groupId":"9880","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3b/c1b50b31c2e2534adbfc3ecb91b57115cb006b.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = NetworkTestUtils.createEchoServer(SecurityProtocol.SSL, sslServerConfigs);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2017-01-27 09:24:39","commitOrder":6,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-01-27 09:24:56","endLine":135,"groupId":"12269","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3b/c1b50b31c2e2534adbfc3ecb91b57115cb006b.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        server = new NioEchoServer(SecurityProtocol.SSL, sslServerConfigs, serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"ca0c071c108c9fd31a759e1cd1c4f89bdc5ac47e","commitMessage":"@@@KAFKA-4636; Per listener security settings overrides (KIP-103)\n\nAuthor: Ismael Juma <ismael@juma.me.uk>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n\nCloses #2406 from ijuma/kafka-4636-per-listener-security-settings\n","date":"2017-01-27 09:24:56","modifiedFileCount":"30","status":"M","submitter":"Ismael Juma"},{"authorTime":"2017-01-27 09:24:39","codes":[{"authorDate":"2017-05-16 06:13:20","commitOrder":7,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE);\n    }\n","date":"2017-05-16 06:13:20","endLine":123,"groupId":"9880","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/42/e0f6fc4f0a333a178e8252f08f364f94ab1500.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2017-01-27 09:24:39","commitOrder":7,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-01-27 09:24:56","endLine":135,"groupId":"12269","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3b/c1b50b31c2e2534adbfc3ecb91b57115cb006b.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"}],"commitId":"4c75f31a5f80e6a717d040b0534c79f5ed8d9346","commitMessage":"@@@KAFKA-5179; Log connection termination during authentication\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma.  Jun Rao\n\nCloses #2980 from rajinisivaram/KAFKA-5179\n","date":"2017-05-16 06:13:20","modifiedFileCount":"11","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-06-06 19:34:39","codes":[{"authorDate":"2017-06-06 19:34:39","commitOrder":8,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE);\n    }\n","date":"2017-06-06 19:34:39","endLine":232,"groupId":"9880","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bb/5d2a78bec32ce78081ae26b86bb9bdce42b040.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"notahost\");\n        clientCertStores = new CertStores(false, \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2017-06-06 19:34:39","commitOrder":8,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-06-06 19:34:39","endLine":252,"groupId":"12269","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bb/5d2a78bec32ce78081ae26b86bb9bdce42b040.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"}],"commitId":"17b2bde4be6296dfd47defce85443cbf6e23835b","commitMessage":"@@@KAFKA-5051; Avoid reverse DNS lookup to obtain hostname for TLS\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #2835 from rajinisivaram/KAFKA-5051\n","date":"2017-06-06 19:34:39","modifiedFileCount":"8","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-09-16 00:16:29","codes":[{"authorDate":"2017-09-16 00:16:29","commitOrder":9,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE.state());\n    }\n","date":"2017-09-16 00:16:29","endLine":234,"groupId":"9880","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/fcc89d9134e25dfd2027af64502f3f7c8284d1.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"},{"authorDate":"2017-09-16 00:16:29","commitOrder":9,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-09-16 00:16:29","endLine":254,"groupId":"21234","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/fcc89d9134e25dfd2027af64502f3f7c8284d1.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"8fca432223da521b78e60e0cf8fa881ced19589c","commitMessage":"@@@KAFKA-4764; Wrap SASL tokens in Kafka headers to improve diagnostics (KIP-152)\n\nSASL handshake protocol changes from KIP-152.\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Manikumar Reddy <manikumar.reddy@gmail.com>\n\nCloses #3708 from rajinisivaram/KAFKA-4764-SASL-diagnostics\n","date":"2017-09-16 00:16:29","modifiedFileCount":"22","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-09-16 00:16:29","codes":[{"authorDate":"2017-09-23 03:26:46","commitOrder":10,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n    }\n","date":"2017-09-23 03:29:25","endLine":233,"groupId":"9880","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/90/c8cd56dda3c7523e733d268b998da61dd5b7fb.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.AUTHENTICATE.state());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2017-09-16 00:16:29","commitOrder":10,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-09-16 00:16:29","endLine":254,"groupId":"21234","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/fcc89d9134e25dfd2027af64502f3f7c8284d1.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"N"}],"commitId":"d60f011d77ce80a44b02d43bf0889a50a8797dcd","commitMessage":"@@@KAFKA-5920; Handle SSL handshake failures as authentication exceptions\n\n1. Propagate `SSLException` as `SslAuthenticationException` to enable clients to report these and avoid retries\n2. Updates to `SslTransportLayer` to process bytes received even if end-of-stream\n3. Some tidy up of authentication handling\n4. Report exceptions in SaslClientAuthenticator as AuthenticationExceptions\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #3918 from rajinisivaram/KAFKA-5920-SSL-handshake-failure\n","date":"2017-09-23 03:29:25","modifiedFileCount":"12","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2017-09-16 00:16:29","codes":[{"authorDate":"2017-09-29 04:58:47","commitOrder":11,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-09-29 04:58:59","endLine":235,"groupId":"9880","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/0140b1d32dcc390cfeef33f85eaccd69095916.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"},{"authorDate":"2017-09-16 00:16:29","commitOrder":11,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","date":"2017-09-16 00:16:29","endLine":254,"groupId":"21234","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cf/fcc89d9134e25dfd2027af64502f3f7c8284d1.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"N"}],"commitId":"021d8a8e9698dce454e0e801092460b98f0a8a4d","commitMessage":"@@@KAFKA-5746; Add new metrics to support health checks (KIP-188)\n\nAdds new metrics to support health checks:\n1. Error rates for each request type.  per-error code\n2. Request size and temporary memory size\n3. Message conversion rate and time\n4. Successful and failed authentication rates\n5. ZooKeeper latency and status\n6. Client version\n\nAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCloses #3705 from rajinisivaram/KAFKA-5746-new-metrics\n","date":"2017-09-29 04:58:59","modifiedFileCount":"74","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2018-06-05 19:08:13","codes":[{"authorDate":"2017-09-29 04:58:47","commitOrder":12,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2017-09-29 04:58:59","endLine":235,"groupId":"9880","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/44/0140b1d32dcc390cfeef33f85eaccd69095916.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"N"},{"authorDate":"2018-06-05 19:08:13","commitOrder":12,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","date":"2018-06-05 19:08:13","endLine":275,"groupId":"6497","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f5/af400dd4429531bdaf3c292e4c73b39340efac.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        String node = \"0\";\n        String serverHost = InetAddress.getLocalHost().getHostAddress();\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol), securityProtocol,\n                new TestSecurityConfig(sslServerConfigs), serverHost, null, null);\n        server.start();\n        sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(serverHost, server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"9df3872fbd1526bf6aecab1fcfdc52a33ab9630e","commitMessage":"@@@KAFKA-3665: Enable TLS hostname verification by default (KIP-294) (#4956)\n\nMake HTTPS the default ssl.endpoint.identification.algorithm.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>","date":"2018-06-05 19:08:13","modifiedFileCount":"4","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2019-12-19 22:13:03","codes":[{"authorDate":"2019-12-19 22:13:03","commitOrder":13,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2019-12-19 22:13:03","endLine":266,"groupId":"9880","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/b031ee2fea32e2e96fcc2d833bfa42894299ef.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2019-12-19 22:13:03","commitOrder":13,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","date":"2019-12-19 22:13:03","endLine":304,"groupId":"6497","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/b031ee2fea32e2e96fcc2d833bfa42894299ef.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"e275742f850af4a1b79b0d1bd1ac9a1d2e89c64e","commitMessage":"@@@KAFKA-7251; Add support for TLS 1.3 (#7804)\n\nAdds support for TLSv1.3 in SslTransportLayer. Note that TLSv1.3 is only enabled from Java 11 onwards.  so we test the code only when running with Java11 and above.\n\nTests run on this PR:\n  - SslTransportLayerTest: This covers testing of our SslTransportLayer and all tests are run with TLSv1.3 when running with Java 11. These tests are also run with TLSv1.2 for all Java versions.\n  - SslFactoryTest: Also run with TLSv1.3 on Java 11 onwards in addition to TLSv1.2 for all Java versions.\n  - SslEndToEndAuthorizationTest - Run only with TLSv1.3 on Java 11 onwards and only with TLSv1.2 on earlier Java versions. We have other versions of this test which use SSL that continue to be with TLSv1.2 on Java 11 to avoid reducing test coverage for TLSv1.2\n\nAdditional testing for done for TLSv1.3:\n  - Most tests that use SSL use TestSslUtils.DEFAULT_TLS_PROTOCOL_FOR_TESTS which is set to TLSv1.2. I have run all clients and core tests with DEFAULT_TLS_PROTOCOL_FOR_TESTS=TLSv1.3 with Java 11.\n  - Ran a few system tests locally with TKSv1.3\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Manikumar Reddy <manikumar.reddy@gmail.com>\n","date":"2019-12-19 22:13:03","modifiedFileCount":"10","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2020-02-20 22:54:37","codes":[{"authorDate":"2019-12-19 22:13:03","commitOrder":14,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","date":"2019-12-19 22:13:03","endLine":266,"groupId":"9880","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/b031ee2fea32e2e96fcc2d833bfa42894299ef.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2020-02-20 22:54:37","commitOrder":14,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","date":"2020-02-20 22:54:37","endLine":304,"groupId":"6497","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a4/94d500b4cef04999013f0c6d103cf0e1366f11.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        SecurityProtocol securityProtocol = SecurityProtocol.SSL;\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"8ab0994919752cd4870e771221ba934a6a539a67","commitMessage":"@@@MINOR: Fix a number of warnings in clients test (#8073)\n\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Andrew Choi <li_andchoi@microsoft.com>","date":"2020-02-20 22:54:37","modifiedFileCount":"14","status":"M","submitter":"Mickael Maison"},{"authorTime":"2020-10-07 02:13:43","codes":[{"authorDate":"2020-10-07 02:13:43","commitOrder":15,"curCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        serverCertStores = certBuilder(true, \"server\").addHostName(\"notahost\").build();\n        clientCertStores = certBuilder(false, \"client\").addHostName(\"localhost\").build();\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        verifySslConfigsWithHandshakeFailure();\n    }\n","date":"2020-10-07 02:13:43","endLine":268,"groupId":"21699","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/fb2a9f599f49cb6370fd7284f2fbf83d22434f.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        String node = \"0\";\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        server = createEchoServer(SecurityProtocol.SSL);\n        createSelector(sslClientConfigs);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n\n        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.AUTHENTICATION_FAILED);\n        server.verifyAuthenticationMetrics(0, 1);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2020-10-07 02:13:43","commitOrder":15,"curCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = certBuilder(true, \"server\").addHostName(\"notahost\").build();\n        clientCertStores = certBuilder(false, \"client\").addHostName(\"localhost\").build();\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","date":"2020-10-07 02:13:43","endLine":305,"groupId":"6497","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/cc/fb2a9f599f49cb6370fd7284f2fbf83d22434f.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = new CertStores(true, \"server\", \"notahost\");\n        clientCertStores = new CertStores(false, \"client\", \"localhost\");\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"}],"commitId":"7be8bd8cbfea5cc19f815a142c4689e97728ea4b","commitMessage":"@@@KAFKA-10338; Support PEM format for SSL key and trust stores (KIP-651) (#9345)\n\nAdds support for SSL key and trust stores to be specified in PEM format either as files or directly as configuration values.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>","date":"2020-10-07 02:13:43","modifiedFileCount":"7","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2021-01-14 08:17:45","commitOrder":16,"curCode":"    public void testInvalidEndpointIdentification(Args args) throws Exception {\n        args.serverCertStores = certBuilder(true, \"server\", args.useInlinePem).addHostName(\"notahost\").build();\n        args.clientCertStores = certBuilder(false, \"client\", args.useInlinePem).addHostName(\"localhost\").build();\n        args.sslServerConfigs = args.getTrustingConfig(args.serverCertStores, args.clientCertStores);\n        args.sslClientConfigs = args.getTrustingConfig(args.clientCertStores, args.serverCertStores);\n        args.sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        verifySslConfigsWithHandshakeFailure(args);\n    }\n","date":"2021-01-14 08:17:45","endLine":282,"groupId":"103531","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidEndpointIdentification","params":"(Argsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2b/3bf566e3fa45592dc528a7c48466f6750bf69c.src","preCode":"    public void testInvalidEndpointIdentification() throws Exception {\n        serverCertStores = certBuilder(true, \"server\").addHostName(\"notahost\").build();\n        clientCertStores = certBuilder(false, \"client\").addHostName(\"localhost\").build();\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        verifySslConfigsWithHandshakeFailure();\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"},{"authorDate":"2021-01-14 08:17:45","commitOrder":16,"curCode":"    public void testEndpointIdentificationDisabled(Args args) throws Exception {\n        args.serverCertStores = certBuilder(true, \"server\", args.useInlinePem).addHostName(\"notahost\").build();\n        args.clientCertStores = certBuilder(false, \"client\", args.useInlinePem).addHostName(\"localhost\").build();\n        args.sslServerConfigs = args.getTrustingConfig(args.serverCertStores, args.clientCertStores);\n        args.sslClientConfigs = args.getTrustingConfig(args.clientCertStores, args.serverCertStores);\n\n        server = createEchoServer(args, SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        args.sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(args.sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        args.sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(args.sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        args.sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(args.sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","date":"2021-01-14 08:17:45","endLine":320,"groupId":"103531","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"testEndpointIdentificationDisabled","params":"(Argsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/2b/3bf566e3fa45592dc528a7c48466f6750bf69c.src","preCode":"    public void testEndpointIdentificationDisabled() throws Exception {\n        serverCertStores = certBuilder(true, \"server\").addHostName(\"notahost\").build();\n        clientCertStores = certBuilder(false, \"client\").addHostName(\"localhost\").build();\n        sslServerConfigs = getTrustingConfig(serverCertStores, clientCertStores);\n        sslClientConfigs = getTrustingConfig(clientCertStores, serverCertStores);\n\n        server = createEchoServer(SecurityProtocol.SSL);\n        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n\n        \r\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node, 100, 10);\n\n        \r\n        String node2 = \"2\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, null);\n        createSelector(sslClientConfigs);\n        selector.connect(node2, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.checkClientConnection(selector, node2, 100, 10);\n\n        \r\n        String node3 = \"3\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"HTTPS\");\n        createSelector(sslClientConfigs);\n        selector.connect(node3, addr, BUFFER_SIZE, BUFFER_SIZE);\n        NetworkTestUtils.waitForChannelClose(selector, node3, ChannelState.State.AUTHENTICATION_FAILED);\n        selector.close();\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
