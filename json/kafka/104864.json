[{"authorTime":"2015-11-09 14:11:03","codes":[{"authorDate":"2015-11-09 14:11:03","commitOrder":1,"curCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2015-11-09 14:11:03","endLine":349,"groupId":"21328","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLeaderPerformAssignment1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/38/c1aebe941e5f2db88c02a0d942ff784c438ba1.src","preCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"B"},{"authorDate":"2015-11-09 14:11:03","commitOrder":1,"curCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1, taskId2), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2015-11-09 14:11:03","endLine":385,"groupId":"21331","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeaderPerformAssignment2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/38/c1aebe941e5f2db88c02a0d942ff784c438ba1.src","preCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1, taskId2), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"B"}],"commitId":"f2031d40639ef34c1591c22971394ef41c87652c","commitMessage":"@@@KAFKA-2774: Rename Copycat to Kafka Connect\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: Gwen Shapira\n\nCloses #456 from ewencp/kafka-2774-rename-copycat\n","date":"2015-11-09 14:11:03","modifiedFileCount":"1","status":"B","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2016-12-20 04:37:58","codes":[{"authorDate":"2016-12-20 04:37:58","commitOrder":2,"curCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-12-20 04:37:58","endLine":386,"groupId":"7381","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLeaderPerformAssignment1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/92/393a1b4fbe56e10c7fbae634b2003bd1c0fe07.src","preCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2016-12-20 04:37:58","commitOrder":2,"curCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2016-12-20 04:37:58","endLine":422,"groupId":"7379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeaderPerformAssignment2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/92/393a1b4fbe56e10c7fbae634b2003bd1c0fe07.src","preCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1, taskId2), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"bc9ef716af8ac387d63b22ee973a9fc6f864bebb","commitMessage":"@@@KAFKA-4553; Improve round robin assignment in Connect to avoid uneven distributions of connectors and tasks\n\nAuthor: Ewen Cheslack-Postava <me@ewencp.org>\n\nReviewers: Konstantine Karantasis <konstantine@confluent.io>.  Jason Gustafson <jason@confluent.io>\n\nCloses #2272 from ewencp/kafka-4553-better-connect-round-robin\n","date":"2016-12-20 04:37:58","modifiedFileCount":"2","status":"M","submitter":"Ewen Cheslack-Postava"},{"authorTime":"2019-03-19 04:26:09","codes":[{"authorDate":"2019-03-19 04:26:09","commitOrder":3,"curCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-03-19 04:26:09","endLine":402,"groupId":"506","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLeaderPerformAssignment1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/8c7a4756cb47264465813ca187aee50a43304e.src","preCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"},{"authorDate":"2019-03-19 04:26:09","commitOrder":3,"curCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-03-19 04:26:09","endLine":445,"groupId":"13347","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeaderPerformAssignment2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c7/8c7a4756cb47264465813ca187aee50a43304e.src","preCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        Map<String, ByteBuffer> configs = new HashMap<>();\n        \r\n        configs.put(\"leader\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)));\n        configs.put(\"member\", ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)));\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, configs);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":405,"status":"M"}],"commitId":"8406f3624d8f99b614eb7171b71fae8b0e663dcb","commitMessage":"@@@KAFKA-7858: Automatically generate JoinGroup request/response\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>","date":"2019-03-19 04:26:09","modifiedFileCount":"12","status":"M","submitter":"Boyang Chen"},{"authorTime":"2019-05-17 11:46:04","codes":[{"authorDate":"2019-05-17 11:46:04","commitOrder":4,"curCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-05-17 11:46:03","endLine":426,"groupId":"506","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLeaderPerformAssignment1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/18/2d6bd9764788def6d4b28cc9f3cfc77beb4fce.src","preCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"},{"authorDate":"2019-05-17 11:46:04","commitOrder":4,"curCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2019-05-17 11:46:03","endLine":469,"groupId":"13347","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeaderPerformAssignment2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/18/2d6bd9764788def6d4b28cc9f3cfc77beb4fce.src","preCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n\n        Map<String, ByteBuffer> result = Whitebox.invokeMethod(coordinator, \"performAssignment\", \"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"M"}],"commitId":"ce584a01fff4e73afa96d38c9a7508fcd67e3e46","commitMessage":"@@@KAFKA-5505: Incremental cooperative rebalancing in Connect (KIP-415) (#6363)\n\nAdded the incremental cooperative rebalancing in Connect to avoid global rebalances on all connectors and tasks with each new/changed/removed connector. This new protocol is backward compatible and will work with heterogeneous clusters that exist during a rolling upgrade.  but once the clusters consist of new workers only some affected connectors and tasks will be rebalanced: connectors and tasks on existing nodes still in the cluster and not added/changed/removed will continue running while the affected connectors and tasks are rebalanced.\n\nThis commit attempted to minimize the changes to the existing V0 protocol logic.  though that was not entirely possible.\n\nThis commit adds extensive unit and integration tests for both the old V0 protocol and the new v1 protocol. Soak testing has been performed multiple times to verify behavior while connectors and added.  changed.  and removed and while workers are added and removed from the cluster.\n\nAuthor: Konstantine Karantasis <konstantine@confluent.io>\nReviewers: Randall Hauch <rhauch@gmail.com>.  Ewen Cheslack-Postava <me@ewencp.org>.  Robert Yokota <rayokota@gmail.com>.  David Arthur <mumrah@gmail.com>.  Ryanne Dolan <ryannedolan@gmail.com>","date":"2019-05-17 11:46:03","modifiedFileCount":"9","status":"M","submitter":"Konstantine Karantasis"},{"authorTime":"2021-01-27 14:50:01","codes":[{"authorDate":"2021-01-27 14:50:01","commitOrder":5,"curCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", EAGER.protocol(), responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-01-27 14:50:01","endLine":435,"groupId":"104864","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testLeaderPerformAssignment1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6a/d1b3bddddaf737804efcde662064ac1d8698a4.src","preCode":"    public void testLeaderPerformAssignment1() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState1);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Collections.emptyList(), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.emptyList(), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x0), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"M"},{"authorDate":"2021-01-27 14:50:01","commitOrder":5,"curCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", EAGER.protocol(), responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","date":"2021-01-27 14:50:01","endLine":478,"groupId":"104864","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testLeaderPerformAssignment2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/6a/d1b3bddddaf737804efcde662064ac1d8698a4.src","preCode":"    public void testLeaderPerformAssignment2() throws Exception {\n        \r\n        \r\n\n        EasyMock.expect(configStorage.snapshot()).andReturn(configState2);\n\n        PowerMock.replayAll();\n\n        \r\n        coordinator.metadata();\n\n        \r\n        List<JoinGroupResponseData.JoinGroupResponseMember> responseMembers = new ArrayList<>();\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"leader\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(LEADER_URL, 1L)).array())\n        );\n        responseMembers.add(new JoinGroupResponseData.JoinGroupResponseMember()\n                .setMemberId(\"member\")\n                .setMetadata(ConnectProtocol.serializeMetadata(new ConnectProtocol.WorkerState(MEMBER_URL, 1L)).array())\n        );\n\n        Map<String, ByteBuffer> result = coordinator.performAssignment(\"leader\", WorkerCoordinator.DEFAULT_SUBPROTOCOL, responseMembers);\n\n        \r\n        ConnectProtocol.Assignment leaderAssignment = ConnectProtocol.deserializeAssignment(result.get(\"leader\"));\n        assertEquals(false, leaderAssignment.failed());\n        assertEquals(\"leader\", leaderAssignment.leader());\n        assertEquals(1, leaderAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId1), leaderAssignment.connectors());\n        assertEquals(Arrays.asList(taskId1x0, taskId2x0), leaderAssignment.tasks());\n\n        ConnectProtocol.Assignment memberAssignment = ConnectProtocol.deserializeAssignment(result.get(\"member\"));\n        assertEquals(false, memberAssignment.failed());\n        assertEquals(\"leader\", memberAssignment.leader());\n        assertEquals(1, memberAssignment.offset());\n        assertEquals(Collections.singletonList(connectorId2), memberAssignment.connectors());\n        assertEquals(Collections.singletonList(taskId1x1), memberAssignment.tasks());\n\n        PowerMock.verifyAll();\n    }\n","realPath":"connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"M"}],"commitId":"8bdab2e4cf0d6a1d4ff3bb3b30f9db22c146bd8c","commitMessage":"@@@MINOR: Remove outdated comment in Connect's WorkerCoordinator (#9805)\n\nReviewers: Konstantine Karantasis <k.karantasis@gmail.com>.  Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-27 14:50:01","modifiedFileCount":"2","status":"M","submitter":"Chris Egerton"}]
