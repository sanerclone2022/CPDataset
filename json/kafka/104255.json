[{"authorTime":"2014-03-19 08:38:56","codes":[{"authorDate":"2014-03-19 08:38:56","commitOrder":1,"curCode":"        public void recordRetries(String topic, int count) {\n            this.retrySensor.record(count);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor == null) {\n                topicRetrySensor = this.metrics.sensor(topicRetryName);\n                topicRetrySensor.add(\"topic.\" + topic + \".record-retry-rate\", new Rate());\n            }\n            topicRetrySensor.record(count);\n        }\n","date":"2014-03-28 11:52:42","endLine":855,"groupId":"2125","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"recordRetries","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d8/9813eb947e1b1af345c9de5ee7ca5db5d41e80.src","preCode":"        public void recordRetries(String topic, int count) {\n            this.retrySensor.record(count);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor == null) {\n                topicRetrySensor = this.metrics.sensor(topicRetryName);\n                topicRetrySensor.add(\"topic.\" + topic + \".record-retry-rate\", new Rate());\n            }\n            topicRetrySensor.record(count);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":846,"status":"B"},{"authorDate":"2014-03-19 08:38:56","commitOrder":1,"curCode":"        public void recordErrors(String topic, int count) {\n            this.errorSensor.record(count);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor == null) {\n                topicErrorSensor = this.metrics.sensor(topicErrorName);\n                topicErrorSensor.add(\"topic.\" + topic + \".record-error-rate\", new Rate());\n            }\n            topicErrorSensor.record(count);\n        }\n","date":"2014-03-28 11:52:42","endLine":866,"groupId":"2125","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"recordErrors","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d8/9813eb947e1b1af345c9de5ee7ca5db5d41e80.src","preCode":"        public void recordErrors(String topic, int count) {\n            this.errorSensor.record(count);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor == null) {\n                topicErrorSensor = this.metrics.sensor(topicErrorName);\n                topicErrorSensor.add(\"topic.\" + topic + \".record-error-rate\", new Rate());\n            }\n            topicErrorSensor.record(count);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"B"}],"commitId":"23d7fc470638c4dffa5ca005ef2e3d34c14dc92e","commitMessage":"@@@KAFKA-1251: Add metrics to the producer.\n","date":"2014-03-28 11:52:42","modifiedFileCount":"23","status":"B","submitter":"Jay Kreps"},{"authorTime":"2014-04-23 08:47:55","codes":[{"authorDate":"2014-04-23 08:47:55","commitOrder":2,"curCode":"        public void recordRetries(String topic, int count) {\n            long nowMs = time.milliseconds();\n            this.retrySensor.record(count, nowMs);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor != null) topicRetrySensor.record(count, nowMs);\n        }\n","date":"2014-04-23 08:47:55","endLine":879,"groupId":"20013","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"recordRetries","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f0/152fabbdd44e9f1a24291e84c17edf8379f4fc.src","preCode":"        public void recordRetries(String topic, int count) {\n            this.retrySensor.record(count);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor == null) {\n                topicRetrySensor = this.metrics.sensor(topicRetryName);\n                topicRetrySensor.add(\"topic.\" + topic + \".record-retry-rate\", new Rate());\n            }\n            topicRetrySensor.record(count);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"M"},{"authorDate":"2014-04-23 08:47:55","commitOrder":2,"curCode":"        public void recordErrors(String topic, int count) {\n            long nowMs = time.milliseconds();\n            this.errorSensor.record(count, nowMs);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor != null) topicErrorSensor.record(count, nowMs);\n        }\n","date":"2014-04-23 08:47:55","endLine":887,"groupId":"20013","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"recordErrors","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f0/152fabbdd44e9f1a24291e84c17edf8379f4fc.src","preCode":"        public void recordErrors(String topic, int count) {\n            this.errorSensor.record(count);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor == null) {\n                topicErrorSensor = this.metrics.sensor(topicErrorName);\n                topicErrorSensor.add(\"topic.\" + topic + \".record-error-rate\", new Rate());\n            }\n            topicErrorSensor.record(count);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":881,"status":"M"}],"commitId":"93af67cd4f75d2f4cc3a25ad999fe6349925504e","commitMessage":"@@@kafka-1359; Followup on K1359: change nanoTime to currentTimeMillis in metrics; patched by Guozhang Wang; reviewed by Neha Narkhede.  Jun Rao\n","date":"2014-04-23 08:47:55","modifiedFileCount":"21","status":"M","submitter":"Guozhang Wang"},{"authorTime":"2014-06-11 08:41:29","codes":[{"authorDate":"2014-06-11 08:41:29","commitOrder":3,"curCode":"        public void recordRetries(String topic, int count) {\n            long now = time.milliseconds();\n            this.retrySensor.record(count, now);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor != null)\n                topicRetrySensor.record(count, now);\n        }\n","date":"2014-06-11 08:41:29","endLine":423,"groupId":"104255","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"recordRetries","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c6/7b947c464ec86e28fbdf35af811e5e40f22a7a.src","preCode":"        public void recordRetries(String topic, int count) {\n            long nowMs = time.milliseconds();\n            this.retrySensor.record(count, nowMs);\n            String topicRetryName = \"topic.\" + topic + \".record-retries\";\n            Sensor topicRetrySensor = this.metrics.getSensor(topicRetryName);\n            if (topicRetrySensor != null)\n              topicRetrySensor.record(count, nowMs);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"M"},{"authorDate":"2014-06-11 08:41:29","commitOrder":3,"curCode":"        public void recordErrors(String topic, int count) {\n            long now = time.milliseconds();\n            this.errorSensor.record(count, now);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor != null)\n                topicErrorSensor.record(count, now);\n        }\n","date":"2014-06-11 08:41:29","endLine":432,"groupId":"104255","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"recordErrors","params":"(Stringtopic@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c6/7b947c464ec86e28fbdf35af811e5e40f22a7a.src","preCode":"        public void recordErrors(String topic, int count) {\n            long nowMs = time.milliseconds();\n            this.errorSensor.record(count, nowMs);\n            String topicErrorName = \"topic.\" + topic + \".record-errors\";\n            Sensor topicErrorSensor = this.metrics.getSensor(topicErrorName);\n            if (topicErrorSensor != null)\n              topicErrorSensor.record(count, nowMs);\n        }\n","realPath":"clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"M"}],"commitId":"548d1ba0939c43fff14531510140e2c641b1caa5","commitMessage":"@@@KAFKA-1326 Refactor Sender to support consumer.\n","date":"2014-06-11 08:41:29","modifiedFileCount":"24","status":"M","submitter":"Jay Kreps"}]
