[{"authorTime":"2020-10-17 00:17:03","codes":[{"authorDate":"2020-10-17 00:17:03","commitOrder":1,"curCode":"    public void testSourceAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.sourceAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","date":"2020-10-17 00:17:03","endLine":198,"groupId":"19416","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourceAdminConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/45/8946a90d746b620bd602df3bb1789eb2048572.src","preCode":"    public void testSourceAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.sourceAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","realPath":"connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2020-10-17 00:17:03","commitOrder":1,"curCode":"    public void testTargetAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.targetAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","date":"2020-10-17 00:17:03","endLine":222,"groupId":"19416","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTargetAdminConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/45/8946a90d746b620bd602df3bb1789eb2048572.src","preCode":"    public void testTargetAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.targetAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","realPath":"connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"}],"commitId":"cf202cb6acf38c64a3e8b9e541673a12ee55eaaa","commitMessage":"@@@MINOR: Fix consumer/producer properties override (#9313)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>.  Ryanne Dolan <ryannedolan@gmail.com>","date":"2020-10-17 00:17:03","modifiedFileCount":"3","status":"B","submitter":"Samuel Cantero"},{"authorTime":"2021-05-27 14:21:45","codes":[{"authorDate":"2021-05-27 14:21:45","commitOrder":2,"curCode":"    public void testSourceAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.sourceAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps,\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX + \" source connector admin props not matching\");\n    }\n","date":"2021-05-27 14:21:45","endLine":227,"groupId":"104608","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourceAdminConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7a/be30def6ddc1a7de04c670bfc6b427b2043937.src","preCode":"    public void testSourceAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.sourceAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","realPath":"connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"},{"authorDate":"2021-05-27 14:21:45","commitOrder":2,"curCode":"    public void testTargetAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.targetAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps,\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX + \" target connector admin props not matching\");\n    }\n","date":"2021-05-27 14:21:45","endLine":252,"groupId":"104608","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTargetAdminConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7a/be30def6ddc1a7de04c670bfc6b427b2043937.src","preCode":"    public void testTargetAdminConfig() {\n        Map<String, String> connectorProps = makeProps(\n                MirrorConnectorConfig.ADMIN_CLIENT_PREFIX +\n                        \"connections.max.idle.ms\", \"10000\"\n        );\n        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n        Map<String, Object> connectorAdminProps = config.targetAdminConfig();\n        Map<String, Object> expectedAdminProps = new HashMap<>();\n        expectedAdminProps.put(\"connections.max.idle.ms\", \"10000\");\n        assertEquals(expectedAdminProps, connectorAdminProps);\n    }\n","realPath":"connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"56d9482462c2aa941b151015499fc59485fe7426","commitMessage":"@@@KAFKA-12819: Add assert messages to MirrorMaker tests plus other quality of life improvements (#10762)\n\nReviewers: Ryanne Dolan <ryannedolan@gmail.com>.  Konstantine Karantasis <k.karantasis@gmail.com>","date":"2021-05-27 14:21:45","modifiedFileCount":"12","status":"M","submitter":"Matthew de Detrich"}]
