[{"authorTime":"2016-09-23 01:07:50","codes":[{"authorDate":"2016-09-23 01:07:50","commitOrder":1,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(ClientRequest request) {\n                invocations++;\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2016-09-23 01:07:50","endLine":191,"groupId":"21689","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3c/8c7930fbee7d4387e62d8e111e44465f587b4c.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(ClientRequest request) {\n                invocations++;\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"B"},{"authorDate":"2016-09-23 01:07:50","commitOrder":1,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(ClientRequest request) {\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2016-09-23 01:07:50","endLine":299,"groupId":"21689","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/3c/8c7930fbee7d4387e62d8e111e44465f587b4c.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(ClientRequest request) {\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"B"}],"commitId":"732fabf94ebc9631d31f2feb2116ee8b63beabef","commitMessage":"@@@KAFKA-3782: Ensure heartbeat thread restarted after rebalance woken up\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Guozhang Wang\n\nCloses #1898 from hachikuji/KAFKA-3782\n","date":"2016-09-23 01:07:50","modifiedFileCount":"2","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2016-11-15 08:31:04","codes":[{"authorDate":"2016-11-15 08:31:04","commitOrder":2,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2016-11-15 08:31:04","endLine":191,"groupId":"21689","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bb/617ae4f24795f218d2afc28951d65f0f2ebeb0.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(ClientRequest request) {\n                invocations++;\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2016-11-15 08:31:04","commitOrder":2,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2016-11-15 08:31:04","endLine":299,"groupId":"21689","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/bb/617ae4f24795f218d2afc28951d65f0f2ebeb0.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(ClientRequest request) {\n                boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.id;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"3b4c347949c02b1e2b1dd473deda0f8d2304d027","commitMessage":"@@@KAFKA-2066; Use client-side FetchRequest/FetchResponse on server\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>\n\nCloses #2069 from hachikuji/KAFKA-2066\n","date":"2016-11-15 08:31:04","modifiedFileCount":"80","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2017-07-21 23:47:50","codes":[{"authorDate":"2017-07-21 23:47:50","commitOrder":3,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator(RETRY_BACKOFF_MS);\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2017-07-21 23:47:54","endLine":224,"groupId":"21689","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/af/ebd9d974530557ac2262987e50c5f09a6e236f.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2017-07-21 23:47:50","commitOrder":3,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator(RETRY_BACKOFF_MS);\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2017-07-21 23:47:54","endLine":338,"groupId":"21689","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/af/ebd9d974530557ac2262987e50c5f09a6e236f.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"4a7064d1ae323903a0d1353372aabadabebb1ed6","commitMessage":"@@@KAFKA-5512; Awake the heartbeat thread when timetoNextHeartbeat is equal to 0\n\nAuthor: Stephane Roset <stephane@roset.me>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Jason Gustafson <jason@confluent.io>\n\nCloses #3442 from rosets/KAFKA-5512\n","date":"2017-07-21 23:47:54","modifiedFileCount":"2","status":"M","submitter":"Stephane Roset"},{"authorTime":"2018-06-14 07:21:30","codes":[{"authorDate":"2018-06-14 07:21:30","commitOrder":4,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2018-06-14 07:21:30","endLine":299,"groupId":"21689","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/8e72505a46304feb5f3e2adba2b0a1854c7025.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator(RETRY_BACKOFF_MS);\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2018-06-14 07:21:30","commitOrder":4,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2018-06-14 07:21:30","endLine":413,"groupId":"21689","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/8e72505a46304feb5f3e2adba2b0a1854c7025.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator(RETRY_BACKOFF_MS);\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"443091b844d4119637d252a5303568e22d4f1d48","commitMessage":"@@@KAFKA-7050; Decrease default consumer request timeout to 30s (#5203)\n\nThis patch changes the default `request.timeout.ms` of the consumer to 30 seconds. Additionally.  it adds logic to `NetworkClient` and related to components to support timeouts at the request level. We use this to handle the special case of the JoinGroup request.  which may block for as long as the value configured by `max.poll.interval.ms`.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <guozhang@confluent.io>","date":"2018-06-14 07:21:30","modifiedFileCount":"18","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2018-08-04 08:25:07","codes":[{"authorDate":"2018-06-14 07:21:30","commitOrder":5,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2018-06-14 07:21:30","endLine":299,"groupId":"21689","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/8e72505a46304feb5f3e2adba2b0a1854c7025.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"},{"authorDate":"2018-08-04 08:25:07","commitOrder":5,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(mockTime.timer(0));\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2018-08-04 08:25:07","endLine":411,"groupId":"21689","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/00/4445f9a4a74adafa7e9a10d67f6572f5325869.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(0);\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"}],"commitId":"fc5f6b0e46ff81302b3e445fed0cdf454c942792","commitMessage":"@@@MINOR: Add Timer to simplify timeout bookkeeping and use it in the consumer (#5087)\n\nWe currently do a lot of bookkeeping for timeouts which is both error-prone and distracting. This patch adds a new `Timer` class to simplify this logic and control unnecessary calls to system time. In particular.  this helps with nested timeout operations. The consumer has been updated to use the new class.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>.  Guozhang Wang <wangguoz@gmail.com>","date":"2018-08-04 08:25:07","modifiedFileCount":"17","status":"M","submitter":"Jason Gustafson"},{"authorTime":"2019-07-27 14:13:37","codes":[{"authorDate":"2019-07-27 14:13:37","commitOrder":6,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2019-07-27 14:13:37","endLine":565,"groupId":"18503","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e0/264b3f359172e214ecb952d70aaedafbd25378.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"},{"authorDate":"2019-07-27 14:13:37","commitOrder":6,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(body -> {\n            boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n            if (isJoinGroupRequest)\n                \r\n                consumerClient.wakeup();\n            return isJoinGroupRequest;\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(mockTime.timer(0));\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2019-07-27 14:13:37","endLine":673,"groupId":"18503","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e0/264b3f359172e214ecb952d70aaedafbd25378.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest)\n                    \r\n                    consumerClient.wakeup();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, \"memberId\", \"leaderId\", Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(mockTime.timer(0));\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"M"}],"commitId":"74c90f46c34727be9484e9826ff543b451ada775","commitMessage":"@@@KAFKA-8221; Add batch leave group request (#6714)\n\nThis patch is part of KIP-345. We are aiming to support batch leave group request issued from admin client. This diff is the first effort to bump leave group request version.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2019-07-27 14:13:37","modifiedFileCount":"10","status":"M","submitter":"Boyang Chen"},{"authorTime":"2019-07-27 14:13:37","codes":[{"authorDate":"2020-03-21 12:26:57","commitOrder":7,"curCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException ignored) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2020-03-21 12:26:57","endLine":713,"groupId":"104072","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupSent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e2/315cd478c3ca95c29740813efeabd830ad3100.src","preCode":"    public void testWakeupAfterJoinGroupSent() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(new MockClient.RequestMatcher() {\n            private int invocations = 0;\n            @Override\n            public boolean matches(AbstractRequest body) {\n                invocations++;\n                boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n                if (isJoinGroupRequest && invocations == 1)\n                    \r\n                    throw new WakeupException();\n                return isJoinGroupRequest;\n            }\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":678,"status":"M"},{"authorDate":"2019-07-27 14:13:37","commitOrder":7,"curCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(body -> {\n            boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n            if (isJoinGroupRequest)\n                \r\n                consumerClient.wakeup();\n            return isJoinGroupRequest;\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(mockTime.timer(0));\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","date":"2019-07-27 14:13:37","endLine":673,"groupId":"104072","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testWakeupAfterJoinGroupReceivedExternalCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e0/264b3f359172e214ecb952d70aaedafbd25378.src","preCode":"    public void testWakeupAfterJoinGroupReceivedExternalCompletion() throws Exception {\n        setupCoordinator();\n\n        mockClient.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));\n        mockClient.prepareResponse(body -> {\n            boolean isJoinGroupRequest = body instanceof JoinGroupRequest;\n            if (isJoinGroupRequest)\n                \r\n                consumerClient.wakeup();\n            return isJoinGroupRequest;\n        }, joinGroupFollowerResponse(1, memberId, leaderId, Errors.NONE));\n        mockClient.prepareResponse(syncGroupResponse(Errors.NONE));\n        AtomicBoolean heartbeatReceived = prepareFirstHeartbeat();\n\n        try {\n            coordinator.ensureActiveGroup();\n            fail(\"Should have woken up from ensureActiveGroup()\");\n        } catch (WakeupException e) {\n        }\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(0, coordinator.onJoinCompleteInvokes);\n        assertFalse(heartbeatReceived.get());\n\n        \r\n        consumerClient.poll(mockTime.timer(0));\n        coordinator.ensureActiveGroup();\n\n        assertEquals(1, coordinator.onJoinPrepareInvokes);\n        assertEquals(1, coordinator.onJoinCompleteInvokes);\n\n        awaitFirstHeartbeat(heartbeatReceived);\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"N"}],"commitId":"c75dc5e2e09cee4ba47a9b6c484cb225acdb086e","commitMessage":"@@@KAFKA-9701 (fix): Only check protocol name when generation is valid (#8324)\n\nThis bug was incurred by #7994 with a too-strong consistency check. It is because a reset generation operation could be called in between the joinGroupRequest -> joinGroupResponse -> SyncGroupRequest -> SyncGroupResponse sequence of events.  if user calls unsubscribe in the middle of consumer#poll().\n\nProper fix is to avoid the protocol name check when the generation is invalid.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>","date":"2020-03-21 12:26:57","modifiedFileCount":"2","status":"M","submitter":"Boyang Chen"}]
