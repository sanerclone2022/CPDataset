[{"authorTime":"2021-03-25 11:15:58","codes":[{"authorDate":"2021-03-25 11:15:58","commitOrder":1,"curCode":"    public void testFulfillmentFailure() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), failed(\"foo\", new UnknownServerException()),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L, \"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","date":"2021-03-25 11:15:58","endLine":195,"groupId":"5617","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFulfillmentFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d2/4123238c06b0766ec32ace3b26daa6184f7efb.src","preCode":"    public void testFulfillmentFailure() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), failed(\"foo\", new UnknownServerException()),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L, \"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"},{"authorDate":"2021-03-25 11:15:58","commitOrder":1,"curCode":"    public void testFulfillmentRetry() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), completed(\"foo\", 15L),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        Map<Set<String>, ApiResult<String, Long>> bazRetry = map(\n            mkSet(\"baz\"), completed(\"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), bazRetry);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","date":"2021-03-25 11:15:58","endLine":219,"groupId":"5616","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFulfillmentRetry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d2/4123238c06b0766ec32ace3b26daa6184f7efb.src","preCode":"    public void testFulfillmentRetry() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), completed(\"foo\", 15L),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        Map<Set<String>, ApiResult<String, Long>> bazRetry = map(\n            mkSet(\"baz\"), completed(\"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), bazRetry);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"3ab9ab6b6ffea700753309d5b9074b45f97b0aa7","commitMessage":"@@@KAFKA-12434; Admin support for `DescribeProducers` API (#10275)\n\nThis patch adds the new `Admin` API to describe producer state as described by KIP-664: https://cwiki.apache.org/confluence/display/KAFKA/KIP-664%3A+Provide+tooling+to+detect+and+abort+hanging+transactions.\n\nThe three new APIs added by KIP-664 require different lookup and request patterns:\n\n- DescribeProducers: send to partition leaders\n- DescribeTransactions: send to coordinators\n- ListTransactions: send to all brokers\n\nOur method of handling complex workflows such as these in `KafkaAdminClient` by chaining together `Call` instances has been clumsy and error-prone at best. I have attempted to introduce a new pattern which separates the lookup stage (e.g. finding partition leaders) from the fulfillment stage (e.g. sending `DescribeProducers`). The lookup stage is implemented by `AdminApiLookupStrategy` and the fulfillment stage is implemented by `AdminApiHandler`. There is a new class `AdminApiDriver` which manages the bookkeeping for these two stages. See the corresponding javadocs for more detail. \n\nThis PR provides an example of usage through `DescribeProducersHandler`.  which is an implementation of `AdminApiHandler`. It relies on `PartitionLeaderStrategy` which implements `AdminApiLookupStrategy`. In addition to allowing for easier reuse of lookup strategies.  this approach provides a more convenient way for testing since all of the logic is not crammed into `KafkaAdminClient`. Follow-up PRs for the rest of KIP-664 will flesh out additional lookup strategies such as for coordinator APIs.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>.  David Jacot <djacot@confluent.io>","date":"2021-03-25 11:15:58","modifiedFileCount":"9","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2021-06-02 08:58:47","codes":[{"authorDate":"2021-06-02 08:58:47","commitOrder":2,"curCode":"    public void testFulfillmentFailure() {\n        TestContext ctx = TestContext.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        ));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), failed(\"foo\", new UnknownServerException()),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L, \"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","date":"2021-06-02 08:58:47","endLine":194,"groupId":"103786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFulfillmentFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a7/8b73a0fb645672fa856502b96b58d82f6c5db9.src","preCode":"    public void testFulfillmentFailure() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), failed(\"foo\", new UnknownServerException()),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L, \"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2021-06-02 08:58:47","commitOrder":2,"curCode":"    public void testFulfillmentRetry() {\n        TestContext ctx = TestContext.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        ));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), completed(\"foo\", 15L),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        Map<Set<String>, ApiResult<String, Long>> bazRetry = map(\n            mkSet(\"baz\"), completed(\"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), bazRetry);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","date":"2021-06-02 08:58:47","endLine":218,"groupId":"103786","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFulfillmentRetry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a7/8b73a0fb645672fa856502b96b58d82f6c5db9.src","preCode":"    public void testFulfillmentRetry() {\n        TestContext ctx = new TestContext(Keys.staticMapped(map(\n            \"foo\", 0,\n            \"bar\", 1,\n            \"baz\", 1\n        )));\n\n        Map<Set<String>, ApiResult<String, Long>> fulfillmentResults = map(\n            mkSet(\"foo\"), completed(\"foo\", 15L),\n            mkSet(\"bar\", \"baz\"), completed(\"bar\", 30L)\n        );\n\n        ctx.poll(emptyMap(), fulfillmentResults);\n\n        Map<Set<String>, ApiResult<String, Long>> bazRetry = map(\n            mkSet(\"baz\"), completed(\"baz\", 45L)\n        );\n\n        ctx.poll(emptyMap(), bazRetry);\n\n        ctx.poll(emptyMap(), emptyMap());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"2d7a4ed3352a927d7d2a13662b585eaef6efdf1c","commitMessage":"@@@KAFKA-12709; Add Admin API for `ListTransactions` (#10616)\n\nThis patch adds `Admin` support for the `listTransactions` API.  which was added by [KIP-664](https://cwiki.apache.org/confluence/display/KAFKA/KIP-664%3A+Provide+tooling+to+detect+and+abort+hanging+transactions). Similar to `listConsumerGroups`.  the new `listTransactions` API is intended to be sent to all brokers. \n\nReviewers: David Jacot <djacot@confluent.io>","date":"2021-06-02 08:58:47","modifiedFileCount":"18","status":"M","submitter":"Jason Gustafson"}]
