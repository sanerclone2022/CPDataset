[{"authorTime":"2017-03-25 03:38:36","codes":[{"authorDate":"2017-03-25 03:38:36","commitOrder":1,"curCode":"    public static int sizeInBytes(long baseOffset, Iterable<Record> records) {\n        Iterator<Record> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            Record record = iterator.next();\n            int offsetDelta = (int) (record.offset() - baseOffset);\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","date":"2017-03-25 03:38:43","endLine":407,"groupId":"22286","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sizeInBytes","params":"(longbaseOffset@Iterable<Record>records)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1d/e568e222e03c4e1694adc642ec35b6c9efb48e.src","preCode":"    public static int sizeInBytes(long baseOffset, Iterable<Record> records) {\n        Iterator<Record> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            Record record = iterator.next();\n            int offsetDelta = (int) (record.offset() - baseOffset);\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":390,"status":"B"},{"authorDate":"2017-03-25 03:38:36","commitOrder":1,"curCode":"    public static int sizeInBytes(Iterable<SimpleRecord> records) {\n        Iterator<SimpleRecord> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        int offsetDelta = 0;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            SimpleRecord record = iterator.next();\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta++, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","date":"2017-03-25 03:38:43","endLine":426,"groupId":"22286","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sizeInBytes","params":"(Iterable<SimpleRecord>records)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1d/e568e222e03c4e1694adc642ec35b6c9efb48e.src","preCode":"    public static int sizeInBytes(Iterable<SimpleRecord> records) {\n        Iterator<SimpleRecord> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        int offsetDelta = 0;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            SimpleRecord record = iterator.next();\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta++, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"B"}],"commitId":"5bd06f1d542e6b588a1d402d059bc24690017d32","commitMessage":"@@@KAFKA-4816; Message format changes for idempotent/transactional producer (KIP-98)\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Apurva Mehta <apurva@confluent.io>.  Guozhang Wang <wangguoz@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #2614 from hachikuji/exactly-once-message-format\n","date":"2017-03-25 03:38:43","modifiedFileCount":"55","status":"B","submitter":"Jason Gustafson"},{"authorTime":"2017-06-30 13:48:45","codes":[{"authorDate":"2017-06-30 13:48:45","commitOrder":2,"curCode":"    public static int sizeInBytes(long baseOffset, Iterable<Record> records) {\n        Iterator<Record> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        Long firstTimestamp = null;\n        while (iterator.hasNext()) {\n            Record record = iterator.next();\n            int offsetDelta = (int) (record.offset() - baseOffset);\n            if (firstTimestamp == null)\n                firstTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - firstTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","date":"2017-06-30 13:48:45","endLine":496,"groupId":"114216","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sizeInBytes","params":"(longbaseOffset@Iterable<Record>records)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ff/8d3b990ba0f03dcce6ea71533c19bedb0b1fac.src","preCode":"    public static int sizeInBytes(long baseOffset, Iterable<Record> records) {\n        Iterator<Record> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            Record record = iterator.next();\n            int offsetDelta = (int) (record.offset() - baseOffset);\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"M"},{"authorDate":"2017-06-30 13:48:45","commitOrder":2,"curCode":"    public static int sizeInBytes(Iterable<SimpleRecord> records) {\n        Iterator<SimpleRecord> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        int offsetDelta = 0;\n        Long firstTimestamp = null;\n        while (iterator.hasNext()) {\n            SimpleRecord record = iterator.next();\n            if (firstTimestamp == null)\n                firstTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - firstTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta++, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","date":"2017-06-30 13:48:45","endLine":515,"groupId":"114216","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sizeInBytes","params":"(Iterable<SimpleRecord>records)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ff/8d3b990ba0f03dcce6ea71533c19bedb0b1fac.src","preCode":"    public static int sizeInBytes(Iterable<SimpleRecord> records) {\n        Iterator<SimpleRecord> iterator = records.iterator();\n        if (!iterator.hasNext())\n            return 0;\n\n        int size = RECORD_BATCH_OVERHEAD;\n        int offsetDelta = 0;\n        Long baseTimestamp = null;\n        while (iterator.hasNext()) {\n            SimpleRecord record = iterator.next();\n            if (baseTimestamp == null)\n                baseTimestamp = record.timestamp();\n            long timestampDelta = record.timestamp() - baseTimestamp;\n            size += DefaultRecord.sizeInBytes(offsetDelta++, timestampDelta, record.key(), record.value(),\n                    record.headers());\n        }\n        return size;\n    }\n","realPath":"clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":498,"status":"M"}],"commitId":"c4193cd1ad8eeed8383a1c2660383c455e848929","commitMessage":"@@@MINOR: Rename baseTimestamp to firstTimestamp to clarify usage\n\nAuthor: Jason Gustafson <jason@confluent.io>\n\nReviewers: Jun Rao <junrao@gmail.com>.  Ismael Juma <ismael@juma.me.uk>\n\nCloses #3457 from hachikuji/rename-base-timestamp\n","date":"2017-06-30 13:48:45","modifiedFileCount":"4","status":"M","submitter":"Jason Gustafson"}]
