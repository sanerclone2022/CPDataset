[{"authorTime":"2019-12-13 02:52:24","codes":[{"authorDate":"2019-12-13 02:52:24","commitOrder":1,"curCode":"    public void timeWindowAggregateManyWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 499);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 499);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","date":"2019-12-13 02:52:24","endLine":216,"groupId":"18766","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"timeWindowAggregateManyWindowsTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/9b6edda177029ce7e9f61325f749c28f9c93c0.src","preCode":"    public void timeWindowAggregateManyWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 499);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 499);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"},{"authorDate":"2019-12-13 02:52:24","commitOrder":1,"curCode":"    public void timeWindowAggregateOverlappingWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L)).advanceBy(ofMillis(200L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 0);\n            testInputTopic.pipeInput(\"k1\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","date":"2019-12-13 02:52:24","endLine":250,"groupId":"18764","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"timeWindowAggregateOverlappingWindowsTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1e/9b6edda177029ce7e9f61325f749c28f9c93c0.src","preCode":"    public void timeWindowAggregateOverlappingWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L)).advanceBy(ofMillis(200L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 0);\n            testInputTopic.pipeInput(\"k1\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"}],"commitId":"d1161bf1060efc2d58b9c72997500dae2b59f169","commitMessage":"@@@KAFKA-6049: Add time window support for cogroup (#7774)\n\nFollow up to PR #7538 (KIP-150)\n\nReviewer: Matthias J. Sax <matthias@confluent.io>\n","date":"2019-12-13 02:52:24","modifiedFileCount":"3","status":"B","submitter":"wcarlson5"},{"authorTime":"2021-02-02 08:20:35","codes":[{"authorDate":"2021-02-02 08:20:35","commitOrder":2,"curCode":"    public void timeWindowAggregateManyWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer(), WINDOW_SIZE), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 499);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 499);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","date":"2021-02-02 08:20:35","endLine":242,"groupId":"101393","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"timeWindowAggregateManyWindowsTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/52429767b7b9a08786b8c4f7ba9e4c460a9c43.src","preCode":"    public void timeWindowAggregateManyWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 499);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 499);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2021-02-02 08:20:35","commitOrder":2,"curCode":"    public void timeWindowAggregateOverlappingWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L)).advanceBy(ofMillis(200L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer(), WINDOW_SIZE), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 0);\n            testInputTopic.pipeInput(\"k1\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","date":"2021-02-02 08:20:35","endLine":276,"groupId":"101393","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"timeWindowAggregateOverlappingWindowsTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/52429767b7b9a08786b8c4f7ba9e4c460a9c43.src","preCode":"    public void timeWindowAggregateOverlappingWindowsTest() {\n\n        final KTable<Windowed<String>, String> customers = groupedStream.cogroup(MockAggregator.TOSTRING_ADDER)\n                .windowedBy(TimeWindows.of(ofMillis(500L)).advanceBy(ofMillis(200L))).aggregate(\n                        MockInitializer.STRING_INIT, Materialized.with(Serdes.String(), Serdes.String()));\n        customers.toStream().to(OUTPUT);\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> testInputTopic = driver.createInputTopic(\n                    TOPIC, new StringSerializer(), new StringSerializer());\n            final TestOutputTopic<Windowed<String>, String> testOutputTopic = driver.createOutputTopic(\n                    OUTPUT, new TimeWindowedDeserializer<>(new StringDeserializer()), new StringDeserializer());\n\n            testInputTopic.pipeInput(\"k1\", \"A\", 0);\n            testInputTopic.pipeInput(\"k2\", \"A\", 0);\n            testInputTopic.pipeInput(\"k1\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"B\", 250);\n            testInputTopic.pipeInput(\"k2\", \"A\", 500L);\n            testInputTopic.pipeInput(\"k1\", \"A\", 500L);\n\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 0);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B\", 250);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k2\", \"0+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+B+A\", 500);\n            assertOutputKeyValueTimestamp(testOutputTopic, \"k1\", \"0+A\", 500);\n        }\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"f5a2fbac6d26fc1613ec34d9764a1e86732f0a45","commitMessage":"@@@KAFKA-10366 & KAFKA-9649: Implement KIP-659 to allow TimeWindowedDeserializer and TimeWindowedSerde to handle window size (#9253)\n\nSee KIP details and discussions here: https://cwiki.apache.org/confluence/display/KAFKA/KIP-659%3A+Improve+TimeWindowedDeserializer+and+TimeWindowedSerde+to+handle+window+size\n\nDeprecates methods that allow users to skip setting a window size when one is needed. Adds a window size streams config to allow the timeWindowedDeserializer to calculate window end time.\n\nReviewers: Walker Carlson <wcarlson@confluent.io>.  John Roesler <vvcephei@apache.org>.  Guozhang Wang <wangguoz@gmail.com>","date":"2021-02-02 08:20:35","modifiedFileCount":"9","status":"M","submitter":"leah"}]
