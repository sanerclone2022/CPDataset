[{"authorTime":"2017-10-05 01:44:46","codes":[{"authorDate":"2018-08-31 19:04:33","commitOrder":2,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2018-08-31 19:04:33","endLine":218,"groupId":"10871","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b0/dfc7a123b18ce01c581f87eb2436256a943c0d.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"},{"authorDate":"2017-10-05 01:44:46","commitOrder":2,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2017-10-05 01:44:46","endLine":1150,"groupId":"10871","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c4/426727ba6283465f8544a918e748504c20985a.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1142,"status":"NB"}],"commitId":"5d1bfa0665ce0850ee76cee152e397c23ac329a7","commitMessage":"@@@KAFKA-6950: Delay response to failed client authentication to prevent potential DoS issues (KIP-306) (#5082)\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>.  Ismael Juma <ismael@juma.me.uk>.  Rajini Sivaram <rajinisivaram@googlemail.com>\n","date":"2018-08-31 19:04:33","modifiedFileCount":"10","status":"M","submitter":"Dhruvil Shah"},{"authorTime":"2018-10-27 06:18:15","codes":[{"authorDate":"2018-08-31 19:04:33","commitOrder":3,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2018-08-31 19:04:33","endLine":218,"groupId":"10871","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b0/dfc7a123b18ce01c581f87eb2436256a943c0d.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"N"},{"authorDate":"2018-10-27 06:18:15","commitOrder":3,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage != null)\n            \r\n            assertEquals(expectedErrorMessage, exception.getMessage());\n        else {\n            String expectedErrorMessagePrefix = \"Authentication failed during authentication due to invalid credentials with SASL mechanism \"\n                    + mechanism + \": \";\n            if (exception.getMessage().startsWith(expectedErrorMessagePrefix))\n                return;\n            \r\n            fail(\"Incorrect failure message: \" + exception.getMessage());\n        }\n    }\n","date":"2018-10-27 06:18:15","endLine":1828,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/54/ff32702cbe44a18dbafe5c4b6e982366acf97b.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1812,"status":"M"}],"commitId":"e8a3bc74254a8e4e4aaca41395177fa4a98b480c","commitMessage":"@@@KAFKA-7352; Allow SASL Connections to Periodically Re-Authenticate (KIP-368) (#5582)\n\nKIP-368 implementation to enable periodic re-authentication of SASL clients. Also adds a broker configuration option to terminate client connections that do not re-authenticate within the configured interval.","date":"2018-10-27 06:18:15","modifiedFileCount":"35","status":"M","submitter":"Ron Dagostino"},{"authorTime":"2019-02-12 06:23:54","codes":[{"authorDate":"2018-08-31 19:04:33","commitOrder":4,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2018-08-31 19:04:33","endLine":218,"groupId":"10871","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b0/dfc7a123b18ce01c581f87eb2436256a943c0d.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"N"},{"authorDate":"2019-02-12 06:23:54","commitOrder":4,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        String expectedExceptionMessage = expectedErrorMessage != null ? expectedErrorMessage :\n                \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedExceptionMessage, exception.getMessage());\n    }\n","date":"2019-02-12 06:23:54","endLine":1889,"groupId":"6400","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c1/3906215bcc10fb4b9f41e345919aaaabb6e3cc.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage != null)\n            \r\n            assertEquals(expectedErrorMessage, exception.getMessage());\n        else {\n            String expectedErrorMessagePrefix = \"Authentication failed during authentication due to invalid credentials with SASL mechanism \"\n                    + mechanism + \": \";\n            if (exception.getMessage().startsWith(expectedErrorMessagePrefix))\n                return;\n            \r\n            fail(\"Incorrect failure message: \" + exception.getMessage());\n        }\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1881,"status":"M"}],"commitId":"5148d7b0ae1ff4ac5f8c500d345045c050b47f88","commitMessage":"@@@KAFKA-7915: Don't return sensitive authentication errors to clients (#6252)\n\nDon't return error messages from `SaslException` to clients. Error messages to be returned to clients to aid debugging must be thrown as AuthenticationExceptions. This is a fix for a regression from KAFKA-7352.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>.  Ismael Juma <ismael@juma.me.uk","date":"2019-02-12 06:23:54","modifiedFileCount":"2","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2019-02-12 06:23:54","codes":[{"authorDate":"2020-12-08 00:12:18","commitOrder":5,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2020-12-08 00:12:18","endLine":253,"groupId":"10871","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/19/003ed56da903f0754ef224807c1ee6056f2ee8.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2019-02-12 06:23:54","commitOrder":5,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        String expectedExceptionMessage = expectedErrorMessage != null ? expectedErrorMessage :\n                \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedExceptionMessage, exception.getMessage());\n    }\n","date":"2019-02-12 06:23:54","endLine":1889,"groupId":"6400","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c1/3906215bcc10fb4b9f41e345919aaaabb6e3cc.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        String expectedExceptionMessage = expectedErrorMessage != null ? expectedErrorMessage :\n                \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedExceptionMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1881,"status":"N"}],"commitId":"b8ebcc2a93a4e0525afb4f5ff6690ef5b7529c57","commitMessage":"@@@KAFKA-10798; Ensure response is delayed for failed SASL authentication with connection close delay (#9678)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>","date":"2020-12-08 00:12:18","modifiedFileCount":"3","status":"M","submitter":"Rajini Sivaram"},{"authorTime":"2021-01-14 08:17:45","codes":[{"authorDate":"2021-01-14 08:17:45","commitOrder":6,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(exception instanceof SaslAuthenticationException, \"Invalid exception class \" + exception.getClass());\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","date":"2021-01-14 08:17:45","endLine":234,"groupId":"103278","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/7d/fde12bafc9ffca5abb2ff47c85caf77e4f2f19.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n                                                           String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        if (expectedErrorMessage == null)\n            expectedErrorMessage = \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedErrorMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorFailureDelayTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2021-01-14 08:17:45","commitOrder":6,"curCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(exception instanceof SaslAuthenticationException, \"Invalid exception class \" + exception.getClass());\n        String expectedExceptionMessage = expectedErrorMessage != null ? expectedErrorMessage :\n                \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedExceptionMessage, exception.getMessage());\n    }\n","date":"2021-01-14 08:17:45","endLine":2123,"groupId":"103278","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createAndCheckClientAuthenticationFailure","params":"(SecurityProtocolsecurityProtocol@Stringnode@Stringmechanism@StringexpectedErrorMessage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/07/0bb738535e6ba941598a0d35b935af6e3c65fa.src","preCode":"    private void createAndCheckClientAuthenticationFailure(SecurityProtocol securityProtocol, String node,\n            String mechanism, String expectedErrorMessage) throws Exception {\n        ChannelState finalState = createAndCheckClientConnectionFailure(securityProtocol, node);\n        Exception exception = finalState.exception();\n        assertTrue(\"Invalid exception class \" + exception.getClass(), exception instanceof SaslAuthenticationException);\n        String expectedExceptionMessage = expectedErrorMessage != null ? expectedErrorMessage :\n                \"Authentication failed during authentication due to invalid credentials with SASL mechanism \" + mechanism;\n        assertEquals(expectedExceptionMessage, exception.getMessage());\n    }\n","realPath":"clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2115,"status":"M"}],"commitId":"52b8aa0fdce1872b5b525b62dc3ac2241cfaa379","commitMessage":"@@@KAFKA-7340: Migrate clients module to JUnit 5 (#9874)\n\n* Use the packages/classes from JUnit 5\n* Move description in `assert` methods to last parameter\n* Convert parameterized tests so that they work with JUnit 5\n* Remove `hamcrest`.  it didn't seem to add much value\n* Fix `Utils.mkEntry` to have correct `equals` implementation\n* Add a missing `@Test` annotation in `SslSelectorTest` override\n* Adjust regex in `SaslAuthenticatorTest` due to small change in the\nassert failure string in JUnit 5\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>","date":"2021-01-14 08:17:45","modifiedFileCount":"254","status":"M","submitter":"Ismael Juma"}]
