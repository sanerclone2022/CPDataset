[{"authorTime":"2019-09-19 00:11:39","codes":[{"authorDate":"2021-07-16 05:00:32","commitOrder":2,"curCode":"    private static LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","date":"2021-07-16 05:00:32","endLine":199,"groupId":"12845","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createLogConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/eb/6d5f73d68b52062b88f061802aa5e4f2c4bab6.src","preCode":"    private static LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","realPath":"jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"},{"authorDate":"2019-09-19 00:11:39","commitOrder":2,"curCode":"    private LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","date":"2019-09-19 00:11:39","endLine":152,"groupId":"12845","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createLogConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/ee/45b6419faec3810692942f639838a410065ffc.src","preCode":"    private LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","realPath":"jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"NB"}],"commitId":"584213ed20d679b11206b67c5a65035347632f07","commitMessage":"@@@Fix perf regression on LISR requests by asynchronously flushing the partition.metadata file (#11056)\n\nAfter noticing increased LISR times.  we discovered a lot of time was spent synchronously flushing the partition metadata file. This PR changes the code so we asynchronously flush the files.\n\nWe ensure files are flushed before appending.  renaming or closing the log to ensure we have the partition metadata information on disk. Three new tests have been added to address these cases.\n\nReviewers:  Lucas Bradstreet <lucas@confluent.io>.  Jun Rao <junrao@gmail.com>","date":"2021-07-16 05:00:32","modifiedFileCount":"1","status":"M","submitter":"Justine Olshan"},{"authorTime":"2021-07-19 20:37:16","codes":[{"authorDate":"2021-07-19 20:37:16","commitOrder":3,"curCode":"    private static LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","date":"2021-07-19 20:37:16","endLine":200,"groupId":"105515","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createLogConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/a9/edc24eaa927bcdebce26c73a031c872862c664.src","preCode":"    private static LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","realPath":"jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2021-07-19 20:37:16","commitOrder":3,"curCode":"    private LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","date":"2021-07-19 20:37:16","endLine":163,"groupId":"105515","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createLogConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/79/f2c39f9d48bad88c9acb49ead908ff1d405532.src","preCode":"    private LogConfig createLogConfig() {\n        Properties logProps = new Properties();\n        logProps.put(LogConfig.SegmentMsProp(), Defaults.SegmentMs());\n        logProps.put(LogConfig.SegmentBytesProp(), Defaults.SegmentSize());\n        logProps.put(LogConfig.RetentionMsProp(), Defaults.RetentionMs());\n        logProps.put(LogConfig.RetentionBytesProp(), Defaults.RetentionSize());\n        logProps.put(LogConfig.SegmentJitterMsProp(), Defaults.SegmentJitterMs());\n        logProps.put(LogConfig.CleanupPolicyProp(), Defaults.CleanupPolicy());\n        logProps.put(LogConfig.MaxMessageBytesProp(), Defaults.MaxMessageSize());\n        logProps.put(LogConfig.IndexIntervalBytesProp(), Defaults.IndexInterval());\n        logProps.put(LogConfig.SegmentIndexBytesProp(), Defaults.MaxIndexSize());\n        logProps.put(LogConfig.MessageFormatVersionProp(), Defaults.MessageFormatVersion());\n        logProps.put(LogConfig.FileDeleteDelayMsProp(), Defaults.FileDeleteDelayMs());\n        return LogConfig.apply(logProps, new scala.collection.immutable.HashSet<>());\n    }\n","realPath":"jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"}],"commitId":"a46b82bea9abbd08e550d985f87e79a6d912a9ab","commitMessage":"@@@KAFKA-12944: Assume message format version is 3.0 when inter-broker protocol is 3.0 or higher (KIP-724) (#11036)\n\nAlso:\n* Deprecate `log.message.format.version` and `message.format.version`.\n* Log broker warning if the deprecated config values are ignored due to\nthe inter-broker protocol version.\n* Log warning if `message.format.version` is set via `ConfigCommand`.\n* Always down-convert if fetch version is v3 or lower.\n* Add tests to verify new message format version based on the\ninter-broker protocol version.\n* Adjust existing tests that create topics with an older message format to\nhave the inter-broker protocol set to 2.8.\n* Add upgrade note.\n\nNote that the log compaction change to always write new segments with\nrecord format v2 if the IBP is 3.0 or higher will be done as part of\nKAFKA-13093 (with Kafka 3.1 as the target release version).\n\nReviewers: David Jacot <djacot@confluent.io>.  David Arthur <mumrah@gmail.com>.  Jason Gustafson <jason@confluent.io>","date":"2021-07-19 20:37:16","modifiedFileCount":"8","status":"M","submitter":"Ismael Juma"}]
