[{"authorTime":"2018-02-10 07:29:21","codes":[{"authorDate":"2018-02-10 07:29:21","commitOrder":1,"curCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        Assert.assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2018-02-10 07:29:21","endLine":755,"groupId":"19936","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotUpdateStoreForLargerValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/17/d5e02f4be017196ccbd0915de728e287884c01.src","preCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        Assert.assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":749,"status":"B"},{"authorDate":"2018-02-10 07:29:21","commitOrder":1,"curCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2018-02-10 07:29:21","endLine":779,"groupId":"11471","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPunctuateIfEvenTimeAdvances","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/17/d5e02f4be017196ccbd0915de728e287884c01.src","preCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"B"}],"commitId":"dc54c0e24b3f7ca27990b1d576b8b8fd6d740ca1","commitMessage":"@@@KAFKA-3625: TopologyTestDriver must process output for wall-clock-time punctuations and on close() (#4502)\n\nAuthor: Matthias J. Sax <matthias@confluent.io>\n\nReviewer: Damian Guy <damian@confluent.io>.  Bill Bejeck <bill@confluent.io>.  Guozhang Wang <guozhang@confluent.io>","date":"2018-02-10 07:29:21","modifiedFileCount":"2","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2018-02-10 07:29:21","codes":[{"authorDate":"2019-02-12 14:06:14","commitOrder":2,"curCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2019-02-12 14:06:14","endLine":823,"groupId":"20334","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotUpdateStoreForLargerValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9d/e779800774ed01b488117302ec68503e7316e4.src","preCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        Assert.assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":817,"status":"M"},{"authorDate":"2018-02-10 07:29:21","commitOrder":2,"curCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2018-02-10 07:29:21","endLine":779,"groupId":"11471","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPunctuateIfEvenTimeAdvances","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/17/d5e02f4be017196ccbd0915de728e287884c01.src","preCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"N"}],"commitId":"c7f99bc2bd9af5eb6ca9e20a02d5806c52d434b3","commitMessage":"@@@MINOR: Update JUnit to 4.13 and annotate log cleaner integration test (#6248)\n\nJUnit 4.13 fixes the issue where `Category` and `Parameterized` annotations\ncould not be used together. It also deprecates `ExpectedException` and\n`assertThat`. Given this.  we:\n\n- Replace `ExpectedException` with the newly introduced `assertThrows`.\n- Replace `Assert.assertThat` with `MatcherAssert.assertThat`.\n- Annotate `AbstractLogCleanerIntegrationTest` with `IntegrationTest` category.\n\nReviewers: Ewen Cheslack-Postava <ewen@confluent.io>.  David Arthur <mumrah@gmail.com>","date":"2019-02-12 14:06:14","modifiedFileCount":"40","status":"M","submitter":"Ismael Juma"},{"authorTime":"2019-05-16 23:16:00","codes":[{"authorDate":"2019-05-16 23:16:00","commitOrder":3,"curCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2019-05-16 23:16:00","endLine":963,"groupId":"20334","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotUpdateStoreForLargerValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/942031e13c78a5e20234fee3f1572b4974ed2a.src","preCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":957,"status":"M"},{"authorDate":"2019-05-16 23:16:00","commitOrder":3,"curCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","date":"2019-05-16 23:16:00","endLine":987,"groupId":"11471","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPunctuateIfEvenTimeAdvances","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/23/942031e13c78a5e20234fee3f1572b4974ed2a.src","preCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        Assert.assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":976,"status":"M"}],"commitId":"16b408898e75b00ddf6b607246833cdbcd56f507","commitMessage":"@@@KAFAK-3522: Add TopologyTestDriver unit tests (#6179)\n\nReviewers: John Roesler <john@confluent.io>.  Bill Bejeck <bill@confluent.io>","date":"2019-05-16 23:16:00","modifiedFileCount":"2","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2019-10-07 16:01:58","codes":[{"authorDate":"2019-10-07 16:01:58","commitOrder":4,"curCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        pipeInput(\"input-topic\", \"a\", 42L, 9999L);\n        assertThat(store.get(\"a\"), equalTo(42L));\n        compareKeyValue(testDriver.readRecord(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        assertTrue(testDriver.isEmpty(\"result-topic\"));\n    }\n","date":"2019-10-07 16:01:58","endLine":1214,"groupId":"10559","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotUpdateStoreForLargerValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/cfbc602bf4737e805c6d84bcb80cb56cd8ddc0.src","preCode":"    public void shouldNotUpdateStoreForLargerValue() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 42L, 9999L));\n        assertThat(store.get(\"a\"), equalTo(42L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 42L);\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1208,"status":"M"},{"authorDate":"2019-10-07 16:01:58","commitOrder":4,"curCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        pipeInput(\"input-topic\", \"a\", 1L, 9999L);\n        compareKeyValue(testDriver.readRecord(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        pipeInput(\"input-topic\", \"a\", 1L, 9999L);\n        assertTrue(testDriver.isEmpty(\"result-topic\"));\n\n        pipeInput(\"input-topic\", \"a\", 1L, 10000L);\n        compareKeyValue(testDriver.readRecord(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        assertTrue(testDriver.isEmpty(\"result-topic\"));\n    }\n","date":"2019-10-07 16:01:58","endLine":1238,"groupId":"10559","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldPunctuateIfEvenTimeAdvances","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/cfbc602bf4737e805c6d84bcb80cb56cd8ddc0.src","preCode":"    public void shouldPunctuateIfEvenTimeAdvances() {\n        setup();\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 9999L));\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n\n        testDriver.pipeInput(recordFactory.create(\"input-topic\", \"a\", 1L, 10000L));\n        OutputVerifier.compareKeyValue(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer), \"a\", 21L);\n        assertNull(testDriver.readOutput(\"result-topic\", stringDeserializer, longDeserializer));\n    }\n","realPath":"streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":1227,"status":"M"}],"commitId":"a5a6938c69f4310f7ec519036f0df77d8022326a","commitMessage":"@@@KAFKA-8233: TopologyTestDriver test input and output usability improvements (#7378)\n\nImplements KIP-470\n\nReviewers: Bill Bejeck <bill@confluent.io>.  John Roesler <john@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2019-10-07 16:01:58","modifiedFileCount":"47","status":"M","submitter":"Jukka Karvanen"}]
