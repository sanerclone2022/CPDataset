[{"authorTime":"2020-10-08 21:08:24","codes":[{"authorDate":"2020-10-08 21:08:24","commitOrder":1,"curCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator = cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","date":"2020-10-08 21:08:24","endLine":306,"groupId":"9591","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFlushItemsToStoreOnEviction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/e5/84e2ca706b69fb6c55f307ac1b6f2ba88a3321.src","preCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator = cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CachingInMemorySessionStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"B"},{"authorDate":"2020-10-08 21:08:24","commitOrder":1,"curCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator =\n            cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","date":"2020-10-08 21:08:24","endLine":294,"groupId":"9591","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFlushItemsToStoreOnEviction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d4/72c7f5637dbcec95a7d99980dd6e71c8c0d2bc.src","preCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator =\n            cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentSessionStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"B"}],"commitId":"d0e6943bdd048aa6e0a4dbbdad3c8da460db16dc","commitMessage":"@@@KAFKA-9929: Support backward iterator on SessionStore (#9139)\n\nImplements KIP-617 for `SessionStore`\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-10-08 21:08:24","modifiedFileCount":"14","status":"B","submitter":"Jorge Esteban Quilcate Otoya"},{"authorTime":"2021-07-27 07:25:22","codes":[{"authorDate":"2021-07-27 07:25:22","commitOrder":2,"curCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        try (final KeyValueIterator<Windowed<Bytes>, byte[]> iterator = cachingStore.findSessions(added.get(0).key.key(), 0, 0)) {\n            final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n            assertEquals(added.get(0).key, next.key);\n            assertArrayEquals(added.get(0).value, next.value);\n        }\n    }\n","date":"2021-07-27 07:25:22","endLine":314,"groupId":"101014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldFlushItemsToStoreOnEviction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/97/7504628762f94bca97d60b6a7746659fdd9cfd.src","preCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator = cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CachingInMemorySessionStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"},{"authorDate":"2021-07-27 07:25:22","commitOrder":2,"curCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        try (final KeyValueIterator<Windowed<Bytes>, byte[]> iterator =\n                 cachingStore.findSessions(added.get(0).key.key(), 0, 0)) {\n            final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n            assertEquals(added.get(0).key, next.key);\n            assertArrayEquals(added.get(0).value, next.value);\n        }\n    }\n","date":"2021-07-27 07:25:22","endLine":303,"groupId":"101014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldFlushItemsToStoreOnEviction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9a/f329df538bcd4b42bc705ac6f6ee16ef15f7c3.src","preCode":"    public void shouldFlushItemsToStoreOnEviction() {\n        final List<KeyValue<Windowed<Bytes>, byte[]>> added = addSessionsUntilOverflow(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(added.size() - 1, cache.size());\n        final KeyValueIterator<Windowed<Bytes>, byte[]> iterator =\n            cachingStore.findSessions(added.get(0).key.key(), 0, 0);\n        final KeyValue<Windowed<Bytes>, byte[]> next = iterator.next();\n        assertEquals(added.get(0).key, next.key);\n        assertArrayEquals(added.get(0).value, next.value);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentSessionStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"ded66d92a4e0fd5810311b727f76058386d92c25","commitMessage":"@@@KAFKA-13124: close KeyValueIterator instance in internals tests (part 1) (#11106)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>","date":"2021-07-27 07:25:22","modifiedFileCount":"7","status":"M","submitter":"Luke Chen"}]
