[{"authorTime":"2020-10-08 03:17:47","codes":[{"authorDate":"2020-10-08 03:17:47","commitOrder":1,"curCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStatelessTask(createConfig(false, \"0\"), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null, log);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log)\n        );\n    }\n","date":"2020-10-08 03:17:47","endLine":2092,"groupId":"10366","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInitTaskTimeoutAndEventuallyThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/49/4ef3f20ef5664fadbff26dce800e06be141550.src","preCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStatelessTask(createConfig(false, \"0\"), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null, log);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2081,"status":"B"},{"authorDate":"2020-10-08 03:17:47","commitOrder":1,"curCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.clearTaskTimeout(log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log);\n    }\n","date":"2020-10-08 03:17:47","endLine":589,"groupId":"10366","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCLearTaskTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/0b/9067c7f341a626cf2439c90546799c7488aefb.src","preCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.clearTaskTimeout(log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":580,"status":"B"}],"commitId":"65c29a9dec3c8b14775344c2edf5c929ec5d1694","commitMessage":"@@@KAFKA-9274: fix incorrect default value for `task.timeout.ms` config (#9385)\n\n - part of KIP-572\n - also add handler method to trigger/reset the timeout on a task\n\nReviewer: John Roesler <john@confluent.io>","date":"2020-10-08 03:17:47","modifiedFileCount":"8","status":"B","submitter":"Matthias J. Sax"},{"authorTime":"2020-10-20 02:07:56","codes":[{"authorDate":"2020-10-20 02:07:56","commitOrder":2,"curCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        task = createStatelessTask(createConfig(false, \"0\"), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null)\n        );\n    }\n","date":"2020-10-20 02:07:56","endLine":2089,"groupId":"11813","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInitTaskTimeoutAndEventuallyThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/9c/f8007837172c89b27bd97c8539bbc6f36e3039.src","preCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStatelessTask(createConfig(false, \"0\"), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null, log);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2079,"status":"M"},{"authorDate":"2020-10-20 02:07:56","commitOrder":2,"curCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.clearTaskTimeout();\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null);\n    }\n","date":"2020-10-20 02:07:56","endLine":586,"groupId":"11812","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCLearTaskTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/45/6697bbc3368b1f804b35f032707b3cf44a8dc1.src","preCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        final Logger log = new LogContext().logger(StreamTaskTest.class);\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null, log);\n        task.clearTaskTimeout(log);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null, log);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"M"}],"commitId":"aef6cd6e9995b42db2cefa7d715321d0edee5628","commitMessage":"@@@KAFKA-9274: Add timeout handling for state restore and StandbyTasks (#9368)\n\n* Part of KIP-572\n* If a TimeoutException happens during restore of active tasks.  or updating standby tasks.  we need to trigger task.timeout.ms timeout.\n\nReviewers: John Roesler <john@confluent.io>","date":"2020-10-20 02:07:56","modifiedFileCount":"15","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2020-10-20 02:07:56","codes":[{"authorDate":"2021-01-07 06:01:02","commitOrder":3,"curCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        task = createStatelessTask(createConfig(), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null)\n        );\n    }\n","date":"2021-01-07 06:01:02","endLine":2169,"groupId":"11813","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInitTaskTimeoutAndEventuallyThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/c1/b67d9f5e37d8b8b82948e5ddba15ceacb74034.src","preCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        task = createStatelessTask(createConfig(false, \"0\"), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2159,"status":"M"},{"authorDate":"2020-10-20 02:07:56","commitOrder":3,"curCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.clearTaskTimeout();\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null);\n    }\n","date":"2020-10-20 02:07:56","endLine":586,"groupId":"11812","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCLearTaskTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/45/6697bbc3368b1f804b35f032707b3cf44a8dc1.src","preCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.clearTaskTimeout();\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"N"}],"commitId":"22e8e71156762b40ac93e2cbd42eacba00dbfb0c","commitMessage":"@@@KAFKA-9274: Fix commit-TimeoutException handling for EOS (#9800)\n\nIf EOS is enabled and the TX commit fails with a timeout. \nwe should not process more messages (what is ok for non-EOS)\nbecause we don't really know the status of the TX.\nIf the commit was indeed successful.  we won't have an open TX\ncan calling send() would fail with an fatal error.\n\nInstead.  we should retry the (idempotent) commit of the TX. \nand start a new TX afterwards.\n\nReviewers: Boyang Chen <boyang@confluent.io>.  John Roesler <john@confluent.io>","date":"2021-01-07 06:01:02","modifiedFileCount":"2","status":"M","submitter":"Matthias J. Sax"},{"authorTime":"2020-10-20 02:07:56","codes":[{"authorDate":"2021-06-01 20:05:08","commitOrder":4,"curCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        task = createStatelessTask(createConfig());\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null)\n        );\n    }\n","date":"2021-06-01 20:05:08","endLine":2193,"groupId":"102081","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldInitTaskTimeoutAndEventuallyThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/5b/4125699caf2dbc0cadbc936ac0104e34e104b7.src","preCode":"    public void shouldInitTaskTimeoutAndEventuallyThrow() {\n        task = createStatelessTask(createConfig(), StreamsConfig.METRICS_LATEST);\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(), null);\n\n        assertThrows(\n            TimeoutException.class,\n            () -> task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null)\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":2183,"status":"M"},{"authorDate":"2020-10-20 02:07:56","commitOrder":4,"curCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.clearTaskTimeout();\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null);\n    }\n","date":"2020-10-20 02:07:56","endLine":586,"groupId":"102081","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCLearTaskTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/45/6697bbc3368b1f804b35f032707b3cf44a8dc1.src","preCode":"    public void shouldCLearTaskTimeout() {\n        EasyMock.replay(stateManager);\n\n        task = createStandbyTask();\n\n        task.maybeInitTaskTimeoutOrThrow(0L, null);\n        task.clearTaskTimeout();\n        task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(), null);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"N"}],"commitId":"cfe642edee80977173279f4a41e23aa822b9d19f","commitMessage":"@@@KAFKA-12519: Remove built-in Streams metrics for versions 0.10.0-2.4 (#10765)\n\nAs specified in KIP-743.  this PR removes the built-in metrics\nin Streams that are superseded by the refactoring proposed in KIP-444.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>.  Luke Chen <showuon@gmail.com>","date":"2021-06-01 20:05:08","modifiedFileCount":"73","status":"M","submitter":"Bruno Cadonna"}]
