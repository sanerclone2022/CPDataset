[{"authorTime":"2020-10-08 21:08:24","codes":[{"authorDate":"2019-10-31 00:24:59","commitOrder":3,"curCode":"    public KeyValueIterator<Windowed<K>, V> fetch(final K from,\n                                                  final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().fetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time);\n    }\n","date":"2019-10-31 00:24:59","endLine":185,"groupId":"4016","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fetch","params":"(finalKfrom@finalKto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/17/8704fb5108376a23a2365a7d745e397a16f718.src","preCode":"    public KeyValueIterator<Windowed<K>, V> fetch(final K from,\n                                                  final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().fetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"NB"},{"authorDate":"2020-10-08 21:08:24","commitOrder":3,"curCode":"    public KeyValueIterator<Windowed<K>, V> backwardFetch(final K from,\n                                                          final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().backwardFetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time\n        );\n    }\n","date":"2020-10-08 21:08:24","endLine":261,"groupId":"4016","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"backwardFetch","params":"(finalKfrom@finalKto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f7/f25c054f326766fd6c1bb23a520babbb74d510.src","preCode":"    public KeyValueIterator<Windowed<K>, V> backwardFetch(final K from,\n                                                          final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().backwardFetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"B"}],"commitId":"d0e6943bdd048aa6e0a4dbbdad3c8da460db16dc","commitMessage":"@@@KAFKA-9929: Support backward iterator on SessionStore (#9139)\n\nImplements KIP-617 for `SessionStore`\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-10-08 21:08:24","modifiedFileCount":"14","status":"M","submitter":"Jorge Esteban Quilcate Otoya"},{"authorTime":"2021-05-08 02:24:41","codes":[{"authorDate":"2021-05-08 02:24:41","commitOrder":4,"curCode":"    public KeyValueIterator<Windowed<K>, V> fetch(final K keyFrom,\n                                                  final K keyTo) {\n        Objects.requireNonNull(keyFrom, \"keyFrom cannot be null\");\n        Objects.requireNonNull(keyTo, \"keyTo cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().fetch(keyBytes(keyFrom), keyBytes(keyTo)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time);\n    }\n","date":"2021-05-08 02:24:41","endLine":257,"groupId":"102930","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fetch","params":"(finalKkeyFrom@finalKkeyTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1f/bc8db095799d95dd3609bcf6f27211f50a2547.src","preCode":"    public KeyValueIterator<Windowed<K>, V> fetch(final K from,\n                                                  final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().fetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time);\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"},{"authorDate":"2021-05-08 02:24:41","commitOrder":4,"curCode":"    public KeyValueIterator<Windowed<K>, V> backwardFetch(final K keyFrom,\n                                                          final K keyTo) {\n        Objects.requireNonNull(keyFrom, \"keyFrom cannot be null\");\n        Objects.requireNonNull(keyTo, \"keyTo cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().backwardFetch(keyBytes(keyFrom), keyBytes(keyTo)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time\n        );\n    }\n","date":"2021-05-08 02:24:41","endLine":271,"groupId":"102930","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"backwardFetch","params":"(finalKkeyFrom@finalKkeyTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/1f/bc8db095799d95dd3609bcf6f27211f50a2547.src","preCode":"    public KeyValueIterator<Windowed<K>, V> backwardFetch(final K from,\n                                                          final K to) {\n        Objects.requireNonNull(from, \"from cannot be null\");\n        Objects.requireNonNull(to, \"to cannot be null\");\n        return new MeteredWindowedKeyValueIterator<>(\n            wrapped().backwardFetch(keyBytes(from), keyBytes(to)),\n            fetchSensor,\n            streamsMetrics,\n            serdes,\n            time\n        );\n    }\n","realPath":"streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"}],"commitId":"8f8f914efc2dfb2a6638553038dcb17393d7de96","commitMessage":"@@@KAFKA-12536: Add Instant-based methods to ReadOnlySessionStore (#10390)\n\nImplements: KIP-666 (https://cwiki.apache.org/confluence/display/KAFKA/KIP-666%3A+Add+Instant-based+methods+to+ReadOnlySessionStore)\n\nReviewers: John Roesler <vvcephei@apache.org>","date":"2021-05-08 02:24:41","modifiedFileCount":"11","status":"M","submitter":"Jorge Esteban Quilcate Otoya"}]
