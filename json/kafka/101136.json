[{"authorTime":"2016-07-20 05:02:21","codes":[{"authorDate":"2016-07-20 05:02:21","commitOrder":1,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","date":"2016-07-20 05:02:21","endLine":58,"groupId":"11582","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/82/5c1e8f42bf5fb39a245b1374d94d6e04cc3c9c.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2016-07-20 05:02:21","commitOrder":1,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","date":"2016-07-20 05:02:21","endLine":56,"groupId":"21678","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/14/af192f34092e2768651b3f3b809f812a1774f4.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"f1dd0d272313deceaf7021e54c09a63043acf4af","commitMessage":"@@@KAFKA-3912: Query local state stores\n\nguozhangwang enothereska please review\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Eno Thereska.  Matthias J. Sax.  Michael G. Noll.  Guozhang Wang\n\nCloses #1565 from dguy/kafka-3912\n","date":"2016-07-20 05:02:21","modifiedFileCount":"18","status":"B","submitter":"Damian Guy"},{"authorTime":"2016-09-20 02:00:53","codes":[{"authorDate":"2016-09-20 02:00:53","commitOrder":2,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","date":"2016-09-20 02:00:53","endLine":60,"groupId":"11582","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/d0/98429e28a833c1d2a4dbf48b3beb293cde94f1.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2016-09-20 02:00:53","commitOrder":2,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","date":"2016-09-20 02:00:53","endLine":58,"groupId":"21678","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/05/c32f02d7d8c840567f8f3eb8a5cf515e076365.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub();\n        stubProviderTwo = new StateStoreProviderStub();\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"3d74196f205c53946b6fc3dd0501aa2095f0031a","commitMessage":"@@@KAFKA-4163: NPE in StreamsMetadataState during re-balance operations\n\nDuring rebalance operations the Cluster object gets set to Cluster.empty(). This can result in NPEs when doing certain operation on StreamsMetadataState. This should throw a StreamsException if the Cluster is empty as it is not yet (re-)initialized\n\nAuthor: Damian Guy <damian.guy@gmail.com>\n\nReviewers: Eno Thereska.  Guozhang Wang\n\nCloses #1845 from dguy/streams-meta-hotfix\n","date":"2016-09-20 02:00:53","modifiedFileCount":"15","status":"M","submitter":"Damian Guy"},{"authorTime":"2016-09-20 02:00:53","codes":[{"authorDate":"2017-05-19 08:02:51","commitOrder":3,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","date":"2017-05-19 08:02:51","endLine":69,"groupId":"11582","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b6/e95a7ab8b737b4ccd864b9b10361386b0944e4.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>();\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2016-09-20 02:00:53","commitOrder":3,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","date":"2016-09-20 02:00:53","endLine":58,"groupId":"21678","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/05/c32f02d7d8c840567f8f3eb8a5cf515e076365.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"e28752357705568219315375c666f8e500db9c12","commitMessage":"@@@KAFKA-5192: add WindowStore range scan (KIP-155)\n\nImplements range scan for keys in windowed and session stores\n\nModifies caching session and windowed stores to use segmented cache keys.\nCache keys are internally prefixed with their segment id to ensure key ordering in the cache matches the ordering in the underlying store for keys spread across multiple segments.\nThis should also result in fewer cache keys getting scanned for queries spanning only some segments.\n\nAuthor: Xavier L?aut? <xavier@confluent.io>\n\nReviewers: Damian Guy.  Guozhang Wang\n\nCloses #3027 from xvrl/windowstore-range-scan\n","date":"2017-05-19 08:02:51","modifiedFileCount":"40","status":"M","submitter":"Xavier L?aut?"},{"authorTime":"2020-01-15 06:10:19","codes":[{"authorDate":"2020-01-15 06:10:19","commitOrder":4,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), false),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","date":"2020-01-16 03:47:40","endLine":75,"groupId":"11582","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/64/95d8070916dd1f5c149df16bb7bb3380ad46de.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                QueryableStoreTypes.<String, String>windowStore(),\n                storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-01-15 06:10:19","commitOrder":4,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), false),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","date":"2020-01-16 03:47:40","endLine":70,"groupId":"21678","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/f8/af40ba63d48d196e42ca83c187fbaefad90c74.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(Arrays.<StateStoreProvider>asList(stubProviderOne, stubProviderTwo)),\n                                        QueryableStoreTypes.<String, String>keyValueStore(),\n                                        storeName);\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"0c76fbbbedb5d342080dcaf0207602c158d3116d","commitMessage":"@@@KAFKA-6144: IQ option to query standbys (#7962)\n\nAdd a new overload of KafkaStreams#store that allows users\nto query standby and restoring stores in addition to active ones.\n\nCloses: #7962\nImplements: KIP-535\nCo-authored-by: Navinder Pal Singh Brar <navinder_brar@yahoo.com>\nReviewed-by: John Roesler <vvcephei@apache.org>\n","date":"2020-01-16 03:47:40","modifiedFileCount":"15","status":"M","submitter":"vinoth chandar"},{"authorTime":"2020-01-30 15:45:47","codes":[{"authorDate":"2020-01-30 15:45:47","commitOrder":5,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParams.fromNameAndType(storeName, QueryableStoreTypes.windowStore())),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","date":"2020-01-30 15:45:47","endLine":75,"groupId":"11582","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/8a/eb3a09b63484a9f4b9639f6aacdae059dafc2f.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), false),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-01-30 15:45:47","commitOrder":5,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n        final QueryableStoreType<ReadOnlyKeyValueStore<Object, Object>> queryableStoreType = QueryableStoreTypes.keyValueStore();\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParams.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore())),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","date":"2020-01-30 15:45:47","endLine":73,"groupId":"22089","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/b1/6f3bbd569c3c91305008aa08033bae478cf51c.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), false),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"05b2361c0412be25877cb106e9847e9a8a4f622a","commitMessage":"@@@KAFKA-9445: Allow adding changes to allow serving from a specific partition (#7984)\n\nImplements KIP-562.\n\nReviewers: Vinoth Chandar <vchandar@confluent.io>.  Guozhang Wang <guozhang@confluent.io>.  Matthias J. Sax <matthias@confluent.io>","date":"2020-01-30 15:45:47","modifiedFileCount":"20","status":"M","submitter":"Navinder Pal Singh Brar"},{"authorTime":"2020-02-11 02:09:27","codes":[{"authorDate":"2020-02-11 02:09:27","commitOrder":6,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.windowStore())),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","date":"2020-02-11 02:09:27","endLine":75,"groupId":"11582","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/51/4d0940a0c29c8752ed28c2c40382be3e6d28fc.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParams.fromNameAndType(storeName, QueryableStoreTypes.windowStore())),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-02-11 02:09:27","commitOrder":6,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n        final QueryableStoreType<ReadOnlyKeyValueStore<Object, Object>> queryableStoreType = QueryableStoreTypes.keyValueStore();\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore())),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","date":"2020-02-11 02:09:27","endLine":73,"groupId":"22089","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/67/b876ab48ed0f591dea2b7da1b0d2506a5dc64e.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n        final QueryableStoreType<ReadOnlyKeyValueStore<Object, Object>> queryableStoreType = QueryableStoreTypes.keyValueStore();\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParams.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore())),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"d76fa1b22d4b06e1f1a7700272ca963091f13931","commitMessage":"@@@KAFKA-9487: Follow-up PR of Kafka-9445 (#8033)\n\nFollows up on the original PR for KAFKA-9445 to address a final round of feedback\n\nReviewers: John Roesler <vvcephei@apache.org>.  Matthias J. Sax <matthias@confluent.io>\n","date":"2020-02-11 02:09:27","modifiedFileCount":"24","status":"M","submitter":"Navinder Pal Singh Brar"},{"authorTime":"2020-08-22 09:29:40","codes":[{"authorDate":"2020-02-11 02:09:27","commitOrder":7,"curCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.windowStore())),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","date":"2020-02-11 02:09:27","endLine":75,"groupId":"101136","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/51/4d0940a0c29c8752ed28c2c40382be3e6d28fc.src","preCode":"    public void before() {\n        stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n        underlyingWindowStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(storeName, underlyingWindowStore);\n\n        otherUnderlyingStore = new ReadOnlyWindowStoreStub<>(WINDOW_SIZE);\n        stubProviderOne.addStore(\"other-window-store\", otherUnderlyingStore);\n\n        windowStore = new CompositeReadOnlyWindowStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.windowStore())),\n                QueryableStoreTypes.windowStore(),\n                storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2020-08-22 09:29:40","commitOrder":7,"curCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore())),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","date":"2020-08-22 09:29:40","endLine":70,"groupId":"101136","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"before","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-kafka-10-0.7/blobInfo/CC_OUT/blobs/27/dcff402faef69d5ac968656bdd663916277fe8.src","preCode":"    public void before() {\n        final StateStoreProviderStub stubProviderOne = new StateStoreProviderStub(false);\n        stubProviderTwo = new StateStoreProviderStub(false);\n\n        stubOneUnderlying = newStoreInstance();\n        stubProviderOne.addStore(storeName, stubOneUnderlying);\n        otherUnderlyingStore = newStoreInstance();\n        stubProviderOne.addStore(\"other-store\", otherUnderlyingStore);\n        final QueryableStoreType<ReadOnlyKeyValueStore<Object, Object>> queryableStoreType = QueryableStoreTypes.keyValueStore();\n        theStore = new CompositeReadOnlyKeyValueStore<>(\n            new WrappingStoreProvider(asList(stubProviderOne, stubProviderTwo), StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore())),\n            QueryableStoreTypes.keyValueStore(),\n            storeName\n        );\n    }\n","realPath":"streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java","repoName":"kafka","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"89d06780a0f5f27a7420fc2cd8063294367f6693","commitMessage":"@@@KAFKA-9929: Support reverse iterator on KeyValueStore (#9137)\n\nAdd new methods to KeyValueStore interfaces to support reverse iteration.\n\nReviewers: A. Sophie Blee-Goldman <sophie@confluent.io>.  John Roesler <vvcephei@apache.org>","date":"2020-08-22 09:29:40","modifiedFileCount":"43","status":"M","submitter":"Jorge Esteban Quilcate Otoya"}]
