[{"authorTime":"2019-09-17 12:15:58","codes":[{"authorDate":"2019-09-17 12:15:58","commitOrder":1,"curCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        Long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2019-09-17 21:28:56","endLine":477,"groupId":"37938","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpRouteStatsAsXml","params":"(booleanfullStats@booleanincludeProcessors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/f6/99edd9ffa609eab586df5e2bc2df9321a596b9.src","preCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        Long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"B"},{"authorDate":"2019-09-17 12:15:58","commitOrder":1,"curCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2019-09-17 21:28:56","endLine":533,"groupId":"4170","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dumpStepStatsAsXml","params":"(booleanfullStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/f6/99edd9ffa609eab586df5e2bc2df9321a596b9.src","preCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"B"}],"commitId":"cefed587dbbf373835bf46ba1bf821a63f122daf","commitMessage":"@@@CAMEL-13939: camel3 - Rename camel-management-impl to camel-management\n","date":"2019-09-17 21:28:56","modifiedFileCount":"2","status":"B","submitter":"Claus Ibsen"},{"authorTime":"2019-09-17 12:15:58","codes":[{"authorDate":"2020-01-13 16:44:18","commitOrder":2,"curCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2020-01-13 16:44:17","endLine":477,"groupId":"37938","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpRouteStatsAsXml","params":"(booleanfullStats@booleanincludeProcessors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e5/7d9f3f10255e2abcc6d9442f41e91a3afdd96b.src","preCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        Long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2019-09-17 12:15:58","commitOrder":2,"curCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2019-09-17 21:28:56","endLine":533,"groupId":"4170","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dumpStepStatsAsXml","params":"(booleanfullStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/f6/99edd9ffa609eab586df5e2bc2df9321a596b9.src","preCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"N"}],"commitId":"06f0a6c0974ae98cd2680ab06d73a6cac699551e","commitMessage":"@@@Fix \"Boxed variable is never null\" warnings reported by lgtm.com. (#3476)\n\n","date":"2020-01-13 16:44:17","modifiedFileCount":"13","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2020-01-17 12:13:52","codes":[{"authorDate":"2020-01-17 12:13:52","commitOrder":3,"curCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat, 7, stat.length() - 2).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2020-01-17 12:13:52","endLine":477,"groupId":"10946","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpRouteStatsAsXml","params":"(booleanfullStats@booleanincludeProcessors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ab/e5bc9f700d3c6f8fb3948769d63bef3e25e353.src","preCode":"    public String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        long processorAccumulatedTime = 0L;\n\n        \r\n        if (includeProcessors) {\n            sb.append(\"  <processorStats>\\n\");\n            MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n            if (server != null) {\n                \r\n                String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n                ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=processors,*\");\n                Set<ObjectName> names = server.queryNames(query, null);\n                List<ManagedProcessorMBean> mps = new ArrayList<>();\n                for (ObjectName on : names) {\n                    ManagedProcessorMBean processor = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedProcessorMBean.class);\n\n                    \r\n                    if (getRouteId().equals(processor.getRouteId())) {\n                        mps.add(processor);\n                    }\n                }\n                mps.sort(new OrderProcessorMBeans());\n\n                \r\n                Map<String, Long> accumulatedTimes = new HashMap<>();\n                Collections.reverse(mps);\n                for (ManagedProcessorMBean processor : mps) {\n                    processorAccumulatedTime += processor.getTotalProcessingTime();\n                    accumulatedTimes.put(processor.getProcessorId(), processorAccumulatedTime);\n                }\n                \r\n                Collections.reverse(mps);\n\n                \r\n                for (ManagedProcessorMBean processor : mps) {\n                    sb.append(\"    <processorStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", processor.getProcessorId(), processor.getIndex(), processor.getState()));\n                    \r\n                    Long accTime = accumulatedTimes.get(processor.getProcessorId());\n                    if (accTime != null) {\n                        sb.append(\" accumulatedProcessingTime=\\\"\").append(accTime).append(\"\\\"\");\n                    }\n                    \r\n                    sb.append(\" \").append(processor.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n                }\n            }\n            sb.append(\"  </processorStats>\\n\");\n        }\n\n        \r\n        long routeSelfTime = getTotalProcessingTime() - processorAccumulatedTime;\n        if (routeSelfTime < 0) {\n            \r\n            routeSelfTime = 0;\n        }\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        answer.append(\" selfProcessingTime=\\\"\").append(routeSelfTime).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        if (includeProcessors) {\n            answer.append(sb);\n        }\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2020-01-17 12:13:52","commitOrder":3,"curCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat, 7, stat.length() - 2).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","date":"2020-01-17 12:13:52","endLine":533,"groupId":"10946","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dumpStepStatsAsXml","params":"(booleanfullStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ab/e5bc9f700d3c6f8fb3948769d63bef3e25e353.src","preCode":"    public String dumpStepStatsAsXml(boolean fullStats) throws Exception {\n        \r\n        \r\n        \r\n        StringBuilder sb = new StringBuilder();\n\n        \r\n        sb.append(\"  <stepStats>\\n\");\n        MBeanServer server = getContext().getManagementStrategy().getManagementAgent().getMBeanServer();\n        if (server != null) {\n            \r\n            String prefix = getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? \"*/\" : \"\";\n            ObjectName query = ObjectName.getInstance(jmxDomain + \":context=\" + prefix + getContext().getManagementName() + \",type=steps,*\");\n            Set<ObjectName> names = server.queryNames(query, null);\n            List<ManagedStepMBean> mps = new ArrayList<>();\n            for (ObjectName on : names) {\n                ManagedStepMBean step = context.getManagementStrategy().getManagementAgent().newProxyClient(on, ManagedStepMBean.class);\n\n                \r\n                if (getRouteId().equals(step.getRouteId())) {\n                    mps.add(step);\n                }\n            }\n            mps.sort(new OrderProcessorMBeans());\n\n            \r\n            for (ManagedStepMBean step : mps) {\n                sb.append(\"    <stepStat\").append(String.format(\" id=\\\"%s\\\" index=\\\"%s\\\" state=\\\"%s\\\"\", step.getProcessorId(), step.getIndex(), step.getState()));\n                \r\n                sb.append(\" \").append(step.dumpStatsAsXml(fullStats).substring(7)).append(\"\\n\");\n            }\n        }\n        sb.append(\"  </stepStats>\\n\");\n\n        StringBuilder answer = new StringBuilder();\n        answer.append(\"<routeStat\").append(String.format(\" id=\\\"%s\\\"\", route.getId())).append(String.format(\" state=\\\"%s\\\"\", getState()));\n        \r\n        String stat = dumpStatsAsXml(fullStats);\n        answer.append(\" exchangesInflight=\\\"\").append(getInflightExchanges()).append(\"\\\"\");\n        InflightRepository.InflightExchange oldest = getOldestInflightEntry();\n        if (oldest == null) {\n            answer.append(\" oldestInflightExchangeId=\\\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\\\"\");\n        } else {\n            answer.append(\" oldestInflightExchangeId=\\\"\").append(oldest.getExchange().getExchangeId()).append(\"\\\"\");\n            answer.append(\" oldestInflightDuration=\\\"\").append(oldest.getDuration()).append(\"\\\"\");\n        }\n        answer.append(\" \").append(stat.substring(7, stat.length() - 2)).append(\">\\n\");\n\n        answer.append(sb);\n\n        answer.append(\"</routeStat>\");\n        return answer.toString();\n    }\n","realPath":"core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"M"}],"commitId":"994a696fff0d067d0bd007f904a707f9561000fa","commitMessage":"@@@Use StringBuilder#append(char[] str.  int offset.  int len) to improve performance. (#3489)\n\n","date":"2020-01-17 12:13:52","modifiedFileCount":"12","status":"M","submitter":"Pascal Schumacher"}]
