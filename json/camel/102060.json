[{"authorTime":"2020-02-03 16:53:08","codes":[{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"acceptMessagesWhileStopping\": ((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((JmsComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((JmsComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((JmsComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((JmsComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":1491,"groupId":"42733","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/9f/7fdea67e2e495c603696281ad4457e830285b7.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"acceptMessagesWhileStopping\": ((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((JmsComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((JmsComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((JmsComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((JmsComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1400,"status":"B"},{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((ActiveMQComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((ActiveMQComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((ActiveMQComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":1572,"groupId":"42733","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/13/20b24119df08f99a86753967b5471828d5aa66.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((ActiveMQComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((ActiveMQComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((ActiveMQComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1477,"status":"B"}],"commitId":"a9464281a71007e7c22dcc337d54fdd58d59ef84","commitMessage":"@@@[CAMEL-14468] Move generated code into src/generated\n","date":"2020-02-04 23:46:50","modifiedFileCount":"45","status":"B","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-07 23:39:41","codes":[{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": ((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": ((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"durableSubscriptionName\": ((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": ((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementMode\": ((JmsComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"acknowledgementModeName\": ((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": ((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": ((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": ((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": ((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"subscriptionDurable\": ((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": ((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": ((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": ((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": ((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": ((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"taskExecutor\": ((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryMode\": ((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": ((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": ((JmsComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": ((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": ((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToType\": ((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": ((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": ((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": ((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": ((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": ((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"forceSendOriginalMessage\": ((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": ((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"asyncStartListener\": ((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": ((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": ((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": ((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": ((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": ((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": ((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": ((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"jmsOperations\": ((JmsComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"mapJmsMessage\": ((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": ((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": ((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": ((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": ((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": ((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": ((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": ((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": ((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": ((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": ((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": ((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":1491,"groupId":"42733","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ff/4104f52dad5ff6d4ed0c5f94492a517c5d3112.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"acceptMessagesWhileStopping\": ((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((JmsComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((JmsComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((JmsComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((JmsComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1400,"status":"M"},{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": ((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": ((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"durableSubscriptionName\": ((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": ((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementMode\": ((ActiveMQComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"acknowledgementModeName\": ((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": ((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": ((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": ((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": ((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"subscriptionDurable\": ((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": ((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": ((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": ((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": ((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": ((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"taskExecutor\": ((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryMode\": ((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": ((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": ((ActiveMQComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": ((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": ((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToType\": ((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": ((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": ((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": ((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": ((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": ((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"forceSendOriginalMessage\": ((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": ((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"asyncStartListener\": ((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": ((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": ((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": ((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": ((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": ((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": ((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": ((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"jmsOperations\": ((ActiveMQComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"mapJmsMessage\": ((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": ((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": ((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": ((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": ((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": ((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": ((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": ((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": ((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": ((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": ((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": ((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":1572,"groupId":"42733","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/82/a7336e3264132b6f6dc22d1e8306600eb4c531.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"acknowledgementMode\": ((ActiveMQComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"eagerPoisonBody\": ((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"eagerLoadingOfProperties\": ((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"acknowledgementModeName\": ((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"autoStartup\": ((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": ((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"replyToCacheLevelName\": ((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"clientId\": ((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"connectionFactory\": ((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"username\": ((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"password\": ((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"deliveryPersistent\": ((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"deliveryMode\": ((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"durableSubscriptionName\": ((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"exceptionListener\": ((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"errorHandler\": ((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"errorHandlerLoggingLevel\": ((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"explicitQosEnabled\": ((ActiveMQComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"exposeListenerSession\": ((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"idleTaskExecutionLimit\": ((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"idleConsumerLimit\": ((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"maxConcurrentConsumers\": ((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"maxMessagesPerTask\": ((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"mapJmsMessage\": ((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"messageIdEnabled\": ((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"priority\": ((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"pubSubNoLocal\": ((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"receiveTimeout\": ((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"taskExecutor\": ((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"timeToLive\": ((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"transacted\": ((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            case \"testConnectionOnStartup\": ((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"asyncStartListener\": ((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"forceSendOriginalMessage\": ((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"requestTimeout\": ((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferExchange\": ((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"transferException\": ((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"jmsOperations\": ((ActiveMQComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"destinationResolver\": ((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"replyToType\": ((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"preserveMessageQos\": ((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"asyncConsumer\": ((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"allowNullBody\": ((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"includeAllJMSXProperties\": ((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"jmsKeyFormatStrategy\": ((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"allowAdditionalHeaders\": ((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"messageCreatedStrategy\": ((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"correlationProperty\": ((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"subscriptionDurable\": ((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionShared\": ((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"subscriptionName\": ((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1477,"status":"M"}],"commitId":"c124568c2cddc1575f565dfd0b14d7ee2393b3fc","commitMessage":"@@@[CAMEL-14523] Regen\n","date":"2020-02-07 23:40:03","modifiedFileCount":"637","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-28 18:01:26","codes":[{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1682,"groupId":"42733","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/59/f1d52df145663e0dd150c88e3031e5cab52ba9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": ((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": ((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"durableSubscriptionName\": ((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": ((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementMode\": ((JmsComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"acknowledgementModeName\": ((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": ((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": ((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": ((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": ((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"subscriptionDurable\": ((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": ((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": ((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": ((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": ((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": ((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"taskExecutor\": ((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryMode\": ((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": ((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": ((JmsComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": ((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": ((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToType\": ((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": ((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": ((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": ((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": ((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": ((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"forceSendOriginalMessage\": ((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": ((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"asyncStartListener\": ((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": ((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": ((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": ((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": ((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": ((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": ((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": ((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"jmsOperations\": ((JmsComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"mapJmsMessage\": ((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": ((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": ((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": ((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": ((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": ((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": ((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": ((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": ((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": ((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": ((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": ((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1580,"status":"M"},{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1763,"groupId":"15778","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/f8/c5c6423dc247b1c011f37f14a0670dfe1b55e8.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": ((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": ((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"durableSubscriptionName\": ((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": ((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementMode\": ((ActiveMQComponent) component).setAcknowledgementMode((int) value); return true;\n            case \"acknowledgementModeName\": ((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": ((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": ((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": ((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": ((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": ((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": ((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"subscriptionDurable\": ((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": ((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": ((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": ((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": ((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"defaultTaskExecutorType\": ((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": ((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": ((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": ((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"taskExecutor\": ((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryMode\": ((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": ((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": ((ActiveMQComponent) component).setExplicitQosEnabled((boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": ((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": ((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": ((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyOnTimeoutToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyOnTimeoutToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": ((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToType\": ((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": ((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": ((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": ((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": ((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": ((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": ((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"forceSendOriginalMessage\": ((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": ((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": ((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": ((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"asyncStartListener\": ((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": ((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": ((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": ((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": ((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": ((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": ((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": ((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": ((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"jmsOperations\": ((ActiveMQComponent) component).setJmsOperations((org.springframework.jms.core.JmsOperations) value); return true;\n            case \"mapJmsMessage\": ((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": ((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": ((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": ((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": ((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageTimestampEnabled\": ((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": ((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": ((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": ((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": ((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": ((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": ((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": ((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": ((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": ((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": ((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": ((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": ((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": ((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": ((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": ((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": ((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": ((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1657,"status":"M"}],"commitId":"7ac2e908065db4bb37987c378c00c9c0140038b6","commitMessage":"@@@CAMEL-14568: camel component configurations include nested configuration classes\n","date":"2020-02-28 18:01:26","modifiedFileCount":"326","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-03-03 04:49:50","codes":[{"authorDate":"2020-03-03 04:49:50","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-03 04:56:26","endLine":1682,"groupId":"42733","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b5/72e7fac57c9136da1a5850589585393eef4d7a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1580,"status":"M"},{"authorDate":"2020-03-03 04:49:50","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-03 04:56:26","endLine":1763,"groupId":"15778","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/0a/116922a2b5c90e3939eba110c2269dd8030b9e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1657,"status":"M"}],"commitId":"6d22349ad273350d7d47dfeecf83bdfd12d421eb","commitMessage":"@@@Regen (properties ordering)\n","date":"2020-03-03 04:56:26","modifiedFileCount":"32","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-03-03 04:49:50","codes":[{"authorDate":"2020-03-17 14:55:30","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-17 14:55:30","endLine":1696,"groupId":"48876","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b0/2d2a366de3cddb75e43c5e3b5fbbe637793d4c.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1593,"status":"M"},{"authorDate":"2020-03-03 04:49:50","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-03 04:56:26","endLine":1763,"groupId":"15778","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/0a/116922a2b5c90e3939eba110c2269dd8030b9e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1657,"status":"N"}],"commitId":"893ca1c6be1784d039af6b77af06d886c3cf9abd","commitMessage":"@@@CAMEL-14395: camel-jms - Add option to turn off Artemis optimization for bytes messages\n","date":"2020-03-17 14:55:30","modifiedFileCount":"8","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-03-17 14:58:55","codes":[{"authorDate":"2020-03-17 14:55:30","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-17 14:55:30","endLine":1696,"groupId":"48876","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b0/2d2a366de3cddb75e43c5e3b5fbbe637793d4c.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1593,"status":"N"},{"authorDate":"2020-03-17 14:58:55","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-17 14:58:55","endLine":1777,"groupId":"18266","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/79/621d089af6c6c28d8d5deefdb58b695205feb3.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1670,"status":"M"}],"commitId":"097f17a995cef9800393487d58abe1780cd9a218","commitMessage":"@@@CAMEL-14395: camel-jms - Add option to turn off Artemis optimization for bytes messages\n","date":"2020-03-17 14:58:55","modifiedFileCount":"5","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-05-04 17:36:21","codes":[{"authorDate":"2020-05-04 17:36:21","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-05-04 17:36:21","endLine":1674,"groupId":"48876","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/c4/1437a1db53f7d945e54d2ac221087a92129b8e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((JmsComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1572,"status":"M"},{"authorDate":"2020-05-04 17:36:21","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-05-04 17:36:21","endLine":1757,"groupId":"18266","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/03/8eb3251c16641ce33e2e05dc07a6362402fbd6.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((ActiveMQComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1651,"status":"M"}],"commitId":"92c029529ebd8dfcbcc09c4809eb2d2d7325527b","commitMessage":"@@@CAMEL-15001: Support Metadata#excludeProperties for component properties (#3797)\n\n","date":"2020-05-04 17:36:21","modifiedFileCount":"6","status":"M","submitter":"Jan Bednar"},{"authorTime":"2020-05-05 15:41:48","codes":[{"authorDate":"2020-05-04 17:36:21","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-05-04 17:36:21","endLine":1674,"groupId":"48876","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/c4/1437a1db53f7d945e54d2ac221087a92129b8e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1572,"status":"N"},{"authorDate":"2020-05-05 15:41:48","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-05-05 15:41:48","endLine":1759,"groupId":"48876","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/1a/197019e4a7ee82b1ad1cbf45ac50a6dab9ebd9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1653,"status":"M"}],"commitId":"d9a5b8beef4bd9c90449db699cca57abdca2caa9","commitMessage":"@@@CAMEL-15009: Fixed activemq wrong default in the docs for usePooledConnection.\n","date":"2020-05-05 15:41:48","modifiedFileCount":"3","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-05-05 15:41:48","codes":[{"authorDate":"2020-08-06 00:21:56","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-08-06 01:17:39","endLine":1688,"groupId":"48876","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/5e/c686dfc90f47bf76c6753e38343b7271dafde0.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1585,"status":"M"},{"authorDate":"2020-05-05 15:41:48","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-05-05 15:41:48","endLine":1759,"groupId":"48876","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/1a/197019e4a7ee82b1ad1cbf45ac50a6dab9ebd9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1653,"status":"N"}],"commitId":"ffe0d1beec83dc8b4832eda509429fc65af4184c","commitMessage":"@@@CAMEL-15377: camel-jms - Add back transactedInOut option\n","date":"2020-08-06 01:17:39","modifiedFileCount":"7","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-08-06 01:27:56","codes":[{"authorDate":"2020-08-06 00:21:56","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-08-06 01:17:39","endLine":1688,"groupId":"48876","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/5e/c686dfc90f47bf76c6753e38343b7271dafde0.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1585,"status":"N"},{"authorDate":"2020-08-06 01:27:56","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-08-06 01:27:56","endLine":1788,"groupId":"48876","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/41/6c4b5d7d2b8f0b9d379e2e0949e1678e3f3415.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1681,"status":"M"}],"commitId":"e0874d7b8c33edef02d47acb8cce3b5548a76e93","commitMessage":"@@@CAMEL-15377: camel-jms - Add back transactedInOut option\n","date":"2020-08-06 01:27:56","modifiedFileCount":"7","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-09-09 20:31:35","codes":[{"authorDate":"2020-09-09 20:31:35","commitOrder":11,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-09-09 20:31:41","endLine":1704,"groupId":"48876","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/3b/f0ecbf5da11e1a8026fb93306589fbac2e7ca9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1601,"status":"M"},{"authorDate":"2020-09-09 20:31:35","commitOrder":11,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-09-09 20:31:41","endLine":1789,"groupId":"48876","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/64/77df77d4b1da87925511abb64be35ef0aefd38.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1682,"status":"M"}],"commitId":"f224a424e452bb8a878ad29277a78360d88f708f","commitMessage":"@@@Fixed replyTo should be common option for jms component.\n","date":"2020-09-09 20:31:41","modifiedFileCount":"5","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-11-13 00:20:37","codes":[{"authorDate":"2020-11-13 00:20:37","commitOrder":12,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1706,"groupId":"48876","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8f/d6d002285ca61ed5b25b3877fada6f14eeb29f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((JmsComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1603,"status":"M"},{"authorDate":"2020-11-13 00:20:37","commitOrder":12,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1792,"groupId":"48876","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b4/f2de5a2033a4380203ca691e16dd7be95d3bf9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"basicPropertyBinding\": ((ActiveMQComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1685,"status":"M"}],"commitId":"6a6c39afe79844b99ef9ab5b5fac7cf69f4ac4f2","commitMessage":"@@@CAMEL-15836: Automatic autowire by type - Specify which options support this\nCAMEL-15846: camel-core - Remove basicPropertyBinding\n","date":"2020-11-13 00:20:37","modifiedFileCount":"1712","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-01-14 04:56:58","codes":[{"authorDate":"2021-01-14 04:56:58","commitOrder":13,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((JmsComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-14 04:56:58","endLine":2017,"groupId":"48876","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/94/814505bb80cffd9c82ae5d2bc552919f00aa54.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1913,"status":"M"},{"authorDate":"2021-01-14 04:56:58","commitOrder":13,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((ActiveMQComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-14 04:56:58","endLine":2115,"groupId":"48876","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fa/01df55d0e61a0e0fa3e9b5c410ba8bdcb03497.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":2007,"status":"M"}],"commitId":"692579d8d1ed0262b548b6e2085bf4a775873ae5","commitMessage":"@@@CAMEL-16020: Remove synchronous on default endpoint as its rarely in use.\n","date":"2021-01-14 04:56:58","modifiedFileCount":"1028","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-01-14 04:56:58","codes":[{"authorDate":"2021-01-21 14:53:02","commitOrder":14,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"artemisConsumerPriority\": getOrCreateConfiguration((JmsComponent) component).setArtemisConsumerPriority((int) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((JmsComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-21 15:43:20","endLine":2042,"groupId":"48876","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fc/53aa56ede95a9fed07742a71895c030b9631f4.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((JmsComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1937,"status":"M"},{"authorDate":"2021-01-14 04:56:58","commitOrder":14,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((ActiveMQComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-14 04:56:58","endLine":2115,"groupId":"48876","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fa/01df55d0e61a0e0fa3e9b5c410ba8bdcb03497.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((ActiveMQComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":2007,"status":"N"}],"commitId":"a846e6f6ca6b6ab36ae5908967910d6e3792d96f","commitMessage":"@@@[CAMEL-16008] Implement consumer priority in camel\n","date":"2021-01-21 15:43:20","modifiedFileCount":"13","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-01-21 15:54:02","codes":[{"authorDate":"2021-01-21 14:53:02","commitOrder":15,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"artemisConsumerPriority\": getOrCreateConfiguration((JmsComponent) component).setArtemisConsumerPriority((int) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((JmsComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-21 15:43:20","endLine":2042,"groupId":"102060","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fc/53aa56ede95a9fed07742a71895c030b9631f4.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"clientId\": getOrCreateConfiguration((JmsComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((JmsComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((JmsComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((JmsComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((JmsComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((JmsComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((JmsComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((JmsComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"artemisConsumerPriority\": getOrCreateConfiguration((JmsComponent) component).setArtemisConsumerPriority((int) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((JmsComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((JmsComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((JmsComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((JmsComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((JmsComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((JmsComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((JmsComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((JmsComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((JmsComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((JmsComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((JmsComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((JmsComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((JmsComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((JmsComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((JmsComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((JmsComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((JmsComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((JmsComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((JmsComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((JmsComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((JmsComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((JmsComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((JmsComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((JmsComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((JmsComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((JmsComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((JmsComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((JmsComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((JmsComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((JmsComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((JmsComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((JmsComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((JmsComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((JmsComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((JmsComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((JmsComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((JmsComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((JmsComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((JmsComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((JmsComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((JmsComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((JmsComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((JmsComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((JmsComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((JmsComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((JmsComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((JmsComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((JmsComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((JmsComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((JmsComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((JmsComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((JmsComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((JmsComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((JmsComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((JmsComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((JmsComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((JmsComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((JmsComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((JmsComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((JmsComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((JmsComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((JmsComponent) component).setTransferExchange((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((JmsComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((JmsComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((JmsComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((JmsComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((JmsComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((JmsComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((JmsComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((JmsComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((JmsComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((JmsComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((JmsComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((JmsComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/JmsComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1937,"status":"N"},{"authorDate":"2021-01-21 15:54:02","commitOrder":15,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"artemisConsumerPriority\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisConsumerPriority((int) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((ActiveMQComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-21 15:54:02","endLine":2140,"groupId":"102060","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8a/b74538b670a9d95c4c1afa75652738e27ec0a6.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"brokerURL\": ((ActiveMQComponent) component).setBrokerURL((java.lang.String) value); return true;\n            case \"clientId\": getOrCreateConfiguration((ActiveMQComponent) component).setClientId((java.lang.String) value); return true;\n            case \"connectionFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setConnectionFactory((javax.jms.ConnectionFactory) value); return true;\n            case \"disableReplyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableReplyTo((boolean) value); return true;\n            case \"durableSubscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setDurableSubscriptionName((java.lang.String) value); return true;\n            case \"jmsMessageType\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsMessageType((org.apache.camel.component.jms.JmsMessageType) value); return true;\n            case \"replyTo\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyTo((java.lang.String) value); return true;\n            case \"testConnectionOnStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setTestConnectionOnStartup((boolean) value); return true;\n            case \"usePooledConnection\": ((ActiveMQComponent) component).setUsePooledConnection((boolean) value); return true;\n            case \"useSingleConnection\": ((ActiveMQComponent) component).setUseSingleConnection((boolean) value); return true;\n            case \"acknowledgementModeName\": getOrCreateConfiguration((ActiveMQComponent) component).setAcknowledgementModeName((java.lang.String) value); return true;\n            case \"asyncConsumer\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncConsumer((boolean) value); return true;\n            case \"autoStartup\": getOrCreateConfiguration((ActiveMQComponent) component).setAutoStartup((boolean) value); return true;\n            case \"cacheLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevel((int) value); return true;\n            case \"cacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setCacheLevelName((java.lang.String) value); return true;\n            case \"concurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setConcurrentConsumers((int) value); return true;\n            case \"maxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxConcurrentConsumers((int) value); return true;\n            case \"replyToDeliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDeliveryPersistent((boolean) value); return true;\n            case \"selector\": getOrCreateConfiguration((ActiveMQComponent) component).setSelector((java.lang.String) value); return true;\n            case \"subscriptionDurable\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionDurable((boolean) value); return true;\n            case \"subscriptionName\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionName((java.lang.String) value); return true;\n            case \"subscriptionShared\": getOrCreateConfiguration((ActiveMQComponent) component).setSubscriptionShared((boolean) value); return true;\n            case \"acceptMessagesWhileStopping\": getOrCreateConfiguration((ActiveMQComponent) component).setAcceptMessagesWhileStopping((boolean) value); return true;\n            case \"allowReplyManagerQuickStop\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowReplyManagerQuickStop((boolean) value); return true;\n            case \"consumerType\": getOrCreateConfiguration((ActiveMQComponent) component).setConsumerType((org.apache.camel.component.jms.ConsumerType) value); return true;\n            case \"defaultTaskExecutorType\": getOrCreateConfiguration((ActiveMQComponent) component).setDefaultTaskExecutorType((org.apache.camel.component.jms.DefaultTaskExecutorType) value); return true;\n            case \"eagerLoadingOfProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerLoadingOfProperties((boolean) value); return true;\n            case \"eagerPoisonBody\": getOrCreateConfiguration((ActiveMQComponent) component).setEagerPoisonBody((java.lang.String) value); return true;\n            case \"exposeListenerSession\": getOrCreateConfiguration((ActiveMQComponent) component).setExposeListenerSession((boolean) value); return true;\n            case \"replyToSameDestinationAllowed\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToSameDestinationAllowed((boolean) value); return true;\n            case \"taskExecutor\": getOrCreateConfiguration((ActiveMQComponent) component).setTaskExecutor((org.springframework.core.task.TaskExecutor) value); return true;\n            case \"deliveryDelay\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryDelay((long) value); return true;\n            case \"deliveryMode\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryMode((java.lang.Integer) value); return true;\n            case \"deliveryPersistent\": getOrCreateConfiguration((ActiveMQComponent) component).setDeliveryPersistent((boolean) value); return true;\n            case \"explicitQosEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setExplicitQosEnabled((java.lang.Boolean) value); return true;\n            case \"formatDateHeadersToIso8601\": getOrCreateConfiguration((ActiveMQComponent) component).setFormatDateHeadersToIso8601((boolean) value); return true;\n            case \"lazyStartProducer\": ((ActiveMQComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"preserveMessageQos\": getOrCreateConfiguration((ActiveMQComponent) component).setPreserveMessageQos((boolean) value); return true;\n            case \"priority\": getOrCreateConfiguration((ActiveMQComponent) component).setPriority((int) value); return true;\n            case \"replyToConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToConcurrentConsumers((int) value); return true;\n            case \"replyToMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOnTimeoutMaxConcurrentConsumers\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOnTimeoutMaxConcurrentConsumers((int) value); return true;\n            case \"replyToOverride\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToOverride((java.lang.String) value); return true;\n            case \"replyToType\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToType((org.apache.camel.component.jms.ReplyToType) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeout((long) value); return true;\n            case \"timeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setTimeToLive((long) value); return true;\n            case \"allowAdditionalHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowAdditionalHeaders((java.lang.String) value); return true;\n            case \"allowNullBody\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowNullBody((boolean) value); return true;\n            case \"alwaysCopyMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setAlwaysCopyMessage((boolean) value); return true;\n            case \"correlationProperty\": getOrCreateConfiguration((ActiveMQComponent) component).setCorrelationProperty((java.lang.String) value); return true;\n            case \"disableTimeToLive\": getOrCreateConfiguration((ActiveMQComponent) component).setDisableTimeToLive((boolean) value); return true;\n            case \"forceSendOriginalMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setForceSendOriginalMessage((boolean) value); return true;\n            case \"includeSentJMSMessageID\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeSentJMSMessageID((boolean) value); return true;\n            case \"replyToCacheLevelName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToCacheLevelName((java.lang.String) value); return true;\n            case \"replyToDestinationSelectorName\": getOrCreateConfiguration((ActiveMQComponent) component).setReplyToDestinationSelectorName((java.lang.String) value); return true;\n            case \"streamMessageTypeEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setStreamMessageTypeEnabled((boolean) value); return true;\n            case \"allowAutoWiredConnectionFactory\": ((ActiveMQComponent) component).setAllowAutoWiredConnectionFactory((boolean) value); return true;\n            case \"allowAutoWiredDestinationResolver\": ((ActiveMQComponent) component).setAllowAutoWiredDestinationResolver((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((ActiveMQComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"artemisStreamingEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setArtemisStreamingEnabled((boolean) value); return true;\n            case \"asyncStartListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStartListener((boolean) value); return true;\n            case \"asyncStopListener\": getOrCreateConfiguration((ActiveMQComponent) component).setAsyncStopListener((boolean) value); return true;\n            case \"autowiredEnabled\": ((ActiveMQComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"configuration\": ((ActiveMQComponent) component).setConfiguration((org.apache.camel.component.jms.JmsConfiguration) value); return true;\n            case \"destinationResolver\": getOrCreateConfiguration((ActiveMQComponent) component).setDestinationResolver((org.springframework.jms.support.destination.DestinationResolver) value); return true;\n            case \"errorHandler\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandler((org.springframework.util.ErrorHandler) value); return true;\n            case \"exceptionListener\": getOrCreateConfiguration((ActiveMQComponent) component).setExceptionListener((javax.jms.ExceptionListener) value); return true;\n            case \"idleConsumerLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleConsumerLimit((int) value); return true;\n            case \"idleTaskExecutionLimit\": getOrCreateConfiguration((ActiveMQComponent) component).setIdleTaskExecutionLimit((int) value); return true;\n            case \"includeAllJMSXProperties\": getOrCreateConfiguration((ActiveMQComponent) component).setIncludeAllJMSXProperties((boolean) value); return true;\n            case \"jmsKeyFormatStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setJmsKeyFormatStrategy((org.apache.camel.component.jms.JmsKeyFormatStrategy) value); return true;\n            case \"mapJmsMessage\": getOrCreateConfiguration((ActiveMQComponent) component).setMapJmsMessage((boolean) value); return true;\n            case \"maxMessagesPerTask\": getOrCreateConfiguration((ActiveMQComponent) component).setMaxMessagesPerTask((int) value); return true;\n            case \"messageConverter\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageConverter((org.springframework.jms.support.converter.MessageConverter) value); return true;\n            case \"messageCreatedStrategy\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageCreatedStrategy((org.apache.camel.component.jms.MessageCreatedStrategy) value); return true;\n            case \"messageIdEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageIdEnabled((boolean) value); return true;\n            case \"messageListenerContainerFactory\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageListenerContainerFactory((org.apache.camel.component.jms.MessageListenerContainerFactory) value); return true;\n            case \"messageTimestampEnabled\": getOrCreateConfiguration((ActiveMQComponent) component).setMessageTimestampEnabled((boolean) value); return true;\n            case \"pubSubNoLocal\": getOrCreateConfiguration((ActiveMQComponent) component).setPubSubNoLocal((boolean) value); return true;\n            case \"queueBrowseStrategy\": ((ActiveMQComponent) component).setQueueBrowseStrategy((org.apache.camel.component.jms.QueueBrowseStrategy) value); return true;\n            case \"receiveTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setReceiveTimeout((long) value); return true;\n            case \"recoveryInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRecoveryInterval((long) value); return true;\n            case \"requestTimeoutCheckerInterval\": getOrCreateConfiguration((ActiveMQComponent) component).setRequestTimeoutCheckerInterval((long) value); return true;\n            case \"synchronous\": getOrCreateConfiguration((ActiveMQComponent) component).setSynchronous((boolean) value); return true;\n            case \"transferException\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferException((boolean) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((ActiveMQComponent) component).setTransferExchange((boolean) value); return true;\n            case \"trustAllPackages\": ((ActiveMQComponent) component).setTrustAllPackages((boolean) value); return true;\n            case \"useMessageIDAsCorrelationID\": getOrCreateConfiguration((ActiveMQComponent) component).setUseMessageIDAsCorrelationID((boolean) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedCounter\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedCounter((int) value); return true;\n            case \"waitForProvisionCorrelationToBeUpdatedThreadSleepingTime\": getOrCreateConfiguration((ActiveMQComponent) component).setWaitForProvisionCorrelationToBeUpdatedThreadSleepingTime((long) value); return true;\n            case \"headerFilterStrategy\": ((ActiveMQComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"errorHandlerLoggingLevel\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLoggingLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"errorHandlerLogStackTrace\": getOrCreateConfiguration((ActiveMQComponent) component).setErrorHandlerLogStackTrace((boolean) value); return true;\n            case \"password\": getOrCreateConfiguration((ActiveMQComponent) component).setPassword((java.lang.String) value); return true;\n            case \"username\": getOrCreateConfiguration((ActiveMQComponent) component).setUsername((java.lang.String) value); return true;\n            case \"transacted\": getOrCreateConfiguration((ActiveMQComponent) component).setTransacted((boolean) value); return true;\n            case \"transactedInOut\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactedInOut((boolean) value); return true;\n            case \"lazyCreateTransactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setLazyCreateTransactionManager((boolean) value); return true;\n            case \"transactionManager\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionManager((org.springframework.transaction.PlatformTransactionManager) value); return true;\n            case \"transactionName\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionName((java.lang.String) value); return true;\n            case \"transactionTimeout\": getOrCreateConfiguration((ActiveMQComponent) component).setTransactionTimeout((int) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/ActivemqComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":2031,"status":"M"}],"commitId":"19012e785a8a574e5b40efa6a817f8ee6d349046","commitMessage":"@@@[CAMEL-16008] Implement consumer priority in camel\n","date":"2021-01-21 15:54:02","modifiedFileCount":"3","status":"M","submitter":"Claus Ibsen"}]
