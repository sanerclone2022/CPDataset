[{"authorTime":"2015-01-09 02:29:18","codes":[{"authorDate":"2013-10-15 16:14:24","commitOrder":5,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2013-10-15 16:14:24","endLine":76,"groupId":"1551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8d/842cc1bd9feef44106293996ccf23b32bea5b6.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"NB"},{"authorDate":"2015-01-09 02:29:18","commitOrder":5,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2015-01-09 02:29:33","endLine":82,"groupId":"1551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/cf/b6cd0aee10d8274a0d63f77dc64bc739744806.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"64d08a7e307c48e4bbaaa8b6f27155d65f8ab697","commitMessage":"@@@CAMEL-6955: camel-hl7 now supports netty4 also for mllp codec. Thanks to Christian Ohr for the patch.\n","date":"2015-01-09 02:29:33","modifiedFileCount":"3","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2015-01-09 02:29:18","codes":[{"authorDate":"2019-08-05 21:45:31","commitOrder":6,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2019-08-05 22:26:13","endLine":76,"groupId":"1551","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/02/418e3e88bcf468a62bba6d9f8790bd5a3cc301.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2015-01-09 02:29:18","commitOrder":6,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2015-01-09 02:29:33","endLine":82,"groupId":"1551","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/cf/b6cd0aee10d8274a0d63f77dc64bc739744806.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"}],"commitId":"c53bbda407ed6bb0d0d91647cbffb4459a278479","commitMessage":"@@@CAMEL-13792 - Rename components to default names.  Camel-mina2 to camel-mina - Fixed tests for camel-hl7 and camel-syslog\n","date":"2019-08-05 22:26:13","modifiedFileCount":"11","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2019-08-07 20:21:36","codes":[{"authorDate":"2019-08-05 21:45:31","commitOrder":7,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2019-08-05 22:26:13","endLine":76,"groupId":"1551","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/02/418e3e88bcf468a62bba6d9f8790bd5a3cc301.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2019-08-07 20:21:36","commitOrder":7,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2019-08-07 20:38:40","endLine":85,"groupId":"1551","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/f7/85287e3540067f4288799cd768c33f9b7c9380.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"29bd41b11f50e9b06c20b2effd48e2970ff5b5fc","commitMessage":"@@@CAMEL-13792 - Rename components to default names.  Camel-netty4 to camel-netty - Fixed hl7 tests\n","date":"2019-08-07 20:38:40","modifiedFileCount":"8","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2020-02-15 16:01:26","codes":[{"authorDate":"2019-08-05 21:45:31","commitOrder":8,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2019-08-05 22:26:13","endLine":76,"groupId":"102986","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/02/418e3e88bcf468a62bba6d9f8790bd5a3cc301.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2020-02-15 16:01:26","commitOrder":8,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoders=#hl7decoder&encoders=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2020-02-15 16:03:06","endLine":84,"groupId":"102986","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/57/565a57b00da7ac84efbacd1986098d1ed68ce7.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"netty:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"d1c38e71183ea0ff2e2bb04d2fcd3c68bd72cd2c","commitMessage":"@@@Fixed tests to use correct option name\n","date":"2020-02-15 16:03:06","modifiedFileCount":"10","status":"M","submitter":"Claus Ibsen"}]
