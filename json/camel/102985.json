[{"authorTime":"2009-05-12 16:17:52","codes":[{"authorDate":"2010-02-05 17:14:14","commitOrder":6,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2010-02-05 17:14:14","endLine":75,"groupId":"1551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a6/119da94420b3f5333137b3f1e566b0954ccf4e.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2009-05-12 16:17:52","commitOrder":6,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2009-05-12 16:17:52","endLine":83,"groupId":"1551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4e/1c468257521625fb9e4f9c8ee2d44f0586d657.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"NB"}],"commitId":"d7c6f74e5cf095eefb1dd3aa12c99b7d448a98cb","commitMessage":"@@@fix for CAMEL-2451: HL7MLLPDecoder fails if message length is exactly 1022\n\ngit-svn-id: https://svn.apache.org/repos/asf/camel/trunk@906862 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-05 17:14:14","modifiedFileCount":"1","status":"M","submitter":"Martin Krasser"},{"authorTime":"2012-01-24 06:13:42","codes":[{"authorDate":"2012-01-24 06:13:42","commitOrder":7,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2012-01-24 06:13:42","endLine":77,"groupId":"1551","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/be/e6a966f1366ac4add23fdb2bda8ffa1a27eb4f.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2012-01-24 06:13:42","commitOrder":7,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2012-01-24 06:13:42","endLine":87,"groupId":"1551","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a6/1fdd1be50ce9599f1f6e6c845424ab820f5b2d.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"ee18ad46b443369a3cff8a33602f18085e5dade9","commitMessage":"@@@Do reuse the provided IOHelper.buffered() methods which would also prevent possible double-buffering in some corner cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1235027 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-24 06:13:42","modifiedFileCount":"22","status":"M","submitter":"Babak Vahdat"},{"authorTime":"2012-08-14 16:42:27","codes":[{"authorDate":"2012-08-14 16:42:27","commitOrder":8,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2012-08-14 16:42:27","endLine":77,"groupId":"1551","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a4/c9801408077475e5e6309012bd0d3dcd35d3a1.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2012-08-14 16:42:27","commitOrder":8,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2012-08-14 16:42:27","endLine":87,"groupId":"1551","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4a/6d87585aa0ad6825c44b5bd336147e4d2df70e.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"762e39539d243a42d2194fec7c6e57a1fcdd1741","commitMessage":"@@@CAMEL-5488 Update and improve camel-hl7\n\ngit-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1372774 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-14 16:42:27","modifiedFileCount":"15","status":"M","submitter":"Willem Ning Jiang"},{"authorTime":"2013-10-15 16:14:24","codes":[{"authorDate":"2013-10-15 16:14:24","commitOrder":9,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2013-10-15 16:14:24","endLine":76,"groupId":"1551","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8d/842cc1bd9feef44106293996ccf23b32bea5b6.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2013-10-15 16:14:24","commitOrder":9,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2013-10-15 16:14:24","endLine":86,"groupId":"1551","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/96/b59e71c7b70b281e1d323c15f1f9a117244013.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:8888?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"b8c6b0697536dc8ea47c5c4d974cb127bbdf5704","commitMessage":"@@@Fixed the hard-coded port usages which recently caused the HL7 test failures on the CI-Server.","date":"2013-10-15 16:14:24","modifiedFileCount":"6","status":"M","submitter":"Babak Vahdat"},{"authorTime":"2014-11-06 02:18:08","codes":[{"authorDate":"2013-10-15 16:14:24","commitOrder":10,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2013-10-15 16:14:24","endLine":76,"groupId":"1551","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8d/842cc1bd9feef44106293996ccf23b32bea5b6.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2014-11-06 02:18:08","commitOrder":10,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message, String.class);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2014-11-06 02:18:08","endLine":86,"groupId":"1551","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fe/bdbafc2c139f2b6f8d033908667e4b53871417.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"19431d32a7518ed998b05f05e3edfbfb183397d0","commitMessage":"@@@merging upstream\n","date":"2014-11-06 02:18:08","modifiedFileCount":"955","status":"M","submitter":"Scott Stults"},{"authorTime":"2019-08-05 21:45:31","codes":[{"authorDate":"2019-08-05 21:45:31","commitOrder":11,"curCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","date":"2019-08-05 22:26:13","endLine":76,"groupId":"102985","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/02/418e3e88bcf468a62bba6d9f8790bd5a3cc301.src","preCode":"    public void testSendHL7Message() throws Exception {\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(1022, message.length());\n        MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\");\n        mockEndpoint.expectedMessageCount(1);\n        template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        mockEndpoint.assertIsSatisfied();\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecBoundaryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-08-05 21:45:31","commitOrder":11,"curCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message, String.class);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","date":"2019-08-05 22:26:13","endLine":79,"groupId":"102985","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendHL7Message","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b6/12e38d8942a97f60a1e1f348a16fca504cf449.src","preCode":"    public void testSendHL7Message() throws Exception {\n        \r\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message, String.class);\n        assertEquals(\"some response\", out);\n        \r\n    }\n","realPath":"components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPCodecLongTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"c53bbda407ed6bb0d0d91647cbffb4459a278479","commitMessage":"@@@CAMEL-13792 - Rename components to default names.  Camel-mina2 to camel-mina - Fixed tests for camel-hl7 and camel-syslog\n","date":"2019-08-05 22:26:13","modifiedFileCount":"11","status":"M","submitter":"Andrea Cosentino"}]
