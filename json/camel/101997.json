[{"authorTime":"2020-02-03 16:53:08","codes":[{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":123,"groupId":"42733","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ac/d1ec6ba519ddab11501088c155bf26b70c588c.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":123,"groupId":"42733","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/c5/a4a4bfeb5b1ad94b40d3d0b3214436c2885201.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"a9464281a71007e7c22dcc337d54fdd58d59ef84","commitMessage":"@@@[CAMEL-14468] Move generated code into src/generated\n","date":"2020-02-04 23:46:50","modifiedFileCount":"45","status":"B","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-07 23:39:41","codes":[{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":123,"groupId":"39463","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/93/256ecfc5ec489c7ebbfa56810d718e33a6d23d.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":123,"groupId":"39463","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/51/7a85a3344d320a639cafe3a155b50f936a9b25.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"c124568c2cddc1575f565dfd0b14d7ee2393b3fc","commitMessage":"@@@[CAMEL-14523] Regen\n","date":"2020-02-07 23:40:03","modifiedFileCount":"637","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-28 18:01:26","codes":[{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1266,"groupId":"7238","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/7d/77dde2f3d1763ebb8ffc05a9eb5d63d963690f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1187,"status":"M"},{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":803,"groupId":"1767","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a5/9bb09d1c226ef73ffa2b289a3aee76fe9ea45b.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":750,"status":"M"}],"commitId":"7ac2e908065db4bb37987c378c00c9c0140038b6","commitMessage":"@@@CAMEL-14568: camel component configurations include nested configuration classes\n","date":"2020-02-28 18:01:26","modifiedFileCount":"326","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-03-24 20:44:34","codes":[{"authorDate":"2020-03-24 20:44:34","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-24 20:44:34","endLine":1285,"groupId":"7238","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/23/48c48fdeb340f93f8c09a59b1240b774a87b9a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1205,"status":"M"},{"authorDate":"2020-03-24 20:44:34","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-24 20:44:34","endLine":836,"groupId":"1767","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a2/1a007b7885c9f5b540cc8ce53ffa8366bcd7c1.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":781,"status":"M"}],"commitId":"0f4f79a4d57b481b91d75e7ce3dbd7c5417cba9f","commitMessage":"@@@Merge pull request #3673 from omarsmak/CAMEL-14773\n\nCAMEL-14773: Upgrade debezium to 1.1.0.Final and regenerate the configurations","date":"2020-03-24 20:44:34","modifiedFileCount":"20","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-06-30 23:55:13","codes":[{"authorDate":"2020-06-30 23:55:13","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-06-30 23:55:13","endLine":1313,"groupId":"34084","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8d/0f684bd8ee16bfb81e54bc85a5180b58ff0959.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1231,"status":"M"},{"authorDate":"2020-06-30 23:55:13","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-06-30 23:55:13","endLine":954,"groupId":"23494","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/49/c31aeb754b876a195085c6a7843917d2d54ce0.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":892,"status":"M"}],"commitId":"e7a752247b9931cc83aba5a0198b9885516e0857","commitMessage":"@@@CAMEL-15261: Handle fields with unwanted chars and upgrade Debezium to 1.2.0.Final (#3961)\n\n","date":"2020-06-30 23:55:13","modifiedFileCount":"22","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-10-06 17:16:41","codes":[{"authorDate":"2020-10-06 17:16:41","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-10-06 17:16:41","endLine":1370,"groupId":"2527","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ad/86aa44d2f1e225fbc2eb9b77d953949b2b8fd9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1284,"status":"M"},{"authorDate":"2020-10-06 17:16:41","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-10-06 17:16:41","endLine":1087,"groupId":"9760","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/91/8c3d0221778eb69ba3b722b08ca714ec42329f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1016,"status":"M"}],"commitId":"bd7d82624a1166f25580f9fbf870d94585173369","commitMessage":"@@@CAMEL-15631: Upgrade Debezium to 1.3.0.Final and re-generate all the configs (#4369)\n\n","date":"2020-10-06 17:16:41","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-11-13 00:20:37","codes":[{"authorDate":"2020-11-13 00:20:37","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1373,"groupId":"2527","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/16/1748489ce0913948b5f064938a2758337f92de.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMySqlComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1287,"status":"M"},{"authorDate":"2020-11-13 00:20:37","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1090,"groupId":"9760","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b3/10945ce7a27d10df5df6f7218ae2a0316989ab.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumSqlserverComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1019,"status":"M"}],"commitId":"6a6c39afe79844b99ef9ab5b5fac7cf69f4ac4f2","commitMessage":"@@@CAMEL-15836: Automatic autowire by type - Specify which options support this\nCAMEL-15846: camel-core - Remove basicPropertyBinding\n","date":"2020-11-13 00:20:37","modifiedFileCount":"1712","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-01-08 18:05:20","codes":[{"authorDate":"2021-01-08 18:05:20","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotEventsAsInserts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotEventsAsInserts((boolean) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-08 18:05:20","endLine":1631,"groupId":"2527","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/6b/0b0a6363458044617f6a1932a010299d607c11.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1544,"status":"M"},{"authorDate":"2021-01-08 18:05:20","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-08 18:05:20","endLine":1338,"groupId":"10864","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/30/0e81cf7fcf7d2d1f2b363f300355c24586fd05.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1264,"status":"M"}],"commitId":"f865febc7f2b12d6bc0de2931747c20516c556d1","commitMessage":"@@@CAMEL-16007: Upgrade to Debezium 1.4.0.Final (#4844)\n\n* CAMEL-16007: Upgrade Debezium to 1.4.0.Final\n\n* CAMEL-16007: Upgrade Debezium to 1.4.0.Final","date":"2021-01-08 18:05:20","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2021-02-01 17:22:53","codes":[{"authorDate":"2021-01-08 18:05:20","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotEventsAsInserts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotEventsAsInserts((boolean) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-08 18:05:20","endLine":1631,"groupId":"2527","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/6b/0b0a6363458044617f6a1932a010299d607c11.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotEventsAsInserts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotEventsAsInserts((boolean) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1544,"status":"N"},{"authorDate":"2021-02-01 17:22:53","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-02-01 17:23:03","endLine":1358,"groupId":"10864","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/9e/b6dcc9ddfb26714b0e11d06145b2615ab30ff7.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1283,"status":"M"}],"commitId":"deef3746a04f3219de39e59ca357bfa8c1ac2722","commitMessage":"@@@CAMEL-16117: Upgrade to Debezium 1.4.1.Final\n","date":"2021-02-01 17:23:03","modifiedFileCount":"15","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2021-04-09 18:01:32","codes":[{"authorDate":"2021-04-09 18:01:32","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-04-09 18:01:32","endLine":1765,"groupId":"21273","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/1a/91c2c5925aec84d9cf29ecd5887b9c86fc6923.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidNewChannelPosition\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidNewChannelPosition((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotEventsAsInserts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotEventsAsInserts((boolean) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1670,"status":"M"},{"authorDate":"2021-04-09 18:01:32","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-04-09 18:01:32","endLine":1374,"groupId":"10864","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/df/fa961b58308dc87b07b04db1afe739cd32be42.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1298,"status":"M"}],"commitId":"47bf7d5bb14d2e30300b5e3ff576a30bc1743df1","commitMessage":"@@@CAMEL-16475: Upgrade Debezium to 1.5.0.Final (#5322)\n\n","date":"2021-04-09 18:01:32","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2021-07-06 14:24:34","codes":[{"authorDate":"2021-07-06 14:24:34","commitOrder":11,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyCapturedTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyCapturedTablesDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"incrementalSnapshotChunkSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncrementalSnapshotChunkSize((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-07-06 14:24:34","endLine":1843,"groupId":"101997","id":21,"instanceNumber":1,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e7/1d080fee468a24ca44bc6bac43d63214c62709.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMySqlComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMySqlComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MySqlConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMySqlComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"bigintUnsignedHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBigintUnsignedHandlingMode((java.lang.String) value); return true;\n            case \"binlogBufferSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setBinlogBufferSize((int) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"connectKeepAlive\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAlive((boolean) value); return true;\n            case \"connectKeepAliveIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectKeepAliveIntervalMs((long) value); return true;\n            case \"connectTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConnectTimeoutMs((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databaseJdbcDriver\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseJdbcDriver((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerId\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerId((long) value); return true;\n            case \"databaseServerIdOffset\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerIdOffset((long) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslKeystore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystore((java.lang.String) value); return true;\n            case \"databaseSslKeystorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslKeystorePassword((java.lang.String) value); return true;\n            case \"databaseSslMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslMode((java.lang.String) value); return true;\n            case \"databaseSslTruststore\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststore((java.lang.String) value); return true;\n            case \"databaseSslTruststorePassword\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseSslTruststorePassword((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"enableTimeAdjuster\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEnableTimeAdjuster((boolean) value); return true;\n            case \"eventDeserializationFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventDeserializationFailureHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"gtidSourceExcludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceExcludes((java.lang.String) value); return true;\n            case \"gtidSourceFilterDmlEvents\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceFilterDmlEvents((boolean) value); return true;\n            case \"gtidSourceIncludes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setGtidSourceIncludes((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeQuery\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeQuery((boolean) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"inconsistentSchemaHandlingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setInconsistentSchemaHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockingMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockingMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotNewTables\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotNewTables((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMySqlComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMysqlComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1744,"status":"M"},{"authorDate":"2021-07-06 14:24:34","commitOrder":11,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHistorySkipUnparseableDdl\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistorySkipUnparseableDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyCapturedTablesDdl\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryStoreOnlyCapturedTablesDdl((boolean) value); return true;\n            case \"databaseHistoryStoreOnlyMonitoredTablesDdl\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryStoreOnlyMonitoredTablesDdl((boolean) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxIterationTransactions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxIterationTransactions((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-07-06 14:24:34","endLine":1454,"groupId":"101997","id":22,"instanceNumber":2,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/92/2063a1c7f0c345aed1ff47a27ee675b0d83697.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumSqlserverComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumSqlserverComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.SqlServerConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumSqlserverComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistory\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistory((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaBootstrapServers\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaBootstrapServers((java.lang.String) value); return true;\n            case \"databaseHistoryKafkaRecoveryAttempts\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryAttempts((int) value); return true;\n            case \"databaseHistoryKafkaRecoveryPollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaRecoveryPollIntervalMs((int) value); return true;\n            case \"databaseHistoryKafkaTopic\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHistoryKafkaTopic((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInstance\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseInstance((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseServerTimezone\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseServerTimezone((java.lang.String) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"includeSchemaChanges\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setIncludeSchemaChanges((boolean) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotIsolationMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotIsolationMode((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"sourceTimestampMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setSourceTimestampMode((java.lang.String) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumSqlserverComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumSqlserverComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1374,"status":"M"}],"commitId":"317ab1f872b6102adb12d45f2c9849f43be2b57c","commitMessage":"@@@git commit \"CAMEL-16774:camel-debezium - Upgrade to 1.6\" (#5796)\n\nCo-authored-by: Kodanda Ramu Kakarla <kkakarla@kkakarla.pnq.csb>","date":"2021-07-06 14:24:34","modifiedFileCount":"18","status":"M","submitter":"Ramu"}]
