[{"authorTime":"2020-02-03 16:53:08","codes":[{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":123,"groupId":"42733","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/0c/7c79cb7ba7d1022f573d4a3089c5a288e7b4d2.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":123,"groupId":"42733","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/9a/f41023f2a6d8410f4fa8af3b63d1b74985d7fb.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"a9464281a71007e7c22dcc337d54fdd58d59ef84","commitMessage":"@@@[CAMEL-14468] Move generated code into src/generated\n","date":"2020-02-04 23:46:50","modifiedFileCount":"45","status":"B","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-07 23:39:41","codes":[{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":123,"groupId":"39463","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/42/cd55e43fed298999dc5df9819bd46557feea59.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":123,"groupId":"39463","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/5a/2725728210e8948e61db6c0c0c443ab36e4e90.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"c124568c2cddc1575f565dfd0b14d7ee2393b3fc","commitMessage":"@@@[CAMEL-14523] Regen\n","date":"2020-02-07 23:40:03","modifiedFileCount":"637","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-28 18:01:26","codes":[{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1106,"groupId":"31876","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/34/07117c0fd1194071f08706fc73b50ed38726c2.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1035,"status":"M"},{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":714,"groupId":"46149","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/35/a63b87e5ffd343eec61fcf5ba8b06169e02077.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":665,"status":"M"}],"commitId":"7ac2e908065db4bb37987c378c00c9c0140038b6","commitMessage":"@@@CAMEL-14568: camel component configurations include nested configuration classes\n","date":"2020-02-28 18:01:26","modifiedFileCount":"326","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-03-24 20:44:34","codes":[{"authorDate":"2020-03-24 20:44:34","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-24 20:44:34","endLine":1152,"groupId":"31876","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/1f/54fa01a97420f36e2da1b8f7b49deb3d01a576.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1078,"status":"M"},{"authorDate":"2020-03-24 20:44:34","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-03-24 20:44:34","endLine":729,"groupId":"46149","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ea/3f326e05540536ecb278516c80b35a728ac0da.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"M"}],"commitId":"0f4f79a4d57b481b91d75e7ce3dbd7c5417cba9f","commitMessage":"@@@Merge pull request #3673 from omarsmak/CAMEL-14773\n\nCAMEL-14773: Upgrade debezium to 1.1.0.Final and regenerate the configurations","date":"2020-03-24 20:44:34","modifiedFileCount":"20","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-06-30 23:55:13","codes":[{"authorDate":"2020-06-30 23:55:13","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-06-30 23:55:13","endLine":1262,"groupId":"17115","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/32/0084535fadb73e00759f7a3b97eff705735157.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1181,"status":"M"},{"authorDate":"2020-06-30 23:55:13","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalSec\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalSec((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-06-30 23:55:13","endLine":816,"groupId":"19800","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2b/0e4443dd2bef8c62908ba9028adfdf21b5d9a9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":760,"status":"M"}],"commitId":"e7a752247b9931cc83aba5a0198b9885516e0857","commitMessage":"@@@CAMEL-15261: Handle fields with unwanted chars and upgrade Debezium to 1.2.0.Final (#3961)\n\n","date":"2020-06-30 23:55:13","modifiedFileCount":"22","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-10-06 17:16:41","codes":[{"authorDate":"2020-10-06 17:16:41","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-10-06 17:16:41","endLine":1410,"groupId":"28259","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/31/4fcd84d84c8eb5a6c96e4349782e5b220345d9.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1319,"status":"M"},{"authorDate":"2020-10-06 17:16:41","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-10-06 17:16:41","endLine":892,"groupId":"19800","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/49/f327b4f0cffde2b4d976bb0ca903910bdf1bd4.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionBlacklist((java.lang.String) value); return true;\n            case \"collectionWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionWhitelist((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseBlacklist((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseWhitelist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseWhitelist((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldBlacklist\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldBlacklist((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalSec\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalSec((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":831,"status":"M"}],"commitId":"bd7d82624a1166f25580f9fbf870d94585173369","commitMessage":"@@@CAMEL-15631: Upgrade Debezium to 1.3.0.Final and re-generate all the configs (#4369)\n\n","date":"2020-10-06 17:16:41","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2020-11-13 00:20:37","codes":[{"authorDate":"2020-11-13 00:20:37","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1413,"groupId":"28259","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/26/a41e254a141d1fdf0babd96504d358faff3b8f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumPostgresComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1322,"status":"M"},{"authorDate":"2020-11-13 00:20:37","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":895,"groupId":"19800","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/97/4676ffa61b84eb95160835d24b6015fab7139c.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"basicPropertyBinding\": ((DebeziumMongodbComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":834,"status":"M"}],"commitId":"6a6c39afe79844b99ef9ab5b5fac7cf69f4ac4f2","commitMessage":"@@@CAMEL-15836: Automatic autowire by type - Specify which options support this\nCAMEL-15846: camel-core - Remove basicPropertyBinding\n","date":"2020-11-13 00:20:37","modifiedFileCount":"1712","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-01-08 18:05:20","codes":[{"authorDate":"2021-01-08 18:05:20","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-08 18:05:20","endLine":1722,"groupId":"28259","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/6c/633e2ded63e972ed4f52008a0efefe78c655b0.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1628,"status":"M"},{"authorDate":"2021-01-08 18:05:20","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotCollectionFilterOverrides\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotCollectionFilterOverrides((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-01-08 18:05:20","endLine":1114,"groupId":"1940","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4d/fef521e07a916f4199e7d1a5c91b68b41c1651.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"initialSyncMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInitialSyncMaxThreads((int) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"M"}],"commitId":"f865febc7f2b12d6bc0de2931747c20516c556d1","commitMessage":"@@@CAMEL-16007: Upgrade to Debezium 1.4.0.Final (#4844)\n\n* CAMEL-16007: Upgrade Debezium to 1.4.0.Final\n\n* CAMEL-16007: Upgrade Debezium to 1.4.0.Final","date":"2021-01-08 18:05:20","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2021-04-09 18:01:32","codes":[{"authorDate":"2021-04-09 18:01:32","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-04-09 18:01:32","endLine":1740,"groupId":"28259","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/11/1cec0ba1231415d07dd3754fa0c61e2f6917b0.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1645,"status":"M"},{"authorDate":"2021-04-09 18:01:32","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotCollectionFilterOverrides\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotCollectionFilterOverrides((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-04-09 18:01:32","endLine":1134,"groupId":"1940","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/96/fac7c8eea8dbbee6ba907747e38bee2f2c934e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotCollectionFilterOverrides\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotCollectionFilterOverrides((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1069,"status":"M"}],"commitId":"47bf7d5bb14d2e30300b5e3ff576a30bc1743df1","commitMessage":"@@@CAMEL-16475: Upgrade Debezium to 1.5.0.Final (#5322)\n\n","date":"2021-04-09 18:01:32","modifiedFileCount":"24","status":"M","submitter":"Omar Al-Safi"},{"authorTime":"2021-04-09 18:01:32","codes":[{"authorDate":"2021-07-06 14:24:34","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"incrementalSnapshotChunkSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncrementalSnapshotChunkSize((int) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-07-06 14:24:34","endLine":1756,"groupId":"102002","id":19,"instanceNumber":1,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4f/34e14dfb2487335354b36564ee8397ebcb1455.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumPostgresComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumPostgresComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.PostgresConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumPostgresComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"binaryHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setBinaryHandlingMode((java.lang.String) value); return true;\n            case \"columnBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnBlacklist((java.lang.String) value); return true;\n            case \"columnExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnExcludeList((java.lang.String) value); return true;\n            case \"columnIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnIncludeList((java.lang.String) value); return true;\n            case \"columnPropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnPropagateSourceType((java.lang.String) value); return true;\n            case \"columnWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setColumnWhitelist((java.lang.String) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseDbname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseDbname((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseHostname\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseHostname((java.lang.String) value); return true;\n            case \"databaseInitialStatements\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseInitialStatements((java.lang.String) value); return true;\n            case \"databasePassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePassword((java.lang.String) value); return true;\n            case \"databasePort\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabasePort((int) value); return true;\n            case \"databaseServerName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseServerName((java.lang.String) value); return true;\n            case \"databaseSslcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslcert((java.lang.String) value); return true;\n            case \"databaseSslfactory\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslfactory((java.lang.String) value); return true;\n            case \"databaseSslkey\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslkey((java.lang.String) value); return true;\n            case \"databaseSslmode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslmode((java.lang.String) value); return true;\n            case \"databaseSslpassword\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslpassword((java.lang.String) value); return true;\n            case \"databaseSslrootcert\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseSslrootcert((java.lang.String) value); return true;\n            case \"databaseTcpkeepalive\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseTcpkeepalive((boolean) value); return true;\n            case \"databaseUser\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatabaseUser((java.lang.String) value); return true;\n            case \"datatypePropagateSourceType\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDatatypePropagateSourceType((java.lang.String) value); return true;\n            case \"decimalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setDecimalHandlingMode((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"heartbeatActionQuery\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatActionQuery((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"hstoreHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setHstoreHandlingMode((java.lang.String) value); return true;\n            case \"includeUnknownDatatypes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIncludeUnknownDatatypes((boolean) value); return true;\n            case \"intervalHandlingMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setIntervalHandlingMode((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"messageKeyColumns\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setMessageKeyColumns((java.lang.String) value); return true;\n            case \"pluginName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPluginName((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"publicationAutocreateMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationAutocreateMode((java.lang.String) value); return true;\n            case \"publicationName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setPublicationName((java.lang.String) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"schemaBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaBlacklist((java.lang.String) value); return true;\n            case \"schemaExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaExcludeList((java.lang.String) value); return true;\n            case \"schemaIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaIncludeList((java.lang.String) value); return true;\n            case \"schemaRefreshMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaRefreshMode((java.lang.String) value); return true;\n            case \"schemaWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSchemaWhitelist((java.lang.String) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"slotDropOnStop\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotDropOnStop((boolean) value); return true;\n            case \"slotMaxRetries\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotMaxRetries((int) value); return true;\n            case \"slotName\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotName((java.lang.String) value); return true;\n            case \"slotRetryDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotRetryDelayMs((long) value); return true;\n            case \"slotStreamParams\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSlotStreamParams((java.lang.String) value); return true;\n            case \"snapshotCustomClass\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotCustomClass((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotLockTimeoutMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotLockTimeoutMs((long) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"snapshotSelectStatementOverrides\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSnapshotSelectStatementOverrides((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"statusUpdateIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setStatusUpdateIntervalMs((int) value); return true;\n            case \"tableBlacklist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableBlacklist((java.lang.String) value); return true;\n            case \"tableExcludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableExcludeList((java.lang.String) value); return true;\n            case \"tableIgnoreBuiltin\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIgnoreBuiltin((boolean) value); return true;\n            case \"tableIncludeList\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableIncludeList((java.lang.String) value); return true;\n            case \"tableWhitelist\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTableWhitelist((java.lang.String) value); return true;\n            case \"timePrecisionMode\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTimePrecisionMode((java.lang.String) value); return true;\n            case \"toastedValuePlaceholder\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setToastedValuePlaceholder((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            case \"xminFetchIntervalMs\": getOrCreateConfiguration((DebeziumPostgresComponent) component).setXminFetchIntervalMs((long) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumPostgresComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1660,"status":"M"},{"authorDate":"2021-04-09 18:01:32","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotCollectionFilterOverrides\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotCollectionFilterOverrides((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-04-09 18:01:32","endLine":1134,"groupId":"102002","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/96/fac7c8eea8dbbee6ba907747e38bee2f2c934e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"additionalProperties\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setAdditionalProperties((java.util.Map) value); return true;\n            case \"bridgeErrorHandler\": ((DebeziumMongodbComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"configuration\": ((DebeziumMongodbComponent) component).setConfiguration((org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration) value); return true;\n            case \"internalKeyConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalKeyConverter((java.lang.String) value); return true;\n            case \"internalValueConverter\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setInternalValueConverter((java.lang.String) value); return true;\n            case \"offsetCommitPolicy\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitPolicy((java.lang.String) value); return true;\n            case \"offsetCommitTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetCommitTimeoutMs((long) value); return true;\n            case \"offsetFlushIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetFlushIntervalMs((long) value); return true;\n            case \"offsetStorage\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorage((java.lang.String) value); return true;\n            case \"offsetStorageFileName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageFileName((java.lang.String) value); return true;\n            case \"offsetStoragePartitions\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStoragePartitions((int) value); return true;\n            case \"offsetStorageReplicationFactor\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageReplicationFactor((int) value); return true;\n            case \"offsetStorageTopic\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setOffsetStorageTopic((java.lang.String) value); return true;\n            case \"autowiredEnabled\": ((DebeziumMongodbComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"collectionExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionExcludeList((java.lang.String) value); return true;\n            case \"collectionIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setCollectionIncludeList((java.lang.String) value); return true;\n            case \"connectBackoffInitialDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffInitialDelayMs((long) value); return true;\n            case \"connectBackoffMaxDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectBackoffMaxDelayMs((long) value); return true;\n            case \"connectMaxAttempts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConnectMaxAttempts((int) value); return true;\n            case \"converters\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setConverters((java.lang.String) value); return true;\n            case \"databaseExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseExcludeList((java.lang.String) value); return true;\n            case \"databaseHistoryFileFilename\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseHistoryFileFilename((java.lang.String) value); return true;\n            case \"databaseIncludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setDatabaseIncludeList((java.lang.String) value); return true;\n            case \"eventProcessingFailureHandlingMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setEventProcessingFailureHandlingMode((java.lang.String) value); return true;\n            case \"fieldExcludeList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldExcludeList((java.lang.String) value); return true;\n            case \"fieldRenames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setFieldRenames((java.lang.String) value); return true;\n            case \"heartbeatIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatIntervalMs((int) value); return true;\n            case \"heartbeatTopicsPrefix\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setHeartbeatTopicsPrefix((java.lang.String) value); return true;\n            case \"maxBatchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxBatchSize((int) value); return true;\n            case \"maxQueueSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSize((int) value); return true;\n            case \"maxQueueSizeInBytes\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMaxQueueSizeInBytes((long) value); return true;\n            case \"mongodbAuthsource\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbAuthsource((java.lang.String) value); return true;\n            case \"mongodbConnectTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbConnectTimeoutMs((int) value); return true;\n            case \"mongodbHosts\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbHosts((java.lang.String) value); return true;\n            case \"mongodbMembersAutoDiscover\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbMembersAutoDiscover((boolean) value); return true;\n            case \"mongodbName\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbName((java.lang.String) value); return true;\n            case \"mongodbPassword\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPassword((java.lang.String) value); return true;\n            case \"mongodbPollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbPollIntervalMs((long) value); return true;\n            case \"mongodbServerSelectionTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbServerSelectionTimeoutMs((int) value); return true;\n            case \"mongodbSocketTimeoutMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSocketTimeoutMs((int) value); return true;\n            case \"mongodbSslEnabled\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslEnabled((boolean) value); return true;\n            case \"mongodbSslInvalidHostnameAllowed\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbSslInvalidHostnameAllowed((boolean) value); return true;\n            case \"mongodbUser\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setMongodbUser((java.lang.String) value); return true;\n            case \"pollIntervalMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setPollIntervalMs((long) value); return true;\n            case \"provideTransactionMetadata\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setProvideTransactionMetadata((boolean) value); return true;\n            case \"queryFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setQueryFetchSize((int) value); return true;\n            case \"retriableRestartConnectorWaitMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setRetriableRestartConnectorWaitMs((long) value); return true;\n            case \"sanitizeFieldNames\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSanitizeFieldNames((boolean) value); return true;\n            case \"signalDataCollection\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSignalDataCollection((java.lang.String) value); return true;\n            case \"skippedOperations\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSkippedOperations((java.lang.String) value); return true;\n            case \"snapshotCollectionFilterOverrides\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotCollectionFilterOverrides((java.lang.String) value); return true;\n            case \"snapshotDelayMs\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotDelayMs((long) value); return true;\n            case \"snapshotFetchSize\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotFetchSize((int) value); return true;\n            case \"snapshotIncludeCollectionList\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotIncludeCollectionList((java.lang.String) value); return true;\n            case \"snapshotMaxThreads\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMaxThreads((int) value); return true;\n            case \"snapshotMode\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSnapshotMode((java.lang.String) value); return true;\n            case \"sourceStructVersion\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setSourceStructVersion((java.lang.String) value); return true;\n            case \"tombstonesOnDelete\": getOrCreateConfiguration((DebeziumMongodbComponent) component).setTombstonesOnDelete((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/DebeziumMongodbComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1069,"status":"N"}],"commitId":"317ab1f872b6102adb12d45f2c9849f43be2b57c","commitMessage":"@@@git commit \"CAMEL-16774:camel-debezium - Upgrade to 1.6\" (#5796)\n\nCo-authored-by: Kodanda Ramu Kakarla <kkakarla@kkakarla.pnq.csb>","date":"2021-07-06 14:24:34","modifiedFileCount":"18","status":"M","submitter":"Ramu"}]
