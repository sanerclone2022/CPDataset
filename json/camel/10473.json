[{"authorTime":"2019-09-17 12:15:58","codes":[{"authorDate":"2019-09-17 12:15:58","commitOrder":1,"curCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found ValidatorRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        \n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        for (Object row : data.values()) {\n            CompositeData composite = (CompositeData)row;\n            String type = (String)composite.get(\"type\");\n            String description = (String)composite.get(\"description\");\n            boolean isStatic = (boolean)composite.get(\"static\");\n            boolean isDynamic = (boolean)composite.get(\"dynamic\");\n            LOG.info(\"[{}][{}][{}][{}]\", type, isStatic, isDynamic, description);\n            if (description.startsWith(\"ProcessorValidator\")) {\n                if (description.contains(\"direct://transformer\")) {\n                    assertEquals(\"xml:foo\", type);\n                } else if (description.contains(\"validate(simple{${body}} is not null\")) {\n                    assertEquals(\"json:test\", type);\n                } else {\n                    fail(\"Unexpected validator:\" + description);\n                }\n            } else if (description.startsWith(\"MyValidator\")) {\n                assertEquals(\"custom\", type);\n            } else {\n                fail(\"Unexpected validator:\" + description);\n            }\n        }\n        assertEquals(3, data.size());\n    }\n","date":"2019-09-17 21:28:56","endLine":107,"groupId":"5060","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testManageValidatorRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/58/1082ed125a35d847dd6fcf0c995294b2d572a3.src","preCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found ValidatorRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        \n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        for (Object row : data.values()) {\n            CompositeData composite = (CompositeData)row;\n            String type = (String)composite.get(\"type\");\n            String description = (String)composite.get(\"description\");\n            boolean isStatic = (boolean)composite.get(\"static\");\n            boolean isDynamic = (boolean)composite.get(\"dynamic\");\n            LOG.info(\"[{}][{}][{}][{}]\", type, isStatic, isDynamic, description);\n            if (description.startsWith(\"ProcessorValidator\")) {\n                if (description.contains(\"direct://transformer\")) {\n                    assertEquals(\"xml:foo\", type);\n                } else if (description.contains(\"validate(simple{${body}} is not null\")) {\n                    assertEquals(\"json:test\", type);\n                } else {\n                    fail(\"Unexpected validator:\" + description);\n                }\n            } else if (description.startsWith(\"MyValidator\")) {\n                assertEquals(\"custom\", type);\n            } else {\n                fail(\"Unexpected validator:\" + description);\n            }\n        }\n        assertEquals(3, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedValidatorRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2019-09-17 12:15:58","commitOrder":1,"curCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found EndpointRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","date":"2019-09-17 21:28:56","endLine":95,"groupId":"5060","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManageEndpointRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4b/b7090a10eb4f0da73f72d23cbe6770a9c303d5.src","preCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found EndpointRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedEndpointRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"}],"commitId":"cefed587dbbf373835bf46ba1bf821a63f122daf","commitMessage":"@@@CAMEL-13939: camel3 - Rename camel-management-impl to camel-management\n","date":"2019-09-17 21:28:56","modifiedFileCount":"2","status":"B","submitter":"Claus Ibsen"},{"authorTime":"2019-09-17 12:15:58","codes":[{"authorDate":"2020-01-07 22:39:18","commitOrder":2,"curCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found ValidatorRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","date":"2020-01-07 22:43:01","endLine":80,"groupId":"5060","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testManageValidatorRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4b/ee79a51afd24e7d046ae7e39681e6863e35bb8.src","preCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found ValidatorRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        \n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        for (Object row : data.values()) {\n            CompositeData composite = (CompositeData)row;\n            String type = (String)composite.get(\"type\");\n            String description = (String)composite.get(\"description\");\n            boolean isStatic = (boolean)composite.get(\"static\");\n            boolean isDynamic = (boolean)composite.get(\"dynamic\");\n            LOG.info(\"[{}][{}][{}][{}]\", type, isStatic, isDynamic, description);\n            if (description.startsWith(\"ProcessorValidator\")) {\n                if (description.contains(\"direct://transformer\")) {\n                    assertEquals(\"xml:foo\", type);\n                } else if (description.contains(\"validate(simple{${body}} is not null\")) {\n                    assertEquals(\"json:test\", type);\n                } else {\n                    fail(\"Unexpected validator:\" + description);\n                }\n            } else if (description.startsWith(\"MyValidator\")) {\n                assertEquals(\"custom\", type);\n            } else {\n                fail(\"Unexpected validator:\" + description);\n            }\n        }\n        assertEquals(3, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedValidatorRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2019-09-17 12:15:58","commitOrder":2,"curCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found EndpointRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","date":"2019-09-17 21:28:56","endLine":95,"groupId":"5060","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManageEndpointRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4b/b7090a10eb4f0da73f72d23cbe6770a9c303d5.src","preCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found EndpointRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedEndpointRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"}],"commitId":"9bfd0ff25bed96a614bf51cccbeeb8c47d02ee38","commitMessage":"@@@CAMEL-14356: camel-core - toString of processors should just their id.\n","date":"2020-01-07 22:43:01","modifiedFileCount":"50","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-05-29 18:11:19","codes":[{"authorDate":"2020-05-29 18:11:19","commitOrder":3,"curCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found ValidatorRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","date":"2020-06-11 10:43:35","endLine":85,"groupId":"5060","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testManageValidatorRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/20/2cec9aeb1546638e54f8feae9044f802486d62.src","preCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found ValidatorRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedValidatorRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2020-05-29 18:11:19","commitOrder":3,"curCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found EndpointRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","date":"2020-06-11 10:43:35","endLine":99,"groupId":"5060","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testManageEndpointRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/d0/73e5d456a7a8fb56f2890c28b72ae5f0f06123.src","preCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(\"Should have found EndpointRegistry\", on);\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedEndpointRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"5f08cdb6d0b7628ac46cb0d6664e3216f71d4fc7","commitMessage":"@@@[CAMEL-11807] Upgrade camel-management to junit5\n","date":"2020-06-11 10:43:35","modifiedFileCount":"214","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2021-03-12 20:46:15","codes":[{"authorDate":"2021-03-12 20:46:15","commitOrder":4,"curCode":"    public void testManageValidatorRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found ValidatorRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","date":"2021-03-13 04:01:08","endLine":80,"groupId":"5060","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testManageValidatorRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a1/42b51ed309a9deb416d9ab7edc11d784e7f4b7.src","preCode":"    public void testManageValidatorRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found ValidatorRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedValidatorRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2021-03-12 20:46:15","commitOrder":4,"curCode":"    public void testManageEndpointRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found EndpointRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","date":"2021-03-13 04:01:08","endLine":94,"groupId":"5060","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testManageEndpointRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/6d/8727c6dd004623a69c6e18202294d1a4b9eb36.src","preCode":"    public void testManageEndpointRegistry() throws Exception {\n        \r\n        if (isPlatform(\"aix\")) {\n            return;\n        }\n\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found EndpointRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedEndpointRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"ab8219262470cb15e9f62c7656e9837ed3c1b5e3","commitMessage":"@@@Make tests in core run in parallel\n\n# Conflicts:\n#\tcore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumePollEnrichFileUsingProcessorTest.java\n","date":"2021-03-13 04:01:08","modifiedFileCount":"576","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2021-04-02 20:27:27","codes":[{"authorDate":"2021-04-02 20:27:27","commitOrder":5,"curCode":"    public void testManageValidatorRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found ValidatorRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000]\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","date":"2021-04-02 20:27:27","endLine":80,"groupId":"10473","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testManageValidatorRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/97/35c600e51d22e28d492115ec363bf0890afb97.src","preCode":"    public void testManageValidatorRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultValidatorRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found ValidatorRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(3, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"ValidatorRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listValidators\", null, null);\n        assertEquals(3, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedValidatorRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2021-04-02 20:27:27","commitOrder":5,"curCode":"    public void testManageEndpointRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found EndpointRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000]\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","date":"2021-04-02 20:27:27","endLine":94,"groupId":"10473","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testManageEndpointRegistry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/05/5df7167ccd4f1947617d47fde91d37c8fb86d0.src","preCode":"    public void testManageEndpointRegistry() throws Exception {\n        getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n\n        template.sendBody(\"direct:start\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        \r\n        template.sendBody(\"log:foo\", \"Hello World\");\n\n        \r\n        MBeanServer mbeanServer = getMBeanServer();\n        Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n        List<ObjectName> list = new ArrayList<>(set);\n        ObjectName on = null;\n        for (ObjectName name : list) {\n            if (name.getCanonicalName().contains(\"DefaultEndpointRegistry\")) {\n                on = name;\n                break;\n            }\n        }\n\n        assertNotNull(on, \"Should have found EndpointRegistry\");\n\n        Integer max = (Integer) mbeanServer.getAttribute(on, \"MaximumCacheSize\");\n        assertEquals(1000, max.intValue());\n\n        Integer current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(3, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(1, current.intValue());\n\n        String source = (String) mbeanServer.getAttribute(on, \"Source\");\n        assertTrue(source.startsWith(\"EndpointRegistry\"));\n        assertTrue(source.endsWith(\"capacity: 1000\"));\n\n        TabularData data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(3, data.size());\n\n        \r\n        mbeanServer.invoke(on, \"purge\", null, null);\n\n        current = (Integer) mbeanServer.getAttribute(on, \"DynamicSize\");\n        assertEquals(0, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"StaticSize\");\n        assertEquals(2, current.intValue());\n\n        current = (Integer) mbeanServer.getAttribute(on, \"Size\");\n        assertEquals(2, current.intValue());\n\n        data = (TabularData) mbeanServer.invoke(on, \"listEndpoints\", null, null);\n        assertEquals(2, data.size());\n    }\n","realPath":"core/camel-management/src/test/java/org/apache/camel/management/ManagedEndpointRegistryTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"09586e7defaa287836da9e11e8ac0cc84f53027f","commitMessage":"@@@CAMEL-16444: camel-core - Optimize endpoint lookup\n","date":"2021-04-02 20:27:27","modifiedFileCount":"9","status":"M","submitter":"Claus Ibsen"}]
