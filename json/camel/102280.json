[{"authorTime":"2018-08-27 20:58:57","codes":[{"authorDate":"2017-05-24 17:41:01","commitOrder":3,"curCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","date":"2017-05-24 17:41:01","endLine":44,"groupId":"29326","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUndertowServerOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/eb/d7ce89ada5ac42cd504059493bea066e630b19.src","preCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"NB"},{"authorDate":"2018-08-27 20:58:57","commitOrder":3,"curCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n    }\n","date":"2018-08-27 20:58:57","endLine":57,"groupId":"29326","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleHttpOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/af/bb6b2651937bd6b7552be12bde9140da49a65d.src","preCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"c3cd89585c4a437767a8e72aee388f3ed17c62e9","commitMessage":"@@@CAMEL-12753: Fixed camel-undertow consumer with OPTIONS in rest-dsl to return mutiple verbs if the same context-path has more http verbs like GET. POST etc. Thanks to Tomas Turek for unit test\n","date":"2018-08-27 20:58:57","modifiedFileCount":"4","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2018-08-27 20:58:57","codes":[{"authorDate":"2020-02-05 04:31:07","commitOrder":4,"curCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", exchange1 -> exchange1.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\"));\n\n        assertEquals(200, exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getMessage().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getMessage().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","date":"2020-02-24 19:37:05","endLine":38,"groupId":"15847","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUndertowServerOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/93/a16d29c206b99f872556873166293123ea2367.src","preCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"},{"authorDate":"2018-08-27 20:58:57","commitOrder":4,"curCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n    }\n","date":"2018-08-27 20:58:57","endLine":57,"groupId":"29326","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleHttpOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/af/bb6b2651937bd6b7552be12bde9140da49a65d.src","preCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"}],"commitId":"c14308067a5ad21023812b98a88832eb84b4674a","commitMessage":"@@@CAMEL-14020 - Migrate getOut to getMessage in tests camel-undertow.\n","date":"2020-02-24 19:37:05","modifiedFileCount":"19","status":"M","submitter":"blanx"},{"authorTime":"2020-08-18 00:14:43","codes":[{"authorDate":"2020-02-05 04:31:07","commitOrder":5,"curCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", exchange1 -> exchange1.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\"));\n\n        assertEquals(200, exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getMessage().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getMessage().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","date":"2020-02-24 19:37:05","endLine":38,"groupId":"102280","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUndertowServerOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/93/a16d29c206b99f872556873166293123ea2367.src","preCode":"    public void testUndertowServerOptions() throws Exception {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/customers\", exchange1 -> exchange1.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\"));\n\n        assertEquals(200, exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,OPTIONS\", exchange.getMessage().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getMessage().getBody(String.class));\n\n        exchange = fluentTemplate.to(\"undertow:http://localhost:\" + getPort() + \"/users/v1/123\").withHeader(Exchange.HTTP_METHOD, \"OPTIONS\").send();\n        assertEquals(200, exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"PUT,OPTIONS\", exchange.getIn().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getIn().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"N"},{"authorDate":"2020-08-18 00:14:43","commitOrder":5,"curCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\",\n                exchange1 -> exchange1.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\"));\n        assertEquals(200, exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getMessage().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getMessage().getBody(String.class));\n    }\n","date":"2020-08-18 15:33:29","endLine":51,"groupId":"102280","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMultipleHttpOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e5/7d7c2e4530c2eec6fea29f02ed312aa1cf27af.src","preCode":"    public void testMultipleHttpOptions() {\n        Exchange exchange = template.request(\"undertow:http://localhost:\" + getPort() + \"/users/v1/options\", new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setHeader(Exchange.HTTP_METHOD, \"OPTIONS\");\n            }\n        });\n        assertEquals(200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE));\n        assertEquals(\"GET,POST,OPTIONS\", exchange.getOut().getHeader(\"ALLOW\"));\n        assertEquals(\"\", exchange.getOut().getBody(String.class));\n    }\n","realPath":"components/camel-undertow/src/test/java/org/apache/camel/component/undertow/rest/RestUndertowHttpOptionsTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"4ea9e6c357371682b855d2d79655b41120331b7a","commitMessage":"@@@[CAMEL-14578] Reformat\n\n# Conflicts:\n#\ttooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/GenerateConfigurerMojo.java\n","date":"2020-08-18 15:33:29","modifiedFileCount":"11649","status":"M","submitter":"Guillaume Nodet"}]
