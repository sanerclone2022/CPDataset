[{"authorTime":"2012-04-29 16:27:09","codes":[{"authorDate":"2012-04-29 17:28:24","commitOrder":2,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = ObjectHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2012-04-29 17:28:24","endLine":99,"groupId":"37606","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e9/e4bf5a1501be77cdff49a4ced883bb0a9de70b.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = ObjectHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2012-04-29 16:27:09","commitOrder":2,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2012-04-29 16:27:09","endLine":82,"groupId":"46402","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/48/77eddb041d01a6dabdebf3e00802726096cbc0.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"}],"commitId":"867828cce21218417954338bf9137717a7150053","commitMessage":"@@@CAMEL-5232: Resource based endpoints with http resources now support query parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1331887 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-04-29 17:28:24","modifiedFileCount":"3","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2012-04-29 16:27:09","codes":[{"authorDate":"2018-09-03 18:06:29","commitOrder":3,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2018-09-03 18:11:26","endLine":100,"groupId":"37606","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/03/b9981156b489795a73ba820f5995118d1d093e.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = ObjectHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2012-04-29 16:27:09","commitOrder":3,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2012-04-29 16:27:09","endLine":82,"groupId":"46402","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/48/77eddb041d01a6dabdebf3e00802726096cbc0.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"e788aa768f66214f9f872c39bdd00c8b00a554b4","commitMessage":"@@@[CAMEL-12771] Do not use the deprecated methods on ObjectHelper in other modules\n","date":"2018-09-03 18:11:26","modifiedFileCount":"59","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2018-09-10 16:44:48","codes":[{"authorDate":"2018-09-10 16:44:48","commitOrder":4,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2018-10-21 15:49:18","endLine":100,"groupId":"36609","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a8/9c4c0403f78ff17f734f81963c87bae5d09d0d.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2018-09-10 16:44:48","commitOrder":4,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2018-10-21 15:49:18","endLine":82,"groupId":"19924","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/09/91712088da31164ee9f7333c09e56b7e1c8bfc.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext().getClassResolver(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"bb92b300a776b2ff367f473f467c52a44c928f63","commitMessage":"@@@[CAMEL-12818] Remove deprecated stuff\n","date":"2018-10-21 15:49:18","modifiedFileCount":"987","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2019-08-19 14:26:24","codes":[{"authorDate":"2019-08-19 14:26:24","commitOrder":5,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2019-08-19 14:26:24","endLine":100,"groupId":"36609","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/b6/aa75f7496b1f2d8866cab5b9c4fa35d39ab484.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-08-19 14:26:24","commitOrder":5,"curCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2019-08-19 14:26:24","endLine":82,"groupId":"19924","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/cf/bc39f9654323aac8186cba07d9d9217b0fcd07.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable(8000);\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"0a01693b9c2cfc7067899065c05afb688f68a3be","commitMessage":"@@@Merge pull request #3109 from apache/CAMEL-13853\n\nCAMEL-13853: AvailablePortFinder now delegates the port selection to OS","date":"2019-08-19 14:26:24","modifiedFileCount":"139","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2020-06-27 00:25:10","codes":[{"authorDate":"2020-06-27 00:25:10","commitOrder":6,"curCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getMessage().setBody(xml);\n                            exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2020-06-27 00:36:45","endLine":104,"groupId":"36609","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/71/b37028411db5e22b2bf89003d9fd3e3e5b7c3d.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            \r\n                            name = StringHelper.before(name, \"_\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-06-27 00:25:10","commitOrder":6,"curCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getMessage().setBody(xml);\n                            exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2020-06-27 00:36:45","endLine":86,"groupId":"19924","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2b/0766b360d38a4e491dec9f953e5e9dc6be0a3d.src","preCode":"    protected RouteBuilder createRouteBuilder() throws Exception {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getOut().setBody(xml);\n                            exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"ee931a8ff38003860be3fbe6d6c9aef767aff5f8","commitMessage":"@@@CAMEL-11807: Migrated camel-itest to JUnit 5\n","date":"2020-06-27 00:36:45","modifiedFileCount":"113","status":"M","submitter":"aldettinger"},{"authorTime":"2020-06-27 00:25:10","codes":[{"authorDate":"2021-03-06 22:32:04","commitOrder":7,"curCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                        .process(new Processor() {\n                            @Override\n                            public void process(Exchange exchange) throws Exception {\n                                String name = exchange.getIn().getHeader(\"name\", String.class);\n                                ObjectHelper.notNull(name, \"name\");\n\n                                name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                                InputStream is\n                                        = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                                String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                                exchange.getMessage().setBody(xml);\n                                exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                            }\n                        });\n            }\n        };\n    }\n","date":"2021-03-06 22:32:04","endLine":103,"groupId":"1096","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/8a/e3347e8b7b48bf6be1602490ac2db46ee36043.src","preCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                        .process(new Processor() {\n                            @Override\n                            public void process(Exchange exchange) throws Exception {\n                                String name = exchange.getIn().getHeader(\"name\", String.class);\n                                ObjectHelper.notNull(name, \"name\");\n\n                                \r\n                                name = StringHelper.before(name, \"_\");\n\n                                name = \"org/apache/camel/itest/jetty/\" + name + \".ftl\";\n                                InputStream is\n                                        = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                                String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                                exchange.getMessage().setBody(xml);\n                                exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                            }\n                        });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFreemarkerTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-06-27 00:25:10","commitOrder":7,"curCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getMessage().setBody(xml);\n                            exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","date":"2020-06-27 00:36:45","endLine":86,"groupId":"1096","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createRouteBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2b/0766b360d38a4e491dec9f953e5e9dc6be0a3d.src","preCode":"    protected RouteBuilder createRouteBuilder() {\n        port = AvailablePortFinder.getNextAvailable();\n\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"jetty:http://localhost:\" + port + \"/test\")\n                    .process(new Processor() {\n                        @Override\n                        public void process(Exchange exchange) throws Exception {\n                            String name = exchange.getIn().getHeader(\"name\", String.class);\n                            ObjectHelper.notNull(name, \"name\");\n\n                            name = \"org/apache/camel/itest/jetty/\" + name;\n                            InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(exchange.getContext(), name);\n                            String xml = exchange.getContext().getTypeConverter().convertTo(String.class, is);\n\n                            exchange.getMessage().setBody(xml);\n                            exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"text/xml\");\n                        }\n                    });\n            }\n        };\n    }\n","realPath":"tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyXsltTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"ae645f8f33a3aebc16ded3385c4abc76be8bf386","commitMessage":"@@@Fixed test\n","date":"2021-03-06 22:32:04","modifiedFileCount":"1","status":"M","submitter":"Claus Ibsen"}]
