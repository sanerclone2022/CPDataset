[{"authorTime":"2018-05-09 22:04:04","codes":[{"authorDate":"2018-08-24 16:36:23","commitOrder":2,"curCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","date":"2018-08-24 16:39:28","endLine":50,"groupId":"41533","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParametersWebhook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2b/546b3a179ee2b44d620088808d9c6943991049.src","preCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","realPath":"components/camel-slack/src/test/java/org/apache/camel/component/slack/SlackComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2018-05-09 22:04:04","commitOrder":2,"curCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","date":"2018-05-09 22:04:04","endLine":63,"groupId":"41533","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a4/1b6b0817fa57fd9cbe07078234a8e22f50dbcc.src","preCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","realPath":"components/camel-paho/src/test/java/org/apache/camel/component/paho/PahoComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"}],"commitId":"d03f64f88631bedca07d16809dd9e6ac4d0ae115","commitMessage":"@@@Improved the Slack Verifier Extension after the Slack Consumer has been implemented\n","date":"2018-08-24 16:39:28","modifiedFileCount":"3","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2020-07-17 21:46:08","codes":[{"authorDate":"2018-08-24 16:36:23","commitOrder":3,"curCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","date":"2018-08-24 16:39:28","endLine":50,"groupId":"41533","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParametersWebhook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2b/546b3a179ee2b44d620088808d9c6943991049.src","preCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","realPath":"components/camel-slack/src/test/java/org/apache/camel/component/slack/SlackComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"},{"authorDate":"2020-07-17 21:46:08","commitOrder":3,"curCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","date":"2020-07-18 19:33:03","endLine":64,"groupId":"41533","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2e/eaf294e6f9e89ee21a260b9624434e6dd21fe6.src","preCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","realPath":"components/camel-paho/src/test/java/org/apache/camel/component/paho/PahoComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"fd88a83f8ffbc05a8835dd11defe4f0bdfee962a","commitMessage":"@@@[CAMEL-11807] Upgrade camel-paho to junit5\n","date":"2020-07-18 19:33:03","modifiedFileCount":"3","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-07-17 21:46:08","codes":[{"authorDate":"2020-07-22 22:05:10","commitOrder":4,"curCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","date":"2020-07-23 00:58:43","endLine":51,"groupId":"102738","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParametersWebhook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/30/0d860a1beff1b1062354c5d82622e731813e10.src","preCode":"    public void testParametersWebhook() throws Exception {\n        Component component = context().getComponent(\"slack\");\n\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"webhookUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters);\n\n        Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus());\n    }\n","realPath":"components/camel-slack/src/test/java/org/apache/camel/component/slack/SlackComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2020-07-17 21:46:08","commitOrder":4,"curCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","date":"2020-07-18 19:33:03","endLine":64,"groupId":"102738","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConnectivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/2e/eaf294e6f9e89ee21a260b9624434e6dd21fe6.src","preCode":"    public void testConnectivity() throws Exception {\n        Component component = context().getComponent(\"paho\");\n        ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new);\n\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"brokerUrl\", \"l\");\n\n        ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters);\n\n        assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus());\n    }\n","realPath":"components/camel-paho/src/test/java/org/apache/camel/component/paho/PahoComponentVerifierExtensionTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"d9f66f8b6a61fe770727a48761efa0aa226ec8ac","commitMessage":"@@@[CAMEL-11807] Upgrade camel-slack to junit5\n","date":"2020-07-23 00:58:43","modifiedFileCount":"3","status":"M","submitter":"Guillaume Nodet"}]
