[{"authorTime":"2020-02-03 16:53:08","codes":[{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"sslContextParameters\": ((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":203,"groupId":"29637","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a7/706c7c4e963c966d586b4e55bde2970101425f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"sslContextParameters\": ((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2020-02-03 16:53:08","commitOrder":1,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.http.NettyHttpConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"sslContextParameters\": ((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-04 23:46:50","endLine":252,"groupId":"29637","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/81/6123e6ad1c0e66dbd7167ba634bd97e545e7ec.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.http.NettyHttpConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"sslContextParameters\": ((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"}],"commitId":"a9464281a71007e7c22dcc337d54fdd58d59ef84","commitMessage":"@@@[CAMEL-14468] Move generated code into src/generated\n","date":"2020-02-04 23:46:50","modifiedFileCount":"45","status":"B","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-07 23:39:41","codes":[{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"sslContextParameters\": ((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":203,"groupId":"42733","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/83/4b358b5e57d20db6e4075c5b4ed176fd0fb245.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"sslContextParameters\": ((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2020-02-07 23:39:41","commitOrder":2,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.http.NettyHttpConfiguration) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"sslContextParameters\": ((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-07 23:40:03","endLine":252,"groupId":"42733","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e5/a67647a363d9a6a13f7f982a11091a2a3043f8.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.http.NettyHttpConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"sslContextParameters\": ((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"}],"commitId":"c124568c2cddc1575f565dfd0b14d7ee2393b3fc","commitMessage":"@@@[CAMEL-14523] Regen\n","date":"2020-02-07 23:40:03","modifiedFileCount":"637","status":"M","submitter":"Guillaume Nodet"},{"authorTime":"2020-02-28 18:01:26","codes":[{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1177,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/e7/4a2224de2fdb01ad50fba602c24222b75d779b.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"sslContextParameters\": ((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"M"},{"authorDate":"2020-02-28 18:01:26","commitOrder":3,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1232,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/dc/b9f1ceb8773abc4be0f257c689d933c852a717.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.http.NettyHttpConfiguration) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"sslContextParameters\": ((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1150,"status":"M"}],"commitId":"7ac2e908065db4bb37987c378c00c9c0140038b6","commitMessage":"@@@CAMEL-14568: camel component configurations include nested configuration classes\n","date":"2020-02-28 18:01:26","modifiedFileCount":"326","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-02-28 18:01:26","codes":[{"authorDate":"2020-02-28 22:31:50","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 22:31:50","endLine":1177,"groupId":"16788","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/55/8c120f082fc61088eea0b081e0d8fe0d48f71a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"M"},{"authorDate":"2020-02-28 18:01:26","commitOrder":4,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 18:01:26","endLine":1232,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/dc/b9f1ceb8773abc4be0f257c689d933c852a717.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1150,"status":"N"}],"commitId":"144db4bbb0a43e5e55162db7d91cebc1670f175a","commitMessage":"@@@CAMEL-14568: camel-netty\n","date":"2020-02-28 22:31:50","modifiedFileCount":"3","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-02-28 22:34:21","codes":[{"authorDate":"2020-02-28 22:31:50","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 22:31:50","endLine":1177,"groupId":"16788","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/55/8c120f082fc61088eea0b081e0d8fe0d48f71a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"N"},{"authorDate":"2020-02-28 22:34:21","commitOrder":5,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-02-28 22:34:21","endLine":1232,"groupId":"19135","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/77/a680f2554d98336baff953db33d72bdc8ef712.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1150,"status":"M"}],"commitId":"0336aa1fdf2d5c533bfb7aac4f2b4f4fea9d47f6","commitMessage":"@@@CAMEL-14568: camel-netty-http\n","date":"2020-02-28 22:34:21","modifiedFileCount":"1","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-11-13 00:20:37","codes":[{"authorDate":"2020-11-13 00:20:37","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1180,"groupId":"22754","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ae/5354119b5111f6cf1105d7ac6f9a8dbf27cc7e.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1101,"status":"M"},{"authorDate":"2020-11-13 00:20:37","commitOrder":6,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1236,"groupId":"16788","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4e/032b833686b2f34d73caf550f42520bdcf1b86.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"basicPropertyBinding\": ((NettyHttpComponent) component).setBasicPropertyBinding((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1154,"status":"M"}],"commitId":"6a6c39afe79844b99ef9ab5b5fac7cf69f4ac4f2","commitMessage":"@@@CAMEL-15836: Automatic autowire by type - Specify which options support this\nCAMEL-15846: camel-core - Remove basicPropertyBinding\n","date":"2020-11-13 00:20:37","modifiedFileCount":"1712","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2020-11-13 00:20:37","codes":[{"authorDate":"2021-03-08 21:25:46","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-08 22:16:33","endLine":1421,"groupId":"22754","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/59/28c55ed9f2eaaac38050b9611024074fd8cecf.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1341,"status":"M"},{"authorDate":"2020-11-13 00:20:37","commitOrder":7,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2020-11-13 00:20:37","endLine":1236,"groupId":"16788","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4e/032b833686b2f34d73caf550f42520bdcf1b86.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1154,"status":"N"}],"commitId":"3b02bcd6b910951ce11d86c0db27dbc0d77e35c6","commitMessage":"@@@CAMEL-16315 - Camel-Netty: Support Hostname verification even though we are on Netty 4.1.x\n","date":"2021-03-08 22:16:33","modifiedFileCount":"9","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2021-03-08 21:59:44","codes":[{"authorDate":"2021-03-08 21:25:46","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-08 22:16:33","endLine":1421,"groupId":"22754","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/59/28c55ed9f2eaaac38050b9611024074fd8cecf.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1341,"status":"N"},{"authorDate":"2021-03-08 21:59:44","commitOrder":8,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyHttpComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-08 22:16:33","endLine":1486,"groupId":"16788","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/9b/a23e7c4494fa7e732b85c874b663512b623966.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1403,"status":"M"}],"commitId":"9b596d7a548506a8cfe344835a4df63014c9597e","commitMessage":"@@@CAMEL-16315 - Camel-Netty: Support Hostname verification even though we are on Netty 4.1.x\n","date":"2021-03-08 22:16:33","modifiedFileCount":"4","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2021-03-08 21:59:44","codes":[{"authorDate":"2021-03-09 04:50:29","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-09 04:50:46","endLine":1421,"groupId":"26401","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/7c/f8d9d21aa08ef501d0c1351fdd19f8b2c8f80a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1341,"status":"M"},{"authorDate":"2021-03-08 21:59:44","commitOrder":9,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyHttpComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-08 22:16:33","endLine":1486,"groupId":"16788","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/9b/a23e7c4494fa7e732b85c874b663512b623966.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyHttpComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1403,"status":"N"}],"commitId":"058aa7857dbda0dfe4937d7b6fb0d03dfa6339d5","commitMessage":"@@@CAMEL-16315 - Camel-Netty: Support Hostname verification even though we are on Netty 4.1.x\n","date":"2021-03-09 04:50:46","modifiedFileCount":"2","status":"M","submitter":"Andrea Cosentino"},{"authorTime":"2021-03-09 06:32:08","codes":[{"authorDate":"2021-03-09 04:50:29","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-09 04:50:46","endLine":1421,"groupId":"101907","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/7c/f8d9d21aa08ef501d0c1351fdd19f8b2c8f80a.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyComponent) component).setNativeTransport((boolean) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1341,"status":"N"},{"authorDate":"2021-03-09 06:32:08","commitOrder":10,"curCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyHttpComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","date":"2021-03-09 06:32:08","endLine":1486,"groupId":"101907","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"setPropertyOnComponent","params":"(Componentcomponent@Stringname@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/d0/2627d0315050ea3ea549bd7073f0447f62de5f.src","preCode":"        protected boolean setPropertyOnComponent(\n                Component component,\n                String name,\n                Object value) {\n            switch (name) {\n            case \"configuration\": ((NettyHttpComponent) component).setConfiguration((org.apache.camel.component.netty.NettyConfiguration) value); return true;\n            case \"disconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnect((boolean) value); return true;\n            case \"hostnameVerification\": getOrCreateConfiguration((NettyHttpComponent) component).setHostnameVerification((boolean) value); return true;\n            case \"keepAlive\": getOrCreateConfiguration((NettyHttpComponent) component).setKeepAlive((boolean) value); return true;\n            case \"reuseAddress\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseAddress((boolean) value); return true;\n            case \"reuseChannel\": getOrCreateConfiguration((NettyHttpComponent) component).setReuseChannel((boolean) value); return true;\n            case \"sync\": getOrCreateConfiguration((NettyHttpComponent) component).setSync((boolean) value); return true;\n            case \"tcpNoDelay\": getOrCreateConfiguration((NettyHttpComponent) component).setTcpNoDelay((boolean) value); return true;\n            case \"bridgeErrorHandler\": ((NettyHttpComponent) component).setBridgeErrorHandler((boolean) value); return true;\n            case \"broadcast\": getOrCreateConfiguration((NettyHttpComponent) component).setBroadcast((boolean) value); return true;\n            case \"clientMode\": getOrCreateConfiguration((NettyHttpComponent) component).setClientMode((boolean) value); return true;\n            case \"reconnect\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnect((boolean) value); return true;\n            case \"reconnectInterval\": getOrCreateConfiguration((NettyHttpComponent) component).setReconnectInterval((int) value); return true;\n            case \"backlog\": getOrCreateConfiguration((NettyHttpComponent) component).setBacklog((int) value); return true;\n            case \"bossCount\": getOrCreateConfiguration((NettyHttpComponent) component).setBossCount((int) value); return true;\n            case \"bossGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setBossGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"disconnectOnNoReply\": getOrCreateConfiguration((NettyHttpComponent) component).setDisconnectOnNoReply((boolean) value); return true;\n            case \"executorService\": ((NettyHttpComponent) component).setExecutorService((io.netty.util.concurrent.EventExecutorGroup) value); return true;\n            case \"maximumPoolSize\": ((NettyHttpComponent) component).setMaximumPoolSize((int) value); return true;\n            case \"nettyServerBootstrapFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setNettyServerBootstrapFactory((org.apache.camel.component.netty.NettyServerBootstrapFactory) value); return true;\n            case \"networkInterface\": getOrCreateConfiguration((NettyHttpComponent) component).setNetworkInterface((java.lang.String) value); return true;\n            case \"noReplyLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setNoReplyLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverClosedChannelExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerClosedChannelExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverExceptionCaughtLogLevel\": getOrCreateConfiguration((NettyHttpComponent) component).setServerExceptionCaughtLogLevel((org.apache.camel.LoggingLevel) value); return true;\n            case \"serverInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setServerInitializerFactory((org.apache.camel.component.netty.ServerInitializerFactory) value); return true;\n            case \"usingExecutorService\": getOrCreateConfiguration((NettyHttpComponent) component).setUsingExecutorService((boolean) value); return true;\n            case \"connectTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setConnectTimeout((int) value); return true;\n            case \"lazyStartProducer\": ((NettyHttpComponent) component).setLazyStartProducer((boolean) value); return true;\n            case \"requestTimeout\": getOrCreateConfiguration((NettyHttpComponent) component).setRequestTimeout((long) value); return true;\n            case \"clientInitializerFactory\": getOrCreateConfiguration((NettyHttpComponent) component).setClientInitializerFactory((org.apache.camel.component.netty.ClientInitializerFactory) value); return true;\n            case \"correlationManager\": getOrCreateConfiguration((NettyHttpComponent) component).setCorrelationManager((org.apache.camel.component.netty.NettyCamelStateCorrelationManager) value); return true;\n            case \"lazyChannelCreation\": getOrCreateConfiguration((NettyHttpComponent) component).setLazyChannelCreation((boolean) value); return true;\n            case \"producerPoolEnabled\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolEnabled((boolean) value); return true;\n            case \"producerPoolMaxActive\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxActive((int) value); return true;\n            case \"producerPoolMaxIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMaxIdle((int) value); return true;\n            case \"producerPoolMinEvictableIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinEvictableIdle((long) value); return true;\n            case \"producerPoolMinIdle\": getOrCreateConfiguration((NettyHttpComponent) component).setProducerPoolMinIdle((int) value); return true;\n            case \"udpConnectionlessSending\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpConnectionlessSending((boolean) value); return true;\n            case \"useByteBuf\": getOrCreateConfiguration((NettyHttpComponent) component).setUseByteBuf((boolean) value); return true;\n            case \"allowSerializedHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowSerializedHeaders((boolean) value); return true;\n            case \"autowiredEnabled\": ((NettyHttpComponent) component).setAutowiredEnabled((boolean) value); return true;\n            case \"channelGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setChannelGroup((io.netty.channel.group.ChannelGroup) value); return true;\n            case \"headerFilterStrategy\": ((NettyHttpComponent) component).setHeaderFilterStrategy((org.apache.camel.spi.HeaderFilterStrategy) value); return true;\n            case \"nativeTransport\": getOrCreateConfiguration((NettyHttpComponent) component).setNativeTransport((boolean) value); return true;\n            case \"nettyHttpBinding\": ((NettyHttpComponent) component).setNettyHttpBinding((org.apache.camel.component.netty.http.NettyHttpBinding) value); return true;\n            case \"options\": getOrCreateConfiguration((NettyHttpComponent) component).setOptions((java.util.Map) value); return true;\n            case \"receiveBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSize((int) value); return true;\n            case \"receiveBufferSizePredictor\": getOrCreateConfiguration((NettyHttpComponent) component).setReceiveBufferSizePredictor((int) value); return true;\n            case \"sendBufferSize\": getOrCreateConfiguration((NettyHttpComponent) component).setSendBufferSize((int) value); return true;\n            case \"transferExchange\": getOrCreateConfiguration((NettyHttpComponent) component).setTransferExchange((boolean) value); return true;\n            case \"udpByteArrayCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setUdpByteArrayCodec((boolean) value); return true;\n            case \"workerCount\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerCount((int) value); return true;\n            case \"workerGroup\": getOrCreateConfiguration((NettyHttpComponent) component).setWorkerGroup((io.netty.channel.EventLoopGroup) value); return true;\n            case \"allowDefaultCodec\": getOrCreateConfiguration((NettyHttpComponent) component).setAllowDefaultCodec((boolean) value); return true;\n            case \"autoAppendDelimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setAutoAppendDelimiter((boolean) value); return true;\n            case \"decoderMaxLineLength\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoderMaxLineLength((int) value); return true;\n            case \"decoders\": getOrCreateConfiguration((NettyHttpComponent) component).setDecoders((java.util.List) value); return true;\n            case \"delimiter\": getOrCreateConfiguration((NettyHttpComponent) component).setDelimiter((org.apache.camel.component.netty.TextLineDelimiter) value); return true;\n            case \"encoders\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoders((java.util.List) value); return true;\n            case \"encoding\": getOrCreateConfiguration((NettyHttpComponent) component).setEncoding((java.lang.String) value); return true;\n            case \"textline\": getOrCreateConfiguration((NettyHttpComponent) component).setTextline((boolean) value); return true;\n            case \"enabledProtocols\": getOrCreateConfiguration((NettyHttpComponent) component).setEnabledProtocols((java.lang.String) value); return true;\n            case \"keyStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFile((java.io.File) value); return true;\n            case \"keyStoreFormat\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreFormat((java.lang.String) value); return true;\n            case \"keyStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setKeyStoreResource((java.lang.String) value); return true;\n            case \"needClientAuth\": getOrCreateConfiguration((NettyHttpComponent) component).setNeedClientAuth((boolean) value); return true;\n            case \"passphrase\": getOrCreateConfiguration((NettyHttpComponent) component).setPassphrase((java.lang.String) value); return true;\n            case \"securityConfiguration\": ((NettyHttpComponent) component).setSecurityConfiguration((org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration) value); return true;\n            case \"securityProvider\": getOrCreateConfiguration((NettyHttpComponent) component).setSecurityProvider((java.lang.String) value); return true;\n            case \"ssl\": getOrCreateConfiguration((NettyHttpComponent) component).setSsl((boolean) value); return true;\n            case \"sslClientCertHeaders\": getOrCreateConfiguration((NettyHttpComponent) component).setSslClientCertHeaders((boolean) value); return true;\n            case \"sslContextParameters\": getOrCreateConfiguration((NettyHttpComponent) component).setSslContextParameters((org.apache.camel.support.jsse.SSLContextParameters) value); return true;\n            case \"sslHandler\": getOrCreateConfiguration((NettyHttpComponent) component).setSslHandler((io.netty.handler.ssl.SslHandler) value); return true;\n            case \"trustStoreFile\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreFile((java.io.File) value); return true;\n            case \"trustStoreResource\": getOrCreateConfiguration((NettyHttpComponent) component).setTrustStoreResource((java.lang.String) value); return true;\n            case \"useGlobalSslContextParameters\": ((NettyHttpComponent) component).setUseGlobalSslContextParameters((boolean) value); return true;\n            default: return false;\n            }\n        }\n","realPath":"core/camel-componentdsl/src/generated/java/org/apache/camel/builder/component/dsl/NettyHttpComponentBuilderFactory.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":1403,"status":"M"}],"commitId":"9907622cb77f008562929836613f6acb126f809f","commitMessage":"@@@CAMEL-16315 - Camel-Netty: Support Hostname verification even though we are on Netty 4.1.x\n","date":"2021-03-09 06:32:08","modifiedFileCount":"3","status":"M","submitter":"Andrea Cosentino"}]
