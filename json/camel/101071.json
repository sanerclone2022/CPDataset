[{"authorTime":"2020-11-07 17:20:09","codes":[{"authorDate":"2020-11-07 17:20:09","commitOrder":1,"curCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        BaseServiceResolver<InternalProcessorFactory> resolver = new BaseServiceResolver<>(\n                InternalProcessorFactory.FACTORY, InternalProcessorFactory.class, getBootstrapFactoryFinder());\n        Optional<InternalProcessorFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add ccamel-core-processor to classpath.\");\n        }\n    }\n","date":"2020-11-07 17:20:09","endLine":244,"groupId":"11894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createInternalProcessorFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ea/696b9b64f6b6cab3a46f76e3c897c4310fbe48.src","preCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        BaseServiceResolver<InternalProcessorFactory> resolver = new BaseServiceResolver<>(\n                InternalProcessorFactory.FACTORY, InternalProcessorFactory.class, getBootstrapFactoryFinder());\n        Optional<InternalProcessorFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add ccamel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"},{"authorDate":"2020-11-07 17:20:09","commitOrder":1,"curCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        BaseServiceResolver<DeferServiceFactory> resolver = new BaseServiceResolver<>(\n                DeferServiceFactory.FACTORY, DeferServiceFactory.class, getBootstrapFactoryFinder());\n        Optional<DeferServiceFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","date":"2020-11-07 17:20:09","endLine":381,"groupId":"11894","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createDeferServiceFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ea/696b9b64f6b6cab3a46f76e3c897c4310fbe48.src","preCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        BaseServiceResolver<DeferServiceFactory> resolver = new BaseServiceResolver<>(\n                DeferServiceFactory.FACTORY, DeferServiceFactory.class, getBootstrapFactoryFinder());\n        Optional<DeferServiceFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"B"}],"commitId":"0a94e0f2ecf8aa381cde59af8f762674d29f3281","commitMessage":"@@@camel-core - Optimize to avoid lambda classes in base engine to reduce memory and reduce classes loaded.\n","date":"2020-11-07 17:20:09","modifiedFileCount":"1","status":"B","submitter":"Claus Ibsen"},{"authorTime":"2020-11-07 17:20:09","codes":[{"authorDate":"2021-01-31 17:03:52","commitOrder":2,"curCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        BaseServiceResolver<InternalProcessorFactory> resolver = new BaseServiceResolver<>(\n                InternalProcessorFactory.FACTORY, InternalProcessorFactory.class, getBootstrapFactoryFinder());\n        Optional<InternalProcessorFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","date":"2021-01-31 17:03:52","endLine":244,"groupId":"11894","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createInternalProcessorFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/4c/0918e9354165321c3eee9f09ae43c5e5bbfa05.src","preCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        BaseServiceResolver<InternalProcessorFactory> resolver = new BaseServiceResolver<>(\n                InternalProcessorFactory.FACTORY, InternalProcessorFactory.class, getBootstrapFactoryFinder());\n        Optional<InternalProcessorFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add ccamel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2020-11-07 17:20:09","commitOrder":2,"curCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        BaseServiceResolver<DeferServiceFactory> resolver = new BaseServiceResolver<>(\n                DeferServiceFactory.FACTORY, DeferServiceFactory.class, getBootstrapFactoryFinder());\n        Optional<DeferServiceFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","date":"2020-11-07 17:20:09","endLine":381,"groupId":"11894","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createDeferServiceFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ea/696b9b64f6b6cab3a46f76e3c897c4310fbe48.src","preCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        BaseServiceResolver<DeferServiceFactory> resolver = new BaseServiceResolver<>(\n                DeferServiceFactory.FACTORY, DeferServiceFactory.class, getBootstrapFactoryFinder());\n        Optional<DeferServiceFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"c9036a22916622fa443353fd7a27f106ac39bdfc","commitMessage":"@@@Typo\n","date":"2021-01-31 17:03:52","modifiedFileCount":"1","status":"M","submitter":"Claus Ibsen"},{"authorTime":"2021-02-03 19:57:16","codes":[{"authorDate":"2021-02-03 19:57:16","commitOrder":3,"curCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        Optional<InternalProcessorFactory> result = ResolverHelper.resolveService(\n                getCamelContextReference(),\n                getBootstrapFactoryFinder(),\n                InternalProcessorFactory.FACTORY,\n                InternalProcessorFactory.class);\n\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","date":"2021-02-03 21:57:19","endLine":257,"groupId":"101071","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createInternalProcessorFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/92/b95f791851f5331add4acd036124beac3abc7c.src","preCode":"    protected InternalProcessorFactory createInternalProcessorFactory() {\n        BaseServiceResolver<InternalProcessorFactory> resolver = new BaseServiceResolver<>(\n                InternalProcessorFactory.FACTORY, InternalProcessorFactory.class, getBootstrapFactoryFinder());\n        Optional<InternalProcessorFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find InternalProcessorFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"},{"authorDate":"2021-02-03 19:57:16","commitOrder":3,"curCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        Optional<DeferServiceFactory> result = ResolverHelper.resolveService(\n                getCamelContextReference(),\n                getBootstrapFactoryFinder(),\n                DeferServiceFactory.FACTORY,\n                DeferServiceFactory.class);\n\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","date":"2021-02-03 21:57:19","endLine":405,"groupId":"101071","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createDeferServiceFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/92/b95f791851f5331add4acd036124beac3abc7c.src","preCode":"    protected DeferServiceFactory createDeferServiceFactory() {\n        BaseServiceResolver<DeferServiceFactory> resolver = new BaseServiceResolver<>(\n                DeferServiceFactory.FACTORY, DeferServiceFactory.class, getBootstrapFactoryFinder());\n        Optional<DeferServiceFactory> result = resolver.resolve(getCamelContextReference());\n        if (result.isPresent()) {\n            return result.get();\n        } else {\n            throw new IllegalArgumentException(\n                    \"Cannot find DeferServiceFactory on classpath. Add camel-core-processor to classpath.\");\n        }\n    }\n","realPath":"core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/SimpleCamelContext.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"04ba30cc74304d7ff219051faa1fac4f13c49adc","commitMessage":"@@@CAMEL-16136: replace BaseServiceResolver with a static helper method\n","date":"2021-02-03 21:57:19","modifiedFileCount":"5","status":"M","submitter":"Luca Burgazzoli"}]
