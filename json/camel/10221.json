[{"authorTime":"2019-02-13 16:55:11","codes":[{"authorDate":"2019-02-13 16:55:11","commitOrder":1,"curCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        Assert.assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            Assert.assertFalse(\"Should be invalid\", result.isParsed());\n        }\n    }\n","date":"2019-02-13 17:43:38","endLine":53,"groupId":"27723","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/3d/97c65775ae5e4dde9744525279e06f309c93ac.src","preCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        Assert.assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            Assert.assertFalse(\"Should be invalid\", result.isParsed());\n        }\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteBuilderEmptyUriTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2019-02-13 16:55:11","commitOrder":1,"curCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n        Assert.assertEquals(\"foo\", list.get(0).getElement());\n        Assert.assertEquals(\"bar\", list.get(1).getElement());\n        Assert.assertEquals(\"foo\", list.get(2).getElement());\n    }\n","date":"2019-02-13 17:43:38","endLine":55,"groupId":"12651","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/fc/295f7dbed276df5716d27201db447bf0ca0e5b.src","preCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n        Assert.assertEquals(\"foo\", list.get(0).getElement());\n        Assert.assertEquals(\"bar\", list.get(1).getElement());\n        Assert.assertEquals(\"foo\", list.get(2).getElement());\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteDuplicateIdBuilderDCamelTestSupportTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"794ae6f40cc1a61ff1d184a37e1844d009d8eb8d","commitMessage":"@@@CAMEL-13189: Splitup camel-maven-plugin\n","date":"2019-02-13 17:43:38","modifiedFileCount":"0","status":"B","submitter":"Claus Ibsen"},{"authorTime":"2020-07-06 15:34:29","codes":[{"authorDate":"2020-07-06 15:34:29","commitOrder":2,"curCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            assertFalse(result.isParsed(), \"Should be invalid\");\n        }\n    }\n","date":"2020-07-06 15:34:29","endLine":55,"groupId":"1871","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/15/db695f33f86307b0aab901fe48a1e1b9960385.src","preCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        Assert.assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            Assert.assertFalse(\"Should be invalid\", result.isParsed());\n        }\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteBuilderEmptyUriTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2020-07-06 15:34:29","commitOrder":2,"curCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n        assertEquals(\"foo\", list.get(0).getElement());\n        assertEquals(\"bar\", list.get(1).getElement());\n        assertEquals(\"foo\", list.get(2).getElement());\n    }\n","date":"2020-07-06 15:34:29","endLine":56,"groupId":"36649","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/a8/f35247a2dbafb2380cc547d815b1bcaaf5168f.src","preCode":"    public void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        Assert.assertEquals(3, list.size());\n        Assert.assertEquals(\"foo\", list.get(0).getElement());\n        Assert.assertEquals(\"bar\", list.get(1).getElement());\n        Assert.assertEquals(\"foo\", list.get(2).getElement());\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteDuplicateIdBuilderDCamelTestSupportTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"24e7866263cd18104a8027e57bae99933095d979","commitMessage":"@@@CAMEL-11807: Migrated camel-itest-standalone/route-parser to JUnit 5\n","date":"2020-07-06 15:34:29","modifiedFileCount":"58","status":"M","submitter":"aldettinger"},{"authorTime":"2021-03-16 01:13:01","codes":[{"authorDate":"2021-03-16 01:13:01","commitOrder":3,"curCode":"    void parse() {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            assertFalse(result.isParsed(), \"Should be invalid\");\n        }\n    }\n","date":"2021-03-16 01:13:01","endLine":56,"groupId":"1871","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/ae/a00a39e94a21ab6e323eb552ce1364a02779ff.src","preCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            assertFalse(result.isParsed(), \"Should be invalid\");\n        }\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteBuilderEmptyUriTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2021-03-16 01:13:01","commitOrder":3,"curCode":"    void parse() {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n        assertEquals(\"foo\", list.get(0).getElement());\n        assertEquals(\"bar\", list.get(1).getElement());\n        assertEquals(\"foo\", list.get(2).getElement());\n    }\n","date":"2021-03-16 01:13:01","endLine":57,"groupId":"36649","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/29/479d0f5a4bd8f86db9bc4a6dfbfe4047f175cf.src","preCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n        assertEquals(\"foo\", list.get(0).getElement());\n        assertEquals(\"bar\", list.get(1).getElement());\n        assertEquals(\"foo\", list.get(2).getElement());\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteDuplicateIdBuilderDCamelTestSupportTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"31a143ab63dcfbb530beaa459fe3c246d25e8dd8","commitMessage":"@@@Enhance some code lines (#5209)\n\nenhance some code lines","date":"2021-03-16 01:13:01","modifiedFileCount":"44","status":"M","submitter":"Boualem DJELAILI"},{"authorTime":"2021-03-16 01:20:38","codes":[{"authorDate":"2021-03-16 01:20:38","commitOrder":4,"curCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            assertFalse(result.isParsed(), \"Should be invalid\");\n        }\n    }\n","date":"2021-03-16 01:20:38","endLine":56,"groupId":"10221","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/dd/8de71cfb07f0f56ac6e338d43b6748a16a2f08.src","preCode":"    void parse() {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(\"direct:foo\", list.get(0).getElement());\n\n        list = CamelJavaParserHelper.parseCamelProducerUris(method, true, false);\n        assertEquals(1, list.size());\n        for (ParserResult result : list) {\n            LOG.info(\"Producer: \" + result.getElement());\n            assertFalse(result.isParsed(), \"Should be invalid\");\n        }\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteBuilderEmptyUriTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2021-03-16 01:20:38","commitOrder":4,"curCode":"    void parse() throws Exception {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n        assertEquals(\"foo\", list.get(0).getElement());\n        assertEquals(\"bar\", list.get(1).getElement());\n        assertEquals(\"foo\", list.get(2).getElement());\n    }\n","date":"2021-03-16 01:20:38","endLine":57,"groupId":"10221","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"parse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-camel-10-0.7/blobInfo/CC_OUT/blobs/98/022881bf7b138cba93c261f743f88275fb60f2.src","preCode":"    void parse() {\n        JavaClassSource clazz = (JavaClassSource) Roaster\n                .parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteDuplicateIdTest.java\"));\n        MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);\n\n        List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, false);\n        for (ParserResult result : list) {\n            LOG.info(\"Consumer: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n\n        list = CamelJavaParserHelper.parseCamelRouteIds(method);\n        for (ParserResult result : list) {\n            LOG.info(\"Route id: \" + result.getElement());\n        }\n        assertEquals(3, list.size());\n        assertEquals(\"foo\", list.get(0).getElement());\n        assertEquals(\"bar\", list.get(1).getElement());\n        assertEquals(\"foo\", list.get(2).getElement());\n    }\n","realPath":"catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterRouteDuplicateIdBuilderDCamelTestSupportTest.java","repoName":"camel","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"52e3594e8559058a462cfb17e61797d8fe51486f","commitMessage":"@@@Enhance some code lines (#5209)\n","date":"2021-03-16 01:20:38","modifiedFileCount":"26","status":"M","submitter":"Claus Ibsen"}]
