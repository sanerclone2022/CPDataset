[{"authorTime":"2015-11-19 10:34:36","codes":[{"authorDate":"2015-11-19 10:34:36","commitOrder":1,"curCode":"  public void testKryoEncoder() {\n    Encoder<KryoSerializable> encoder = Encoders.kryo(KryoSerializable.class);\n    List<KryoSerializable> data = Arrays.asList(\n      new KryoSerializable(\"hello\"), new KryoSerializable(\"world\"));\n    Dataset<KryoSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","date":"2015-11-19 10:34:36","endLine":485,"groupId":"1917","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testKryoEncoder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/ce/40dd856f679383dba2dc4521bc88d7b70829fd.src","preCode":"  public void testKryoEncoder() {\n    Encoder<KryoSerializable> encoder = Encoders.kryo(KryoSerializable.class);\n    List<KryoSerializable> data = Arrays.asList(\n      new KryoSerializable(\"hello\"), new KryoSerializable(\"world\"));\n    Dataset<KryoSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"B"},{"authorDate":"2015-11-19 10:34:36","commitOrder":1,"curCode":"  public void testJavaEncoder() {\n    Encoder<JavaSerializable> encoder = Encoders.javaSerialization(JavaSerializable.class);\n    List<JavaSerializable> data = Arrays.asList(\n      new JavaSerializable(\"hello\"), new JavaSerializable(\"world\"));\n    Dataset<JavaSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","date":"2015-11-19 10:34:36","endLine":494,"groupId":"1917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaEncoder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/ce/40dd856f679383dba2dc4521bc88d7b70829fd.src","preCode":"  public void testJavaEncoder() {\n    Encoder<JavaSerializable> encoder = Encoders.javaSerialization(JavaSerializable.class);\n    List<JavaSerializable> data = Arrays.asList(\n      new JavaSerializable(\"hello\"), new JavaSerializable(\"world\"));\n    Dataset<JavaSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"B"}],"commitId":"e61367b9f9bfc8e123369d55d7ca5925568b98a7","commitMessage":"@@@[SPARK-11833][SQL] Add Java tests for Kryo/Java Dataset encoders\n\nAlso added some nicer error messages for incompatible types (private types and primitive types) for Kryo/Java encoder.\n\nAuthor: Reynold Xin <rxin@databricks.com>\n\nCloses #9823 from rxin/SPARK-11833.\n","date":"2015-11-19 10:34:36","modifiedFileCount":"1","status":"B","submitter":"Reynold Xin"},{"authorTime":"2016-05-11 02:17:47","codes":[{"authorDate":"2016-05-11 02:17:47","commitOrder":2,"curCode":"  public void testKryoEncoder() {\n    Encoder<KryoSerializable> encoder = Encoders.kryo(KryoSerializable.class);\n    List<KryoSerializable> data = Arrays.asList(\n      new KryoSerializable(\"hello\"), new KryoSerializable(\"world\"));\n    Dataset<KryoSerializable> ds = spark.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","date":"2016-05-11 02:17:47","endLine":443,"groupId":"10403","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testKryoEncoder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/83/54a5bdac68f9db62352019776563a7ac45f315.src","preCode":"  public void testKryoEncoder() {\n    Encoder<KryoSerializable> encoder = Encoders.kryo(KryoSerializable.class);\n    List<KryoSerializable> data = Arrays.asList(\n      new KryoSerializable(\"hello\"), new KryoSerializable(\"world\"));\n    Dataset<KryoSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2016-05-11 02:17:47","commitOrder":2,"curCode":"  public void testJavaEncoder() {\n    Encoder<JavaSerializable> encoder = Encoders.javaSerialization(JavaSerializable.class);\n    List<JavaSerializable> data = Arrays.asList(\n      new JavaSerializable(\"hello\"), new JavaSerializable(\"world\"));\n    Dataset<JavaSerializable> ds = spark.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","date":"2016-05-11 02:17:47","endLine":452,"groupId":"10403","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaEncoder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/83/54a5bdac68f9db62352019776563a7ac45f315.src","preCode":"  public void testJavaEncoder() {\n    Encoder<JavaSerializable> encoder = Encoders.javaSerialization(JavaSerializable.class);\n    List<JavaSerializable> data = Arrays.asList(\n      new JavaSerializable(\"hello\"), new JavaSerializable(\"world\"));\n    Dataset<JavaSerializable> ds = context.createDataset(data, encoder);\n    Assert.assertEquals(data, ds.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"M"}],"commitId":"ed0b4070fb50054b1ecf66ff6c32458a4967dfd3","commitMessage":"@@@[SPARK-15037][SQL][MLLIB] Use SparkSession instead of SQLContext in Scala/Java TestSuites\n\n## What changes were proposed in this pull request?\nUse SparkSession instead of SQLContext in Scala/Java TestSuites\nas this PR already very big working Python TestSuites in a diff PR.\n\n## How was this patch tested?\nExisting tests\n\nAuthor: Sandeep Singh <sandeep@techaddict.me>\n\nCloses #12907 from techaddict/SPARK-15037.\n","date":"2016-05-11 02:17:47","modifiedFileCount":"63","status":"M","submitter":"Sandeep Singh"}]
