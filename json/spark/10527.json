[{"authorTime":"2017-02-16 20:32:45","codes":[{"authorDate":"2017-02-16 20:32:45","commitOrder":1,"curCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 =\n      rdd1.mapToPair(i -> new Tuple2<>(i, i % 2));\n    List<Integer>[] parts = rdd1.collectPartitions(new int[]{0});\n    Assert.assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(3, 4), parts[0]);\n    Assert.assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(1, 1), new Tuple2<>(2, 0)),\n      rdd2.collectPartitions(new int[]{0})[0]);\n\n    List<Tuple2<Integer, Integer>>[] parts2 = rdd2.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(5, 1), new Tuple2<>(6, 0), new Tuple2<>(7, 1)),\n      parts2[1]);\n  }\n","date":"2017-02-16 20:32:45","endLine":345,"groupId":"993","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"collectPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/e2/2ad89c1d6eadab2f900fd7ef5b36acba0a2092.src","preCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 =\n      rdd1.mapToPair(i -> new Tuple2<>(i, i % 2));\n    List<Integer>[] parts = rdd1.collectPartitions(new int[]{0});\n    Assert.assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(3, 4), parts[0]);\n    Assert.assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(1, 1), new Tuple2<>(2, 0)),\n      rdd2.collectPartitions(new int[]{0})[0]);\n\n    List<Tuple2<Integer, Integer>>[] parts2 = rdd2.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(5, 1), new Tuple2<>(6, 0), new Tuple2<>(7, 1)),\n      parts2[1]);\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/Java8RDDAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"B"},{"authorDate":"2017-02-16 20:32:45","commitOrder":1,"curCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 = rdd1.mapToPair(\n        new PairFunction<Integer, Integer, Integer>() {\n          @Override\n          public Tuple2<Integer, Integer> call(Integer i) {\n            return new Tuple2<>(i, i % 2);\n          }\n        });\n\n    List<Integer>[] parts = rdd1.collectPartitions(new int[] {0});\n    assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(3, 4), parts[0]);\n    assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    assertEquals(Arrays.asList(new Tuple2<>(1, 1),\n                                      new Tuple2<>(2, 0)),\n                        rdd2.collectPartitions(new int[] {0})[0]);\n\n    List<Tuple2<Integer,Integer>>[] parts2 = rdd2.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    assertEquals(Arrays.asList(new Tuple2<>(5, 1),\n                                      new Tuple2<>(6, 0),\n                                      new Tuple2<>(7, 1)),\n                        parts2[1]);\n  }\n","date":"2017-02-16 20:32:45","endLine":1589,"groupId":"2480","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"collectPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/80/aab100aced46cbe2866850ce4da7935d650b60.src","preCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 = rdd1.mapToPair(\n        new PairFunction<Integer, Integer, Integer>() {\n          @Override\n          public Tuple2<Integer, Integer> call(Integer i) {\n            return new Tuple2<>(i, i % 2);\n          }\n        });\n\n    List<Integer>[] parts = rdd1.collectPartitions(new int[] {0});\n    assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(3, 4), parts[0]);\n    assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    assertEquals(Arrays.asList(new Tuple2<>(1, 1),\n                                      new Tuple2<>(2, 0)),\n                        rdd2.collectPartitions(new int[] {0})[0]);\n\n    List<Tuple2<Integer,Integer>>[] parts2 = rdd2.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    assertEquals(Arrays.asList(new Tuple2<>(5, 1),\n                                      new Tuple2<>(6, 0),\n                                      new Tuple2<>(7, 1)),\n                        parts2[1]);\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":1561,"status":"B"}],"commitId":"0e2405490f2056728d1353abbac6f3ea177ae533","commitMessage":"@@@[SPARK-19550][BUILD][CORE][WIP] Remove Java 7 support\n\n- Move external/java8-tests tests into core.  streaming.  sql and remove\n- Remove MaxPermGen and related options\n- Fix some reflection / TODOs around Java 8+ methods\n- Update doc references to 1.7/1.8 differences\n- Remove Java 7/8 related build profiles\n- Update some plugins for better Java 8 compatibility\n- Fix a few Java-related warnings\n\nFor the future:\n\n- Update Java 8 examples to fully use Java 8\n- Update Java tests to use lambdas for simplicity\n- Update Java internal implementations to use lambdas\n\n## How was this patch tested?\n\nExisting tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16871 from srowen/SPARK-19493.\n","date":"2017-02-16 20:32:45","modifiedFileCount":"51","status":"B","submitter":"Sean Owen"},{"authorTime":"2017-02-20 01:42:50","codes":[{"authorDate":"2017-02-16 20:32:45","commitOrder":2,"curCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 =\n      rdd1.mapToPair(i -> new Tuple2<>(i, i % 2));\n    List<Integer>[] parts = rdd1.collectPartitions(new int[]{0});\n    Assert.assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(3, 4), parts[0]);\n    Assert.assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(1, 1), new Tuple2<>(2, 0)),\n      rdd2.collectPartitions(new int[]{0})[0]);\n\n    List<Tuple2<Integer, Integer>>[] parts2 = rdd2.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(5, 1), new Tuple2<>(6, 0), new Tuple2<>(7, 1)),\n      parts2[1]);\n  }\n","date":"2017-02-16 20:32:45","endLine":345,"groupId":"10527","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"collectPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/e2/2ad89c1d6eadab2f900fd7ef5b36acba0a2092.src","preCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 =\n      rdd1.mapToPair(i -> new Tuple2<>(i, i % 2));\n    List<Integer>[] parts = rdd1.collectPartitions(new int[]{0});\n    Assert.assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(3, 4), parts[0]);\n    Assert.assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(1, 1), new Tuple2<>(2, 0)),\n      rdd2.collectPartitions(new int[]{0})[0]);\n\n    List<Tuple2<Integer, Integer>>[] parts2 = rdd2.collectPartitions(new int[]{1, 2});\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    Assert.assertEquals(Arrays.asList(new Tuple2<>(5, 1), new Tuple2<>(6, 0), new Tuple2<>(7, 1)),\n      parts2[1]);\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/Java8RDDAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"N"},{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 = rdd1.mapToPair(i -> new Tuple2<>(i, i % 2));\n\n    List<Integer>[] parts = rdd1.collectPartitions(new int[] {0});\n    assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(3, 4), parts[0]);\n    assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    assertEquals(Arrays.asList(new Tuple2<>(1, 1),\n                                      new Tuple2<>(2, 0)),\n                        rdd2.collectPartitions(new int[] {0})[0]);\n\n    List<Tuple2<Integer,Integer>>[] parts2 = rdd2.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    assertEquals(Arrays.asList(new Tuple2<>(5, 1),\n                                      new Tuple2<>(6, 0),\n                                      new Tuple2<>(7, 1)),\n                        parts2[1]);\n  }\n","date":"2017-02-20 01:42:50","endLine":1325,"groupId":"10527","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"collectPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/51/2149127d72f4f8f7ed7438b9ba9015a07e254f.src","preCode":"  public void collectPartitions() {\n    JavaRDD<Integer> rdd1 = sc.parallelize(Arrays.asList(1, 2, 3, 4, 5, 6, 7), 3);\n\n    JavaPairRDD<Integer, Integer> rdd2 = rdd1.mapToPair(\n        new PairFunction<Integer, Integer, Integer>() {\n          @Override\n          public Tuple2<Integer, Integer> call(Integer i) {\n            return new Tuple2<>(i, i % 2);\n          }\n        });\n\n    List<Integer>[] parts = rdd1.collectPartitions(new int[] {0});\n    assertEquals(Arrays.asList(1, 2), parts[0]);\n\n    parts = rdd1.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(3, 4), parts[0]);\n    assertEquals(Arrays.asList(5, 6, 7), parts[1]);\n\n    assertEquals(Arrays.asList(new Tuple2<>(1, 1),\n                                      new Tuple2<>(2, 0)),\n                        rdd2.collectPartitions(new int[] {0})[0]);\n\n    List<Tuple2<Integer,Integer>>[] parts2 = rdd2.collectPartitions(new int[] {1, 2});\n    assertEquals(Arrays.asList(new Tuple2<>(3, 1), new Tuple2<>(4, 0)), parts2[0]);\n    assertEquals(Arrays.asList(new Tuple2<>(5, 1),\n                                      new Tuple2<>(6, 0),\n                                      new Tuple2<>(7, 1)),\n                        parts2[1]);\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":1303,"status":"M"}],"commitId":"1487c9af20a333ead55955acf4c0aa323bea0d07","commitMessage":"@@@[SPARK-19534][TESTS] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert tests to use Java 8 lambdas.  and modest related fixes to surrounding code.\n\n## How was this patch tested?\n\nJenkins tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16964 from srowen/SPARK-19534.\n","date":"2017-02-20 01:42:50","modifiedFileCount":"45","status":"M","submitter":"Sean Owen"}]
