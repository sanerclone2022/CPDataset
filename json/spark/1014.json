[{"authorTime":"2019-05-22 01:21:46","codes":[{"authorDate":"2019-05-22 01:21:46","commitOrder":1,"curCode":"  public void testRemoveAll() throws Exception {\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        db.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        db.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    db.write(o);\n\n    assertEquals(9, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"things\" }));\n    assertEquals(4, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"more things\" }));\n    assertEquals(0, db.count(ArrayKeyIndexType.class));\n  }\n","date":"2019-05-22 01:22:21","endLine":242,"groupId":"1540","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/0b/755ba0e80001376101137f900d12d7cd16ae97.src","preCode":"  public void testRemoveAll() throws Exception {\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        db.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        db.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    db.write(o);\n\n    assertEquals(9, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"things\" }));\n    assertEquals(4, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"more things\" }));\n    assertEquals(0, db.count(ArrayKeyIndexType.class));\n  }\n","realPath":"common/kvstore/src/test/java/org/apache/spark/util/kvstore/LevelDBSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"},{"authorDate":"2019-05-22 01:21:46","commitOrder":1,"curCode":"  public void testRemoveAll() throws Exception {\n    KVStore store = new InMemoryStore();\n\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        store.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        store.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    store.write(o);\n\n    assertEquals(9, store.count(ArrayKeyIndexType.class));\n\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"things\" }));\n    assertEquals(4, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"more things\" }));\n    assertEquals(0, store.count(ArrayKeyIndexType.class));\n  }\n","date":"2019-05-22 01:22:21","endLine":179,"groupId":"1540","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/9e/34225e14e1872b79ef7de2973b25519b241cbc.src","preCode":"  public void testRemoveAll() throws Exception {\n    KVStore store = new InMemoryStore();\n\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        store.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        store.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    store.write(o);\n\n    assertEquals(9, store.count(ArrayKeyIndexType.class));\n\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"things\" }));\n    assertEquals(4, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"more things\" }));\n    assertEquals(0, store.count(ArrayKeyIndexType.class));\n  }\n","realPath":"common/kvstore/src/test/java/org/apache/spark/util/kvstore/InMemoryStoreSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"9e73be38a53214780512d0cafedfae9d472cdd05","commitMessage":"@@@[SPARK-27726][CORE] Fix performance of ElementTrackingStore deletes when using InMemoryStore under high loads\n\nThe details of the PR are explored in-depth in the sub-tasks of the umbrella jira SPARK-27726.\nBriefly:\n  1. Stop issuing asynchronous requests to cleanup elements in the tracking store when a request is already pending\n  2. Fix a couple of thread-safety issues (mutable state and mis-ordered updates)\n  3. Move Summary deletion outside of Stage deletion loop like Tasks already are\n  4. Reimplement multi-delete in a removeAllKeys call which allows InMemoryStore to implement it in a performant manner.\n  5. Some generic typing and exception handling cleanup\n\nWe see about five orders of magnitude improvement in the deletion code.  which for us is the difference between a server that needs restarting daily.  and one that is stable over weeks.\n\nUnit tests for the fire-once asynchronous code and the removeAll calls in both LevelDB and InMemoryStore are supplied.  It was noted that the testing code for the LevelDB and InMemoryStore is highly repetitive.  and should probably be merged.  but we did not attempt that in this PR.\n\nA version of this code was run in our production 2.3.3 and we were able to sustain higher throughput without going into GC overload (which was happening on a daily basis some weeks ago).\n\nA version of this code was also put under a purpose-built Performance Suite of tests to verify performance under both types of Store implementations for both before and after code streams and for both total and partial delete cases (this code is not included in this PR).\n\nCloses #24616 from davidnavas/PentaBugFix.\n\nAuthored-by: David Navas <davidn@clearstorydata.com>\nSigned-off-by: Marcelo Vanzin <vanzin@cloudera.com>\n","date":"2019-05-22 01:22:21","modifiedFileCount":"8","status":"B","submitter":"David Navas"},{"authorTime":"2020-03-03 19:34:19","codes":[{"authorDate":"2019-05-22 01:21:46","commitOrder":2,"curCode":"  public void testRemoveAll() throws Exception {\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        db.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        db.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    db.write(o);\n\n    assertEquals(9, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"things\" }));\n    assertEquals(4, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"more things\" }));\n    assertEquals(0, db.count(ArrayKeyIndexType.class));\n  }\n","date":"2019-05-22 01:22:21","endLine":242,"groupId":"1014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/0b/755ba0e80001376101137f900d12d7cd16ae97.src","preCode":"  public void testRemoveAll() throws Exception {\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        db.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        db.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    db.write(o);\n\n    assertEquals(9, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"things\" }));\n    assertEquals(4, db.count(ArrayKeyIndexType.class));\n\n    db.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String[] { \"more things\" }));\n    assertEquals(0, db.count(ArrayKeyIndexType.class));\n  }\n","realPath":"common/kvstore/src/test/java/org/apache/spark/util/kvstore/LevelDBSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"N"},{"authorDate":"2020-03-03 19:34:19","commitOrder":2,"curCode":"  public void testRemoveAll() throws Exception {\n    KVStore store = new InMemoryStore();\n\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        store.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        store.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    store.write(o);\n\n    assertEquals(9, store.count(ArrayKeyIndexType.class));\n\n    \r\n    assert(!store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {10, 10, 10}, new int[] { 3, 3, 3 })));\n    assertEquals(9, store.count(ArrayKeyIndexType.class));\n\n    assert(store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 })));\n    assertEquals(7, store.count(ArrayKeyIndexType.class));\n\n    assert(store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"things\" })));\n    assertEquals(4, store.count(ArrayKeyIndexType.class));\n\n    assert(store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"more things\" })));\n    assertEquals(0, store.count(ArrayKeyIndexType.class));\n  }\n","date":"2020-03-03 19:34:19","endLine":185,"groupId":"1014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/da/5267669d5f17bf191a569f3f3a1d1ce2d6fb2a.src","preCode":"  public void testRemoveAll() throws Exception {\n    KVStore store = new InMemoryStore();\n\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 2; j++) {\n        ArrayKeyIndexType o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 0 };\n        o.id = new String[] { \"things\" };\n        store.write(o);\n\n        o = new ArrayKeyIndexType();\n        o.key = new int[] { i, j, 1 };\n        o.id = new String[] { \"more things\" };\n        store.write(o);\n      }\n    }\n\n    ArrayKeyIndexType o = new ArrayKeyIndexType();\n    o.key = new int[] { 2, 2, 2 };\n    o.id = new String[] { \"things\" };\n    store.write(o);\n\n    assertEquals(9, store.count(ArrayKeyIndexType.class));\n\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      KVIndex.NATURAL_INDEX_NAME,\n      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n    assertEquals(7, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"things\" }));\n    assertEquals(4, store.count(ArrayKeyIndexType.class));\n\n    store.removeAllByIndexValues(\n      ArrayKeyIndexType.class,\n      \"id\",\n      ImmutableSet.of(new String [] { \"more things\" }));\n    assertEquals(0, store.count(ArrayKeyIndexType.class));\n  }\n","realPath":"common/kvstore/src/test/java/org/apache/spark/util/kvstore/InMemoryStoreSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"b5166aac1f2da7a2e90fc3a4932cfd411286843a","commitMessage":"@@@[SPARK-31013][CORE][WEBUI] InMemoryStore: improve removeAllByIndexValues over natural key index\n\n\n What changes were proposed in this pull request?\n\nThe method `removeAllByIndexValues` in KVStore is to delete all the objects which have certain values in the given index.\nHowever.  in the current implementation of `InMemoryStore`.  when the given index is the natural key index.  there is no special handling for it and a linear search over all the task data is performed.\n\nWe can improve it by deleting the natural keys directly from the internal hashmap.\n\n\n Why are the changes needed?\n\nBetter performance if the given index for `removeAllByIndexValues` is the natural key index in\n`InMemoryStore`\n\n Does this PR introduce any user-facing change?\n\nNo\n\n\n How was this patch tested?\n\nEnhance the existing test.\n\nCloses #27763 from gengliangwang/useNaturalIndex.\n\nAuthored-by: Gengliang Wang <gengliang.wang@databricks.com>\nSigned-off-by: Wenchen Fan <wenchen@databricks.com>\n","date":"2020-03-03 19:34:19","modifiedFileCount":"2","status":"M","submitter":"Gengliang Wang"}]
