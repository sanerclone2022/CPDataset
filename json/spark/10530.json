[{"authorTime":"2017-02-16 20:32:45","codes":[{"authorDate":"2017-02-16 20:32:45","commitOrder":1,"curCode":"  public void sortByKey() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaPairRDD<Integer, Integer> rdd = sc.parallelizePairs(pairs);\n\n    \r\n    JavaPairRDD<Integer, Integer> sortedRDD = rdd.sortByKey();\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortByKey(Collections.<Integer>reverseOrder(), false);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n  }\n","date":"2017-02-16 20:32:45","endLine":216,"groupId":"2628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sortByKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/80/aab100aced46cbe2866850ce4da7935d650b60.src","preCode":"  public void sortByKey() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaPairRDD<Integer, Integer> rdd = sc.parallelizePairs(pairs);\n\n    \r\n    JavaPairRDD<Integer, Integer> sortedRDD = rdd.sortByKey();\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortByKey(Collections.<Integer>reverseOrder(), false);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"},{"authorDate":"2017-02-16 20:32:45","commitOrder":1,"curCode":"  public void sortBy() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaRDD<Tuple2<Integer, Integer>> rdd = sc.parallelize(pairs);\n\n    \r\n    JavaRDD<Tuple2<Integer, Integer>> sortedRDD =\n        rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._1();\n      }\n    }, true, 2);\n\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._2();\n      }\n    }, true, 2);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(2));\n  }\n","date":"2017-02-16 20:32:45","endLine":293,"groupId":"2488","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sortBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/80/aab100aced46cbe2866850ce4da7935d650b60.src","preCode":"  public void sortBy() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaRDD<Tuple2<Integer, Integer>> rdd = sc.parallelize(pairs);\n\n    \r\n    JavaRDD<Tuple2<Integer, Integer>> sortedRDD =\n        rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._1();\n      }\n    }, true, 2);\n\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._2();\n      }\n    }, true, 2);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(2));\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"B"}],"commitId":"0e2405490f2056728d1353abbac6f3ea177ae533","commitMessage":"@@@[SPARK-19550][BUILD][CORE][WIP] Remove Java 7 support\n\n- Move external/java8-tests tests into core.  streaming.  sql and remove\n- Remove MaxPermGen and related options\n- Fix some reflection / TODOs around Java 8+ methods\n- Update doc references to 1.7/1.8 differences\n- Remove Java 7/8 related build profiles\n- Update some plugins for better Java 8 compatibility\n- Fix a few Java-related warnings\n\nFor the future:\n\n- Update Java 8 examples to fully use Java 8\n- Update Java tests to use lambdas for simplicity\n- Update Java internal implementations to use lambdas\n\n## How was this patch tested?\n\nExisting tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16871 from srowen/SPARK-19493.\n","date":"2017-02-16 20:32:45","modifiedFileCount":"51","status":"B","submitter":"Sean Owen"},{"authorTime":"2017-02-20 01:42:50","codes":[{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void sortByKey() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaPairRDD<Integer, Integer> rdd = sc.parallelizePairs(pairs);\n\n    \r\n    JavaPairRDD<Integer, Integer> sortedRDD = rdd.sortByKey();\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortByKey(Collections.reverseOrder(), false);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n  }\n","date":"2017-02-20 01:42:50","endLine":215,"groupId":"10530","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sortByKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/51/2149127d72f4f8f7ed7438b9ba9015a07e254f.src","preCode":"  public void sortByKey() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaPairRDD<Integer, Integer> rdd = sc.parallelizePairs(pairs);\n\n    \r\n    JavaPairRDD<Integer, Integer> sortedRDD = rdd.sortByKey();\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortByKey(Collections.<Integer>reverseOrder(), false);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void sortBy() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaRDD<Tuple2<Integer, Integer>> rdd = sc.parallelize(pairs);\n\n    \r\n    JavaRDD<Tuple2<Integer, Integer>> sortedRDD = rdd.sortBy(Tuple2::_1, true, 2);\n\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortBy(Tuple2::_2, true, 2);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(2));\n  }\n","date":"2017-02-20 01:42:50","endLine":281,"groupId":"10530","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sortBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/51/2149127d72f4f8f7ed7438b9ba9015a07e254f.src","preCode":"  public void sortBy() {\n    List<Tuple2<Integer, Integer>> pairs = new ArrayList<>();\n    pairs.add(new Tuple2<>(0, 4));\n    pairs.add(new Tuple2<>(3, 2));\n    pairs.add(new Tuple2<>(-1, 1));\n\n    JavaRDD<Tuple2<Integer, Integer>> rdd = sc.parallelize(pairs);\n\n    \r\n    JavaRDD<Tuple2<Integer, Integer>> sortedRDD =\n        rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._1();\n      }\n    }, true, 2);\n\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    List<Tuple2<Integer, Integer>> sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(2));\n\n    \r\n    sortedRDD = rdd.sortBy(new Function<Tuple2<Integer, Integer>, Integer>() {\n      @Override\n      public Integer call(Tuple2<Integer, Integer> t) {\n        return t._2();\n      }\n    }, true, 2);\n    assertEquals(new Tuple2<>(-1, 1), sortedRDD.first());\n    sortedPairs = sortedRDD.collect();\n    assertEquals(new Tuple2<>(3, 2), sortedPairs.get(1));\n    assertEquals(new Tuple2<>(0, 4), sortedPairs.get(2));\n  }\n","realPath":"core/src/test/java/test/org/apache/spark/JavaAPISuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"1487c9af20a333ead55955acf4c0aa323bea0d07","commitMessage":"@@@[SPARK-19534][TESTS] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert tests to use Java 8 lambdas.  and modest related fixes to surrounding code.\n\n## How was this patch tested?\n\nJenkins tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16964 from srowen/SPARK-19534.\n","date":"2017-02-20 01:42:50","modifiedFileCount":"45","status":"M","submitter":"Sean Owen"}]
