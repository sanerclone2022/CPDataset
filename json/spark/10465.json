[{"authorTime":"2015-11-05 00:32:08","codes":[{"authorDate":"2015-08-28 01:46:41","commitOrder":4,"curCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","date":"2015-08-28 01:46:41","endLine":55,"groupId":"618","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runAssociationRules","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/2b/ef7a8609757f156e689db2e498494596ef4bfc.src","preCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","realPath":"mllib/src/test/java/org/apache/spark/mllib/fpm/JavaAssociationRulesSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"},{"authorDate":"2015-11-05 00:32:08","commitOrder":4,"curCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n  }\n","date":"2015-11-05 00:32:08","endLine":55,"groupId":"618","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/4d/0f989819ace899e4e24feff951e8d968ab02a0.src","preCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n  }\n","realPath":"examples/src/main/java/org/apache/spark/examples/mllib/JavaAssociationRulesExample.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"}],"commitId":"820064e613609bbf7edd726d982da1de60bf417a","commitMessage":"@@@[SPARK-11380][DOCS] Replace example code in mllib-frequent-pattern-mining.md using include_example\n\nAuthor: Pravin Gadakh <pravingadakh177@gmail.com>\nAuthor: Pravin Gadakh <prgadakh@in.ibm.com>\n\nCloses #9340 from pravingadakh/SPARK-11380.\n","date":"2015-11-05 00:32:08","modifiedFileCount":"0","status":"M","submitter":"Pravin Gadakh"},{"authorTime":"2016-03-09 18:12:23","codes":[{"authorDate":"2015-08-28 01:46:41","commitOrder":5,"curCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","date":"2015-08-28 01:46:41","endLine":55,"groupId":"618","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runAssociationRules","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/2b/ef7a8609757f156e689db2e498494596ef4bfc.src","preCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","realPath":"mllib/src/test/java/org/apache/spark/mllib/fpm/JavaAssociationRulesSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2016-03-09 18:12:23","commitOrder":5,"curCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","date":"2016-03-09 18:12:23","endLine":57,"groupId":"618","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/18/9560e3fe1f1c7aa18877bb95c29b070eac5fc7.src","preCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n  }\n","realPath":"examples/src/main/java/org/apache/spark/examples/mllib/JavaAssociationRulesExample.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"f3201aeeb06aae3b11e8cf6ee9693182dd896b32","commitMessage":"@@@[SPARK-13692][CORE][SQL] Fix trivial Coverity/Checkstyle defects\n\n## What changes were proposed in this pull request?\n\nThis issue fixes the following potential bugs and Java coding style detected by Coverity and Checkstyle.\n\n- Implement both null and type checking in equals functions.\n- Fix wrong type casting logic in SimpleJavaBean2.equals.\n- Add `implement Cloneable` to `UTF8String` and `SortedIterator`.\n- Remove dereferencing before null check in `AbstractBytesToBytesMapSuite`.\n- Fix coding style: Add '{}' to single `for` statement in mllib examples.\n- Remove unused imports in `ColumnarBatch` and `JavaKinesisStreamSuite`.\n- Remove unused fields in `ChunkFetchIntegrationSuite`.\n- Add `stop()` to prevent resource leak.\n\nPlease note that the last two checkstyle errors exist on newly added commits after [SPARK-13583](https://issues.apache.org/jira/browse/SPARK-13583).\n\n## How was this patch tested?\n\nmanual via `./dev/lint-java` and Coverity site.\n\nAuthor: Dongjoon Hyun <dongjoon@apache.org>\n\nCloses #11530 from dongjoon-hyun/SPARK-13692.\n","date":"2016-03-09 18:12:23","modifiedFileCount":"31","status":"M","submitter":"Dongjoon Hyun"},{"authorTime":"2016-03-09 18:12:23","codes":[{"authorDate":"2016-05-11 02:17:47","commitOrder":6,"curCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = jsc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[]{\"a\"}, 15L),\n      new FreqItemset<String>(new String[]{\"b\"}, 35L),\n      new FreqItemset<String>(new String[]{\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","date":"2016-05-11 02:17:47","endLine":61,"groupId":"618","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runAssociationRules","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/fd/c19a5b3dc4719e331974214107a6d3daea89a4.src","preCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","realPath":"mllib/src/test/java/org/apache/spark/mllib/fpm/JavaAssociationRulesSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2016-03-09 18:12:23","commitOrder":6,"curCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","date":"2016-03-09 18:12:23","endLine":57,"groupId":"618","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/18/9560e3fe1f1c7aa18877bb95c29b070eac5fc7.src","preCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","realPath":"examples/src/main/java/org/apache/spark/examples/mllib/JavaAssociationRulesExample.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"}],"commitId":"ed0b4070fb50054b1ecf66ff6c32458a4967dfd3","commitMessage":"@@@[SPARK-15037][SQL][MLLIB] Use SparkSession instead of SQLContext in Scala/Java TestSuites\n\n## What changes were proposed in this pull request?\nUse SparkSession instead of SQLContext in Scala/Java TestSuites\nas this PR already very big working Python TestSuites in a diff PR.\n\n## How was this patch tested?\nExisting tests\n\nAuthor: Sandeep Singh <sandeep@techaddict.me>\n\nCloses #12907 from techaddict/SPARK-15037.\n","date":"2016-05-11 02:17:47","modifiedFileCount":"63","status":"M","submitter":"Sandeep Singh"},{"authorTime":"2017-02-20 01:37:56","codes":[{"authorDate":"2016-05-11 02:17:47","commitOrder":7,"curCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = jsc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[]{\"a\"}, 15L),\n      new FreqItemset<String>(new String[]{\"b\"}, 35L),\n      new FreqItemset<String>(new String[]{\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","date":"2016-05-11 02:17:47","endLine":61,"groupId":"618","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"runAssociationRules","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/fd/c19a5b3dc4719e331974214107a6d3daea89a4.src","preCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = jsc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[]{\"a\"}, 15L),\n      new FreqItemset<String>(new String[]{\"b\"}, 35L),\n      new FreqItemset<String>(new String[]{\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","realPath":"mllib/src/test/java/org/apache/spark/mllib/fpm/JavaAssociationRulesSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2017-02-20 01:37:56","commitOrder":7,"curCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<>(new String[] {\"a\"}, 15L),\n      new FreqItemset<>(new String[] {\"b\"}, 35L),\n      new FreqItemset<>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","date":"2017-02-20 01:37:56","endLine":57,"groupId":"618","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/5f/43603f4ff5c8d042f11bd9b5c43331c2062637.src","preCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[] {\"a\"}, 15L),\n      new FreqItemset<String>(new String[] {\"b\"}, 35L),\n      new FreqItemset<String>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","realPath":"examples/src/main/java/org/apache/spark/examples/mllib/JavaAssociationRulesExample.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"de14d35f77071932963a994fac5aec0e5df838a1","commitMessage":"@@@[SPARK-19533][EXAMPLES] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert Java tests to use lambdas.  Java 8 features.\n\n## How was this patch tested?\n\nJenkins tests.\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16961 from srowen/SPARK-19533.\n","date":"2017-02-20 01:37:56","modifiedFileCount":"52","status":"M","submitter":"Sean Owen"},{"authorTime":"2017-02-20 01:37:56","codes":[{"authorDate":"2017-02-20 01:42:50","commitOrder":8,"curCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = jsc.parallelize(Arrays.asList(\n      new FreqItemset<>(new String[]{\"a\"}, 15L),\n      new FreqItemset<>(new String[]{\"b\"}, 35L),\n      new FreqItemset<>(new String[]{\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","date":"2017-02-20 01:42:50","endLine":40,"groupId":"10465","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"runAssociationRules","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/15/de566c886de08c95d3a9a52af4582107d5f1e7.src","preCode":"  public void runAssociationRules() {\n\n    @SuppressWarnings(\"unchecked\")\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = jsc.parallelize(Arrays.asList(\n      new FreqItemset<String>(new String[]{\"a\"}, 15L),\n      new FreqItemset<String>(new String[]{\"b\"}, 35L),\n      new FreqItemset<String>(new String[]{\"a\", \"b\"}, 12L)\n    ));\n\n    JavaRDD<AssociationRules.Rule<String>> results = (new AssociationRules()).run(freqItemsets);\n  }\n","realPath":"mllib/src/test/java/org/apache/spark/mllib/fpm/JavaAssociationRulesSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2017-02-20 01:37:56","commitOrder":8,"curCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<>(new String[] {\"a\"}, 15L),\n      new FreqItemset<>(new String[] {\"b\"}, 35L),\n      new FreqItemset<>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","date":"2017-02-20 01:37:56","endLine":57,"groupId":"10465","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/5f/43603f4ff5c8d042f11bd9b5c43331c2062637.src","preCode":"  public static void main(String[] args) {\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"JavaAssociationRulesExample\");\n    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n\n    \r\n    JavaRDD<FPGrowth.FreqItemset<String>> freqItemsets = sc.parallelize(Arrays.asList(\n      new FreqItemset<>(new String[] {\"a\"}, 15L),\n      new FreqItemset<>(new String[] {\"b\"}, 35L),\n      new FreqItemset<>(new String[] {\"a\", \"b\"}, 12L)\n    ));\n\n    AssociationRules arules = new AssociationRules()\n      .setMinConfidence(0.8);\n    JavaRDD<AssociationRules.Rule<String>> results = arules.run(freqItemsets);\n\n    for (AssociationRules.Rule<String> rule : results.collect()) {\n      System.out.println(\n        rule.javaAntecedent() + \" => \" + rule.javaConsequent() + \", \" + rule.confidence());\n    }\n    \r\n\n    sc.stop();\n  }\n","realPath":"examples/src/main/java/org/apache/spark/examples/mllib/JavaAssociationRulesExample.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"}],"commitId":"1487c9af20a333ead55955acf4c0aa323bea0d07","commitMessage":"@@@[SPARK-19534][TESTS] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert tests to use Java 8 lambdas.  and modest related fixes to surrounding code.\n\n## How was this patch tested?\n\nJenkins tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16964 from srowen/SPARK-19534.\n","date":"2017-02-20 01:42:50","modifiedFileCount":"45","status":"M","submitter":"Sean Owen"}]
