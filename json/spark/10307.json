[{"authorTime":"2015-08-04 06:24:34","codes":[{"authorDate":"2015-08-04 06:24:34","commitOrder":1,"curCode":"  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case AINT:\n      return Integer.valueOf(getAint());\n\n    case A_STRING:\n      return getAString();\n\n    case LINT:\n      return getLint();\n\n    case L_STRING:\n      return getLString();\n\n    case LINT_STRING:\n      return getLintString();\n\n    case M_STRING_STRING:\n      return getMStringString();\n\n    }\n    throw new IllegalStateException();\n  }\n","date":"2015-08-04 06:24:42","endLine":517,"groupId":"853","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldValue","params":"(_Fieldsfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/e0/10112bb93275118ab393961f7790874371d318.src","preCode":"  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case AINT:\n      return Integer.valueOf(getAint());\n\n    case A_STRING:\n      return getAString();\n\n    case LINT:\n      return getLint();\n\n    case L_STRING:\n      return getLString();\n\n    case LINT_STRING:\n      return getLintString();\n\n    case M_STRING_STRING:\n      return getMStringString();\n\n    }\n    throw new IllegalStateException();\n  }\n","realPath":"sql/hive/src/test/java/org/apache/spark/sql/hive/test/Complex.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"B"},{"authorDate":"2015-08-04 06:24:34","commitOrder":1,"curCode":"  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n\n    switch (field) {\n    case AINT:\n      return isSetAint();\n    case A_STRING:\n      return isSetAString();\n    case LINT:\n      return isSetLint();\n    case L_STRING:\n      return isSetLString();\n    case LINT_STRING:\n      return isSetLintString();\n    case M_STRING_STRING:\n      return isSetMStringString();\n    }\n    throw new IllegalStateException();\n  }\n","date":"2015-08-04 06:24:42","endLine":540,"groupId":"853","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isSet","params":"(_Fieldsfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/e0/10112bb93275118ab393961f7790874371d318.src","preCode":"  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n\n    switch (field) {\n    case AINT:\n      return isSetAint();\n    case A_STRING:\n      return isSetAString();\n    case LINT:\n      return isSetLint();\n    case L_STRING:\n      return isSetLString();\n    case LINT_STRING:\n      return isSetLintString();\n    case M_STRING_STRING:\n      return isSetMStringString();\n    }\n    throw new IllegalStateException();\n  }\n","realPath":"sql/hive/src/test/java/org/apache/spark/sql/hive/test/Complex.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":520,"status":"B"}],"commitId":"a2409d1c8e8ddec04b529ac6f6a12b5993f0eeda","commitMessage":"@@@[SPARK-8064] [SQL] Build against Hive 1.2.1\n\nCherry picked the parts of the initial SPARK-8064 WiP branch needed to get sql/hive to compile against hive 1.2.1. That's the ASF release packaged under org.apache.hive.  not any fork.\n\nTests not run yet: that's what the machines are for\n\nAuthor: Steve Loughran <stevel@hortonworks.com>\nAuthor: Cheng Lian <lian@databricks.com>\nAuthor: Michael Armbrust <michael@databricks.com>\nAuthor: Patrick Wendell <patrick@databricks.com>\n\nCloses #7191 from steveloughran/stevel/feature/SPARK-8064-hive-1.2-002 and squashes the following commits:\n\n7556d85 [Cheng Lian] Updates .q files and corresponding golden files\nef4af62 [Steve Loughran] Merge commit '6a92bb09f46a04d6cd8c41bdba3ecb727ebb9030' into stevel/feature/SPARK-8064-hive-1.2-002\n6a92bb0 [Cheng Lian] Overrides HiveConf time vars\ndcbb391 [Cheng Lian] Adds com.twitter:parquet-hadoop-bundle:1.6.0 for Hive Parquet SerDe\n0bbe475 [Steve Loughran] SPARK-8064 scalastyle rejects the standard Hadoop ASF license header...\nfdf759b [Steve Loughran] SPARK-8064 classpath dependency suite to be in sync with shading in final (?) hive-exec spark\n7a6c727 [Steve Loughran] SPARK-8064 switch to second staging repo of the spark-hive artifacts. This one has the protobuf-shaded hive-exec jar\n376c003 [Steve Loughran] SPARK-8064 purge duplicate protobuf declaration\n2c74697 [Steve Loughran] SPARK-8064 switch to the protobuf shaded hive-exec jar with tests to chase it down\ncc44020 [Steve Loughran] SPARK-8064 remove hadoop.version from runtest.py.  as profile will fix that automatically.\n6901fa9 [Steve Loughran] SPARK-8064 explicit protobuf import\nda310dc [Michael Armbrust] Fixes for Hive tests.\na775a75 [Steve Loughran] SPARK-8064 cherry-pick-incomplete\n7404f34 [Patrick Wendell] Add spark-hive staging repo\n832c164 [Steve Loughran] SPARK-8064 try to supress compiler warnings on Complex.java pasted-thrift-code\n312c0d4 [Steve Loughran] SPARK-8064  maven/ivy dependency purge; calcite declaration needed\nfa5ae7b [Steve Loughran] HIVE-8064 fix up hive-thriftserver dependencies and cut back on evicted references in the hive- packages; this keeps mvn and ivy resolution compatible.  as the reconciliation policy is \"by hand\"\nc188048 [Steve Loughran] SPARK-8064 manage the Hive depencencies to that -things that aren't needed are excluded -sql/hive built with ivy is in sync with the maven reconciliation policy.  rather than latest-first\n4c8be8d [Cheng Lian] WIP: Partial fix for Thrift server and CLI tests\n314eb3c [Steve Loughran] SPARK-8064 deprecation warning  noise in one of the tests\n17b0341 [Steve Loughran] SPARK-8064 IDE-hinted cleanups of Complex.java to reduce compiler warnings. It's all autogenerated code.  so still ugly.\nd029b92 [Steve Loughran] SPARK-8064 rely on unescaping to have already taken place.  so go straight to map of serde options\n23eca7e [Steve Loughran] HIVE-8064 handle raw and escaped property tokens\n54d9b06 [Steve Loughran] SPARK-8064 fix compilation regression surfacing from rebase\n0b12d5f [Steve Loughran] HIVE-8064 use subset of hive complex type whose types deserialize\nfce73b6 [Steve Loughran] SPARK-8064 poms rely implicitly on the version of kryo chill provides\nfd3aa5d [Steve Loughran] SPARK-8064 version of hive to d/l from ivy is 1.2.1\ndc73ece [Steve Loughran] SPARK-8064 revert to master's determinstic pushdown strategy\nd3c1e4a [Steve Loughran] SPARK-8064 purge UnionType\n051cc21 [Steve Loughran] SPARK-8064 switch to an unshaded version of hive-exec-core.  which must have been built with Kryo 2.21. This currently looks for a (locally built) version 1.2.1.spark\n6684c60 [Steve Loughran] SPARK-8064 ignore RTE raised in blocking process.exitValue() call\ne6121e5 [Steve Loughran] SPARK-8064 address review comments\naa43dc6 [Steve Loughran] SPARK-8064  more robust teardown on JavaMetastoreDatasourcesSuite\nf2bff01 [Steve Loughran] SPARK-8064 better takeup of asynchronously caught error text\n8b1ef38 [Steve Loughran] SPARK-8064: on failures executing spark-submit in HiveSparkSubmitSuite.  print command line and all logged output.\n5a9ce6b [Steve Loughran] SPARK-8064 add explicit reason for kv split failure.  rather than array OOB. *does not address the issue*\n642b63a [Steve Loughran] SPARK-8064 reinstate something cut briefly during rebasing\n97194dc [Steve Loughran] SPARK-8064 add extra logging to the YarnClusterSuite classpath test. There should be no reason why this is failing on jenkins.  but as it is (and presumably its CP-related).  improve the logging including any exception raised.\n335357f [Steve Loughran] SPARK-8064 fail fast on thrive process spawning tests on exit codes and/or error string patterns seen in log.\n3ed872f [Steve Loughran] SPARK-8064 rename field double to  dbl\nbca55e5 [Steve Loughran] SPARK-8064 missed one of the `date` escapes\n41d6479 [Steve Loughran] SPARK-8064 wrap tests with withTable() calls to avoid table-exists exceptions\n2bc29a4 [Steve Loughran] SPARK-8064 ParquetSuites to escape `date` field name\n1ab9bc4 [Steve Loughran] SPARK-8064 TestHive to use sered2.thrift.test.Complex\nbf3a249 [Steve Loughran] SPARK-8064: more resubmit than fix; tighten startup timeout to 60s. Still no obvious reason why jersey server code in spark-assembly isn't being picked up -it hasn't been shaded\nc829b8f [Steve Loughran] SPARK-8064: reinstate yarn-rm-server dependencies to hive-exec to ensure that jersey server is on classpath on hadoop versions < 2.6\n0b0f738 [Steve Loughran] SPARK-8064: thrift server startup to fail fast on any exception in the main thread\n13abaf1 [Steve Loughran] SPARK-8064 Hive compatibilty tests sin sync with explain/show output from Hive 1.2.1\nd14d5ea [Steve Loughran] SPARK-8064: DATE is now a predicate; you can't use it as a field in select ops\n26eef1c [Steve Loughran] SPARK-8064: HIVE-9039 renamed TOK_UNION => TOK_UNIONALL while adding TOK_UNIONDISTINCT\n3d64523 [Steve Loughran] SPARK-8064 improve diagns on uknown token; fix scalastyle failure\nd0360f6 [Steve Loughran] SPARK-8064: delicate merge in of the branch vanzin/hive-1.1\n1126e5a [Steve Loughran] SPARK-8064: name of unrecognized file format wasn't appearing in error text\n8cb09c4 [Steve Loughran] SPARK-8064: test resilience/assertion improvements. Independent of the rest of the work; can be backported to earlier versions\ndec12cb [Steve Loughran] SPARK-8064: when a CLI suite test fails include the full output text in the raised exception; this ensures that the stdout/stderr is included in jenkins reports.  so it becomes possible to diagnose the cause.\n463a670 [Steve Loughran] SPARK-8064 run-tests.py adds a hadoop-2.6 profile.  and changes info messages to say \"w/Hive 1.2.1\" in console output\n2531099 [Steve Loughran] SPARK-8064 successful attempt to get rid of pentaho as a transitive dependency of hive-exec\n1d59100 [Steve Loughran] SPARK-8064 (unsuccessful) attempt to get rid of pentaho as a transitive dependency of hive-exec\n75733fc [Steve Loughran] SPARK-8064 change thrift binary startup message to \"Starting ThriftBinaryCLIService on port\"\n3ebc279 [Steve Loughran] SPARK-8064 move strings used to check for http/bin thrift services up into constants\nc80979d [Steve Loughran] SPARK-8064: SparkSQLCLIDriver drops remote mode support. CLISuite Tests pass instead of timing out: undetected regression?\n27e8370 [Steve Loughran] SPARK-8064 fix some style & IDE warnings\n00e50d6 [Steve Loughran] SPARK-8064 stop excluding hive shims from dependency (commented out .  for now)\ncb4f142 [Steve Loughran] SPARK-8054 cut pentaho dependency from calcite\nf7aa9cb [Steve Loughran] SPARK-8064 everything compiles with some commenting and moving of classes into a hive package\n6c310b4 [Steve Loughran] SPARK-8064 subclass  Hive ServerOptionsProcessor to make it public again\nf61a675 [Steve Loughran] SPARK-8064 thrift server switched to Hive 1.2.1.  though it doesn't compile everywhere\n4890b9d [Steve Loughran] SPARK-8064.  build against Hive 1.2.1\n","date":"2015-08-04 06:24:42","modifiedFileCount":"1","status":"B","submitter":"Steve Loughran"},{"authorTime":"2015-12-05 04:03:45","codes":[{"authorDate":"2015-12-05 04:03:45","commitOrder":2,"curCode":"  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case AINT:\n      return Integer.valueOf(getAint());\n\n    case A_STRING:\n      return getAString();\n\n    case LINT:\n      return getLint();\n\n    case L_STRING:\n      return getLString();\n\n    case LINT_STRING:\n      return getLintString();\n\n    case M_STRING_STRING:\n      return getMStringString();\n\n    default:\n    }\n    throw new IllegalStateException();\n  }\n","date":"2015-12-05 04:03:45","endLine":519,"groupId":"10307","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFieldValue","params":"(_Fieldsfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/4e/f1f276d1bbbc1fe26551fc09dace15af948490.src","preCode":"  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case AINT:\n      return Integer.valueOf(getAint());\n\n    case A_STRING:\n      return getAString();\n\n    case LINT:\n      return getLint();\n\n    case L_STRING:\n      return getLString();\n\n    case LINT_STRING:\n      return getLintString();\n\n    case M_STRING_STRING:\n      return getMStringString();\n\n    }\n    throw new IllegalStateException();\n  }\n","realPath":"sql/hive/src/test/java/org/apache/spark/sql/hive/test/Complex.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"},{"authorDate":"2015-12-05 04:03:45","commitOrder":2,"curCode":"  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n\n    switch (field) {\n    case AINT:\n      return isSetAint();\n    case A_STRING:\n      return isSetAString();\n    case LINT:\n      return isSetLint();\n    case L_STRING:\n      return isSetLString();\n    case LINT_STRING:\n      return isSetLintString();\n    case M_STRING_STRING:\n      return isSetMStringString();\n    default:\n    }\n    throw new IllegalStateException();\n  }\n","date":"2015-12-05 04:03:45","endLine":543,"groupId":"10307","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isSet","params":"(_Fieldsfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/4e/f1f276d1bbbc1fe26551fc09dace15af948490.src","preCode":"  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n\n    switch (field) {\n    case AINT:\n      return isSetAint();\n    case A_STRING:\n      return isSetAString();\n    case LINT:\n      return isSetLint();\n    case L_STRING:\n      return isSetLString();\n    case LINT_STRING:\n      return isSetLintString();\n    case M_STRING_STRING:\n      return isSetMStringString();\n    }\n    throw new IllegalStateException();\n  }\n","realPath":"sql/hive/src/test/java/org/apache/spark/sql/hive/test/Complex.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"}],"commitId":"d0d82227785dcd6c49a986431c476c7838a9541c","commitMessage":"@@@[SPARK-6990][BUILD] Add Java linting script; fix minor warnings\n\nThis replaces https://github.com/apache/spark/pull/9696\n\nInvoke Checkstyle and print any errors to the console.  failing the step.\nUse Google's style rules modified according to\nhttps://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide\nSome important checks are disabled (see TODOs in `checkstyle.xml`) due to\nmultiple violations being present in the codebase.\n\nSuggest fixing those TODOs in a separate PR(s).\n\nMore on Checkstyle can be found on the [official website](http://checkstyle.sourceforge.net/).\n\nSample output (from [build 46345](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/46345/consoleFull)) (duplicated because I run the build twice with different profiles):\n\n> Checkstyle checks failed at following occurrences:\n[ERROR] src/main/java/org/apache/spark/sql/execution/datasources/parquet/UnsafeRowParquetRecordReader.java:[217. 7] (coding) MissingSwitchDefault: switch without \"default\" clause.\n> [ERROR] src/main/java/org/apache/spark/sql/execution/datasources/parquet/SpecificParquetRecordReaderBase.java:[198. 10] (modifier) ModifierOrder: 'protected' modifier out of order with the JLS suggestions.\n> [ERROR] src/main/java/org/apache/spark/sql/execution/datasources/parquet/UnsafeRowParquetRecordReader.java:[217. 7] (coding) MissingSwitchDefault: switch without \"default\" clause.\n> [ERROR] src/main/java/org/apache/spark/sql/execution/datasources/parquet/SpecificParquetRecordReaderBase.java:[198. 10] (modifier) ModifierOrder: 'protected' modifier out of order with the JLS suggestions.\n> [error] running /home/jenkins/workspace/SparkPullRequestBuilder2/dev/lint-java ; received return code 1\n\nAlso fix some of the minor violations that didn't require sweeping changes.\n\nApologies for the previous botched PRs - I finally figured out the issue.\n\ncr: JoshRosen.  pwendell\n\n> I state that the contribution is my original work.  and I license the work to the project under the project's open source license.\n\nAuthor: Dmitry Erastov <derastov@gmail.com>\n\nCloses #9867 from dskrvk/master.\n","date":"2015-12-05 04:03:45","modifiedFileCount":"24","status":"M","submitter":"Dmitry Erastov"}]
