[{"authorTime":"2017-08-16 02:26:29","codes":[{"authorDate":"2017-08-16 02:26:29","commitOrder":1,"curCode":"  public void testRedirectsSimple() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.errorStream);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.outputStream);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n  }\n","date":"2017-08-16 02:26:29","endLine":85,"groupId":"2014","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRedirectsSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/64/a87b365d6a94f5d34a6e887b6360139e2a295f.src","preCode":"  public void testRedirectsSimple() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.errorStream);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.outputStream);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n  }\n","realPath":"launcher/src/test/java/org/apache/spark/launcher/ChildProcAppHandleSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2017-08-16 02:26:29","commitOrder":1,"curCode":"  public void testRedirectLastWins() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE)\n      .redirectError(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE)\n      .redirectOutput(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n  }\n","date":"2017-08-16 02:26:29","endLine":97,"groupId":"2025","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRedirectLastWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/64/a87b365d6a94f5d34a6e887b6360139e2a295f.src","preCode":"  public void testRedirectLastWins() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE)\n      .redirectError(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE)\n      .redirectOutput(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n  }\n","realPath":"launcher/src/test/java/org/apache/spark/launcher/ChildProcAppHandleSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"cba826d00173a945b0c9a7629c66e36fa73b723e","commitMessage":"@@@[SPARK-17742][CORE] Handle child process exit in SparkLauncher.\n\nCurrently the launcher handle does not monitor the child spark-submit\nprocess it launches; this means that if the child exits with an error. \nthe handle's state will never change.  and an application will not know\nthat the application has failed.\n\nThis change adds code to monitor the child process.  and changes the\nhandle state appropriately when the child process exits.\n\nTested with added unit tests.\n\nAuthor: Marcelo Vanzin <vanzin@cloudera.com>\n\nCloses #18877 from vanzin/SPARK-17742.\n","date":"2017-08-16 02:26:29","modifiedFileCount":"3","status":"B","submitter":"Marcelo Vanzin"},{"authorTime":"2019-11-04 03:21:28","codes":[{"authorDate":"2019-11-04 03:21:28","commitOrder":2,"curCode":"  public void testRedirectsSimple() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.errorStream);\n    assertEquals(ProcessBuilder.Redirect.Type.PIPE, launcher.errorStream.type());\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.outputStream);\n    assertEquals(ProcessBuilder.Redirect.Type.PIPE, launcher.outputStream.type());\n  }\n","date":"2019-11-04 03:21:28","endLine":85,"groupId":"10443","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRedirectsSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/d1/b350fd9f48ba6458f031bf09953eb8aad7b8f7.src","preCode":"  public void testRedirectsSimple() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.errorStream);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE);\n    assertNotNull(launcher.outputStream);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.PIPE);\n  }\n","realPath":"launcher/src/test/java/org/apache/spark/launcher/ChildProcAppHandleSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2019-11-04 03:21:28","commitOrder":2,"curCode":"  public void testRedirectLastWins() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE)\n      .redirectError(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(ProcessBuilder.Redirect.Type.INHERIT, launcher.errorStream.type());\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE)\n      .redirectOutput(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(ProcessBuilder.Redirect.Type.INHERIT, launcher.outputStream.type());\n  }\n","date":"2019-11-04 03:21:28","endLine":97,"groupId":"10443","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRedirectLastWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/d1/b350fd9f48ba6458f031bf09953eb8aad7b8f7.src","preCode":"  public void testRedirectLastWins() throws Exception {\n    SparkLauncher launcher = new SparkLauncher();\n    launcher.redirectError(ProcessBuilder.Redirect.PIPE)\n      .redirectError(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.errorStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n\n    launcher.redirectOutput(ProcessBuilder.Redirect.PIPE)\n      .redirectOutput(ProcessBuilder.Redirect.INHERIT);\n    assertEquals(launcher.outputStream.type(), ProcessBuilder.Redirect.Type.INHERIT);\n  }\n","realPath":"launcher/src/test/java/org/apache/spark/launcher/ChildProcAppHandleSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"80a89873b20aa07e2522bed5da0fc50e616246d9","commitMessage":"@@@[SPARK-29733][TESTS] Fix wrong order of parameters passed to `assertEquals`\n\n\n What changes were proposed in this pull request?\nThe `assertEquals` method of JUnit Assert requires the first parameter to be the expected value. In this PR.  I propose to change the order of parameters when the expected value is passed as the second parameter.\n\n\n Why are the changes needed?\nWrong order of assert parameters confuses when the assert fails and the parameters have special string representation. For example:\n```java\nassertEquals(input1.add(input2).  new CalendarInterval(5.  5.  367200000000L));\n```\n```\njava.lang.AssertionError:\nExpected :interval 5 months 5 days 101 hours\nActual   :interval 5 months 5 days 102 hours\n```\n\n\n Does this PR introduce any user-facing change?\nNo\n\n\n How was this patch tested?\nBy existing tests.\n\nCloses #26377 from MaxGekk/fix-order-in-assert-equals.\n\nAuthored-by: Maxim Gekk <max.gekk@gmail.com>\nSigned-off-by: Dongjoon Hyun <dhyun@apple.com>\n","date":"2019-11-04 03:21:28","modifiedFileCount":"21","status":"M","submitter":"Maxim Gekk"}]
