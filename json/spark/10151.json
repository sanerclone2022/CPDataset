[{"authorTime":"2016-02-29 09:25:07","codes":[{"authorDate":"2016-02-29 09:25:07","commitOrder":1,"curCode":"  public void testFetchOneSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\", new String[] { \"shuffle_0_0_0\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\"), exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks[0]));\n    exec0Fetch.releaseBuffers();\n  }\n","date":"2016-02-29 09:25:07","endLine":181,"groupId":"1968","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchOneSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/5e/706bf4016936aff3776270221ca5ed16984563.src","preCode":"  public void testFetchOneSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\", new String[] { \"shuffle_0_0_0\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\"), exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks[0]));\n    exec0Fetch.releaseBuffers();\n  }\n","realPath":"common/network-shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleIntegrationSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2016-02-29 09:25:07","commitOrder":1,"curCode":"  public void testFetchThreeSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\",\n      new String[] { \"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\"),\n      exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks));\n    exec0Fetch.releaseBuffers();\n  }\n","date":"2016-02-29 09:25:07","endLine":193,"groupId":"1294","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchThreeSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/5e/706bf4016936aff3776270221ca5ed16984563.src","preCode":"  public void testFetchThreeSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\",\n      new String[] { \"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\"),\n      exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks));\n    exec0Fetch.releaseBuffers();\n  }\n","realPath":"common/network-shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleIntegrationSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"9e01dcc6446f8648e61062f8afe62589b9d4b5ab","commitMessage":"@@@[SPARK-13529][BUILD] Move network/* modules into common/network-*\n\n## What changes were proposed in this pull request?\nAs the title says.  this moves the three modules currently in network/ into common/network-*. This removes one top level.  non-user-facing folder.\n\n## How was this patch tested?\nCompilation and existing tests. We should run both SBT and Maven.\n\nAuthor: Reynold Xin <rxin@databricks.com>\n\nCloses #11409 from rxin/SPARK-13529.\n","date":"2016-02-29 09:25:07","modifiedFileCount":"1","status":"B","submitter":"Reynold Xin"},{"authorTime":"2017-02-20 01:42:50","codes":[{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void testFetchOneSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\", new String[] { \"shuffle_0_0_0\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\"), exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Arrays.asList(exec0Blocks[0]));\n    exec0Fetch.releaseBuffers();\n  }\n","date":"2017-02-20 01:42:50","endLine":178,"groupId":"10151","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchOneSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/b8/ae04eefb97284e77763a51e67b68ccdbcfa50e.src","preCode":"  public void testFetchOneSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\", new String[] { \"shuffle_0_0_0\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\"), exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks[0]));\n    exec0Fetch.releaseBuffers();\n  }\n","realPath":"common/network-shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleIntegrationSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void testFetchThreeSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\",\n      new String[] { \"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\"),\n      exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Arrays.asList(exec0Blocks));\n    exec0Fetch.releaseBuffers();\n  }\n","date":"2017-02-20 01:42:50","endLine":190,"groupId":"10151","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchThreeSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/b8/ae04eefb97284e77763a51e67b68ccdbcfa50e.src","preCode":"  public void testFetchThreeSort() throws Exception {\n    registerExecutor(\"exec-0\", dataContext0.createExecutorInfo(SORT_MANAGER));\n    FetchResult exec0Fetch = fetchBlocks(\"exec-0\",\n      new String[] { \"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\" });\n    assertEquals(Sets.newHashSet(\"shuffle_0_0_0\", \"shuffle_0_0_1\", \"shuffle_0_0_2\"),\n      exec0Fetch.successBlocks);\n    assertTrue(exec0Fetch.failedBlocks.isEmpty());\n    assertBufferListsEqual(exec0Fetch.buffers, Lists.newArrayList(exec0Blocks));\n    exec0Fetch.releaseBuffers();\n  }\n","realPath":"common/network-shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleIntegrationSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"1487c9af20a333ead55955acf4c0aa323bea0d07","commitMessage":"@@@[SPARK-19534][TESTS] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert tests to use Java 8 lambdas.  and modest related fixes to surrounding code.\n\n## How was this patch tested?\n\nJenkins tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16964 from srowen/SPARK-19534.\n","date":"2017-02-20 01:42:50","modifiedFileCount":"45","status":"M","submitter":"Sean Owen"}]
