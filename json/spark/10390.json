[{"authorTime":"2017-02-20 01:42:50","codes":[{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","date":"2017-02-20 01:42:50","endLine":113,"groupId":"2836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/d3/769a74b97892f0203b02f2c5434e87df496a22.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"MB"},{"authorDate":"2017-02-20 01:42:50","commitOrder":2,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","date":"2017-02-20 01:42:50","endLine":59,"groupId":"2836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/6f/fccee52c0fee41437d341091e83b332997b55e.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/Java8DatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"1487c9af20a333ead55955acf4c0aa323bea0d07","commitMessage":"@@@[SPARK-19534][TESTS] Convert Java tests to use lambdas.  Java 8 features\n\n## What changes were proposed in this pull request?\n\nConvert tests to use Java 8 lambdas.  and modest related fixes to surrounding code.\n\n## How was this patch tested?\n\nJenkins tests\n\nAuthor: Sean Owen <sowen@cloudera.com>\n\nCloses #16964 from srowen/SPARK-19534.\n","date":"2017-02-20 01:42:50","modifiedFileCount":"45","status":"M","submitter":"Sean Owen"},{"authorTime":"2020-01-03 12:26:48","codes":[{"authorDate":"2020-01-03 12:26:48","commitOrder":3,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","date":"2020-01-03 12:26:48","endLine":118,"groupId":"701","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/8a/90624f2070b4adf02c8b9e55ac7a59532f2b76.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-01-03 12:26:48","commitOrder":3,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","date":"2020-01-03 12:26:48","endLine":64,"groupId":"701","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/dd/3755d3f904e6c0b88257ae0f003e59fdd5032d.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/Java8DatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"51373467cc8d1c73f8a0e596c6416728bc1f56e8","commitMessage":"@@@[SPARK-30412][SQL][TESTS] Eliminate warnings in Java tests regarding to deprecated Spark SQL API\n\n\n What changes were proposed in this pull request?\nIn the PR.  I propose to add the `SuppressWarnings(\"deprecation\")` annotation to Java tests for deprecated Spark SQL APIs.\n\n\n Why are the changes needed?\nThis eliminates the following warnings:\n```\nsql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetAggregatorSuite.java\n    Warning:Warning:line (32)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (91)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (100)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (109)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (118)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n\nsql/core/src/test/java/test/org/apache/spark/sql/Java8DatasetAggregatorSuite.java\n    Warning:Warning:line (28)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (37)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (46)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (55)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n    Warning:Warning:line (64)java: org.apache.spark.sql.expressions.javalang.typed in org.apache.spark.sql.expressions.javalang has been deprecated\n\nsql/core/src/test/java/test/org/apache/spark/sql/JavaDataFrameSuite.java\n    Warning:Warning:line (478)java: json(org.apache.spark.api.java.JavaRDD<java.lang.String>) in org.apache.spark.sql.DataFrameReader has been deprecated\n```\nand highlights warnings about real problems.\n\n\n Does this PR introduce any user-facing change?\nNo\n\n\n How was this patch tested?\nBy existing test suites `Java8DatasetAggregatorSuite.java`.  `JavaDataFrameSuite.java` and `JavaDatasetAggregatorSuite.java`.\n\nCloses #27081 from MaxGekk/eliminate-warnings-part2.\n\nAuthored-by: Maxim Gekk <max.gekk@gmail.com>\nSigned-off-by: HyukjinKwon <gurwls223@apache.org>\n","date":"2020-01-03 12:26:48","modifiedFileCount":"3","status":"M","submitter":"Maxim Gekk"},{"authorTime":"2020-12-08 22:57:13","codes":[{"authorDate":"2020-12-08 22:57:13","commitOrder":4,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> aggregated = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        aggregated.collectAsList());\n  }\n","date":"2020-12-08 22:57:13","endLine":118,"groupId":"10390","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/97/9b7751fa9a886021bde0d7dcf8dc645ae6296e.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(value -> (double) value._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/JavaDatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-12-08 22:57:13","commitOrder":4,"curCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> aggregated = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        aggregated.collectAsList());\n  }\n","date":"2020-12-08 22:57:13","endLine":64,"groupId":"10390","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testTypedAggregationSumDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-spark-10-0.7/blobInfo/CC_OUT/blobs/de/88f80eb53b8412efd43f4fbfe7a25a5059a886.src","preCode":"  public void testTypedAggregationSumDouble() {\n    KeyValueGroupedDataset<String, Tuple2<String, Integer>> grouped = generateGroupedDataset();\n    Dataset<Tuple2<String, Double>> agged = grouped.agg(\n      org.apache.spark.sql.expressions.javalang.typed.sum(v -> (double)v._2()));\n    Assert.assertEquals(\n        Arrays.asList(new Tuple2<>(\"a\", 3.0), new Tuple2<>(\"b\", 3.0)),\n        agged.collectAsList());\n  }\n","realPath":"sql/core/src/test/java/test/org/apache/spark/sql/Java8DatasetAggregatorSuite.java","repoName":"spark","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"a093d6feefb0e086d19c86ae53bf92df12ccf2fa","commitMessage":"@@@[MINOR] Spelling sql/core\n\n\n What changes were proposed in this pull request?\n\nThis PR intends to fix typos in the sub-modules:\n* `sql/core`\n\nSplit per srowen https://github.com/apache/spark/pull/30323#issuecomment-728981618\n\nNOTE: The misspellings have been reported at https://github.com/jsoref/spark/commit/706a726f87a0bbf5e31467fae9015218773db85b#commitcomment-44064356\n\n\n Why are the changes needed?\n\nMisspelled words make it harder to read / understand content.\n\n\n Does this PR introduce _any_ user-facing change?\n\nThere are various fixes to documentation.  etc...\n\n\n How was this patch tested?\n\nNo testing was performed\n\nCloses #30531 from jsoref/spelling-sql-core.\n\nAuthored-by: Josh Soref <jsoref@users.noreply.github.com>\nSigned-off-by: Sean Owen <srowen@gmail.com>\n","date":"2020-12-08 22:57:13","modifiedFileCount":"2","status":"M","submitter":"Josh Soref"}]
