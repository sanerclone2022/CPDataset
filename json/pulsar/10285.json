[{"authorTime":"2018-04-19 05:31:39","codes":[{"authorDate":"2018-04-19 05:31:39","commitOrder":1,"curCode":"    void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","date":"2018-04-19 05:31:39","endLine":402,"groupId":"2818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"namespacesCreateV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3b/ebaae8b7aed3d7ebdd670af2908a0b08626304.src","preCode":"    void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"B"},{"authorDate":"2018-04-19 05:31:39","commitOrder":1,"curCode":"    void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","date":"2018-04-19 05:31:39","endLine":414,"groupId":"15210","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"namespacesCreateV1WithBundlesAndClusters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3b/ebaae8b7aed3d7ebdd670af2908a0b08626304.src","preCode":"    void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":405,"status":"B"}],"commitId":"488942e71f1bc4cde9f2b8c35e57d98c5b6efef4","commitMessage":"@@@Added option to create namespace on CLI passing list of clusters (#1579)\n\n* Added option to create namespace on CLI passing list of clusters\n\n* Fixed NamespaceCreateBundlesTest.testCreateNamespaceWithDefaultBundles\n\n* Fixed expected value in test\n\n* Use List instead of Set otherwise jcommander would get all param in a single string\n\n* Added mocked test\n","date":"2018-04-19 05:31:39","modifiedFileCount":"8","status":"B","submitter":"Matteo Merli"},{"authorTime":"2020-05-29 16:47:16","codes":[{"authorDate":"2020-05-29 16:47:16","commitOrder":2,"curCode":"    public void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","date":"2020-05-29 16:47:16","endLine":546,"groupId":"2818","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"namespacesCreateV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d5/ca27ecca1af900b7c0db5b7477567f15f642d9.src","preCode":"    void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":538,"status":"M"},{"authorDate":"2020-05-29 16:47:16","commitOrder":2,"curCode":"    public void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","date":"2020-05-29 16:47:16","endLine":558,"groupId":"15210","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"namespacesCreateV1WithBundlesAndClusters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d5/ca27ecca1af900b7c0db5b7477567f15f642d9.src","preCode":"    void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"M"}],"commitId":"5cb32e9e3dbb9721bdd1a6e7776ace80954dfa8a","commitMessage":"@@@Remove double @Test annotations (#7063)\n\nSome tests had @Test at the class level and also at the method\nlevel. This resulted in these tests running twice.\n\nCo-authored-by: Ivan Kelly <ikelly@splunk.com>","date":"2020-05-29 16:47:16","modifiedFileCount":"40","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"    public void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(() -> admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","date":"2021-01-29 03:06:36","endLine":602,"groupId":"10285","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"namespacesCreateV1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void namespacesCreateV1() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\");\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":594,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"    public void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(() -> admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","date":"2021-01-29 03:06:36","endLine":614,"groupId":"10285","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"namespacesCreateV1WithBundlesAndClusters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void namespacesCreateV1WithBundlesAndClusters() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Namespaces mockNamespaces = mock(Namespaces.class);\n        when(admin.namespaces()).thenReturn(mockNamespaces);\n        CmdNamespaces namespaces = new CmdNamespaces(admin);\n\n        namespaces.run(split(\"create my-prop/my-cluster/my-namespace --bundles 5 --clusters a,b,c\"));\n        verify(mockNamespaces).createNamespace(\"my-prop/my-cluster/my-namespace\", 5);\n        verify(mockNamespaces).setNamespaceReplicationClusters(\"my-prop/my-cluster/my-namespace\", Sets.newHashSet(\"a\", \"b\", \"c\"));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":605,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
