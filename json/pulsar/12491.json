[{"authorTime":"2020-10-30 20:03:28","codes":[{"authorDate":"2020-12-03 11:03:23","commitOrder":4,"curCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","date":"2020-12-03 11:03:23","endLine":460,"groupId":"9185","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startBookie","params":"(ServerConfigurationconf@finalBookieb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/2e7fae30b9632cc05c95e93ca3375af2d8dbf8.src","preCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","realPath":"pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/BookKeeperClusterTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"B"},{"authorDate":"2020-10-30 20:03:28","commitOrder":4,"curCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            @Override\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator, Supplier<BookieServiceInfo> bookieServiceInfoProvider)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","date":"2020-10-30 20:03:28","endLine":490,"groupId":"9185","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startBookie","params":"(ServerConfigurationconf@finalBookieb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7b/05faa30ccaab85048f52529744df3514e39ab0.src","preCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            @Override\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator, Supplier<BookieServiceInfo> bookieServiceInfoProvider)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","realPath":"managed-ledger/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"NB"}],"commitId":"4a2b006f854b36f042a845150acebcc3d7a50358","commitMessage":"@@@Package management bookkeeper storage implementation (#8744)\n\nMaster Issue: #8676\n\n\n Motivation\n\nSupport bookkeeper storage for packages management service.\n\n\n Modifications\n\n- Add bookkeeper storage provider\n- Add bookkeeper storage unit tests\n","date":"2020-12-03 11:03:23","modifiedFileCount":"5","status":"M","submitter":"Yong Zhang"},{"authorTime":"2021-05-23 05:35:11","codes":[{"authorDate":"2021-05-23 05:35:11","commitOrder":5,"curCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (!metadataStore.exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port).join()) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","date":"2021-05-23 05:35:11","endLine":467,"groupId":"12491","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startBookie","params":"(ServerConfigurationconf@finalBookieb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4e/eca7ebdd842565b417f7517b00b312d6846c5b.src","preCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","realPath":"pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/BookKeeperClusterTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"M"},{"authorDate":"2021-05-23 05:35:11","commitOrder":5,"curCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            @Override\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator, Supplier<BookieServiceInfo> bookieServiceInfoProvider)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        Awaitility.await().until(() ->\n                metadataStore.exists(\n                        \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port).join()\n        );\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","date":"2021-05-23 05:35:11","endLine":486,"groupId":"12491","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startBookie","params":"(ServerConfigurationconf@finalBookieb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e8/bd07c7434a70d7b21479f131d6a16563489536.src","preCode":"    protected BookieServer startBookie(ServerConfiguration conf, final Bookie b) throws Exception {\n        BookieServer server = new BookieServer(conf) {\n            @Override\n            protected Bookie newBookie(ServerConfiguration conf, ByteBufAllocator allocator, Supplier<BookieServiceInfo> bookieServiceInfoProvider)\n                    throws IOException, KeeperException, InterruptedException, BookieException {\n                return b;\n            }\n        };\n        server.start();\n\n        int port = conf.getBookiePort();\n        while (bkc.getZkHandle().exists(\n                \"/ledgers/available/\" + InetAddress.getLocalHost().getHostAddress() + \":\" + port, false) == null) {\n            Thread.sleep(500);\n        }\n\n        bkc.readBookiesBlocking();\n        LOG.info(\"New bookie on port \" + port + \" has been created.\");\n        return server;\n    }\n","realPath":"managed-ledger/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"}],"commitId":"d94c3f03eff84b9259a1f19643531158157e04ba","commitMessage":"@@@PIP-45: Initialize ManagedLedgerFactory with MetadataStore (#10647)\n\n* PIP-45: Initialize ManagedLedgerFactory with MetadataStore\n\n* Fixed using the correct metadatastore in PulsarClusterMetadataTeardown\n\n* Fixed test\n\n* Removed multiple test invocations\n\n* Fixed package manager tests implementation","date":"2021-05-23 05:35:11","modifiedFileCount":"45","status":"M","submitter":"Matteo Merli"}]
