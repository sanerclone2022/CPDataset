[{"authorTime":"2018-03-06 05:49:50","codes":[{"authorDate":"2018-03-06 05:49:50","commitOrder":1,"curCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n    }\n","date":"2018-03-06 05:49:50","endLine":82,"groupId":"14829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/fa7f7c26097b161cc95f2f4e0d0a32dd693dec.src","preCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2018-03-06 05:49:50","commitOrder":1,"curCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2018-03-06 05:49:50","endLine":116,"groupId":"14829","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/fa7f7c26097b161cc95f2f4e0d0a32dd693dec.src","preCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"b7019252d832c42fb244c07fc92ce4f59801c952","commitMessage":"@@@Support running function worker along with broker (#1329)\n\n* Move pulsar functions dependency version to root pom and remove duplicated license headers\n\nThis addresses some comments in pulsar functions PR #1314\n\n* shade worker\n\n* Fix broken master\n\n* Upgrade the bookkeeper storage client dependency to the official bookkeeper version\n\nThis removes the temp dependency in `pulsar-functions-instance`\n\n* set `protobuf2.version` in pulsar-common\n\n* provide a shaded worker\n\n* include worker dependency at broker\n\n* Embeded function worker at broker\n\n* rename 'function worker' to 'functions worker'\n\n* add \"--no-functions-worker\" for pulsar-client-cpp tests\n","date":"2018-03-06 05:49:50","modifiedFileCount":"11","status":"B","submitter":"Sijie Guo"},{"authorTime":"2018-03-06 05:49:50","codes":[{"authorDate":"2019-02-19 14:01:31","commitOrder":2,"curCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","date":"2019-02-19 14:01:30","endLine":95,"groupId":"14829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/95/ef4ee9b5323c1c253ab3fb72fb3f2d691ca880.src","preCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-03-06 05:49:50","commitOrder":2,"curCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2018-03-06 05:49:50","endLine":116,"groupId":"14829","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/fa7f7c26097b161cc95f2f4e0d0a32dd693dec.src","preCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"N"}],"commitId":"84c68c335c22910dc7c604169a69b37d56cf841b","commitMessage":"@@@[Issue 3590] [broker] Support to get broker server runtime configuration (#3606)\n\n* Support to get broker server runtime configuration.\n\n* Add super-user check and sort the list result\n\n* Return a Map instead of List\n","date":"2019-02-19 14:01:30","modifiedFileCount":"6","status":"M","submitter":"Fangbin Sun"},{"authorTime":"2018-03-06 05:49:50","codes":[{"authorDate":"2019-06-29 02:51:37","commitOrder":3,"curCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n        \n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","date":"2019-06-29 02:51:37","endLine":113,"groupId":"14829","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f0/28636c1f67259007fcaa1a6db2f47780a67dd0.src","preCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2018-03-06 05:49:50","commitOrder":3,"curCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2018-03-06 05:49:50","endLine":116,"groupId":"14829","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/fa7f7c26097b161cc95f2f4e0d0a32dd693dec.src","preCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"N"}],"commitId":"20d24996e44e52f864ae3461b7a52f6abb1f0498","commitMessage":"@@@[pulsar-broker] add Delete dynamic config api (#4614)\n\n","date":"2019-06-29 02:51:37","modifiedFileCount":"6","status":"M","submitter":"Rajan Dhabalia"},{"authorTime":"2020-05-29 16:47:16","codes":[{"authorDate":"2020-05-29 16:47:16","commitOrder":4,"curCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","date":"2020-05-29 16:47:16","endLine":120,"groupId":"14829","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d5/ca27ecca1af900b7c0db5b7477567f15f642d9.src","preCode":"    void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2020-05-29 16:47:16","commitOrder":4,"curCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2020-05-29 16:47:16","endLine":154,"groupId":"14829","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d5/ca27ecca1af900b7c0db5b7477567f15f642d9.src","preCode":"    void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"5cb32e9e3dbb9721bdd1a6e7776ace80954dfa8a","commitMessage":"@@@Remove double @Test annotations (#7063)\n\nSome tests had @Test at the class level and also at the method\nlevel. This resulted in these tests running twice.\n\nCo-authored-by: Ivan Kelly <ikelly@splunk.com>","date":"2020-05-29 16:47:16","modifiedFileCount":"40","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":5,"curCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","date":"2021-01-29 03:06:36","endLine":120,"groupId":"14829","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":5,"curCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2021-01-29 03:06:36","endLine":154,"groupId":"14829","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-03-11 07:36:02","commitOrder":6,"curCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"leader-broker\"));\n        verify(mockBrokers).getLeaderBroker();\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","date":"2021-03-11 07:36:02","endLine":128,"groupId":"14829","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/81/3eb0faac99caa147fb95377a872f19692d09da.src","preCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":6,"curCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2021-01-29 03:06:36","endLine":154,"groupId":"14829","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"dd5c3b48879efa9b6505e8d52d378122850bb32a","commitMessage":"@@@[ISSUE 9757][pulsar-admin] add cmd to get service url of the leader broker (#9799)\n\nFixes: #9757\n\n\n Motivation\nsee #9757 add cmd to get service url of the leader broker.\n\n\n Modifications\nadd cmd parameter \"leader-broker\" in CmdBrokers.  and provide \"/admin/v2/brokers/leaderBroker\" web endpoint to get service url of the leader broker.","date":"2021-03-11 07:36:02","modifiedFileCount":"7","status":"M","submitter":"linlinnn"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-03-23 13:54:12","commitOrder":7,"curCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"leader-broker\"));\n        verify(mockBrokers).getLeaderBroker();\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n\n        brokers.run(split(\"version\"));\n        verify(mockBrokers).getVersion();\n    }\n","date":"2021-03-23 13:54:12","endLine":132,"groupId":"14829","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/66/bc53ae6b97d6bb4cf2f60c707fec53e8729740.src","preCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"leader-broker\"));\n        verify(mockBrokers).getLeaderBroker();\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":7,"curCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2021-01-29 03:06:36","endLine":154,"groupId":"14829","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"5d85a2f2f1226c648ea0ca8013f8031d0d62b609","commitMessage":"@@@[api][pulsar-client]Add get version command for pulsar rest api.  pulsar-admin.  pulsar-client (#9975)\n\n\n Motivation\n\nAdd the version command:\nGet broker version by rest API:\n\n```\ncurl http://localhost:8080/admin/v2/brokers/version\n```\nGet broker version by `pulsar-admin`:\n```\n./bin/pulsar-admin brokers version\n```\nGet broker version by the command `pulsar`:\n```\n./bin/pulsar version\n```\n\nGet version of pulsar admin client:\n```\n./bin/pulsar-admin -v\n./bin/pulsra-admin --version\n```\n\nGet version of pulsar client:\n```\n./bin/pulsar-client -v\n./bin/pulsra-client --version","date":"2021-03-23 13:54:12","modifiedFileCount":"7","status":"M","submitter":"Guangning E"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-07-17 03:54:53","commitOrder":8,"curCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"leader-broker\"));\n        verify(mockBrokers).getLeaderBroker();\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck(null);\n\n        brokers.run(split(\"version\"));\n        verify(mockBrokers).getVersion();\n    }\n","date":"2021-07-17 03:54:53","endLine":141,"groupId":"10278","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"brokers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/bd/de660f92a71a481e89424974d5d09d1c943efd.src","preCode":"    public void brokers() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"list use\"));\n        verify(mockBrokers).getActiveBrokers(\"use\");\n\n        brokers.run(split(\"leader-broker\"));\n        verify(mockBrokers).getLeaderBroker();\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:8080\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:8080\");\n\n        brokers.run(split(\"get-all-dynamic-config\"));\n        verify(mockBrokers).getAllDynamicConfigurations();\n\n        brokers.run(split(\"list-dynamic-config\"));\n        verify(mockBrokers).getDynamicConfigurationNames();\n\n        brokers.run(split(\"update-dynamic-config --config brokerShutdownTimeoutMs --value 100\"));\n        verify(mockBrokers).updateDynamicConfiguration(\"brokerShutdownTimeoutMs\", \"100\");\n\n        brokers.run(split(\"delete-dynamic-config --config brokerShutdownTimeoutMs\"));\n        verify(mockBrokers).deleteDynamicConfiguration(\"brokerShutdownTimeoutMs\");\n\n        brokers.run(split(\"get-internal-config\"));\n        verify(mockBrokers).getInternalConfigurationData();\n\n        brokers.run(split(\"get-runtime-config\"));\n        verify(mockBrokers).getRuntimeConfigurations();\n\n        brokers.run(split(\"healthcheck\"));\n        verify(mockBrokers).healthcheck();\n\n        brokers.run(split(\"version\"));\n        verify(mockBrokers).getVersion();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":8,"curCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","date":"2021-01-29 03:06:36","endLine":154,"groupId":"10278","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getOwnedNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void getOwnedNamespaces() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        Brokers mockBrokers = mock(Brokers.class);\n        doReturn(mockBrokers).when(admin).brokers();\n\n        CmdBrokers brokers = new CmdBrokers(() -> admin);\n\n        brokers.run(split(\"namespaces use --url http://my-service.url:4000\"));\n        verify(mockBrokers).getOwnedNamespaces(\"use\", \"http://my-service.url:4000\");\n\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"eb4d8aac9c2574c9669d3f61400e027e1040c0d7","commitMessage":"@@@Support new topic format for broker admin healthcheck endpoint. (#11268)\n\n* This runs the health check with new topic format\n* This help the pulsar-admin tool work correctly\n\nCo-authored-by: Ali Ahmed <alia@splunk.com>","date":"2021-07-17 03:54:53","modifiedFileCount":"9","status":"M","submitter":"Ali Ahmed"}]
