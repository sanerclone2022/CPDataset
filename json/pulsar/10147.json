[{"authorTime":"2019-05-18 14:56:22","codes":[{"authorDate":"2019-05-18 14:56:22","commitOrder":1,"curCode":"    public void testAddForSameKey() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        \r\n        set.add(Range.closed(new LongPair(0, 0), new LongPair(0, 5)));\n        \r\n        set.add(Range.closed(new LongPair(0, 8), new LongPair(0, 8)));\n        set.add(Range.closed(new LongPair(0, 9), new LongPair(0, 9)));\n        set.add(Range.closed(new LongPair(0, 10), new LongPair(0, 10)));\n        \r\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 102), new LongPair(0, 106)));\n\n        List<Range<LongPair>> ranges = set.asRanges();\n        int count = 0;\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, -1), new LongPair(0, 5))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 7), new LongPair(0, 10))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 97), new LongPair(0, 99))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 101), new LongPair(0, 106))));\n    }\n","date":"2019-05-18 14:56:22","endLine":58,"groupId":"9357","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddForSameKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/54/bcecc6e6fb69415cff114bf8e6dc49d9ccfb81.src","preCode":"    public void testAddForSameKey() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        \r\n        set.add(Range.closed(new LongPair(0, 0), new LongPair(0, 5)));\n        \r\n        set.add(Range.closed(new LongPair(0, 8), new LongPair(0, 8)));\n        set.add(Range.closed(new LongPair(0, 9), new LongPair(0, 9)));\n        set.add(Range.closed(new LongPair(0, 10), new LongPair(0, 10)));\n        \r\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 102), new LongPair(0, 106)));\n\n        List<Range<LongPair>> ranges = set.asRanges();\n        int count = 0;\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, -1), new LongPair(0, 5))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 7), new LongPair(0, 10))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 97), new LongPair(0, 99))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 101), new LongPair(0, 106))));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentOpenLongPairRangeSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2019-05-18 14:56:22","commitOrder":1,"curCode":"    public void testRangeContaining() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 100), new LongPair(1, 5)));\n        com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create();\n        gSet.add(Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        gSet.add(Range.closed(new LongPair(0, 101), new LongPair(1, 5)));\n        set.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        set.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        set.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        set.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        set.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n        gSet.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        gSet.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        gSet.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        gSet.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        gSet.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n\n        LongPair position = new LongPair(0, 99);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(2, 30);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 13);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 22);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n    }\n","date":"2019-05-18 14:56:22","endLine":349,"groupId":"1654","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRangeContaining","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/54/bcecc6e6fb69415cff114bf8e6dc49d9ccfb81.src","preCode":"    public void testRangeContaining() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 100), new LongPair(1, 5)));\n        com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create();\n        gSet.add(Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        gSet.add(Range.closed(new LongPair(0, 101), new LongPair(1, 5)));\n        set.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        set.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        set.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        set.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        set.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n        gSet.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        gSet.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        gSet.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        gSet.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        gSet.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n\n        LongPair position = new LongPair(0, 99);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(2, 30);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 13);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 22);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentOpenLongPairRangeSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"B"}],"commitId":"ce685dc3b359674941f02f81185651645012e80a","commitMessage":"@@@[pulsar-common] add open Concurrent LongPair RangeSet (#3818)\n\n* [pulsar-common] add open Concurrent LongPair RangeSet\n\n* add open-range set methods\n\n* add forEach\n\n* add forEach with consumer\n\n* Fix stamp-lock usage\n\n* Move ConcurrentBitSet to separate class\n","date":"2019-05-18 14:56:22","modifiedFileCount":"0","status":"B","submitter":"Rajan Dhabalia"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2019-05-18 14:56:22","commitOrder":2,"curCode":"    public void testAddForSameKey() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        \r\n        set.add(Range.closed(new LongPair(0, 0), new LongPair(0, 5)));\n        \r\n        set.add(Range.closed(new LongPair(0, 8), new LongPair(0, 8)));\n        set.add(Range.closed(new LongPair(0, 9), new LongPair(0, 9)));\n        set.add(Range.closed(new LongPair(0, 10), new LongPair(0, 10)));\n        \r\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 102), new LongPair(0, 106)));\n\n        List<Range<LongPair>> ranges = set.asRanges();\n        int count = 0;\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, -1), new LongPair(0, 5))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 7), new LongPair(0, 10))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 97), new LongPair(0, 99))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 101), new LongPair(0, 106))));\n    }\n","date":"2019-05-18 14:56:22","endLine":58,"groupId":"10147","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddForSameKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/54/bcecc6e6fb69415cff114bf8e6dc49d9ccfb81.src","preCode":"    public void testAddForSameKey() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        \r\n        set.add(Range.closed(new LongPair(0, 0), new LongPair(0, 5)));\n        \r\n        set.add(Range.closed(new LongPair(0, 8), new LongPair(0, 8)));\n        set.add(Range.closed(new LongPair(0, 9), new LongPair(0, 9)));\n        set.add(Range.closed(new LongPair(0, 10), new LongPair(0, 10)));\n        \r\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 102), new LongPair(0, 106)));\n\n        List<Range<LongPair>> ranges = set.asRanges();\n        int count = 0;\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, -1), new LongPair(0, 5))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 7), new LongPair(0, 10))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 97), new LongPair(0, 99))));\n        assertEquals(ranges.get(count++), (Range.openClosed(new LongPair(0, 101), new LongPair(0, 106))));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentOpenLongPairRangeSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"},{"authorDate":"2019-07-26 00:14:02","commitOrder":2,"curCode":"    public void testRangeContaining() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 100), new LongPair(1, 5)));\n        com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create();\n        gSet.add(Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        gSet.add(Range.closed(new LongPair(0, 101), new LongPair(1, 5)));\n        set.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        set.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        set.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        set.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        set.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n        gSet.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        gSet.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        gSet.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        gSet.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        gSet.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n\n        LongPair position = new LongPair(0, 99);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(2, 30);\n        assertNull(set.rangeContaining(position.getKey(), position.getValue()));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 13);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 22);\n        assertNull(set.rangeContaining(position.getKey(), position.getValue()));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n    }\n","date":"2019-07-26 00:14:02","endLine":350,"groupId":"10147","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRangeContaining","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/34/3c5e1a98a2bac6e86a6f07591a007c01fa378e.src","preCode":"    public void testRangeContaining() {\n        ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer);\n        set.add(Range.closed(new LongPair(0, 98), new LongPair(0, 99)));\n        set.add(Range.closed(new LongPair(0, 100), new LongPair(1, 5)));\n        com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create();\n        gSet.add(Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        gSet.add(Range.closed(new LongPair(0, 101), new LongPair(1, 5)));\n        set.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        set.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        set.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        set.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        set.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n        gSet.add(Range.closed(new LongPair(1, 10), new LongPair(1, 15)));\n        gSet.add(Range.closed(new LongPair(1, 20), new LongPair(2, 10)));\n        gSet.add(Range.closed(new LongPair(2, 25), new LongPair(2, 28)));\n        gSet.add(Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        gSet.add(Range.closed(new LongPair(4, 12), new LongPair(4, 20)));\n\n        LongPair position = new LongPair(0, 99);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(0, 98), new LongPair(0, 100)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(2, 30);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 13);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()),\n                Range.closed(new LongPair(3, 12), new LongPair(3, 20)));\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n\n        position = new LongPair(3, 22);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), null);\n        assertEquals(set.rangeContaining(position.getKey(), position.getValue()), gSet.rangeContaining(position));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentOpenLongPairRangeSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"}],"commitId":"fb6895db195f08aa82f75dad93b1b9c0b1b15a88","commitMessage":"@@@Test cleanup and simplification (#4799)\n\n* Simplified assert statements in the tests. Switch to usage of static imports in tests. (Part 1)\n\n* Simplify assert statements in the tests and use the appropriate assert statements. Switch to usage of static imports in tests. Remove unused imports (Part 2)\n","date":"2019-07-26 00:14:02","modifiedFileCount":"134","status":"M","submitter":"vzhikserg"}]
