[{"authorTime":"2018-04-27 09:31:34","codes":[{"authorDate":"2018-02-01 01:11:48","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            persistentTopics.createSubscription(persistentTopic, subscriptionName, messageId);\n        }\n","date":"2018-02-01 01:11:48","endLine":448,"groupId":"12925","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/50/27e6959a973aeee23a79a947a672393b688b30.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            persistentTopics.createSubscription(persistentTopic, subscriptionName, messageId);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdPersistentTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"NB"},{"authorDate":"2018-04-27 09:31:34","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String topic = validateTopicName(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            topics.createSubscription(topic, subscriptionName, messageId);\n        }\n","date":"2018-04-27 09:31:34","endLine":458,"groupId":"12925","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/d96902faa92edb51969cfbd91150334e3dc9ee.src","preCode":"        void run() throws PulsarAdminException {\n            String topic = validateTopicName(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            topics.createSubscription(topic, subscriptionName, messageId);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"B"}],"commitId":"02eff26259b43d3fac646d80f8256f9308baba1d","commitMessage":"@@@In pulsar admin Java API.  unified persistent vs non-persistent into \"topics()\" (#1634)\n\n* In pulsar admin Java API.  unified persistent vs non-persistent into \"topics()\"\n\n* Fixed tests\n\n* Merged and fixed tests\n\n* Couple more tests fixes\n\n* Consolidated pulsar-admin persistent|non-persistent into 'topics' command\n","date":"2018-04-27 09:31:34","modifiedFileCount":"67","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            getPersistentTopics().createSubscription(persistentTopic, subscriptionName, messageId);\n        }\n","date":"2021-01-29 03:06:36","endLine":487,"groupId":"12442","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f5/6029d23fde419e8aa546ee22ae531b98ac9d44.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            persistentTopics.createSubscription(persistentTopic, subscriptionName, messageId);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdPersistentTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String topic = validateTopicName(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            getTopics().createSubscription(topic, subscriptionName, messageId);\n        }\n","date":"2021-01-29 03:06:36","endLine":701,"groupId":"12442","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String topic = validateTopicName(params);\n            MessageId messageId;\n            if (messageIdStr.equals(\"latest\")) {\n                messageId = MessageId.latest;\n            } else if (messageIdStr.equals(\"earliest\")) {\n                messageId = MessageId.earliest;\n            } else {\n                messageId = validateMessageIdString(messageIdStr);\n            }\n\n            topics.createSubscription(topic, subscriptionName, messageId);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":689,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
