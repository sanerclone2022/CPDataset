[{"authorTime":"2018-11-10 10:52:16","codes":[{"authorDate":"2018-11-21 11:09:34","commitOrder":4,"curCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","date":"2018-11-21 11:09:34","endLine":740,"groupId":"9904","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFunctionConfigs","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/0d1e191f6fae62638bb4aa794027c54b4d8c93.src","preCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"B"},{"authorDate":"2018-11-10 10:52:16","commitOrder":4,"curCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","date":"2018-11-10 10:52:16","endLine":334,"groupId":"9904","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"inferMissingArguments","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/5a/8ac5b2fbefa5dfa444fd5a2a08ec642193b9fb.src","preCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","realPath":"pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"NB"}],"commitId":"1b0589bbe47211fc52430d757fa32a0cb784bcf5","commitMessage":"@@@Update Function Semantics (#2985)\n\n* Make update functions better\n\n* Compiled\n\n* more checks\n\n* bug fix\n\n* Added tests\n\n* Tests pass\n\n* Fixed tests\n\n* Fixed tests\n\n* Added tests\n\n* Added unittests\n\n* Fixed unittest\n\n* Fixed unittest\n\n* Fixed unittest\n\n* Timeout fix\n\n* Fixed unittest\n\n* Fix unittest\n\n* Addressed feedback\n","date":"2018-11-21 11:09:34","modifiedFileCount":"25","status":"M","submitter":"Sanjeev Kulkarni"},{"authorTime":"2019-05-06 09:13:18","codes":[{"authorDate":"2018-11-21 11:09:34","commitOrder":5,"curCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","date":"2018-11-21 11:09:34","endLine":740,"groupId":"9904","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFunctionConfigs","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/0d1e191f6fae62638bb4aa794027c54b4d8c93.src","preCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"N"},{"authorDate":"2019-05-06 09:13:18","commitOrder":5,"curCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        } else if (functionConfig.getGo() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.GO);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","date":"2019-05-06 09:13:18","endLine":361,"groupId":"9904","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"inferMissingArguments","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/a9/e5a00249889d117bd582e48bcf08bfb606fadc.src","preCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","realPath":"pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"M"}],"commitId":"42c3bf94920f1d177a2403e06650500509f94aaa","commitMessage":"@@@[go function] support localrun and cluster mode for go function (#4174)\n\n\n Motivation\n\nMaster Issue: #3767 \n\nsupport  local-run and cluster mode for go function.\n\nin go function.  we can use:\n\n```\n./bin/pulsar-admin functions localrun/create  \n--go /Users/wolf4j/github.com/apache/pulsar/pulsar-function-go/examples/outputFunc.go \n--inputs persistent://public/default/my-topic \n--output persistent://public/default/test \n--tenant public \n--namespace default \n--name pulsarfunction \n--classname hellopulsar \n--log-topic logtopic\n```\n\nDifferent from `--jar` or `--py`.  `--go` uploads a complete executable file(including: instance file + user code file)\n\n","date":"2019-05-06 09:13:18","modifiedFileCount":"12","status":"M","submitter":"???"},{"authorTime":"2020-05-19 05:31:19","codes":[{"authorDate":"2018-11-21 11:09:34","commitOrder":6,"curCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","date":"2018-11-21 11:09:34","endLine":740,"groupId":"9904","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFunctionConfigs","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/0d1e191f6fae62638bb4aa794027c54b4d8c93.src","preCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"N"},{"authorDate":"2020-05-19 05:31:19","commitOrder":6,"curCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n        \n        if (functionConfig.getMaxPendingAsyncRequests() == null) {\n        \tfunctionConfig.setMaxPendingAsyncRequests(MAX_PENDING_ASYNC_REQUESTS_DEFAULT);\n        }\n        \n        if (functionConfig.getForwardSourceMessageProperty() == null) {\n        \tfunctionConfig.setForwardSourceMessageProperty(FORWARD_SOURCE_MESSAGE_PROPERTY_DEFAULT);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        } else if (functionConfig.getGo() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.GO);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","date":"2020-05-19 05:31:19","endLine":396,"groupId":"6143","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"inferMissingArguments","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9a/945456ff98a51f14fc642849ec69565268a82c.src","preCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        } else if (functionConfig.getGo() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.GO);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","realPath":"pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"M"}],"commitId":"8664aea199f2001c8172683582d6d83fd5c11576","commitMessage":"@@@Issue-6931 LocalRunner (#6937)\n\n**Describe the bug**\nThe LocalRunner class does not start a local thread runner instance for Java functions.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Create an instance of the LocalRunner class inside a Java class\n2. Initialize it like so:\n \n`FunctionConfig functionConfig = \n\t   FunctionConfig.builder()\n\t    \t.className(WordCountFunction.class.getName())\n\t    \t.maxPendingAsyncRequests(Integer.valueOf(500))\n\t    \t.name(\"word-counter\")\n\t    \t.runtime(FunctionConfig.Runtime.JAVA)\n\t    \t.build()`\n\n\t  LocalRunner localRunner = \n\t    \tLocalRunner.builder()\n\t    \t\t.brokerServiceUrl(BROKER_URL)\n\t    \t\t.functionConfig(functionConfig)\n\t    \t\t.build();`\n3. Attach to the process with a debugger and set a breakpoint at line 360 of the LocalRunner class and attempt to step through to line 361\n4. See a \"silent\" NullPointerException is thrown in the following call; \n`instanceConfig.setMaxPendingAsyncRequests(functionConfig.getMaxPendingAsyncRequests());`  This is because the call to `getMaxPendingAsyncRequests()` returns null.  even though I set it to a value in the FunctionConfig\n\n**Expected behavior**\nOne would expect the value I passed in to be set and for the LocalRunner to start the function inside a local thread\n\n**Screenshots**\nIf applicable.  add screenshots to help explain your problem.\n\n**Desktop (please complete the following information):**\n - OS: [e.g. iOS]\n\n**Additional context**\nI have the code fix and will attach it to this ticket. Basically the issue is that there is a default value for that field inside the FunctionConfig class that is set as a direct assignment. However.  since the class is Lombok annotated.  that assignment gets ignored AND prevents assignments from occurring inside the builder as well.\n\nI have removed that assignment.  and added an equivalent logic block to the `FunctionConfigUtils.inferMissingArguments` method to set a default value of 1000 if none is provided.\n","date":"2020-05-19 05:31:19","modifiedFileCount":"2","status":"M","submitter":"David Kjerrumgaard"},{"authorTime":"2020-10-01 13:57:17","codes":[{"authorDate":"2018-11-21 11:09:34","commitOrder":7,"curCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","date":"2018-11-21 11:09:34","endLine":740,"groupId":"12379","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFunctionConfigs","params":"(FunctionConfigfunctionConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/0d1e191f6fae62638bb4aa794027c54b4d8c93.src","preCode":"        protected void validateFunctionConfigs(FunctionConfig functionConfig) {\n            if (StringUtils.isEmpty(functionConfig.getClassName())) {\n                if (StringUtils.isEmpty(functionConfig.getName())) {\n                    throw new IllegalArgumentException(\"Function Name not provided\");\n                }\n            } else if (StringUtils.isEmpty(functionConfig.getName())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getTenant())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n            }\n            if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n                org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"N"},{"authorDate":"2020-10-01 13:57:17","commitOrder":7,"curCode":"    public static void inferMissingArguments(FunctionConfig functionConfig,\n                                             boolean forwardSourceMessagePropertyEnabled) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getMaxPendingAsyncRequests() == null) {\n        \tfunctionConfig.setMaxPendingAsyncRequests(MAX_PENDING_ASYNC_REQUESTS_DEFAULT);\n        }\n\n        if (forwardSourceMessagePropertyEnabled) {\n            if (functionConfig.getForwardSourceMessageProperty() == null) {\n                functionConfig.setForwardSourceMessageProperty(FORWARD_SOURCE_MESSAGE_PROPERTY_DEFAULT);\n            }\n        } else {\n            \r\n            functionConfig.setForwardSourceMessageProperty(null);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        } else if (functionConfig.getGo() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.GO);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","date":"2020-10-01 13:57:17","endLine":480,"groupId":"12379","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"inferMissingArguments","params":"(FunctionConfigfunctionConfig@booleanforwardSourceMessagePropertyEnabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/89/a17cb8401c6b7db9c432cf9854b196caf2c301.src","preCode":"    public static void inferMissingArguments(FunctionConfig functionConfig) {\n        if (StringUtils.isEmpty(functionConfig.getName())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingFunctionName(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getTenant())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingTenant(functionConfig);\n        }\n        if (StringUtils.isEmpty(functionConfig.getNamespace())) {\n            org.apache.pulsar.common.functions.Utils.inferMissingNamespace(functionConfig);\n        }\n\n        if (functionConfig.getParallelism() == null) {\n            functionConfig.setParallelism(1);\n        }\n\n        if (functionConfig.getMaxPendingAsyncRequests() == null) {\n        \tfunctionConfig.setMaxPendingAsyncRequests(MAX_PENDING_ASYNC_REQUESTS_DEFAULT);\n        }\n\n        if (functionConfig.getForwardSourceMessageProperty() == null) {\n        \tfunctionConfig.setForwardSourceMessageProperty(FORWARD_SOURCE_MESSAGE_PROPERTY_DEFAULT);\n        }\n\n        if (functionConfig.getJar() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.JAVA);\n        } else if (functionConfig.getPy() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.PYTHON);\n        } else if (functionConfig.getGo() != null) {\n            functionConfig.setRuntime(FunctionConfig.Runtime.GO);\n        }\n\n        WindowConfig windowConfig = functionConfig.getWindowConfig();\n        if (windowConfig != null) {\n            WindowConfigUtils.inferMissingArguments(windowConfig);\n            functionConfig.setAutoAck(false);\n        }\n    }\n","realPath":"pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"M"}],"commitId":"d4980a973b1df0b96ec593204c76ae000e1233a4","commitMessage":"@@@Allow disabling forwarding source message properties (#8158)\n\n## Motivation\n\nSome old function images don't support this feature. They are not able to recognize this option.","date":"2020-10-01 13:57:17","modifiedFileCount":"5","status":"M","submitter":"Yong Zhang"}]
