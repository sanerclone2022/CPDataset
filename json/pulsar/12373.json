[{"authorTime":"2018-11-03 15:24:43","codes":[{"authorDate":"2018-11-17 13:28:42","commitOrder":3,"curCode":"        void runCmd() throws Exception {\n\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            if (isBlank(instanceId)) {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName)));\n            } else {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId))));\n            }\n        }\n","date":"2018-11-17 13:28:42","endLine":658,"groupId":"1711","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/28/f9183930eea72e4a47c582151f31202035daf1.src","preCode":"        void runCmd() throws Exception {\n\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            if (isBlank(instanceId)) {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName)));\n            } else {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId))));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":650,"status":"B"},{"authorDate":"2018-11-03 15:24:43","commitOrder":3,"curCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-11-03 15:24:43","endLine":493,"groupId":"13200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/06/9f2f80ba2ffcf9db9b6eae79aa7cb3a0ca0be0.src","preCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"NB"}],"commitId":"23c5505d904a5a74184f68a0b4deb5cf9851195d","commitMessage":"@@@ cleaning up and improving function metrics (#2994)\n\n* removing metrics module from functions\n\n* removing other references ot Prometheus metrics server\n\n* removing references to pulsar-functions-metrics\n\n* fix unit tests\n\n* revert test change\n\n* cleaning up and improving function metrics\n\n* slight refactoring\n\n* fix unittest\n\n* moving pulsar-spark tests into its own module\n","date":"2018-11-17 13:28:42","modifiedFileCount":"19","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2018-11-03 15:24:43","codes":[{"authorDate":"2018-11-22 03:08:09","commitOrder":4,"curCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2018-11-22 03:08:09","endLine":667,"groupId":"1711","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/bf/adbe4493b1b1581f1c7ffb4286dcb23aa33016.src","preCode":"        void runCmd() throws Exception {\n\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            if (isBlank(instanceId)) {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName)));\n            } else {\n                System.out.println(gson.toJson(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId))));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"M"},{"authorDate":"2018-11-03 15:24:43","commitOrder":4,"curCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-11-03 15:24:43","endLine":493,"groupId":"13200","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/06/9f2f80ba2ffcf9db9b6eae79aa7cb3a0ca0be0.src","preCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"N"}],"commitId":"859c914a7a3f3ddb9f89c62eba3c048039bd852a","commitMessage":"@@@ adding windowed metrics for functions (#3021)\n\n* adding windowed metrics for functions\n\n* adding license headers and cleaning up\n\n* remove unnecessary import\n\n* add RestException\n\n* fixing bugs and refactoring code\n\n* fix bug in instanceCache\n\n* fix bug\n\n* add test for stats and fix minor bug\n","date":"2018-11-22 03:08:09","modifiedFileCount":"20","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2018-12-01 04:09:10","codes":[{"authorDate":"2018-11-22 03:08:09","commitOrder":5,"curCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2018-11-22 03:08:09","endLine":667,"groupId":"1711","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/bf/adbe4493b1b1581f1c7ffb4286dcb23aa33016.src","preCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"N"},{"authorDate":"2018-12-01 04:09:10","commitOrder":5,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2018-12-01 04:09:10","endLine":507,"groupId":"11658","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/41/00c6b2090af67703baa10711f5c9356a653e8a.src","preCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":501,"status":"M"}],"commitId":"015e2e5174a1e38167deb47411e598c73d424a19","commitMessage":"@@@Improve and correct status for function.  sources.  sinks (#3088)\n\n* Improve and correct status for function.  sources.  sinks\n\n* cleaning up unused protobuf\n\n* cleaning up\n\n* fixing unit tests\n\n* change getstatus -> status\n\n* fix integration tests\n\n* fix integration tests for sources and sinks\n","date":"2018-12-01 04:09:10","modifiedFileCount":"23","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2019-05-27 12:48:16","codes":[{"authorDate":"2018-11-22 03:08:09","commitOrder":6,"curCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2018-11-22 03:08:09","endLine":667,"groupId":"1711","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/bf/adbe4493b1b1581f1c7ffb4286dcb23aa33016.src","preCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"N"},{"authorDate":"2019-05-27 12:48:16","commitOrder":6,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2019-05-27 12:48:16","endLine":530,"groupId":"3022","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/53/5bb332f39d30330d48ba24f1e85c6af674ae32.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"aa40ad6ddeb4208d439df2c9080fc73b1e6ffa3b","commitMessage":"@@@ renaming sinks and sources api to be consistent with the rest of Pulsar (#4363)\n\n* Rename sources and sinks CLI to be consistent with rest of Pulsar\n\n* renaming sinks and sources api to be consistent with the rest of Pulsar\n\n* use new interfaces in cmd\n","date":"2019-05-27 12:48:16","modifiedFileCount":"17","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":7,"curCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(getAdmin().functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(getAdmin().functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":756,"groupId":"12373","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ab/1f0e41643f2f418db3f7a8837fa5bf09eec038.src","preCode":"        void runCmd() throws Exception {\n\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStats(tenant, namespace, functionName));\n            } else {\n               print(admin.functions().getFunctionStats(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":749,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":7,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(getAdmin().sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(getAdmin().sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2021-01-29 03:06:36","endLine":558,"groupId":"12373","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7f/580f99e7f284cf154806e83996124ae0efd203.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
