[{"authorTime":"2021-03-29 23:23:47","codes":[{"authorDate":"2021-03-29 23:23:47","commitOrder":1,"curCode":"    public void testTimeoutHandling() {\n        CompletableFuture<Void> future = new CompletableFuture<>();\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            FutureUtil.addTimeoutHandling(future, Duration.ofMillis(1), executor, () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","date":"2021-03-29 23:23:47","endLine":66,"groupId":"2119","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeoutHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/83/78aa5a81d48acb49bde3cddb15cc31740e5f5f.src","preCode":"    public void testTimeoutHandling() {\n        CompletableFuture<Void> future = new CompletableFuture<>();\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            FutureUtil.addTimeoutHandling(future, Duration.ofMillis(1), executor, () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/FutureUtilTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2021-03-29 23:23:47","commitOrder":1,"curCode":"    public void testCreatingFutureWithTimeoutHandling() {\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            CompletableFuture<Void> future = FutureUtil.createFutureWithTimeout(Duration.ofMillis(1), executor,\n                    () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","date":"2021-03-29 23:23:47","endLine":97,"groupId":"2123","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatingFutureWithTimeoutHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/83/78aa5a81d48acb49bde3cddb15cc31740e5f5f.src","preCode":"    public void testCreatingFutureWithTimeoutHandling() {\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            CompletableFuture<Void> future = FutureUtil.createFutureWithTimeout(Duration.ofMillis(1), executor,\n                    () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/FutureUtilTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"5fcd0d18f8b33474fd8fb5faa3e2330fd88c554a","commitMessage":"@@@[Performance] Optimize CompletableFuture timeout handling (#10065)\n\n","date":"2021-03-29 23:23:47","modifiedFileCount":"5","status":"B","submitter":"Lari Hotari"},{"authorTime":"2021-04-15 01:04:21","codes":[{"authorDate":"2021-04-15 01:04:21","commitOrder":2,"curCode":"    public void testTimeoutHandling() {\n        CompletableFuture<Void> future = new CompletableFuture<>();\n        @Cleanup(\"shutdownNow\")\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            FutureUtil.addTimeoutHandling(future, Duration.ofMillis(1), executor, () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        }\n    }\n","date":"2021-04-15 01:04:21","endLine":66,"groupId":"10171","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeoutHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/17/ec7c8b842a123b3483a875748cab45bcf0489c.src","preCode":"    public void testTimeoutHandling() {\n        CompletableFuture<Void> future = new CompletableFuture<>();\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            FutureUtil.addTimeoutHandling(future, Duration.ofMillis(1), executor, () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/FutureUtilTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-04-15 01:04:21","commitOrder":2,"curCode":"    public void testCreatingFutureWithTimeoutHandling() {\n        @Cleanup(\"shutdownNow\")\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            CompletableFuture<Void> future = FutureUtil.createFutureWithTimeout(Duration.ofMillis(1), executor,\n                    () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        }\n    }\n","date":"2021-04-15 01:04:21","endLine":93,"groupId":"10171","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatingFutureWithTimeoutHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/17/ec7c8b842a123b3483a875748cab45bcf0489c.src","preCode":"    public void testCreatingFutureWithTimeoutHandling() {\n        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n        Exception e = new Exception();\n        try {\n            CompletableFuture<Void> future = FutureUtil.createFutureWithTimeout(Duration.ofMillis(1), executor,\n                    () -> e);\n            future.get();\n            fail(\"Should have failed.\");\n        } catch (InterruptedException interruptedException) {\n            fail(\"Shouldn't occur\");\n        } catch (ExecutionException executionException) {\n            assertEquals(executionException.getCause(), e);\n        } finally {\n            executor.shutdownNow();\n        }\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/FutureUtilTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"41814a7bc82392865a54e01a2908fd5ee7f8f403","commitMessage":"@@@Fix some ExecutorService leaks and use @Cleanup(\"shutdownNow\") for cleanup (#10198)\n\n- use ExecutorService.shutdownNow() instead of ExecutorService.shutdown() in tests","date":"2021-04-15 01:04:21","modifiedFileCount":"62","status":"M","submitter":"Lari Hotari"}]
