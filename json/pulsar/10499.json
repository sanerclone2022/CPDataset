[{"authorTime":"2019-05-07 13:03:12","codes":[{"authorDate":"2021-05-13 12:21:38","commitOrder":2,"curCode":"    static TransactionPendingAckStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionPendingAckStoreProvider,\n                    \"The factory has to be an instance of \"\n                            + TransactionPendingAckStoreProvider.class.getName());\n\n            return (TransactionPendingAckStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","date":"2021-05-13 12:21:38","endLine":50,"groupId":"1206","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newProvider","params":"(StringproviderClassName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e1/a14d766d52b2c73263026789e6d3160c3ae43c.src","preCode":"    static TransactionPendingAckStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionPendingAckStoreProvider,\n                    \"The factory has to be an instance of \"\n                            + TransactionPendingAckStoreProvider.class.getName());\n\n            return (TransactionPendingAckStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","realPath":"pulsar-broker/src/main/java/org/apache/pulsar/broker/transaction/pendingack/TransactionPendingAckStoreProvider.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2019-05-07 13:03:12","commitOrder":2,"curCode":"    static TransactionMetadataStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionMetadataStoreProvider,\n                \"The factory has to be an instance of \"\n                    + TransactionMetadataStoreProvider.class.getName());\n\n            return (TransactionMetadataStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","date":"2019-05-07 13:03:12","endLine":52,"groupId":"1206","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newProvider","params":"(StringproviderClassName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/c66bc31b17b6aa751c222c4af5c8da51e564af.src","preCode":"    static TransactionMetadataStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionMetadataStoreProvider,\n                \"The factory has to be an instance of \"\n                    + TransactionMetadataStoreProvider.class.getName());\n\n            return (TransactionMetadataStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","realPath":"pulsar-transaction/coordinator/src/main/java/org/apache/pulsar/transaction/coordinator/TransactionMetadataStoreProvider.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"NB"}],"commitId":"8f1f5ba4fd8ecbab1f975623605400f5088c6e32","commitMessage":"@@@[Transaction] Transaction pending ack persistent (#8881)\n\n## Motivation\nin order to handle pending ack persistent.\n\n## implement\n1. add the transaction pending ack store.  it will handle the pending ack metadata store.\n2. when the sub unload.  we will replay the pendingAckHandle.\n3. we use one manageLedger to store the pending ack metadata by one sub .  and replay by this managedLedger open cursor.\n4. when we commit or abort the transaction.  we will append the marker to the pendingAckStore then we will modify state memory in pendingAckHandle\n4. we also modify the in memory state when append fail.  because we don't know the persistent state.  when we replay it.  it will produce the wrong operation. so we append fail.  we should wait tc time out or client abort this transaction.\n5. when we append pending ack log.  we will compare the the log position store the biggest topic position is bigger than persistent topic markDeletePosition. if it is smaller.  will delete the position.\n\n Verifying this change\nAdd the tests for it","date":"2021-05-13 12:21:38","modifiedFileCount":"28","status":"M","submitter":"congbo"},{"authorTime":"2021-09-21 00:37:15","codes":[{"authorDate":"2021-09-21 00:37:15","commitOrder":3,"curCode":"    static TransactionPendingAckStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.getDeclaredConstructor().newInstance();\n            checkArgument(obj instanceof TransactionPendingAckStoreProvider,\n                    \"The factory has to be an instance of \"\n                            + TransactionPendingAckStoreProvider.class.getName());\n\n            return (TransactionPendingAckStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","date":"2021-09-21 00:37:15","endLine":50,"groupId":"10499","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"newProvider","params":"(StringproviderClassName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/40/8be115a026ae0a334cd4ed40fcfd527490a591.src","preCode":"    static TransactionPendingAckStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionPendingAckStoreProvider,\n                    \"The factory has to be an instance of \"\n                            + TransactionPendingAckStoreProvider.class.getName());\n\n            return (TransactionPendingAckStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","realPath":"pulsar-broker/src/main/java/org/apache/pulsar/broker/transaction/pendingack/TransactionPendingAckStoreProvider.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2021-09-21 00:37:15","commitOrder":3,"curCode":"    static TransactionMetadataStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.getDeclaredConstructor().newInstance();\n            checkArgument(obj instanceof TransactionMetadataStoreProvider,\n                \"The factory has to be an instance of \"\n                    + TransactionMetadataStoreProvider.class.getName());\n\n            return (TransactionMetadataStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","date":"2021-09-21 00:37:15","endLine":53,"groupId":"10499","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"newProvider","params":"(StringproviderClassName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/b2/fd10ea9ba549515cae15bf8f6ecf7345376045.src","preCode":"    static TransactionMetadataStoreProvider newProvider(String providerClassName) throws IOException {\n        Class<?> providerClass;\n        try {\n            providerClass = Class.forName(providerClassName);\n            Object obj = providerClass.newInstance();\n            checkArgument(obj instanceof TransactionMetadataStoreProvider,\n                \"The factory has to be an instance of \"\n                    + TransactionMetadataStoreProvider.class.getName());\n\n            return (TransactionMetadataStoreProvider) obj;\n        } catch (Exception e) {\n            throw new IOException(e);\n        }\n    }\n","realPath":"pulsar-transaction/coordinator/src/main/java/org/apache/pulsar/transaction/coordinator/TransactionMetadataStoreProvider.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"69abf9849b9731b570b73214436f87e396340adb","commitMessage":"@@@Replace newInstance() with getDeclaredConstructor().newInstance() (#12094)\n\n* Replace newInstance() with getDeclaredConstructor().newInstance()\n\n* Format code","date":"2021-09-21 00:37:15","modifiedFileCount":"29","status":"M","submitter":"Ruguo Yu"}]
