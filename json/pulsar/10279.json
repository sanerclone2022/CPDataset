[{"authorTime":"2020-04-22 17:20:06","codes":[{"authorDate":"2018-03-06 05:49:50","commitOrder":2,"curCode":"    void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","date":"2018-03-06 05:49:50","endLine":103,"groupId":"2335","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"brokerStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/46/fa7f7c26097b161cc95f2f4e0d0a32dd693dec.src","preCode":"    void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"NB"},{"authorDate":"2020-04-22 17:20:06","commitOrder":2,"curCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","date":"2020-04-22 17:20:06","endLine":919,"groupId":"7201","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"proxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/a6/8f7bff7b751436bd29f6acd31ea1f2f614e2d8.src","preCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":907,"status":"B"}],"commitId":"f9fd59f72dd43b45373a37d0489170b5e2765068","commitMessage":"@@@[pulsar-proxy] Add CLI support to get pulsar-proxy stats (#6516)\n\n\n Motivation\nNote: This PR is top on #6473 \nIn PR: #6473 we have added REST-API to get stats for the pulsar-proxy.\nHowever.  we also need cli tool to call such api and retrieve stats.\n\n\n Modification\nAdded CLI for proxy-stats.\n\n**Note:**\nI will rebase this PR once.  #6473 changes are reviewed and merged.","date":"2020-04-22 17:20:06","modifiedFileCount":"3","status":"M","submitter":"Rajan Dhabalia"},{"authorTime":"2020-04-22 17:20:06","codes":[{"authorDate":"2020-05-29 16:47:16","commitOrder":3,"curCode":"    public void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","date":"2020-05-29 16:47:16","endLine":141,"groupId":"2335","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"brokerStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d5/ca27ecca1af900b7c0db5b7477567f15f642d9.src","preCode":"    void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-04-22 17:20:06","commitOrder":3,"curCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","date":"2020-04-22 17:20:06","endLine":919,"groupId":"7201","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"proxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/a6/8f7bff7b751436bd29f6acd31ea1f2f614e2d8.src","preCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":907,"status":"N"}],"commitId":"5cb32e9e3dbb9721bdd1a6e7776ace80954dfa8a","commitMessage":"@@@Remove double @Test annotations (#7063)\n\nSome tests had @Test at the class level and also at the method\nlevel. This resulted in these tests running twice.\n\nCo-authored-by: Ivan Kelly <ikelly@splunk.com>","date":"2020-05-29 16:47:16","modifiedFileCount":"40","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":4,"curCode":"    public void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(() -> admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","date":"2021-01-29 03:06:36","endLine":141,"groupId":"10279","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"brokerStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    public void brokerStats() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        BrokerStats mockBrokerStats = mock(BrokerStats.class);\n        doReturn(mockBrokerStats).when(admin).brokerStats();\n\n        CmdBrokerStats brokerStats = new CmdBrokerStats(admin);\n\n        brokerStats.run(split(\"topics\"));\n        verify(mockBrokerStats).getTopics();\n\n        brokerStats.run(split(\"load-report\"));\n        verify(mockBrokerStats).getLoadReport();\n\n        brokerStats.run(split(\"mbeans\"));\n        verify(mockBrokerStats).getMBeans();\n\n        brokerStats.run(split(\"monitoring-metrics\"));\n        verify(mockBrokerStats).getMetrics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":4,"curCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(() -> admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","date":"2021-01-29 03:06:36","endLine":1152,"groupId":"10279","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"proxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/d5f34345caec749c42b4482abd5af7256fce39.src","preCode":"    void proxy() throws Exception {\n        PulsarAdmin admin = Mockito.mock(PulsarAdmin.class);\n        ProxyStats mockProxyStats = mock(ProxyStats.class);\n        doReturn(mockProxyStats).when(admin).proxyStats();\n\n        CmdProxyStats proxyStats = new CmdProxyStats(admin);\n\n        proxyStats.run(split(\"connections\"));\n        verify(mockProxyStats).getConnections();\n\n        proxyStats.run(split(\"topics\"));\n        verify(mockProxyStats).getTopics();\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/PulsarAdminToolTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1140,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
