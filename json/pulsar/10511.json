[{"authorTime":"2019-08-10 17:14:19","codes":[{"authorDate":"2019-07-22 22:59:43","commitOrder":5,"curCode":"    public void testPublishTimePredicatePushdownPartitionedTopic(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = PARTITIONED_TOPIC_1;\n\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n                topicName.getNamespace(),\n                topicName.getLocalName(),\n                topicName.getLocalName());\n\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP, currentTimeMs + 1L, true,\n                currentTimeMs + 50L, true)), false);\n        domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(), false), domain);\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n\n        final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>();\n        doAnswer(resultCaptor).when(this.pulsarSplitManager)\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n                mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n                pulsarTableLayoutHandle, null);\n\n\n        verify(this.pulsarSplitManager, times(1))\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n\n        int partitions = partitionedTopicsToPartitions.get(topicName.toString());\n        for (int i = 0; i < partitions; i++) {\n            List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i), resultCaptor.getResult());\n            int totalSize = 0;\n            int initialStart = 1;\n            for (PulsarSplit pulsarSplit : splits) {\n                assertEquals(pulsarSplit.getConnectorId(), pulsarConnectorId.toString());\n                assertEquals(pulsarSplit.getSchemaName(), topicName.getNamespace());\n                assertEquals(pulsarSplit.getTableName(), topicName.getPartition(i).getLocalName());\n                assertEquals(pulsarSplit.getSchema(),\n                        new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()));\n                assertEquals(pulsarSplit.getSchemaType(), topicsToSchemas.get(topicName.getSchemaName()).getType());\n                assertEquals(pulsarSplit.getStartPositionEntryId(), initialStart);\n                assertEquals(pulsarSplit.getStartPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getStartPosition(), PositionImpl.get(0, initialStart));\n                assertEquals(pulsarSplit.getEndPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getEndPositionEntryId(), initialStart + pulsarSplit.getSplitSize());\n                assertEquals(pulsarSplit.getEndPosition(), PositionImpl.get(0, initialStart + pulsarSplit.getSplitSize()));\n\n                initialStart += pulsarSplit.getSplitSize();\n                totalSize += pulsarSplit.getSplitSize();\n            }\n\n            assertEquals(totalSize, 49);\n        }\n    }\n","date":"2019-07-22 22:59:43","endLine":289,"groupId":"8835","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPublishTimePredicatePushdownPartitionedTopic","params":"(Stringdelimiter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ad/eaf909d20f591cc5dd4dd4fc350e30c0546479.src","preCode":"    public void testPublishTimePredicatePushdownPartitionedTopic(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = PARTITIONED_TOPIC_1;\n\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n                topicName.getNamespace(),\n                topicName.getLocalName(),\n                topicName.getLocalName());\n\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP, currentTimeMs + 1L, true,\n                currentTimeMs + 50L, true)), false);\n        domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(), false), domain);\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n\n        final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>();\n        doAnswer(resultCaptor).when(this.pulsarSplitManager)\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n                mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n                pulsarTableLayoutHandle, null);\n\n\n        verify(this.pulsarSplitManager, times(1))\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n\n        int partitions = partitionedTopicsToPartitions.get(topicName.toString());\n        for (int i = 0; i < partitions; i++) {\n            List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i), resultCaptor.getResult());\n            int totalSize = 0;\n            int initialStart = 1;\n            for (PulsarSplit pulsarSplit : splits) {\n                assertEquals(pulsarSplit.getConnectorId(), pulsarConnectorId.toString());\n                assertEquals(pulsarSplit.getSchemaName(), topicName.getNamespace());\n                assertEquals(pulsarSplit.getTableName(), topicName.getPartition(i).getLocalName());\n                assertEquals(pulsarSplit.getSchema(),\n                        new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()));\n                assertEquals(pulsarSplit.getSchemaType(), topicsToSchemas.get(topicName.getSchemaName()).getType());\n                assertEquals(pulsarSplit.getStartPositionEntryId(), initialStart);\n                assertEquals(pulsarSplit.getStartPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getStartPosition(), PositionImpl.get(0, initialStart));\n                assertEquals(pulsarSplit.getEndPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getEndPositionEntryId(), initialStart + pulsarSplit.getSplitSize());\n                assertEquals(pulsarSplit.getEndPosition(), PositionImpl.get(0, initialStart + pulsarSplit.getSplitSize()));\n\n                initialStart += pulsarSplit.getSplitSize();\n                totalSize += pulsarSplit.getSplitSize();\n            }\n\n            assertEquals(totalSize, 49);\n        }\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"NB"},{"authorDate":"2019-08-10 17:14:19","commitOrder":5,"curCode":"    public void testGetSplitNonSchema(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = NON_SCHEMA_TOPIC;\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n            topicName.getNamespace(),\n            topicName.getLocalName(),\n            topicName.getLocalName());\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n            mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n            pulsarTableLayoutHandle, null);\n        assertNotNull(connectorSplitSource);\n    }\n","date":"2019-08-10 17:14:18","endLine":404,"groupId":"12125","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSplitNonSchema","params":"(Stringdelimiter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ef/361487a054f299206aabbdf7a3c665725abb05.src","preCode":"    public void testGetSplitNonSchema(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = NON_SCHEMA_TOPIC;\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n            topicName.getNamespace(),\n            topicName.getLocalName(),\n            topicName.getLocalName());\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n            mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n            pulsarTableLayoutHandle, null);\n        assertNotNull(connectorSplitSource);\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"B"}],"commitId":"2069f761753940ed6a1faca8999af70036f20fd6","commitMessage":"@@@[pulsar-sql] Handle schema not found (#4890)\n\n* Handle get schema 404 in pulsar sql(table meta and get splits)\n\n* Fix unit test.\n\n* add defaultSchema()\n\n* use Schema.BYTES.getSchemaInfo()\n\n* add unit test\n\n* rebase and fix unit tests\n","date":"2019-08-10 17:14:18","modifiedFileCount":"6","status":"M","submitter":"lipenghui"},{"authorTime":"2019-08-10 17:14:19","codes":[{"authorDate":"2020-02-10 20:46:43","commitOrder":6,"curCode":"    public void testPublishTimePredicatePushdownPartitionedTopic(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = PARTITIONED_TOPIC_1;\n\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n                topicName.getNamespace(),\n                topicName.getLocalName(),\n                topicName.getLocalName());\n\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP, currentTimeMs + 1L, true,\n                currentTimeMs + 50L, true)), false);\n        domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(), false), domain);\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n\n        final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>();\n        doAnswer(resultCaptor).when(this.pulsarSplitManager)\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any(), any());\n\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n                mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n                pulsarTableLayoutHandle, null);\n\n\n        verify(this.pulsarSplitManager, times(1))\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any(), any());\n\n\n        int partitions = partitionedTopicsToPartitions.get(topicName.toString());\n        for (int i = 0; i < partitions; i++) {\n            List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i), resultCaptor.getResult());\n            int totalSize = 0;\n            int initialStart = 1;\n            for (PulsarSplit pulsarSplit : splits) {\n                assertEquals(pulsarSplit.getConnectorId(), pulsarConnectorId.toString());\n                assertEquals(pulsarSplit.getSchemaName(), topicName.getNamespace());\n                assertEquals(pulsarSplit.getTableName(), topicName.getPartition(i).getLocalName());\n                assertEquals(pulsarSplit.getSchema(),\n                        new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()));\n                assertEquals(pulsarSplit.getSchemaType(), topicsToSchemas.get(topicName.getSchemaName()).getType());\n                assertEquals(pulsarSplit.getStartPositionEntryId(), initialStart);\n                assertEquals(pulsarSplit.getStartPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getStartPosition(), PositionImpl.get(0, initialStart));\n                assertEquals(pulsarSplit.getEndPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getEndPositionEntryId(), initialStart + pulsarSplit.getSplitSize());\n                assertEquals(pulsarSplit.getEndPosition(), PositionImpl.get(0, initialStart + pulsarSplit.getSplitSize()));\n\n                initialStart += pulsarSplit.getSplitSize();\n                totalSize += pulsarSplit.getSplitSize();\n            }\n\n            assertEquals(totalSize, 49);\n        }\n    }\n","date":"2020-02-10 20:46:43","endLine":297,"groupId":"10511","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPublishTimePredicatePushdownPartitionedTopic","params":"(Stringdelimiter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/5e/cbffc3077640d3cf0bc381c099483e6683131e.src","preCode":"    public void testPublishTimePredicatePushdownPartitionedTopic(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = PARTITIONED_TOPIC_1;\n\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n                topicName.getNamespace(),\n                topicName.getLocalName(),\n                topicName.getLocalName());\n\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP, currentTimeMs + 1L, true,\n                currentTimeMs + 50L, true)), false);\n        domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(), false), domain);\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n\n        final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>();\n        doAnswer(resultCaptor).when(this.pulsarSplitManager)\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n                mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n                pulsarTableLayoutHandle, null);\n\n\n        verify(this.pulsarSplitManager, times(1))\n                .getSplitsPartitionedTopic(anyInt(), any(), any(), any(), any());\n\n\n        int partitions = partitionedTopicsToPartitions.get(topicName.toString());\n        for (int i = 0; i < partitions; i++) {\n            List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i), resultCaptor.getResult());\n            int totalSize = 0;\n            int initialStart = 1;\n            for (PulsarSplit pulsarSplit : splits) {\n                assertEquals(pulsarSplit.getConnectorId(), pulsarConnectorId.toString());\n                assertEquals(pulsarSplit.getSchemaName(), topicName.getNamespace());\n                assertEquals(pulsarSplit.getTableName(), topicName.getPartition(i).getLocalName());\n                assertEquals(pulsarSplit.getSchema(),\n                        new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()));\n                assertEquals(pulsarSplit.getSchemaType(), topicsToSchemas.get(topicName.getSchemaName()).getType());\n                assertEquals(pulsarSplit.getStartPositionEntryId(), initialStart);\n                assertEquals(pulsarSplit.getStartPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getStartPosition(), PositionImpl.get(0, initialStart));\n                assertEquals(pulsarSplit.getEndPositionLedgerId(), 0);\n                assertEquals(pulsarSplit.getEndPositionEntryId(), initialStart + pulsarSplit.getSplitSize());\n                assertEquals(pulsarSplit.getEndPosition(), PositionImpl.get(0, initialStart + pulsarSplit.getSplitSize()));\n\n                initialStart += pulsarSplit.getSplitSize();\n                totalSize += pulsarSplit.getSplitSize();\n            }\n\n            assertEquals(totalSize, 49);\n        }\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2019-08-10 17:14:19","commitOrder":6,"curCode":"    public void testGetSplitNonSchema(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = NON_SCHEMA_TOPIC;\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n            topicName.getNamespace(),\n            topicName.getLocalName(),\n            topicName.getLocalName());\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n            mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n            pulsarTableLayoutHandle, null);\n        assertNotNull(connectorSplitSource);\n    }\n","date":"2019-08-10 17:14:18","endLine":404,"groupId":"10511","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSplitNonSchema","params":"(Stringdelimiter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ef/361487a054f299206aabbdf7a3c665725abb05.src","preCode":"    public void testGetSplitNonSchema(String delimiter) throws Exception {\n        updateRewriteNamespaceDelimiterIfNeeded(delimiter);\n        TopicName topicName = NON_SCHEMA_TOPIC;\n        setup();\n        log.info(\"!----- topic: %s -----!\", topicName);\n        PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),\n            topicName.getNamespace(),\n            topicName.getLocalName(),\n            topicName.getLocalName());\n\n        Map<ColumnHandle, Domain> domainMap = new HashMap<>();\n        TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap);\n\n        PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle, tupleDomain);\n        ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(\n            mock(ConnectorTransactionHandle.class), mock(ConnectorSession.class),\n            pulsarTableLayoutHandle, null);\n        assertNotNull(connectorSplitSource);\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"N"}],"commitId":"fd03be595505433fc12f94b63f3d713610ccb2f7","commitMessage":"@@@Namespace level offloader (#6183)\n\n\n Motivation\n\nCurrently.  the offload operation only have the cluster level configuration.  can't set the offload configuration at the namespace level.  it's inflexible. \n\n\n Modifications\n\nAdd the namespace offload policies.","date":"2020-02-10 20:46:43","modifiedFileCount":"30","status":"M","submitter":"ran"}]
