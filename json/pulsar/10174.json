[{"authorTime":"2018-02-26 12:57:40","codes":[{"authorDate":"2018-02-26 12:57:40","commitOrder":1,"curCode":"    void topic() {\n        try {\n            assertEquals(TopicName.get(\"property.namespace:topic\").getNamespace(), \"property.namespace\");\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getProperty(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getProperty();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2018-02-26 12:57:40","endLine":203,"groupId":"7825","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/70/ba953e88f28d344a2523e251cf95ec26a3a647.src","preCode":"    void topic() {\n        try {\n            assertEquals(TopicName.get(\"property.namespace:topic\").getNamespace(), \"property.namespace\");\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getProperty(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getProperty();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2018-02-26 12:57:40","commitOrder":1,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getProperty(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","date":"2018-02-26 12:57:40","endLine":242,"groupId":"13288","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/70/ba953e88f28d344a2523e251cf95ec26a3a647.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getProperty(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"B"}],"commitId":"5fc4d536d76b1d73c6be7b9238bf14b210ee095f","commitMessage":"@@@Renamed DestinationName into TopicName (#1280)\n\n","date":"2018-02-26 12:57:40","modifiedFileCount":"119","status":"B","submitter":"Matteo Merli"},{"authorTime":"2018-02-26 12:57:40","codes":[{"authorDate":"2018-04-13 05:17:33","commitOrder":2,"curCode":"    void topic() {\n        try {\n            TopicName.get(\"://property.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getProperty(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getProperty();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2018-04-13 05:17:33","endLine":201,"groupId":"7825","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/13/8f2dcf67e2056bb30f5376fd7a7255263f169f.src","preCode":"    void topic() {\n        try {\n            assertEquals(TopicName.get(\"property.namespace:topic\").getNamespace(), \"property.namespace\");\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getProperty(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getProperty();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2018-02-26 12:57:40","commitOrder":2,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getProperty(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","date":"2018-02-26 12:57:40","endLine":242,"groupId":"13288","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/70/ba953e88f28d344a2523e251cf95ec26a3a647.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getProperty(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"N"}],"commitId":"61de30d09488395e3c19cf9232e755528a52d342","commitMessage":"@@@Issue #1536: Introduce Short Topic Name (#1535)\n\nThis closes #1536 ","date":"2018-04-13 05:17:33","modifiedFileCount":"4","status":"M","submitter":"Sijie Guo"},{"authorTime":"2018-04-16 11:39:00","codes":[{"authorDate":"2018-04-16 11:39:00","commitOrder":3,"curCode":"    void topic() {\n        try {\n            TopicName.get(\"://property.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getTenant(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2018-04-16 11:39:00","endLine":201,"groupId":"7825","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/62/328533273bd30ff4ddedab44bad95d69e21702.src","preCode":"    void topic() {\n        try {\n            TopicName.get(\"://property.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getProperty(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getProperty();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2018-04-16 11:39:00","commitOrder":3,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","date":"2018-04-16 11:39:00","endLine":240,"groupId":"13288","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/62/328533273bd30ff4ddedab44bad95d69e21702.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getProperty(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"cc9a9d9212a9a7c5731307d067c2e9ac62548524","commitMessage":"@@@Renamed \"property\" into \"tenant\" (#1578)\n\n* Renamed \"property\" into \"tenant\"\n\n* Fixed merging issue\n\n* Fixed tests\n\n* Fixed typo\n","date":"2018-04-16 11:39:00","modifiedFileCount":"97","status":"M","submitter":"Matteo Merli"},{"authorTime":"2018-05-04 09:31:02","codes":[{"authorDate":"2018-05-04 09:31:02","commitOrder":4,"curCode":"    void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .equals(\"persistent://tenant/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2018-05-04 09:31:02","endLine":201,"groupId":"7825","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/fd/bbc9f3c97a90faaaad01897f5b25b13f041307.src","preCode":"    void topic() {\n        try {\n            TopicName.get(\"://property.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").toString(),\n                \"persistent://property/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .equals(\"persistent://property/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getTenant(),\n                \"property\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getNamespace(),\n                \"property/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://property/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"property/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://property/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"property/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://property.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://property/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://property/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://property/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://property/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://property/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2018-05-04 09:31:02","commitOrder":4,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","date":"2018-05-04 09:31:02","endLine":240,"groupId":"2947","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/fd/bbc9f3c97a90faaaad01897f5b25b13f041307.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://property/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"property\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"property\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"property/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://property/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"property/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"7cd7034731a8964d2853c9af81aa645f5309f5d1","commitMessage":"@@@Changed property to tenant in various helper messages and tests (#1726)\n\n","date":"2018-05-04 09:31:02","modifiedFileCount":"2","status":"M","submitter":"Sanjeev Kulkarni"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2019-07-26 00:14:02","commitOrder":5,"curCode":"    void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2019-07-26 00:14:02","endLine":203,"groupId":"7825","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f9/6b5954460c0b28c26fc405e8e005dba2a1f3d3.src","preCode":"    void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertFalse(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .equals(\"persistent://tenant/cluster/namespace/topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":5,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","date":"2019-07-26 00:14:02","endLine":243,"groupId":"15566","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f9/6b5954460c0b28c26fc405e8e005dba2a1f3d3.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertEquals(topicName.getCluster(), null);\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"fb6895db195f08aa82f75dad93b1b9c0b1b15a88","commitMessage":"@@@Test cleanup and simplification (#4799)\n\n* Simplified assert statements in the tests. Switch to usage of static imports in tests. (Part 1)\n\n* Simplify assert statements in the tests and use the appropriate assert statements. Switch to usage of static imports in tests. Remove unused imports (Part 2)\n","date":"2019-07-26 00:14:02","modifiedFileCount":"134","status":"M","submitter":"vzhikserg"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2020-05-29 16:47:16","commitOrder":6,"curCode":"    public void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","date":"2020-05-29 16:47:16","endLine":202,"groupId":"7825","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/eb/44f458fc8c0e7a5c88586fabd62128e3facf1c.src","preCode":"    void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":6,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","date":"2019-07-26 00:14:02","endLine":243,"groupId":"15566","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f9/6b5954460c0b28c26fc405e8e005dba2a1f3d3.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"N"}],"commitId":"5cb32e9e3dbb9721bdd1a6e7776ace80954dfa8a","commitMessage":"@@@Remove double @Test annotations (#7063)\n\nSome tests had @Test at the class level and also at the method\nlevel. This resulted in these tests running twice.\n\nCo-authored-by: Ivan Kelly <ikelly@splunk.com>","date":"2020-05-29 16:47:16","modifiedFileCount":"40","status":"M","submitter":"Matteo Merli"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2020-10-23 22:02:33","commitOrder":7,"curCode":"    public void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n\n        \r\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition--1\"), 1);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-00\"), 0);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-012\"), 12);\n    }\n","date":"2020-10-23 22:02:33","endLine":207,"groupId":"7825","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/84/0be4987a574b8182f0bbdab1ff01eeb38d053d.src","preCode":"    public void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":7,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","date":"2019-07-26 00:14:02","endLine":243,"groupId":"15566","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f9/6b5954460c0b28c26fc405e8e005dba2a1f3d3.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"N"}],"commitId":"dd8be8323d04d252062575840f5f6be7487796b5","commitMessage":"@@@[C++] Fix message id error when subscribing a single partition (#8341)\n\n\n Motivation\n\nA consumer/reader can subscribe a single partition of a partitioned topic. However.  the partition index was not set correctly. So the partition field of received messages' id is always -1.\n\nIn addition.  current `TopicName#getPartitionIndex` Java implementation doesn't handle some corner cases.  like \"xxx-partition-00\" or \"xxx-partition--1\". For the backward compatibility.  the C++ implementation will use the same implementation and note it in Java `TopicName`'s unit test.\n\n\n Modifications\n\n- Add `getPartitionIndex` method to `TopicName`;\n- Set the partition index when a `Consumer` was created from a `Client`;\n- Set the partition index when a `Reader` was created;\n- Add relative unit tests for above changes;\n- Note the \"incorrect\" behavior in Java `TopicName`'s unit test.\n\n\n Verifying this change\n\nThis change added tests and can be verified as follows:\n\n- `TopicNameTest#testPartitionIndex`\n- `ConsumerTest#testPartitionIndex`\n- `ReaderTest#testPartitionIndex`\n\n* Add getPartitionIndex() method to TopicName\n\n* Set partition index when creating a ConsumerImpl from Client\n\n* Add test cases to Java TopicName to note the corner cases\n\n* Set partition index for Reader\n\n* Fix compile error","date":"2020-10-23 22:02:33","modifiedFileCount":"1","status":"M","submitter":"Yunze Xu"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2021-06-19 02:06:24","commitOrder":8,"curCode":"    public void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n\n        \r\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition--1\"), -1);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-00\"), -1);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-012\"), -1);\n\n        assertFalse(TopicName.get(\"mytopic-partition--1\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition--2\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition-01\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition-012\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition- 12\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition-12 \").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition- 12 \").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition-1&\").isPartitioned());\n        assertFalse(TopicName.get(\"mytopic-partition-1!\").isPartitioned());\n\n        assertTrue(TopicName.get(\"mytopic-partition-0\").isPartitioned());\n        assertTrue(TopicName.get(\"mytopic-partition-1\").isPartitioned());\n        assertTrue(TopicName.get(\"mytopic-partition-12\").isPartitioned());\n    }\n","date":"2021-06-19 02:06:24","endLine":222,"groupId":"10174","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"topic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/61/07f5d4042450d0ea20cd3a90f943ad02b35be9.src","preCode":"    public void topic() {\n        try {\n            TopicName.get(\"://tenant.namespace:topic\").getNamespace();\n            fail(\"Should have thrown exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\"));\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"cluster\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").toString(),\n                \"persistent://tenant/cluster/namespace/topic\");\n\n        assertNotEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\"),\n            \"persistent://tenant/cluster/namespace/topic\");\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getDomain(),\n                TopicDomain.persistent);\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getTenant(),\n                \"tenant\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getCluster(),\n                \"cluster\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespacePortion(),\n                \"namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getNamespace(),\n                \"tenant/cluster/namespace\");\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\").getLocalName(),\n                \"topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getDomain();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getTenant();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getCluster();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getNamespacePortion();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace:my-topic\").getLocalName();\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"invalid://tenant/cluster/namespace/topic\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"tenant/cluster/namespace/topic\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent:///cluster/namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar//namespace/mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster//mydest-1\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"persistent://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://pulsar/cluster/namespace/\");\n            fail(\"Should have raised exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        assertEquals(TopicName.get(\"persistent://tenant/cluster/namespace/topic\")\n                .getPersistenceNamingEncoding(), \"tenant/cluster/namespace/persistent/topic\");\n\n        try {\n            TopicName.get(\"://tenant.namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        try {\n            TopicName.get(\"://tenant/cluster/namespace\");\n            fail(\"Should have raied exception\");\n        } catch (IllegalArgumentException e) {\n            \r\n        }\n\n        TopicName nameWithSlash = TopicName.get(\"persistent://tenant/cluster/namespace/ns-abc/table/1\");\n        assertEquals(nameWithSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1\"));\n\n        TopicName nameEndingInSlash = TopicName\n                .get(\"persistent://tenant/cluster/namespace/ns-abc/table/1/\");\n        assertEquals(nameEndingInSlash.getEncodedLocalName(), Codec.encode(\"ns-abc/table/1/\"));\n\n        TopicName nameWithTwoSlashes = TopicName\n                .get(\"persistent://tenant/cluster/namespace//ns-abc//table//1//\");\n        assertEquals(nameWithTwoSlashes.getEncodedLocalName(), Codec.encode(\"/ns-abc//table//1//\"));\n\n        TopicName nameWithRandomCharacters = TopicName\n                .get(\"persistent://tenant/cluster/namespace/$#3rpa/table/1\");\n        assertEquals(nameWithRandomCharacters.getEncodedLocalName(), Codec.encode(\"$#3rpa/table/1\"));\n\n        TopicName topicName = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\");\n        assertEquals(topicName.getPartition(0).toString(), \"persistent://myprop/mycolo/myns/mytopic-partition-0\");\n\n        TopicName partitionedDn = TopicName.get(\"persistent://myprop/mycolo/myns/mytopic\").getPartition(2);\n        assertEquals(partitionedDn.getPartitionIndex(), 2);\n        assertEquals(topicName.getPartitionIndex(), -1);\n\n        assertEquals(TopicName.getPartitionIndex(\"persistent://myprop/mycolo/myns/mytopic-partition-4\"), 4);\n\n        \r\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition--1\"), 1);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-00\"), 0);\n        assertEquals(TopicName.getPartitionIndex(\"mytopic-partition-012\"), 12);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":8,"curCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","date":"2019-07-26 00:14:02","endLine":243,"groupId":"10174","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopicNameWithoutCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f9/6b5954460c0b28c26fc405e8e005dba2a1f3d3.src","preCode":"    public void testTopicNameWithoutCluster() throws Exception {\n        TopicName topicName = TopicName.get(\"persistent://tenant/namespace/topic\");\n\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n\n        assertEquals(topicName, TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\"));\n\n        assertEquals(topicName.hashCode(),\n                TopicName.get(\"persistent\", \"tenant\", \"namespace\", \"topic\").hashCode());\n\n        assertEquals(topicName.toString(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getDomain(), TopicDomain.persistent);\n        assertEquals(topicName.getTenant(), \"tenant\");\n        assertNull(topicName.getCluster());\n        assertEquals(topicName.getNamespacePortion(), \"namespace\");\n        assertEquals(topicName.getNamespace(), \"tenant/namespace\");\n        assertEquals(topicName.getLocalName(), \"topic\");\n\n        assertEquals(topicName.getEncodedLocalName(), \"topic\");\n        assertEquals(topicName.getPartitionedTopicName(), \"persistent://tenant/namespace/topic\");\n        assertEquals(topicName.getPersistenceNamingEncoding(), \"tenant/namespace/persistent/topic\");\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/naming/TopicNameTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"N"}],"commitId":"0ead803a4b55e94b2116dc84de0a04a9f9148acc","commitMessage":"@@@Correct TopicName#getPartitionIndex implementation. (#10902)\n\n\n Motivation\n\nCurrent partitioned topic check logic is not rigorous enough.  such as the `mytopic-partition--1` this should not partitioned topic. \nFor details of the discussion see http://mail-archives.apache.org/mod_mbox/pulsar-dev/202106.mbox/raw/%3CCACcefgerbLU88rKqPNCTgBSCWn_FJ5MB_E7oa1tKfxTsMAfpfg%40mail.gmail.com%3E\n\n\n Modifications\n1. change the `getPartitionIndex` logic.","date":"2021-06-19 02:06:24","modifiedFileCount":"2","status":"M","submitter":"YANGLiiN"}]
