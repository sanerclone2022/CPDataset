[{"authorTime":"2017-06-24 02:22:49","codes":[{"authorDate":"2017-06-24 02:22:49","commitOrder":1,"curCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2017-06-24 04:41:32","endLine":118,"groupId":"6740","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/23/aafce2f8e2484f126a2988c19dd150d0f5f5c2.src","preCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"B"},{"authorDate":"2017-06-24 02:22:49","commitOrder":1,"curCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"no/such/namespace\"));\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2017-06-24 04:41:32","endLine":128,"groupId":"6742","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/23/aafce2f8e2484f126a2988c19dd150d0f5f5c2.src","preCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"no/such/namespace\"));\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"70da31b082ea0ff7466cdf740fc0d6b443d21861","commitMessage":"@@@Renamed Java packages from com.yahoo.pulsar to org.apache.pulsar (#524)\n","date":"2017-06-24 04:41:32","modifiedFileCount":"5","status":"B","submitter":"Matteo Merli"},{"authorTime":"2017-12-12 02:20:25","codes":[{"authorDate":"2017-06-24 02:22:49","commitOrder":2,"curCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2017-06-24 04:41:32","endLine":118,"groupId":"6740","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/23/aafce2f8e2484f126a2988c19dd150d0f5f5c2.src","preCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"},{"authorDate":"2017-12-12 02:20:25","commitOrder":2,"curCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"no/such/namespace\"));\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2017-12-12 02:20:25","endLine":128,"groupId":"6742","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/a8/cbd7bff76aae0504258b753fbb4f48105b9cdf.src","preCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"no/such/namespace\"));\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"d1ba96e581f11981cc93ecb11946f5863a41d032","commitMessage":"@@@Reduce duplicate string allocation for GC improvements (#952)\n\n","date":"2017-12-12 02:20:25","modifiedFileCount":"37","status":"M","submitter":"Rajan Dhabalia"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2019-07-26 00:14:02","commitOrder":3,"curCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertNull(nsPolicy);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2019-07-26 00:14:02","endLine":119,"groupId":"1017","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/aa/11caaa08364f9dc4cccab30e8a8d7725862106.src","preCode":"    public void testGetNamespaceIsolationPolicyByName() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\");\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByName(\"policy1\");\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":3,"curCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"no/such/namespace\"));\n        assertNull(nsPolicy);\n        nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","date":"2019-07-26 00:14:02","endLine":129,"groupId":"1017","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNamespaceIsolationPolicyByNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/aa/11caaa08364f9dc4cccab30e8a8d7725862106.src","preCode":"    public void testGetNamespaceIsolationPolicyByNamespace() throws Exception {\n        NamespaceIsolationPolicies policies = this.getDefaultTestPolicies();\n        NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"no/such/namespace\"));\n        assertTrue(nsPolicy == null);\n        nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"pulsar/use/testns-1\"));\n        assertNotNull(nsPolicy);\n        assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")), nsPolicy);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/impl/NamespaceIsolationPoliciesTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"fb6895db195f08aa82f75dad93b1b9c0b1b15a88","commitMessage":"@@@Test cleanup and simplification (#4799)\n\n* Simplified assert statements in the tests. Switch to usage of static imports in tests. (Part 1)\n\n* Simplify assert statements in the tests and use the appropriate assert statements. Switch to usage of static imports in tests. Remove unused imports (Part 2)\n","date":"2019-07-26 00:14:02","modifiedFileCount":"134","status":"M","submitter":"vzhikserg"}]
