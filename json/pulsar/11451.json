[{"authorTime":"2020-11-11 19:43:31","codes":[{"authorDate":"2018-04-27 09:31:34","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = topics.peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (msg.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n                if (msg.getProperties().size() > 0) {\n                    System.out.println(\"Tenants:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","date":"2018-04-27 09:31:34","endLine":550,"groupId":"6290","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/d96902faa92edb51969cfbd91150334e3dc9ee.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = topics.peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (msg.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n                if (msg.getProperties().size() > 0) {\n                    System.out.println(\"Tenants:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"NB"},{"authorDate":"2020-11-11 19:43:31","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = topics.examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","date":"2020-11-11 19:43:31","endLine":770,"groupId":"12422","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/34/6d871c3a1bd98c0c49e3a082067292bf172f47.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = topics.examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"B"}],"commitId":"fdcf61321f06237e26d00ee0cc5bfbad20506801","commitMessage":"@@@[AdminCli] Add ability to examine specific message by position relative to earliest or latest message. (#8494)\n\nFixes #5126 \n\n\n Motivation\n\nAdd ability to examine specific message by position relative to earliest or latest message.\nSo we can easily debug with topic without need to create subscription or fetch message by getting position(legerId:entryId) for that message first.\n\n\n Modifications\n\nAdd rest and cli command to get specific message from a topic position relative to earliest/latest message.\nExposed asyncReadEntry.  getFirstPosition.  getPositionAfterN and getNumberOfEntries in PersistentTopic to help implementing it.. ","date":"2020-11-11 19:43:31","modifiedFileCount":"7","status":"M","submitter":"Marvin Cai"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = getTopics().peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (msg.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n                if (msg.getProperties().size() > 0) {\n                    System.out.println(\"Tenants:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":801,"groupId":"6290","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = topics.peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (msg.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n                if (msg.getProperties().size() > 0) {\n                    System.out.println(\"Tenants:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":779,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = getTopics().examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","date":"2021-01-29 03:06:36","endLine":834,"groupId":"12422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = topics.examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-07-12 22:23:54","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = getTopics().peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                MessageImpl message = (MessageImpl) msg;\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (message.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) message.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n\n                System.out.println(\"Publish time: \" + message.getPublishTime());\n                System.out.println(\"Event time: \" + message.getEventTime());\n\n                if (message.getDeliverAtTime() != 0) {\n                    System.out.println(\"Deliver at time: \" + message.getDeliverAtTime());\n                }\n\n                if (message.getBrokerEntryMetadata() != null) {\n                    if (message.getBrokerEntryMetadata().hasBrokerTimestamp()) {\n                        System.out.println(\"Broker entry metadata timestamp: \" + message.getBrokerEntryMetadata().getBrokerTimestamp());\n                    }\n                    if (message.getBrokerEntryMetadata().hasIndex()) {\n                        System.out.println(\"Broker entry metadata index: \" + message.getBrokerEntryMetadata().getIndex());\n                    }\n                }\n\n                if (message.getProperties().size() > 0) {\n                    System.out.println(\"Properties:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","date":"2021-07-12 22:23:54","endLine":876,"groupId":"7775","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/fb/b94b2001134a1f754d84bd87806849744a9606.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = getTopics().peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (msg.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n                if (msg.getProperties().size() > 0) {\n                    System.out.println(\"Tenants:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":836,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = getTopics().examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","date":"2021-01-29 03:06:36","endLine":834,"groupId":"12422","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = getTopics().examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"N"}],"commitId":"ea628541950a2cd02746ef0cfce02528b7824fed","commitMessage":"@@@Expose broker entry metadata and deliverAtTime to peekMessages/getMessageById/examineMessage  (#11279)\n\n","date":"2021-07-12 22:23:54","modifiedFileCount":"5","status":"M","submitter":"Aloys"},{"authorTime":"2021-07-15 16:49:04","codes":[{"authorDate":"2021-07-12 22:23:54","commitOrder":5,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = getTopics().peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                MessageImpl message = (MessageImpl) msg;\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (message.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) message.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n\n                System.out.println(\"Publish time: \" + message.getPublishTime());\n                System.out.println(\"Event time: \" + message.getEventTime());\n\n                if (message.getDeliverAtTime() != 0) {\n                    System.out.println(\"Deliver at time: \" + message.getDeliverAtTime());\n                }\n\n                if (message.getBrokerEntryMetadata() != null) {\n                    if (message.getBrokerEntryMetadata().hasBrokerTimestamp()) {\n                        System.out.println(\"Broker entry metadata timestamp: \" + message.getBrokerEntryMetadata().getBrokerTimestamp());\n                    }\n                    if (message.getBrokerEntryMetadata().hasIndex()) {\n                        System.out.println(\"Broker entry metadata index: \" + message.getBrokerEntryMetadata().getIndex());\n                    }\n                }\n\n                if (message.getProperties().size() > 0) {\n                    System.out.println(\"Properties:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","date":"2021-07-12 22:23:54","endLine":876,"groupId":"11451","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/fb/b94b2001134a1f754d84bd87806849744a9606.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            List<Message<byte[]>> messages = getTopics().peekMessages(persistentTopic, subName, numMessages);\n            int position = 0;\n            for (Message<byte[]> msg : messages) {\n                MessageImpl message = (MessageImpl) msg;\n                if (++position != 1) {\n                    System.out.println(\"-------------------------------------------------------------------------\\n\");\n                }\n                if (message.getMessageId() instanceof BatchMessageIdImpl) {\n                    BatchMessageIdImpl msgId = (BatchMessageIdImpl) message.getMessageId();\n                    System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n                } else {\n                    MessageIdImpl msgId = (MessageIdImpl) msg.getMessageId();\n                    System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n                }\n\n                System.out.println(\"Publish time: \" + message.getPublishTime());\n                System.out.println(\"Event time: \" + message.getEventTime());\n\n                if (message.getDeliverAtTime() != 0) {\n                    System.out.println(\"Deliver at time: \" + message.getDeliverAtTime());\n                }\n\n                if (message.getBrokerEntryMetadata() != null) {\n                    if (message.getBrokerEntryMetadata().hasBrokerTimestamp()) {\n                        System.out.println(\"Broker entry metadata timestamp: \" + message.getBrokerEntryMetadata().getBrokerTimestamp());\n                    }\n                    if (message.getBrokerEntryMetadata().hasIndex()) {\n                        System.out.println(\"Broker entry metadata index: \" + message.getBrokerEntryMetadata().getIndex());\n                    }\n                }\n\n                if (message.getProperties().size() > 0) {\n                    System.out.println(\"Properties:\");\n                    print(msg.getProperties());\n                }\n                ByteBuf data = Unpooled.wrappedBuffer(msg.getData());\n                System.out.println(ByteBufUtil.prettyHexDump(data));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":836,"status":"N"},{"authorDate":"2021-07-15 16:49:04","commitOrder":5,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            MessageImpl message =\n                    (MessageImpl) getTopics().examineMessage(persistentTopic, initialPosition, messagePosition);\n\n            if (message.getMessageId() instanceof BatchMessageIdImpl) {\n                BatchMessageIdImpl msgId = (BatchMessageIdImpl) message.getMessageId();\n                System.out.println(\"Batch Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId() + \":\" + msgId.getBatchIndex());\n            } else {\n                MessageIdImpl msgId = (MessageIdImpl) message.getMessageId();\n                System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n            }\n\n            System.out.println(\"Publish time: \" + message.getPublishTime());\n            System.out.println(\"Event time: \" + message.getEventTime());\n\n            if (message.getDeliverAtTime() != 0) {\n                System.out.println(\"Deliver at time: \" + message.getDeliverAtTime());\n            }\n\n            if (message.getBrokerEntryMetadata() != null) {\n                if (message.getBrokerEntryMetadata().hasBrokerTimestamp()) {\n                    System.out.println(\"Broker entry metadata timestamp: \" + message.getBrokerEntryMetadata().getBrokerTimestamp());\n                }\n                if (message.getBrokerEntryMetadata().hasIndex()) {\n                    System.out.println(\"Broker entry metadata index: \" + message.getBrokerEntryMetadata().getIndex());\n                }\n            }\n\n            if (message.getProperties().size() > 0) {\n                System.out.println(\"Properties:\");\n                print(message.getProperties());\n            }\n            ByteBuf data = Unpooled.wrappedBuffer(message.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","date":"2021-07-15 16:49:04","endLine":931,"groupId":"11451","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ee/488364bc9e42eb8d680ed6e9bf37ae7ba17704.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            Message<byte[]> messages = getTopics().examineMessage(persistentTopic, initialPosition, messagePosition);\n            MessageIdImpl msgId = (MessageIdImpl) messages.getMessageId();\n            System.out.println(\"Message ID: \" + msgId.getLedgerId() + \":\" + msgId.getEntryId());\n\n            if (messages.getProperties().size() > 0) {\n                System.out.println(\"Tenants:\");\n                print(messages.getProperties());\n            }\n\n            ByteBuf data = Unpooled.wrappedBuffer(messages.getData());\n            System.out.println(ByteBufUtil.prettyHexDump(data));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":896,"status":"M"}],"commitId":"72f77853a43fd439235b9594099494b1b3e12464","commitMessage":"@@@fix batch size < 0 error when peekmessage (#11301)\n\nFixes #11300 \n\n\n Motivation\nThis pull request fix the error of `X-Pulsar-batch-size` < 0\n\n\n Modifications\n\n1. fix the logic of calculate `X-Pulsar-batch-size`  to make sure it's the right size of batch message\n2. expose more attribute to Admin Tool command of getMessageById and examineMessage\n3. add test code for these changes\n","date":"2021-07-15 16:49:04","modifiedFileCount":"3","status":"M","submitter":"Aloys"}]
