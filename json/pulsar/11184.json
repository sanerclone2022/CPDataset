[{"authorTime":"2019-06-07 04:18:29","codes":[{"authorDate":"2019-06-07 04:18:29","commitOrder":1,"curCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connectBuilder.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(copyFromUtf8(authData));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","date":"2019-06-07 04:18:29","endLine":166,"groupId":"6027","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@StringauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@StringoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/1d/e08cf7d8d29b5deb2cf7dad6cbaccebb615b05.src","preCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connectBuilder.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(copyFromUtf8(authData));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"B"},{"authorDate":"2019-06-07 04:18:29","commitOrder":1,"curCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(ByteString.copyFrom(authData.getBytes()));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","date":"2019-06-07 04:18:29","endLine":201,"groupId":"15307","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@AuthDataauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@AuthDataoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/1d/e08cf7d8d29b5deb2cf7dad6cbaccebb615b05.src","preCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(ByteString.copyFrom(authData.getBytes()));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"}],"commitId":"dfdfdb4efa46662e7ec8cb027fdfe854d45caec5","commitMessage":"@@@Include pulsar-client-api in shaded client artifacts (#4445)\n\n* o.a.p.c.api -> o.a.p.c.protocol\n\nClasses in pulsar-common module were moved to avoid jpms split-package\nconflict between the pulsar-client-api and pulsar-common modules.\n\n* o.a.p.c.schema -> o.a.p.c.protocol.schema\n\nClasses in pulsar-common module were moved to avoid jpms split-package\nconflict between the pulsar-client-api and pulsar-common modules.\n","date":"2019-06-07 04:18:29","modifiedFileCount":"91","status":"B","submitter":"Kim Christian Gaarder"},{"authorTime":"2020-02-11 00:59:18","codes":[{"authorDate":"2020-02-11 00:59:18","commitOrder":2,"curCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connectBuilder.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(copyFromUtf8(authData));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n\n        connectBuilder.setFeatureFlags(getFeatureFlags());\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","date":"2020-02-11 00:59:18","endLine":202,"groupId":"6027","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@StringauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@StringoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4a/cd7dc8e54cb1929ad81930eef389f4c0b8d497.src","preCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connectBuilder.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(copyFromUtf8(authData));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2020-02-11 00:59:18","commitOrder":2,"curCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(ByteString.copyFrom(authData.getBytes()));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        connectBuilder.setFeatureFlags(getFeatureFlags());\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","date":"2020-02-11 00:59:18","endLine":238,"groupId":"15307","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@AuthDataauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@AuthDataoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4a/cd7dc8e54cb1929ad81930eef389f4c0b8d497.src","preCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(ByteString.copyFrom(authData.getBytes()));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"4af5223f4a101f40d45263c5b7aac7728f93f684","commitMessage":"@@@PIP-55: Refresh Authentication Credentials (#6074)\n\n* PIP-55: Refresh Authentication Credentials\n\n* Fixed import order\n\n* Do not check for original client credential if it's not coming through proxy\n\n* Fixed import order\n\n* Fixed mocked test assumption\n\n* Addressed comments\n\n* Avoid to print NPE on auth refresh check if auth is disabled\n","date":"2020-02-11 00:59:18","modifiedFileCount":"12","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-01-06 08:42:31","codes":[{"authorDate":"2021-01-06 08:42:31","commitOrder":3,"curCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        BaseCommand cmd = localCmd(Type.CONNECT);\n        CommandConnect connect = cmd.setConnect()\n                .setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\")\n                .setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connect.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connect.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connect.setAuthData(authData.getBytes(UTF_8));\n        }\n\n        if (originalPrincipal != null) {\n            connect.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connect.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connect.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connect.setProtocolVersion(protocolVersion);\n\n        setFeatureFlags(connect.setFeatureFlags());\n        return serializeWithSize(cmd);\n    }\n","date":"2021-01-06 08:42:31","endLine":216,"groupId":"11184","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@StringauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@StringoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/8b/4fcb5579e2dfde5d33f8951bf967703137eaa9.src","preCode":"    public static ByteBuf newConnect(String authMethodName, String authData, int protocolVersion, String libVersion,\n            String targetBroker, String originalPrincipal, String originalAuthData,\n            String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (\"ycav1\".equals(authMethodName)) {\n            \r\n            \r\n            \r\n            connectBuilder.setAuthMethod(AuthMethod.AuthMethodYcaV1);\n        }\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(copyFromUtf8(authData));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(originalAuthData);\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n\n        connectBuilder.setFeatureFlags(getFeatureFlags());\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-01-06 08:42:31","commitOrder":3,"curCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        BaseCommand cmd = localCmd(Type.CONNECT);\n        CommandConnect connect = cmd.setConnect()\n                .setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\")\n                .setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connect.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connect.setAuthData(authData.getBytes());\n        }\n\n        if (originalPrincipal != null) {\n            connect.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connect.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connect.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connect.setProtocolVersion(protocolVersion);\n        setFeatureFlags(connect.setFeatureFlags());\n\n        return serializeWithSize(cmd);\n    }\n","date":"2021-01-06 08:42:31","endLine":250,"groupId":"11184","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newConnect","params":"(StringauthMethodName@AuthDataauthData@intprotocolVersion@StringlibVersion@StringtargetBroker@StringoriginalPrincipal@AuthDataoriginalAuthData@StringoriginalAuthMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/8b/4fcb5579e2dfde5d33f8951bf967703137eaa9.src","preCode":"    public static ByteBuf newConnect(String authMethodName, AuthData authData, int protocolVersion, String libVersion,\n                                     String targetBroker, String originalPrincipal, AuthData originalAuthData,\n                                     String originalAuthMethod) {\n        CommandConnect.Builder connectBuilder = CommandConnect.newBuilder();\n        connectBuilder.setClientVersion(libVersion != null ? libVersion : \"Pulsar Client\");\n        connectBuilder.setAuthMethodName(authMethodName);\n\n        if (targetBroker != null) {\n            \r\n            connectBuilder.setProxyToBrokerUrl(targetBroker);\n        }\n\n        if (authData != null) {\n            connectBuilder.setAuthData(ByteString.copyFrom(authData.getBytes()));\n        }\n\n        if (originalPrincipal != null) {\n            connectBuilder.setOriginalPrincipal(originalPrincipal);\n        }\n\n        if (originalAuthData != null) {\n            connectBuilder.setOriginalAuthData(new String(originalAuthData.getBytes(), UTF_8));\n        }\n\n        if (originalAuthMethod != null) {\n            connectBuilder.setOriginalAuthMethod(originalAuthMethod);\n        }\n        connectBuilder.setProtocolVersion(protocolVersion);\n        connectBuilder.setFeatureFlags(getFeatureFlags());\n        CommandConnect connect = connectBuilder.build();\n        ByteBuf res = serializeWithSize(BaseCommand.newBuilder().setType(Type.CONNECT).setConnect(connect));\n        connect.recycle();\n        connectBuilder.recycle();\n        return res;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"}],"commitId":"c12765a0530bcefca8e840d2f8f43383d7478778","commitMessage":"@@@PIP-75: Perform serialization/deserialization with LightProto (#9046)\n\n","date":"2021-01-06 08:42:31","modifiedFileCount":"185","status":"M","submitter":"Matteo Merli"}]
