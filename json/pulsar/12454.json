[{"authorTime":"2018-04-27 09:31:34","codes":[{"authorDate":"2018-04-18 00:23:23","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = persistentTopics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = persistentTopics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2018-04-18 00:23:23","endLine":598,"groupId":"5593","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/df/c72e2275fcccfba892a779cd87c474a15b3f27.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = persistentTopics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = persistentTopics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdPersistentTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"NB"},{"authorDate":"2018-04-27 09:31:34","commitOrder":2,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = topics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = topics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2018-04-27 09:31:34","endLine":605,"groupId":"5593","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/d96902faa92edb51969cfbd91150334e3dc9ee.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = topics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = topics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":577,"status":"B"}],"commitId":"02eff26259b43d3fac646d80f8256f9308baba1d","commitMessage":"@@@In pulsar admin Java API.  unified persistent vs non-persistent into \"topics()\" (#1634)\n\n* In pulsar admin Java API.  unified persistent vs non-persistent into \"topics()\"\n\n* Fixed tests\n\n* Merged and fixed tests\n\n* Couple more tests fixes\n\n* Consolidated pulsar-admin persistent|non-persistent into 'topics' command\n","date":"2018-04-27 09:31:34","modifiedFileCount":"67","status":"M","submitter":"Matteo Merli"},{"authorTime":"2018-05-03 00:59:58","codes":[{"authorDate":"2018-05-03 00:59:58","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = persistentTopics.compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = persistentTopics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2018-05-03 00:59:58","endLine":606,"groupId":"5593","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/dd/9cf9c597b6fe9d0d785dd082ede9a82c60d896.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = persistentTopics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = persistentTopics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdPersistentTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"M"},{"authorDate":"2018-05-03 00:59:58","commitOrder":3,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = topics.compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = topics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2018-05-03 00:59:58","endLine":614,"groupId":"5593","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/19/81c7168c2317e313e1ef2b8944e12ad85ffbe4.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                CompactionStatus status = topics.compactionStatus(persistentTopic);\n                while (wait && status.status == CompactionStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = topics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":586,"status":"M"}],"commitId":"5f678e099095b133138ea0e536e06e916d8dc09e","commitMessage":"@@@Rest API for Ledger Offloading (#1639)\n\n* Rest API for Ledger Offloading\n\nImplemented for both V1 and V2 topic name formats. API takes a message\nID.  up to which the broker will try to offload messages. It returns\nthe message ID of the first message in the topic which has not been\noffloaded.\n\nThis patch also adds basic support for setting the Offloader\nimplementation in the broker (needed for testing). Subsequent patches\nwill make this configurable through ServiceConfiguration.\n\n* Split compaction endpoint into two\n\nOne for triggering and one for getting the current status.\n\n* Add conflict to rest api doc\n\n* Fixed build\n","date":"2018-05-03 00:59:58","modifiedFileCount":"12","status":"M","submitter":"Ivan Kelly"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = getPersistentTopics().compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = getPersistentTopics().compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":674,"groupId":"12454","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f5/6029d23fde419e8aa546ee22ae531b98ac9d44.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = persistentTopics.compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = persistentTopics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdPersistentTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = getTopics().compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = getTopics().compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":915,"groupId":"12454","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n\n            try {\n                LongRunningProcessStatus status = topics.compactionStatus(persistentTopic);\n                while (wait && status.status == LongRunningProcessStatus.Status.RUNNING) {\n                    Thread.sleep(1000);\n                    status = topics.compactionStatus(persistentTopic);\n                }\n\n                switch (status.status) {\n                case NOT_RUN:\n                    System.out.println(\"Compaction has not been run for \" + persistentTopic\n                                       + \" since broker startup\");\n                    break;\n                case RUNNING:\n                    System.out.println(\"Compaction is currently running\");\n                    break;\n                case SUCCESS:\n                    System.out.println(\"Compaction was a success\");\n                    break;\n                case ERROR:\n                    System.out.println(\"Error in compaction\");\n                    throw new PulsarAdminException(\"Error compacting: \" + status.lastError);\n                }\n            } catch (InterruptedException e) {\n                throw new PulsarAdminException(e);\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":887,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
