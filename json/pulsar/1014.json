[{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2018-09-25 10:03:21","commitOrder":2,"curCode":"    public void testPersistentTopicStatsAggregation() {\n        TopicStats topicStats1 = new TopicStats();\n        topicStats1.msgRateIn = 1;\n        topicStats1.msgThroughputIn = 1;\n        topicStats1.msgRateOut = 1;\n        topicStats1.msgThroughputOut = 1;\n        topicStats1.averageMsgSize = 1;\n        topicStats1.storageSize = 1;\n        topicStats1.publishers.add(new PublisherStats());\n        topicStats1.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats1.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats topicStats2 = new TopicStats();\n        topicStats2.msgRateIn = 1;\n        topicStats2.msgThroughputIn = 2;\n        topicStats2.msgRateOut = 3;\n        topicStats2.msgThroughputOut = 4;\n        topicStats2.averageMsgSize = 5;\n        topicStats2.storageSize = 6;\n        topicStats2.publishers.add(new PublisherStats());\n        topicStats2.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats2.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats target = new TopicStats();\n        target.add(topicStats1);\n        target.add(topicStats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.msgRateOut, 4.0);\n        assertEquals(target.msgThroughputOut, 5.0);\n        assertEquals(target.averageMsgSize, 3.0);\n        assertEquals(target.storageSize, 7);\n        assertEquals(target.publishers.size(), 1);\n        assertEquals(target.subscriptions.size(), 1);\n        assertEquals(target.replication.size(), 1);\n    }\n","date":"2018-09-25 10:03:21","endLine":103,"groupId":"9214","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistentTopicStatsAggregation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/cd/bfcd5ba5767f2fe9f55d16dd3aa5ae845429f9.src","preCode":"    public void testPersistentTopicStatsAggregation() {\n        TopicStats topicStats1 = new TopicStats();\n        topicStats1.msgRateIn = 1;\n        topicStats1.msgThroughputIn = 1;\n        topicStats1.msgRateOut = 1;\n        topicStats1.msgThroughputOut = 1;\n        topicStats1.averageMsgSize = 1;\n        topicStats1.storageSize = 1;\n        topicStats1.publishers.add(new PublisherStats());\n        topicStats1.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats1.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats topicStats2 = new TopicStats();\n        topicStats2.msgRateIn = 1;\n        topicStats2.msgThroughputIn = 2;\n        topicStats2.msgRateOut = 3;\n        topicStats2.msgThroughputOut = 4;\n        topicStats2.averageMsgSize = 5;\n        topicStats2.storageSize = 6;\n        topicStats2.publishers.add(new PublisherStats());\n        topicStats2.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats2.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats target = new TopicStats();\n        target.add(topicStats1);\n        target.add(topicStats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.msgRateOut, 4.0);\n        assertEquals(target.msgThroughputOut, 5.0);\n        assertEquals(target.averageMsgSize, 3.0);\n        assertEquals(target.storageSize, 7);\n        assertEquals(target.publishers.size(), 1);\n        assertEquals(target.subscriptions.size(), 1);\n        assertEquals(target.replication.size(), 1);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PersistentTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"NB"},{"authorDate":"2019-07-26 00:14:02","commitOrder":2,"curCode":"    public void testPublisherStatsAggregation() {\n        PublisherStats stats1 = new PublisherStats();\n        stats1.msgRateIn = 1;\n        stats1.msgThroughputIn = 1;\n        stats1.averageMsgSize = 1;\n\n        PublisherStats stats2 = new PublisherStats();\n        stats2.msgRateIn = 1;\n        stats2.msgThroughputIn = 2;\n        stats2.averageMsgSize = 3;\n\n        PublisherStats target = new PublisherStats();\n        target.add(stats1);\n        target.add(stats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.averageMsgSize, 2.0);\n    }\n","date":"2019-07-26 00:14:02","endLine":97,"groupId":"9214","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPublisherStatsAggregation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/2b/c4dd75ca4fd0613f410b510c813a3ff16e3850.src","preCode":"    public void testPublisherStatsAggregation() {\n        PublisherStats stats1 = new PublisherStats();\n        stats1.msgRateIn = 1;\n        stats1.msgThroughputIn = 1;\n        stats1.averageMsgSize = 1;\n\n        PublisherStats stats2 = new PublisherStats();\n        stats2.msgRateIn = 1;\n        stats2.msgThroughputIn = 2;\n        stats2.averageMsgSize = 3;\n\n        PublisherStats target = new PublisherStats();\n        target.add(stats1);\n        target.add(stats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.averageMsgSize, 2.0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PublisherStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"MB"}],"commitId":"fb6895db195f08aa82f75dad93b1b9c0b1b15a88","commitMessage":"@@@Test cleanup and simplification (#4799)\n\n* Simplified assert statements in the tests. Switch to usage of static imports in tests. (Part 1)\n\n* Simplify assert statements in the tests and use the appropriate assert statements. Switch to usage of static imports in tests. Remove unused imports (Part 2)\n","date":"2019-07-26 00:14:02","modifiedFileCount":"134","status":"M","submitter":"vzhikserg"},{"authorTime":"2021-06-06 12:37:53","codes":[{"authorDate":"2021-06-06 12:37:53","commitOrder":3,"curCode":"    public void testPersistentTopicStatsAggregation() {\n        TopicStatsImpl topicStats1 = new TopicStatsImpl();\n        topicStats1.msgRateIn = 1;\n        topicStats1.msgThroughputIn = 1;\n        topicStats1.msgRateOut = 1;\n        topicStats1.msgThroughputOut = 1;\n        topicStats1.averageMsgSize = 1;\n        topicStats1.storageSize = 1;\n        topicStats1.publishers.add(new PublisherStatsImpl());\n        topicStats1.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats1.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n\n        TopicStatsImpl topicStats2 = new TopicStatsImpl();\n        topicStats2.msgRateIn = 1;\n        topicStats2.msgThroughputIn = 2;\n        topicStats2.msgRateOut = 3;\n        topicStats2.msgThroughputOut = 4;\n        topicStats2.averageMsgSize = 5;\n        topicStats2.storageSize = 6;\n        topicStats2.publishers.add(new PublisherStatsImpl());\n        topicStats2.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats2.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n\n        TopicStatsImpl target = new TopicStatsImpl();\n        target.add(topicStats1);\n        target.add(topicStats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.msgRateOut, 4.0);\n        assertEquals(target.msgThroughputOut, 5.0);\n        assertEquals(target.averageMsgSize, 3.0);\n        assertEquals(target.storageSize, 7);\n        assertEquals(target.publishers.size(), 1);\n        assertEquals(target.subscriptions.size(), 1);\n        assertEquals(target.replication.size(), 1);\n    }\n","date":"2021-06-06 12:37:53","endLine":110,"groupId":"1014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistentTopicStatsAggregation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/6b/9e1b4e96eddb90ff2ec613791f02445e4fa9a7.src","preCode":"    public void testPersistentTopicStatsAggregation() {\n        TopicStats topicStats1 = new TopicStats();\n        topicStats1.msgRateIn = 1;\n        topicStats1.msgThroughputIn = 1;\n        topicStats1.msgRateOut = 1;\n        topicStats1.msgThroughputOut = 1;\n        topicStats1.averageMsgSize = 1;\n        topicStats1.storageSize = 1;\n        topicStats1.publishers.add(new PublisherStats());\n        topicStats1.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats1.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats topicStats2 = new TopicStats();\n        topicStats2.msgRateIn = 1;\n        topicStats2.msgThroughputIn = 2;\n        topicStats2.msgRateOut = 3;\n        topicStats2.msgThroughputOut = 4;\n        topicStats2.averageMsgSize = 5;\n        topicStats2.storageSize = 6;\n        topicStats2.publishers.add(new PublisherStats());\n        topicStats2.subscriptions.put(\"test_ns\", new SubscriptionStats());\n        topicStats2.replication.put(\"test_ns\", new ReplicatorStats());\n\n        TopicStats target = new TopicStats();\n        target.add(topicStats1);\n        target.add(topicStats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.msgRateOut, 4.0);\n        assertEquals(target.msgThroughputOut, 5.0);\n        assertEquals(target.averageMsgSize, 3.0);\n        assertEquals(target.storageSize, 7);\n        assertEquals(target.publishers.size(), 1);\n        assertEquals(target.subscriptions.size(), 1);\n        assertEquals(target.replication.size(), 1);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PersistentTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-06-06 12:37:53","commitOrder":3,"curCode":"    public void testPublisherStatsAggregation() {\n        PublisherStatsImpl stats1 = new PublisherStatsImpl();\n        stats1.msgRateIn = 1;\n        stats1.msgThroughputIn = 1;\n        stats1.averageMsgSize = 1;\n\n        PublisherStatsImpl stats2 = new PublisherStatsImpl();\n        stats2.msgRateIn = 1;\n        stats2.msgThroughputIn = 2;\n        stats2.averageMsgSize = 3;\n\n        PublisherStatsImpl target = new PublisherStatsImpl();\n        target.add(stats1);\n        target.add(stats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.averageMsgSize, 2.0);\n    }\n","date":"2021-06-06 12:37:53","endLine":98,"groupId":"1014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPublisherStatsAggregation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/6b/c8771127bb90fd6f16ae1cf5e90fd7f000cb6d.src","preCode":"    public void testPublisherStatsAggregation() {\n        PublisherStats stats1 = new PublisherStats();\n        stats1.msgRateIn = 1;\n        stats1.msgThroughputIn = 1;\n        stats1.averageMsgSize = 1;\n\n        PublisherStats stats2 = new PublisherStats();\n        stats2.msgRateIn = 1;\n        stats2.msgThroughputIn = 2;\n        stats2.averageMsgSize = 3;\n\n        PublisherStats target = new PublisherStats();\n        target.add(stats1);\n        target.add(stats2);\n\n        assertEquals(target.msgRateIn, 2.0);\n        assertEquals(target.msgThroughputIn, 3.0);\n        assertEquals(target.averageMsgSize, 2.0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PublisherStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"da71ec2b2a6682ffbab60843756f638bedbd4460","commitMessage":"@@@Make client-admin-api to use interfaces with builders instead of POJOs (#10818)\n\n\n Motivation\n\nInstead of using POJOs types in the Java client-admin API.  use interfaces \n\n\n Modifications\n * Converted more POJOs into interfaces\n * Added builders to construct instances of the interfaces without directly using the implementation classes\n\nNote: for easier reviewing.  there are 2 commits in this PR: \n * https://github.com/apache/pulsar/commit/f14ce733f69633143bd3bf4b4f3ae99a2ea93551 includes the changes to production code\n * https://github.com/apache/pulsar/commit/23b6f74c608cefc5da14ce1d2b29f34efde6870f changes to the unit tests\n","date":"2021-06-06 12:37:53","modifiedFileCount":"275","status":"M","submitter":"Matteo Merli"}]
