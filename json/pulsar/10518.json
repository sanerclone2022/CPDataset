[{"authorTime":"2021-02-01 22:55:41","codes":[{"authorDate":"2021-02-01 22:55:41","commitOrder":1,"curCode":"    public void testArray() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.arrayField = Arrays.asList(\"message_1\", \"message_2\", \"message_3\");\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"arrayField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        ArrayType columnType = new ArrayType(VARCHAR);\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"arrayField\", columnType, false, false, \"arrayField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkArrayValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n    }\n","date":"2021-02-01 22:55:41","endLine":139,"groupId":"4031","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9f/56e3006c9b039ee8d4fd2d45a6875528fe2217.src","preCode":"    public void testArray() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.arrayField = Arrays.asList(\"message_1\", \"message_2\", \"message_3\");\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"arrayField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        ArrayType columnType = new ArrayType(VARCHAR);\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"arrayField\", columnType, false, false, \"arrayField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkArrayValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"},{"authorDate":"2021-02-01 22:55:41","commitOrder":1,"curCode":"    public void testRow() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.stringField = \"message_2\";\n        DecoderTestMessage.TestRow testRow = new DecoderTestMessage.TestRow();\n        message.rowField = testRow;\n        testRow.intField = 22;\n        testRow.stringField = \"message_2_testRow\";\n        DecoderTestMessage.NestedRow nestedRow = new DecoderTestMessage.NestedRow();\n        nestedRow.longField = 222L;\n        nestedRow.stringField = \"message_2_nestedRow\";\n        testRow.nestedRow = nestedRow;\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"rowField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        RowType columnType = RowType.from(ImmutableList.<RowType.Field>builder()\n                .add(RowType.field(\"stringField\", VARCHAR))\n                .add(RowType.field(\"intField\", INTEGER))\n                .add(RowType.field(\"nestedRow\", RowType.from(ImmutableList.<RowType.Field>builder()\n                        .add(RowType.field(\"stringField\", VARCHAR))\n                        .add(RowType.field(\"longField\", BIGINT))\n                        .build())))\n                .build());\n\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"rowField\", columnType, false, false, \"rowField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkRowValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n\n    }\n","date":"2021-02-01 22:55:41","endLine":175,"groupId":"7915","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9f/56e3006c9b039ee8d4fd2d45a6875528fe2217.src","preCode":"    public void testRow() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.stringField = \"message_2\";\n        DecoderTestMessage.TestRow testRow = new DecoderTestMessage.TestRow();\n        message.rowField = testRow;\n        testRow.intField = 22;\n        testRow.stringField = \"message_2_testRow\";\n        DecoderTestMessage.NestedRow nestedRow = new DecoderTestMessage.NestedRow();\n        nestedRow.longField = 222L;\n        nestedRow.stringField = \"message_2_nestedRow\";\n        testRow.nestedRow = nestedRow;\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"rowField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        RowType columnType = RowType.from(ImmutableList.<RowType.Field>builder()\n                .add(RowType.field(\"stringField\", VARCHAR))\n                .add(RowType.field(\"intField\", INTEGER))\n                .add(RowType.field(\"nestedRow\", RowType.from(ImmutableList.<RowType.Field>builder()\n                        .add(RowType.field(\"stringField\", VARCHAR))\n                        .add(RowType.field(\"longField\", BIGINT))\n                        .build())))\n                .build());\n\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"rowField\", columnType, false, false, \"rowField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkRowValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"a1107ad9e008ef2f1f028feb95a893e74face08e","commitMessage":"@@@[PIP-71][SQL]Pulsar SQL migrate SchemaHandle to presto decoder (#8422)\n\nFixes #4747 \nFixes #7652 \n\n\n Motivation\n\nPIP-71: https://github.com/apache/pulsar/wiki/PIP-71:-Pulsar-SQL-migrate-SchemaHandle-to-presto-decoder\n\n**Pip-Doc** : [[PIP-71][SQL]Migrate SchemaHandle to Presto-decoder](https://docs.google.com/document/d/1KwG0GoHccju4-QNPfvT6tOwhp5Fvs6-iZlfLooPxTDM/edit?usp=sharing)\n\nIn current version .  pulsar-presto deserialize fields  rely on SchemaHandler .  but this causes the following restrictions :\n\n- **Metadata**: current nested field is dissociate with presto ParameterizedType .  It treated nested field as a separated field .  so  presto compiler can?t understand the type hierarchy . nested field should be Row type in presto (e.g.  Hive struct type support) . In the same way?array \\ map type also shoud associate with presto ParameterizedTypes.\n- **Decoder** : SchemaHandler is hard to work with  `RecordCursor.getObject()` to support ROW. MAP. ARRAY .etc\n\nThe **motivations** of this pull request :\n-  ` PulsarMetadata` take advantage of `ParameterizedType`  to describe `row/array/map` Type instead of resolve nested columns in pulsar-presto connecter.\n- Customize `RowDecoder | RowDecoderFactory | ColumnDecoder` to work with pulsar interface.  and with some our own extensions  compare to presto original version .  we can support more type for backward compatible (e.g. \n ` TIMESTAMP\\DATE\\TIME\\Real\\ARRAY\\MAP\\ROW ` support).\n- Decouple avro or schema type with `pulsar-presto main module` (RecordSet. ConnectorMetadata .etc ).  aim to friendly with other schema type ( [ProtobufNative](https://github.com/apache/pulsar/pull/8372)  ?thrift etc..).\n\n\n Modifications\n\nDescribe in [PIP-71: Pulsar SQL migrate SchemaHandle to presto decoder](https://docs.google.com/document/d/1KwG0GoHccju4-QNPfvT6tOwhp5Fvs6-iZlfLooPxTDM/edit?usp=sharing) \n\n----\n\n\n Does this pull request potentially affect one of the following parts:\n\n*If `yes` was chosen.  please highlight the changes*\n\n  - Dependencies (does it add or upgrade a dependency): (**yes** )\n  - The public API: (no)\n  - The schema: ( no)\n  - The default values of configurations: (no)\n  - The wire protocol: (no)\n  - The rest endpoints: (no)\n  - The admin cli options: (no)\n  - Anything that affects deployment: (no)\n\n\n Documentation\n\n  - Does this pull request introduce a new feature? (yes)\n  [[PIP][SQL]Migrate SchemaHandle to Presto-decoder](https://docs.google.com/document/d/1KwG0GoHccju4-QNPfvT6tOwhp5Fvs6-iZlfLooPxTDM/edit?usp=sharing)\n\n* codeStyle fix\n\n* Update pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java\n\nCo-authored-by: ran <gaoran_10@126.com>\n\n* Update pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java\n\nCo-authored-by: ran <gaoran_10@126.com>\n\n* Update pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java\n\nCo-authored-by: ran <gaoran_10@126.com>\n\n* add keyValue\\Primitive schema test && add schema cyclic definition detect\n\n* merge master\n\n* merge master\n\nCo-authored-by: wangguowei <wangguowei@zhihu.com>\nCo-authored-by: ran <gaoran_10@126.com>","date":"2021-02-01 22:55:41","modifiedFileCount":"14","status":"B","submitter":"hnail"},{"authorTime":"2021-03-19 18:08:29","codes":[{"authorDate":"2021-02-01 22:55:41","commitOrder":2,"curCode":"    public void testArray() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.arrayField = Arrays.asList(\"message_1\", \"message_2\", \"message_3\");\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"arrayField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        ArrayType columnType = new ArrayType(VARCHAR);\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"arrayField\", columnType, false, false, \"arrayField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkArrayValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n    }\n","date":"2021-02-01 22:55:41","endLine":139,"groupId":"10518","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9f/56e3006c9b039ee8d4fd2d45a6875528fe2217.src","preCode":"    public void testArray() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.arrayField = Arrays.asList(\"message_1\", \"message_2\", \"message_3\");\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"arrayField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        ArrayType columnType = new ArrayType(VARCHAR);\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"arrayField\", columnType, false, false, \"arrayField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkArrayValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2021-03-19 18:08:29","commitOrder":2,"curCode":"    public void testRow() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.stringField = \"message_2\";\n        DecoderTestMessage.TestRow testRow = new DecoderTestMessage.TestRow();\n        message.rowField = testRow;\n        testRow.intField = 22;\n        testRow.stringField = \"message_2_testRow\";\n        DecoderTestMessage.NestedRow nestedRow = new DecoderTestMessage.NestedRow();\n        nestedRow.longField = 222L;\n        nestedRow.stringField = \"message_2_nestedRow\";\n        testRow.nestedRow = nestedRow;\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"rowField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        RowType columnType = RowType.from(ImmutableList.<RowType.Field>builder()\n                .add(RowType.field(\"intField\", INTEGER))\n                .add(RowType.field(\"nestedRow\", RowType.from(ImmutableList.<RowType.Field>builder()\n                        .add(RowType.field(\"longField\", BIGINT))\n                        .add(RowType.field(\"stringField\", VARCHAR))\n                        .build())))\n                .add(RowType.field(\"stringField\", VARCHAR))\n                .build());\n\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"rowField\", columnType, false, false, \"rowField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkRowValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n\n    }\n","date":"2021-03-19 18:08:29","endLine":175,"groupId":"10518","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/2a/22b58a03fb22e03a76e5c17e983243921db060.src","preCode":"    public void testRow() {\n        DecoderTestMessage message = new DecoderTestMessage();\n        message.stringField = \"message_2\";\n        DecoderTestMessage.TestRow testRow = new DecoderTestMessage.TestRow();\n        message.rowField = testRow;\n        testRow.intField = 22;\n        testRow.stringField = \"message_2_testRow\";\n        DecoderTestMessage.NestedRow nestedRow = new DecoderTestMessage.NestedRow();\n        nestedRow.longField = 222L;\n        nestedRow.stringField = \"message_2_nestedRow\";\n        testRow.nestedRow = nestedRow;\n\n        byte[] bytes = schema.encode(message);\n        ByteBuf payload = io.netty.buffer.Unpooled\n                .copiedBuffer(bytes);\n\n        GenericJsonRecord genericRecord = (GenericJsonRecord) GenericJsonSchema.of(schemaInfo).decode(bytes);\n        Object fieldValue = genericRecord.getJsonNode().get(\"rowField\");\n        Map<DecoderColumnHandle, FieldValueProvider> decodedRow = pulsarRowDecoder.decodeRow(payload).get();\n\n        RowType columnType = RowType.from(ImmutableList.<RowType.Field>builder()\n                .add(RowType.field(\"stringField\", VARCHAR))\n                .add(RowType.field(\"intField\", INTEGER))\n                .add(RowType.field(\"nestedRow\", RowType.from(ImmutableList.<RowType.Field>builder()\n                        .add(RowType.field(\"stringField\", VARCHAR))\n                        .add(RowType.field(\"longField\", BIGINT))\n                        .build())))\n                .build());\n\n        PulsarColumnHandle columnHandle = new PulsarColumnHandle(getPulsarConnectorId().toString(), \"rowField\", columnType, false, false, \"rowField\", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);\n\n        checkRowValues(getBlock(decodedRow, columnHandle), columnHandle.getType(), fieldValue);\n\n    }\n","realPath":"pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"058236c8f0e1a7548b190601939a7e0c805133a2","commitMessage":"@@@Upgrade to Apache Avro 1.10.2 (#9898)\n\n","date":"2021-03-19 18:08:29","modifiedFileCount":"7","status":"M","submitter":"Enrico Olivelli"}]
