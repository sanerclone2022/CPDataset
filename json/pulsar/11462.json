[{"authorTime":"2019-02-14 01:58:28","codes":[{"authorDate":"2019-02-14 01:58:28","commitOrder":1,"curCode":"        void run() throws Exception {\n            JsonArray metrics = admin.brokerStats().getMetrics();\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","date":"2019-02-14 01:58:28","endLine":68,"groupId":"8607","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c8/e3e202e850adbd2a40c07b1f204a03ef4b04b4.src","preCode":"        void run() throws Exception {\n            JsonArray metrics = admin.brokerStats().getMetrics();\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2019-02-14 01:58:28","commitOrder":1,"curCode":"        void run() throws Exception {\n            JsonObject result = admin.brokerStats().getTopics();\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","date":"2019-02-14 01:58:28","endLine":116,"groupId":"8607","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c8/e3e202e850adbd2a40c07b1f204a03ef4b04b4.src","preCode":"        void run() throws Exception {\n            JsonObject result = admin.brokerStats().getTopics();\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"200d175a02638086c850c732b6bd0f285aff7f42","commitMessage":"@@@Add resource close in CmdBrokerStats and some minor fixes. (#3589)\n\n","date":"2019-02-14 01:58:28","modifiedFileCount":"1","status":"B","submitter":"Fangbin Sun"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":2,"curCode":"        void run() throws Exception {\n            JsonArray metrics = getAdmin().brokerStats().getMetrics();\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":69,"groupId":"8607","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/62/56dbda2988fb760a5167b5fd44199e50fb0e29.src","preCode":"        void run() throws Exception {\n            JsonArray metrics = admin.brokerStats().getMetrics();\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":2,"curCode":"        void run() throws Exception {\n            JsonObject result = getAdmin().brokerStats().getTopics();\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":117,"groupId":"8607","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/62/56dbda2988fb760a5167b5fd44199e50fb0e29.src","preCode":"        void run() throws Exception {\n            JsonObject result = admin.brokerStats().getTopics();\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2021-06-03 05:17:04","codes":[{"authorDate":"2021-06-03 05:17:04","commitOrder":3,"curCode":"        void run() throws Exception {\n            String s = getAdmin().brokerStats().getMetrics();\n            JsonArray metrics = new Gson().fromJson(s, JsonArray.class);\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","date":"2021-06-03 05:17:04","endLine":70,"groupId":"11462","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/03/d8bd577cdd60a40dc4f7aa8c86b82e731509c2.src","preCode":"        void run() throws Exception {\n            JsonArray metrics = getAdmin().brokerStats().getMetrics();\n\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                for (int i = 0; i < metrics.size(); i++) {\n                    JsonObject m = (JsonObject) metrics.get(i);\n                    if (indent) {\n                        jsonWriter.setIndent(DEFAULT_INDENTATION);\n                        new Gson().toJson(m, jsonWriter);\n                        out.write('\\n');\n                        out.write('\\n');\n                    } else {\n                        new Gson().toJson(m, jsonWriter);\n                    }\n                    out.flush();\n                }\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2021-06-03 05:17:04","commitOrder":3,"curCode":"        void run() throws Exception {\n            String s = getAdmin().brokerStats().getTopics();\n            JsonObject result = new Gson().fromJson(s, JsonObject.class);\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","date":"2021-06-03 05:17:04","endLine":120,"groupId":"11462","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/03/d8bd577cdd60a40dc4f7aa8c86b82e731509c2.src","preCode":"        void run() throws Exception {\n            JsonObject result = getAdmin().brokerStats().getTopics();\n            try (Writer out = new OutputStreamWriter(System.out, StandardCharsets.UTF_8);\n                 JsonWriter jsonWriter = new JsonWriter(out)) {\n                if (indent) {\n                    jsonWriter.setIndent(DEFAULT_INDENTATION);\n                }\n                new Gson().toJson(result, jsonWriter);\n                out.flush();\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdBrokerStats.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"301a76435ce918520f1b70b95b7ebed9bf1b08b5","commitMessage":"@@@Remove pulsar-client-admin-api dependency : pulsar-common (#10774)\n\n* remove gson from admin api Topics.java\n\n* Bookies.java\n\n* Brokers.java\n\n* BrokerStats.java\n\n* fix PulsarAdminException\n\n* Clusters.java\n\n* Tenants.java\n\n* minor fix on ResourceGroups\n\n* Namespaces.java & OffloadPolicies\n\n* temp remove JsonProperty in OffloadPolicies\n\n* Topics & NonPersistentTopics\n\n* ResourceQuotas with MixIn class\n\n* Functions\n\n* Sources.java\n\n* Sinks.java\n\n* Schemas.java\n\n* resolve checkstyle\n\n* minor fix\n\n* Transactions.java\n\n* fix stylecheck\n\n* set ObjectMapper module\n\n* fix ci\n\n* fix PulsarAdminException\n\n* remove gson\n\n* remove swagger\n\n* merge master\n\n* remove swagger\n\n* remove io.swagger\n\n* remove commons-lang3\n\n* use Objects.requireNonNull\n\n* remove commons-lang3\n\n* fix interface mapping\n\n* fix ci\n\n* extract OffloadPoliciesInterface\n\n* extract FunctionStats interfaces\n\n* fix unit test\n\n* fix shaded class\n\n* add object mapper mixin tests\n\n* fix ci\n\n* fix admin exception ci error\n\n* UpdateOptions\n\n* AutoFailoverPolicyData\n\n* BrokerNamespaceIsolationData\n\n* ClusterData\n\n* FailureDomain\n\n* FunctionInstanceStats\n\n* NamespaceIsolationData\n\n* OffloadPolicies\n\n* TenantInfo\n\n* FunctionStats\n\n* fix stylecheck\n\n* Fixed interface\n\n* Fixed ClusterData equals method\n\n* Fixed merge issue\n\n* Fixed another merge issue\n\n* Fixed test issue after merge\n\nCo-authored-by: Rui Fu <freelz@gmail.com>","date":"2021-06-03 05:17:04","modifiedFileCount":"266","status":"M","submitter":"Matteo Merli"}]
