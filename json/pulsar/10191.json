[{"authorTime":"2021-01-25 08:16:21","codes":[{"authorDate":"2021-01-25 08:16:21","commitOrder":3,"curCode":"    public static MessageMetadata peekMessageMetadata(ByteBuf metadataAndPayload, String subscription,\n            long consumerId) {\n        try {\n            \r\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n\n            return metadata;\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to parse message metadata\", subscription, consumerId, t);\n            return null;\n        }\n    }\n","date":"2021-01-25 08:16:21","endLine":1666,"groupId":"8802","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"peekMessageMetadata","params":"(ByteBufmetadataAndPayload@Stringsubscription@longconsumerId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/55/497fc6e9bd0c0ac4a4afedf6ed319310db9039.src","preCode":"    public static MessageMetadata peekMessageMetadata(ByteBuf metadataAndPayload, String subscription,\n            long consumerId) {\n        try {\n            \r\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n\n            return metadata;\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to parse message metadata\", subscription, consumerId, t);\n            return null;\n        }\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1652,"status":"MB"},{"authorDate":"2021-01-25 08:16:21","commitOrder":3,"curCode":"    public static byte[] peekStickyKey(ByteBuf metadataAndPayload, String topic, String subscription) {\n        try {\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n            if (metadata.hasOrderingKey()) {\n                return metadata.getOrderingKey();\n            } else if (metadata.hasPartitionKey()) {\n                return metadata.getPartitionKey().getBytes(StandardCharsets.UTF_8);\n            }\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to peek sticky key from the message metadata\", topic, subscription, t);\n        }\n        return Commands.NONE_KEY;\n    }\n","date":"2021-01-25 08:16:21","endLine":1684,"groupId":"11997","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"peekStickyKey","params":"(ByteBufmetadataAndPayload@Stringtopic@Stringsubscription)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/55/497fc6e9bd0c0ac4a4afedf6ed319310db9039.src","preCode":"    public static byte[] peekStickyKey(ByteBuf metadataAndPayload, String topic, String subscription) {\n        try {\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n            if (metadata.hasOrderingKey()) {\n                return metadata.getOrderingKey();\n            } else if (metadata.hasPartitionKey()) {\n                return metadata.getPartitionKey().getBytes(StandardCharsets.UTF_8);\n            }\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to peek sticky key from the message metadata\", topic, subscription, t);\n        }\n        return Commands.NONE_KEY;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1669,"status":"B"}],"commitId":"60161ede9da80e6e1840b5fad0c1d0d11f43ccaa","commitMessage":"@@@Fix peek message metadata broker while enable broker entry metadata. (#9255)\n\n\n Motivation\n\nFix peek message metadata broker while enable broker entry metadata.\n\nWhen enabled the broker entry metadata.  following error occurs:\n\n```\n22:09:57.802 [broker-topic-workers-OrderedScheduler-4-0:org.apache.pulsar.common.protocol.Commands@1658] ERROR org.apache.pulsar.common.protocol.Commands - [PersistentSubscription{topic=persistent://public/default/__consumer_offsets-partition-0.  name=reader-31a9742e6c}] [-1] Failed to parse message metadata\njava.lang.IllegalArgumentException: Invalid unknonwn tag type: 6\n\tat org.apache.pulsar.common.api.proto.LightProtoCodec.skipUnknownField(LightProtoCodec.java:270) ~[pulsar-common-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.common.api.proto.MessageMetadata.parseFrom(MessageMetadata.java:1370) ~[pulsar-common-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.common.protocol.Commands.parseMessageMetadata(Commands.java:425) ~[pulsar-common-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.common.protocol.Commands.parseMessageMetadata(Commands.java:415) ~[pulsar-common-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.common.protocol.Commands.peekMessageMetadata(Commands.java:1653) ~[pulsar-common-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.broker.service.AbstractBaseDispatcher.filterEntriesForConsumer(AbstractBaseDispatcher.java:82) ~[pulsar-broker-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.broker.service.persistent.PersistentDispatcherSingleActiveConsumer.internalReadEntriesComplete(PersistentDispatcherSingleActiveConsumer.java:232) ~[pulsar-broker-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.pulsar.broker.service.persistent.PersistentDispatcherSingleActiveConsumer.lambda$readEntriesComplete$1(PersistentDispatcherSingleActiveConsumer.java:178) ~[pulsar-broker-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.bookkeeper.mledger.util.SafeRun$1.safeRun(SafeRun.java:32) [managed-ledger-2.8.0-rc-202101192246.jar:2.8.0-rc-202101192246]\n\tat org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.12.1.jar:4.12.1]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_261]\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [?:1.8.0_261]\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) [?:1.8.0_261]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_261]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_261]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_261]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_261]\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.51.Final.jar:4.1.51.Final]\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]\n```\n\nThe root cause is peeking message metadata does not skip the broker entry metadata.","date":"2021-01-25 08:16:21","modifiedFileCount":"3","status":"M","submitter":"lipenghui"},{"authorTime":"2021-06-19 02:00:48","codes":[{"authorDate":"2021-06-19 02:00:48","commitOrder":4,"curCode":"    public static MessageMetadata peekMessageMetadata(ByteBuf metadataAndPayload, String subscription,\n            long consumerId) {\n        try {\n            \r\n            int readerIdx = metadataAndPayload.readerIndex();\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n\n            return metadata;\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to parse message metadata\", subscription, consumerId, t);\n            return null;\n        }\n    }\n","date":"2021-06-19 02:00:48","endLine":1681,"groupId":"10191","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"peekMessageMetadata","params":"(ByteBufmetadataAndPayload@Stringsubscription@longconsumerId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/cf/997baf9489628d9746553b25eb04044303aaaa.src","preCode":"    public static MessageMetadata peekMessageMetadata(ByteBuf metadataAndPayload, String subscription,\n            long consumerId) {\n        try {\n            \r\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n\n            return metadata;\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to parse message metadata\", subscription, consumerId, t);\n            return null;\n        }\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1668,"status":"M"},{"authorDate":"2021-06-19 02:00:48","commitOrder":4,"curCode":"    public static byte[] peekStickyKey(ByteBuf metadataAndPayload, String topic, String subscription) {\n        try {\n            int readerIdx = metadataAndPayload.readerIndex();\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n            if (metadata.hasOrderingKey()) {\n                return metadata.getOrderingKey();\n            } else if (metadata.hasPartitionKey()) {\n                return metadata.getPartitionKey().getBytes(StandardCharsets.UTF_8);\n            }\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to peek sticky key from the message metadata\", topic, subscription, t);\n        }\n        return Commands.NONE_KEY;\n    }\n","date":"2021-06-19 02:00:48","endLine":1698,"groupId":"10191","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"peekStickyKey","params":"(ByteBufmetadataAndPayload@Stringtopic@Stringsubscription)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/cf/997baf9489628d9746553b25eb04044303aaaa.src","preCode":"    public static byte[] peekStickyKey(ByteBuf metadataAndPayload, String topic, String subscription) {\n        try {\n            int readerIdx = metadataAndPayload.readerIndex();\n            skipBrokerEntryMetadataIfExist(metadataAndPayload);\n            MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n            metadataAndPayload.readerIndex(readerIdx);\n            if (metadata.hasOrderingKey()) {\n                return metadata.getOrderingKey();\n            } else if (metadata.hasPartitionKey()) {\n                return metadata.getPartitionKey().getBytes(StandardCharsets.UTF_8);\n            }\n        } catch (Throwable t) {\n            log.error(\"[{}] [{}] Failed to peek sticky key from the message metadata\", topic, subscription, t);\n        }\n        return Commands.NONE_KEY;\n    }\n","realPath":"pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1684,"status":"M"}],"commitId":"0774b5fddddc0c9fe9b7cc00ae40e43322690ef1","commitMessage":"@@@fix parseMessageMetadata error cause by not skip broker entry metadata (#10968)\n\nFixes #10967\n\n\n Motivation\nfix parseMessageMetadata error cause by not skip broker entry metadata \n\n\n Modifications\n\nskip broker entry metadata if exist before parsing message metadata","date":"2021-06-19 02:00:48","modifiedFileCount":"5","status":"M","submitter":"Aloys"}]
