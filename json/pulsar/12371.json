[{"authorTime":"2018-10-20 01:00:25","codes":[{"authorDate":"2018-09-06 01:37:14","commitOrder":2,"curCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.functions().getFunctionStatus(tenant, namespace, functionName)\n                            : admin.functions().getFunctionStatus(tenant, namespace, functionName,\n                                    Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-09-06 01:37:14","endLine":887,"groupId":"13200","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/99/ef4ddbae9e8e4ddb33887e1543a86707a61902.src","preCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.functions().getFunctionStatus(tenant, namespace, functionName)\n                            : admin.functions().getFunctionStatus(tenant, namespace, functionName,\n                                    Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":880,"status":"NB"},{"authorDate":"2018-10-20 01:00:25","commitOrder":2,"curCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-10-20 01:00:25","endLine":577,"groupId":"13200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/5a/1e9b38175f81a9a7ea39f9e11c1c40f18554d4.src","preCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"B"}],"commitId":"f3a027b45f8244d19ac24709edc7f762abb5ce6f","commitMessage":"@@@Added stop/restart functionality in sources/sinks (#2810)\n\n* Added Get and List source/sink functionality\n\n* Fixed compile\n\n* Removed test that doesnt make sense any more\n\n* Fixed build\n\n* Fixed logic\n\n* Return error response\n\n* Return response on error\n\n* Fix unittest\n\n* Fixed unittest\n\n* Fixed unittest\n\n* Fixed unittest\n\n* Added get/list sinks tests\n\n* Added get/list tests\n\n* Add more unittests\n\n* Added more unittests\n\n* Added TODO\n\n* Took feedback\n\n* Fix unittest\n\n* Fix unittest\n\n* Fix unittest\n\n* Fixed integration tests\n\n* Fixed integration test\n\n* Added restart/stop functionality to the sources/sinks\n\n* Added getstatus method to sources/sink\n\n* Fix integration tests\n","date":"2018-10-20 01:00:25","modifiedFileCount":"10","status":"M","submitter":"Sanjeev Kulkarni"},{"authorTime":"2018-11-03 15:24:43","codes":[{"authorDate":"2018-11-03 15:24:43","commitOrder":3,"curCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.functions().getFunctionStatus(tenant, namespace, functionName)\n                            : admin.functions().getFunctionStatus(tenant, namespace, functionName,\n                                    Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-11-03 15:24:43","endLine":626,"groupId":"13200","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/dc/a4df6756732ee5c8c8b0bd88f5ae495c3cf926.src","preCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.functions().getFunctionStatus(tenant, namespace, functionName)\n                            : admin.functions().getFunctionStatus(tenant, namespace, functionName,\n                                    Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"M"},{"authorDate":"2018-11-03 15:24:43","commitOrder":3,"curCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","date":"2018-11-03 15:24:43","endLine":493,"groupId":"13200","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/06/9f2f80ba2ffcf9db9b6eae79aa7cb3a0ca0be0.src","preCode":"        void runCmd() throws Exception {\n            String json = Utils.printJson(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"}],"commitId":"8f294c9ff67c36deee1d84d1dbc2dab8aa612bb4","commitMessage":"@@@Remove functions-util dependency from pulsar-client-admin (#2917)\n\n* Remove functions-util dependency from pulsar-client-admin\n\n* Simplified\n\n* reverted accidental change\n\n* fixed unittest\n\n* Updated license\n","date":"2018-11-03 15:24:43","modifiedFileCount":"18","status":"M","submitter":"Sanjeev Kulkarni"},{"authorTime":"2018-12-01 04:09:10","codes":[{"authorDate":"2018-12-01 04:09:10","commitOrder":4,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName));\n            } else {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2018-12-01 04:09:10","endLine":637,"groupId":"6753","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/8a528dba2ded90dd3099dc13dd2d356795a65c.src","preCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.functions().getFunctionStatus(tenant, namespace, functionName)\n                            : admin.functions().getFunctionStatus(tenant, namespace, functionName,\n                                    Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"M"},{"authorDate":"2018-12-01 04:09:10","commitOrder":4,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2018-12-01 04:09:10","endLine":507,"groupId":"11658","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/41/00c6b2090af67703baa10711f5c9356a653e8a.src","preCode":"        void runCmd() throws Exception {\n            String json = JsonFormat.printer().print(\n                    isBlank(instanceId) ? admin.source().getSourceStatus(tenant, namespace, sourceName)\n                            : admin.source().getSourceStatus(tenant, namespace, sourceName,\n                            Integer.parseInt(instanceId)));\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            System.out.println(gson.toJson(new JsonParser().parse(json)));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":501,"status":"M"}],"commitId":"015e2e5174a1e38167deb47411e598c73d424a19","commitMessage":"@@@Improve and correct status for function.  sources.  sinks (#3088)\n\n* Improve and correct status for function.  sources.  sinks\n\n* cleaning up unused protobuf\n\n* cleaning up\n\n* fixing unit tests\n\n* change getstatus -> status\n\n* fix integration tests\n\n* fix integration tests for sources and sinks\n","date":"2018-12-01 04:09:10","modifiedFileCount":"23","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2019-05-27 12:48:16","codes":[{"authorDate":"2018-12-01 04:09:10","commitOrder":5,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName));\n            } else {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2018-12-01 04:09:10","endLine":637,"groupId":"6753","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/04/8a528dba2ded90dd3099dc13dd2d356795a65c.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName));\n            } else {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"N"},{"authorDate":"2019-05-27 12:48:16","commitOrder":5,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2019-05-27 12:48:16","endLine":530,"groupId":"3022","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/53/5bb332f39d30330d48ba24f1e85c6af674ae32.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.source().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"aa40ad6ddeb4208d439df2c9080fc73b1e6ffa3b","commitMessage":"@@@ renaming sinks and sources api to be consistent with the rest of Pulsar (#4363)\n\n* Rename sources and sinks CLI to be consistent with rest of Pulsar\n\n* renaming sinks and sources api to be consistent with the rest of Pulsar\n\n* use new interfaces in cmd\n","date":"2019-05-27 12:48:16","modifiedFileCount":"17","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":6,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(getAdmin().functions().getFunctionStatus(tenant, namespace, functionName));\n            } else {\n                print(getAdmin().functions().getFunctionStatus(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","date":"2021-01-29 03:06:36","endLine":739,"groupId":"12371","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ab/1f0e41643f2f418db3f7a8837fa5bf09eec038.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName));\n            } else {\n                print(admin.functions().getFunctionStatus(tenant, namespace, functionName, Integer.parseInt(instanceId)));\n            }\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":733,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":6,"curCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(getAdmin().sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(getAdmin().sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","date":"2021-01-29 03:06:36","endLine":558,"groupId":"12371","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"runCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7f/580f99e7f284cf154806e83996124ae0efd203.src","preCode":"        void runCmd() throws Exception {\n            if (isBlank(instanceId)) {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName));\n            } else {\n                print(admin.sources().getSourceStatus(tenant, namespace, sourceName, Integer.parseInt(instanceId)));\n            };\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSources.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"}]
