[{"authorTime":"2017-07-20 14:21:12","codes":[{"authorDate":"2019-03-08 19:06:56","commitOrder":2,"curCode":"    public void testEqualsObjects() {\n\n        LongPairSet set = new ConcurrentSortedLongPairSet(16);\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n\n        set.add(t1, t1);\n        assertTrue(set.contains(t1, t1));\n        assertTrue(set.contains(t1_b, t1_b));\n        assertFalse(set.contains(t2, t2));\n\n        assertTrue(set.remove(t1_b, t1_b));\n        assertFalse(set.contains(t1, t1));\n        assertFalse(set.contains(t1_b, t1_b));\n    }\n","date":"2019-03-08 19:06:56","endLine":229,"groupId":"5244","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualsObjects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/65/b26c4f384fb86be1d34ba73693b400e978cace.src","preCode":"    public void testEqualsObjects() {\n\n        LongPairSet set = new ConcurrentSortedLongPairSet(16);\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n\n        set.add(t1, t1);\n        assertTrue(set.contains(t1, t1));\n        assertTrue(set.contains(t1_b, t1_b));\n        assertFalse(set.contains(t2, t2));\n\n        assertTrue(set.remove(t1_b, t1_b));\n        assertFalse(set.contains(t1, t1));\n        assertFalse(set.contains(t1_b, t1_b));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentSortedLongPairSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"},{"authorDate":"2017-07-20 14:21:12","commitOrder":2,"curCode":"    public void testEqualsObjects() {\n\n        GrowablePriorityLongPairQueue queue = new GrowablePriorityLongPairQueue();\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n        queue.add(t1, t1);\n        assertTrue(queue.remove(t1_b, t1_b));\n    }\n","date":"2017-07-20 14:21:12","endLine":341,"groupId":"5244","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEqualsObjects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/a8/b18539e7310a8131ed60ab35ae833f2ca14362.src","preCode":"    public void testEqualsObjects() {\n\n        GrowablePriorityLongPairQueue queue = new GrowablePriorityLongPairQueue();\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n        queue.add(t1, t1);\n        assertTrue(queue.remove(t1_b, t1_b));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/GrowablePriorityLongPairQueueTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"NB"}],"commitId":"4ce8b32f8425c7af559acf766038048655199444","commitMessage":"@@@[pulsar-broker] Optimize redelivery message reading (#3732)\n\n\n Motivation\nIt address #3731.  \n\n\n Modification\n- Introduce `ConcurrentSortedLongPairSet` that helps broker to avoid random read across multiple managed-ledgers. It still uses `ConcurrentLongPairSet` to avoid object allocation for message-ids.\n- introduce `<T> Set<T> items(int numberOfItems.  BiFunction<Long.  Long.  T> longPairConverter)` method  in `LongPairSet` to avoid creating temporary [LongPair](https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentDispatcherMultipleConsumers.java#L291) objects.\n- this change will not impact to normal usecase where topic doesn't have backlog and doesn't have many active managed-ledgers.\n\n\n Note\nI have done performance testing on `GrowablePriorityLongPairQueue` which I had introduced sometime back but its insert/remove is super slow and CPU intensive so.  we can't use it in this scenario.\n","date":"2019-03-08 19:06:56","modifiedFileCount":"3","status":"M","submitter":"Rajan Dhabalia"},{"authorTime":"2019-07-26 00:14:02","codes":[{"authorDate":"2019-07-26 00:14:02","commitOrder":3,"curCode":"    public void testEqualsObjects() {\n\n        LongPairSet set = new ConcurrentSortedLongPairSet(16);\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertNotEquals(t2, t1);\n        assertNotEquals(t2, t1_b);\n\n        set.add(t1, t1);\n        assertTrue(set.contains(t1, t1));\n        assertTrue(set.contains(t1_b, t1_b));\n        assertFalse(set.contains(t2, t2));\n\n        assertTrue(set.remove(t1_b, t1_b));\n        assertFalse(set.contains(t1, t1));\n        assertFalse(set.contains(t1_b, t1_b));\n    }\n","date":"2019-07-26 00:14:02","endLine":229,"groupId":"1064","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualsObjects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/8f/155c3fdc8ae49fd3224895b37c6426ecd2bc85.src","preCode":"    public void testEqualsObjects() {\n\n        LongPairSet set = new ConcurrentSortedLongPairSet(16);\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n\n        set.add(t1, t1);\n        assertTrue(set.contains(t1, t1));\n        assertTrue(set.contains(t1_b, t1_b));\n        assertFalse(set.contains(t2, t2));\n\n        assertTrue(set.remove(t1_b, t1_b));\n        assertFalse(set.contains(t1, t1));\n        assertFalse(set.contains(t1_b, t1_b));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/ConcurrentSortedLongPairSetTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2019-07-26 00:14:02","commitOrder":3,"curCode":"    public void testEqualsObjects() {\n\n        GrowablePriorityLongPairQueue queue = new GrowablePriorityLongPairQueue();\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertNotEquals(t2, t1);\n        assertNotEquals(t2, t1_b);\n        queue.add(t1, t1);\n        assertTrue(queue.remove(t1_b, t1_b));\n    }\n","date":"2019-07-26 00:14:02","endLine":342,"groupId":"1064","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEqualsObjects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/3a/dfd418f56f59e9dc1e1667d431ed8b8d0b3735.src","preCode":"    public void testEqualsObjects() {\n\n        GrowablePriorityLongPairQueue queue = new GrowablePriorityLongPairQueue();\n\n        long t1 = 1;\n        long t2 = 2;\n        long t1_b = 1;\n        assertEquals(t1, t1_b);\n        assertFalse(t1 == t2);\n        assertFalse(t1_b == t2);\n        queue.add(t1, t1);\n        assertTrue(queue.remove(t1_b, t1_b));\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/GrowablePriorityLongPairQueueTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"}],"commitId":"fb6895db195f08aa82f75dad93b1b9c0b1b15a88","commitMessage":"@@@Test cleanup and simplification (#4799)\n\n* Simplified assert statements in the tests. Switch to usage of static imports in tests. (Part 1)\n\n* Simplify assert statements in the tests and use the appropriate assert statements. Switch to usage of static imports in tests. Remove unused imports (Part 2)\n","date":"2019-07-26 00:14:02","modifiedFileCount":"134","status":"M","submitter":"vzhikserg"}]
