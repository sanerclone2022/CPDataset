[{"authorTime":"2017-06-24 02:22:49","codes":[{"authorDate":"2019-03-20 01:37:29","commitOrder":2,"curCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","date":"2019-03-20 01:37:29","endLine":315,"groupId":"7956","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4f/86556e9e9a416de0bf644d3831488d1724f012.src","preCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/client/cli/CmdConsume.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"},{"authorDate":"2017-06-24 02:22:49","commitOrder":2,"curCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        JsonObject ack = new JsonObject();\n        String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n        consumerBuffer.add(messageId);\n        ack.add(\"messageId\", new JsonPrimitive(messageId));\n        \r\n        this.getRemote().sendString(ack.toString());\n    }\n","date":"2017-06-24 04:41:32","endLine":82,"groupId":"11193","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/09/b29c47db067f134cb18cfbd68081d8b7698ca4.src","preCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        JsonObject ack = new JsonObject();\n        String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n        consumerBuffer.add(messageId);\n        ack.add(\"messageId\", new JsonPrimitive(messageId));\n        \r\n        this.getRemote().sendString(ack.toString());\n    }\n","realPath":"pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerSocket.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"9bc0d268608bce7957dbc9a3207c90ccae697c39","commitMessage":"@@@[pulsar-client-tools] Add support for websocket produce/consume command (#3835)\n\n* [pulsar-client-tools] Add support for websocket produce/consume command\n\n* remove comments\n","date":"2019-03-20 01:37:29","modifiedFileCount":"3","status":"M","submitter":"Rajan Dhabalia"},{"authorTime":"2021-02-22 16:42:41","codes":[{"authorDate":"2019-03-20 01:37:29","commitOrder":3,"curCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","date":"2019-03-20 01:37:29","endLine":315,"groupId":"7956","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4f/86556e9e9a416de0bf644d3831488d1724f012.src","preCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/client/cli/CmdConsume.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"N"},{"authorDate":"2021-02-22 16:42:41","commitOrder":3,"curCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        if (message.get(X_PULSAR_MESSAGE_ID) != null) {\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            consumerBuffer.add(messageId);\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n        } else {\n            consumerBuffer.add(message.toString());\n        }\n    }\n","date":"2021-02-22 16:42:41","endLine":87,"groupId":"11193","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e1/ddaaeacb9dab98a87b515651c90c2186420b3c.src","preCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        JsonObject ack = new JsonObject();\n        String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n        consumerBuffer.add(messageId);\n        ack.add(\"messageId\", new JsonPrimitive(messageId));\n        \r\n        this.getRemote().sendString(ack.toString());\n    }\n","realPath":"pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerSocket.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"65fed8b7fc258a2980b522f32db0f37f017bf84d","commitMessage":"@@@Expose ReachedEndOfTopic in Reader/Consumer API (#9381)\n\nFixes #2687\n\n\n Motivation\nExpose ReachedEndOfTopic in Reader/Consumer API\n\n\n Modifications\n\nAdd a request of type `isEndOfTopic` to check if consumer/reader has reached end of topic and send response based on result.\n","date":"2021-02-22 16:42:41","modifiedFileCount":"4","status":"M","submitter":"Marvin Cai"},{"authorTime":"2021-05-21 20:39:40","codes":[{"authorDate":"2019-03-20 01:37:29","commitOrder":4,"curCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","date":"2019-03-20 01:37:29","endLine":315,"groupId":"7956","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4f/86556e9e9a416de0bf644d3831488d1724f012.src","preCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/client/cli/CmdConsume.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"N"},{"authorDate":"2021-05-21 20:39:40","commitOrder":4,"curCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n        consumerBuffer.add(messageId);\n        if (customMessageHandler != null) {\n            this.getRemote().sendString(customMessageHandler.handle(messageId, message));\n        } else {\n            JsonObject ack = new JsonObject();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n        }\n    }\n","date":"2021-05-21 20:39:40","endLine":92,"groupId":"11193","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f6/917ccc8e971e9bc8a40a778fbe0bad1dcc03a7.src","preCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        if (message.get(X_PULSAR_MESSAGE_ID) != null) {\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            consumerBuffer.add(messageId);\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n        } else {\n            consumerBuffer.add(message.toString());\n        }\n    }\n","realPath":"pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerSocket.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"2be05fb18a34aae78b2955ad85f173eed50fd5c4","commitMessage":"@@@Nack support in WS (#8249)\n\n","date":"2021-05-21 20:39:40","modifiedFileCount":"3","status":"M","submitter":"Anton K"},{"authorTime":"2021-06-15 05:49:52","codes":[{"authorDate":"2019-03-20 01:37:29","commitOrder":5,"curCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","date":"2019-03-20 01:37:29","endLine":315,"groupId":"10355","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/4f/86556e9e9a416de0bf644d3831488d1724f012.src","preCode":"        public synchronized void onMessage(String msg) throws Exception {\n            JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n            JsonObject ack = new JsonObject();\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n            this.incomingMessages.put(msg);\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/client/cli/CmdConsume.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"N"},{"authorDate":"2021-06-15 05:49:52","commitOrder":5,"curCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        if (message.get(X_PULSAR_MESSAGE_ID) != null) {\n            String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n            consumerBuffer.add(messageId);\n            if (customMessageHandler != null) {\n                this.getRemote().sendString(customMessageHandler.handle(messageId, message));\n            } else {\n                JsonObject ack = new JsonObject();\n                ack.add(\"messageId\", new JsonPrimitive(messageId));\n                \r\n                this.getRemote().sendString(ack.toString());\n            }\n        } else {\n            consumerBuffer.add(message.toString());\n        }\n    }\n","date":"2021-06-15 05:49:52","endLine":96,"groupId":"10355","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"onMessage","params":"(Stringmsg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/74/9bfdcd2ba25fa9d99f886da545f1b7497a5743.src","preCode":"    public synchronized void onMessage(String msg) throws JsonParseException, IOException {\n        receivedMessages.incrementAndGet();\n        JsonObject message = new Gson().fromJson(msg, JsonObject.class);\n        String messageId = message.get(X_PULSAR_MESSAGE_ID).getAsString();\n        consumerBuffer.add(messageId);\n        if (customMessageHandler != null) {\n            this.getRemote().sendString(customMessageHandler.handle(messageId, message));\n        } else {\n            JsonObject ack = new JsonObject();\n            ack.add(\"messageId\", new JsonPrimitive(messageId));\n            \r\n            this.getRemote().sendString(ack.toString());\n        }\n    }\n","realPath":"pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerSocket.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"ef7863239956e5b188da3762cbd1cc2216997374","commitMessage":"@@@Fix the unit tests for the websocket and run tests under websocket group (#10921)\n\n","date":"2021-06-15 05:49:52","modifiedFileCount":"1","status":"M","submitter":"lipenghui"}]
