[{"authorTime":"2020-11-22 13:07:43","codes":[{"authorDate":"2020-12-03 11:03:23","commitOrder":2,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","date":"2020-12-03 11:03:23","endLine":86,"groupId":"14455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/f1/d0f08b3a36ad272d7ba62e277777f564b61cb2.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","realPath":"pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2020-11-22 13:07:43","commitOrder":2,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","date":"2020-11-22 13:07:43","endLine":86,"groupId":"14455","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c6/df6d5255a49991bdb5c7c073f559a705c8a163.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","realPath":"pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"NB"}],"commitId":"4a2b006f854b36f042a845150acebcc3d7a50358","commitMessage":"@@@Package management bookkeeper storage implementation (#8744)\n\nMaster Issue: #8676\n\n\n Motivation\n\nSupport bookkeeper storage for packages management service.\n\n\n Modifications\n\n- Add bookkeeper storage provider\n- Add bookkeeper storage unit tests\n","date":"2020-12-03 11:03:23","modifiedFileCount":"5","status":"M","submitter":"Yong Zhang"},{"authorTime":"2021-05-23 05:35:11","codes":[{"authorDate":"2021-05-23 05:35:11","commitOrder":3,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreFactory.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","date":"2021-05-23 05:35:11","endLine":86,"groupId":"14455","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/90/a218449bb91aded2741d25cc6ced2106a95213.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","realPath":"pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2021-05-23 05:35:11","commitOrder":3,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreFactory.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","date":"2021-05-23 05:35:11","endLine":91,"groupId":"14455","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9a/948571403f85102e95fa58357499a34b2988fa.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(bkc, zkc, conf);\n\n        zkc.create(\"/managed-ledgers\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n    }\n","realPath":"pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"d94c3f03eff84b9259a1f19643531158157e04ba","commitMessage":"@@@PIP-45: Initialize ManagedLedgerFactory with MetadataStore (#10647)\n\n* PIP-45: Initialize ManagedLedgerFactory with MetadataStore\n\n* Fixed using the correct metadatastore in PulsarClusterMetadataTeardown\n\n* Fixed test\n\n* Removed multiple test invocations\n\n* Fixed package manager tests implementation","date":"2021-05-23 05:35:11","modifiedFileCount":"45","status":"M","submitter":"Matteo Merli"},{"authorTime":"2021-09-21 11:33:20","codes":[{"authorDate":"2021-09-21 11:33:20","commitOrder":4,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreExtended.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","date":"2021-09-21 11:33:20","endLine":85,"groupId":"10473","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/91/869997448c761df79007800d3e69ab6d953ff9.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreFactory.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","realPath":"pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-09-21 11:33:20","commitOrder":4,"curCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreExtended.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","date":"2021-09-21 11:33:20","endLine":85,"groupId":"10473","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"(Methodmethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/8e/db2ff4b8aeceefc5dc9df00d62e1de33564688.src","preCode":"    public void setUp(Method method) throws Exception {\n        LOG.info(\">>>>>> starting {}\", method);\n        metadataStore = new FaultInjectionMetadataStore(MetadataStoreFactory.create(\"memory://local\",\n                MetadataStoreConfig.builder().build()));\n        try {\n            \r\n            startBookKeeper();\n        } catch (Exception e) {\n            LOG.error(\"Error setting up\", e);\n            throw e;\n        }\n\n        ManagedLedgerFactoryConfig conf = new ManagedLedgerFactoryConfig();\n        factory = new ManagedLedgerFactoryImpl(metadataStore, bkc, conf);\n    }\n","realPath":"pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/test/MockedBookKeeperTestCase.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"4bc3c405a565b1c756b9b70ff02a63ea06c32c0d","commitMessage":"@@@ManagedLedger should not attempt deferrable metadata operation while disconnected (#12101)\n\n* ManagedLedger should not attempt deferrable metadata operation while disconnected\n\n* Fixed compilation\n\n* Remove unused imports\n\n* Fixed ManagedLedgerWriter\n\n* Fixed compilation in presto connector\n\n* Also defer ledger trimmings","date":"2021-09-21 11:33:20","modifiedFileCount":"18","status":"M","submitter":"Matteo Merli"}]
