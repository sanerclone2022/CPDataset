[{"authorTime":"2021-08-09 08:36:19","codes":[{"authorDate":"2021-08-03 08:52:20","commitOrder":7,"curCode":"    public void testPersistentTopicStats() {\n        TopicStatsImpl topicStats = new TopicStatsImpl();\n        topicStats.msgRateIn = 1;\n        topicStats.msgThroughputIn = 1;\n        topicStats.msgRateOut = 1;\n        topicStats.msgThroughputOut = 1;\n        topicStats.averageMsgSize = 1;\n        topicStats.storageSize = 1;\n        topicStats.offloadedStorageSize = 1;\n        topicStats.publishers.add(new PublisherStatsImpl());\n        topicStats.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n        TopicStatsImpl target = new TopicStatsImpl();\n        target.add(topicStats);\n        assertEquals(topicStats.msgRateIn, 1.0);\n        assertEquals(topicStats.msgThroughputIn, 1.0);\n        assertEquals(topicStats.msgRateOut, 1.0);\n        assertEquals(topicStats.msgThroughputOut, 1.0);\n        assertEquals(topicStats.averageMsgSize, 1.0);\n        assertEquals(topicStats.offloadedStorageSize, 1);\n        assertEquals(topicStats.lastOffloadLedgerId, 0);\n        assertEquals(topicStats.lastOffloadSuccessTimeStamp, 0);\n        assertEquals(topicStats.lastOffloadFailureTimeStamp, 0);\n        assertEquals(topicStats.storageSize, 1);\n        assertEquals(topicStats.publishers.size(), 1);\n        assertEquals(topicStats.subscriptions.size(), 1);\n        assertEquals(topicStats.replication.size(), 1);\n        topicStats.reset();\n        assertEquals(topicStats.msgRateIn, 0.0);\n        assertEquals(topicStats.msgThroughputIn, 0.0);\n        assertEquals(topicStats.msgRateOut, 0.0);\n        assertEquals(topicStats.msgThroughputOut, 0.0);\n        assertEquals(topicStats.averageMsgSize, 0.0);\n        assertEquals(topicStats.storageSize, 0);\n        assertEquals(topicStats.publishers.size(), 0);\n        assertEquals(topicStats.subscriptions.size(), 0);\n        assertEquals(topicStats.replication.size(), 0);\n        assertEquals(topicStats.offloadedStorageSize, 0);\n    }\n","date":"2021-08-03 08:52:20","endLine":74,"groupId":"3575","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistentTopicStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/fa/67fb080d3cf39d40d6ea079faa55dad713a327.src","preCode":"    public void testPersistentTopicStats() {\n        TopicStatsImpl topicStats = new TopicStatsImpl();\n        topicStats.msgRateIn = 1;\n        topicStats.msgThroughputIn = 1;\n        topicStats.msgRateOut = 1;\n        topicStats.msgThroughputOut = 1;\n        topicStats.averageMsgSize = 1;\n        topicStats.storageSize = 1;\n        topicStats.offloadedStorageSize = 1;\n        topicStats.publishers.add(new PublisherStatsImpl());\n        topicStats.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n        TopicStatsImpl target = new TopicStatsImpl();\n        target.add(topicStats);\n        assertEquals(topicStats.msgRateIn, 1.0);\n        assertEquals(topicStats.msgThroughputIn, 1.0);\n        assertEquals(topicStats.msgRateOut, 1.0);\n        assertEquals(topicStats.msgThroughputOut, 1.0);\n        assertEquals(topicStats.averageMsgSize, 1.0);\n        assertEquals(topicStats.offloadedStorageSize, 1);\n        assertEquals(topicStats.lastOffloadLedgerId, 0);\n        assertEquals(topicStats.lastOffloadSuccessTimeStamp, 0);\n        assertEquals(topicStats.lastOffloadFailureTimeStamp, 0);\n        assertEquals(topicStats.storageSize, 1);\n        assertEquals(topicStats.publishers.size(), 1);\n        assertEquals(topicStats.subscriptions.size(), 1);\n        assertEquals(topicStats.replication.size(), 1);\n        topicStats.reset();\n        assertEquals(topicStats.msgRateIn, 0.0);\n        assertEquals(topicStats.msgThroughputIn, 0.0);\n        assertEquals(topicStats.msgRateOut, 0.0);\n        assertEquals(topicStats.msgThroughputOut, 0.0);\n        assertEquals(topicStats.averageMsgSize, 0.0);\n        assertEquals(topicStats.storageSize, 0);\n        assertEquals(topicStats.publishers.size(), 0);\n        assertEquals(topicStats.subscriptions.size(), 0);\n        assertEquals(topicStats.replication.size(), 0);\n        assertEquals(topicStats.offloadedStorageSize, 0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PersistentTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"NB"},{"authorDate":"2021-08-09 08:36:19","commitOrder":7,"curCode":"    public void testPartitionedTopicStats() {\n        NonPersistentPartitionedTopicStatsImpl nonPersistentPartitionedTopicStats = new NonPersistentPartitionedTopicStatsImpl();\n        nonPersistentPartitionedTopicStats.msgRateIn = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputIn = 1;\n        nonPersistentPartitionedTopicStats.msgRateOut = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputOut = 1;\n        nonPersistentPartitionedTopicStats.averageMsgSize = 1;\n        nonPersistentPartitionedTopicStats.storageSize = 1;\n        nonPersistentPartitionedTopicStats.getPublishers().add(new NonPersistentPublisherStatsImpl());\n        nonPersistentPartitionedTopicStats.getSubscriptions().put(\"test_ns\", new NonPersistentSubscriptionStatsImpl());\n        nonPersistentPartitionedTopicStats.getReplication().put(\"test_ns\", new NonPersistentReplicatorStatsImpl());\n        nonPersistentPartitionedTopicStats.metadata.partitions = 1;\n        nonPersistentPartitionedTopicStats.partitions.put(\"test\", nonPersistentPartitionedTopicStats);\n        nonPersistentPartitionedTopicStats.reset();\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.averageMsgSize, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.storageSize, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getPublishers().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getSubscriptions().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getReplication().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.metadata.partitions, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.partitions.size(), 0);\n    }\n","date":"2021-08-09 08:36:19","endLine":60,"groupId":"4980","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testPartitionedTopicStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/51/35acf4e0996796b006545b04e2049ed6a4555f.src","preCode":"    public void testPartitionedTopicStats() {\n        NonPersistentPartitionedTopicStatsImpl nonPersistentPartitionedTopicStats = new NonPersistentPartitionedTopicStatsImpl();\n        nonPersistentPartitionedTopicStats.msgRateIn = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputIn = 1;\n        nonPersistentPartitionedTopicStats.msgRateOut = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputOut = 1;\n        nonPersistentPartitionedTopicStats.averageMsgSize = 1;\n        nonPersistentPartitionedTopicStats.storageSize = 1;\n        nonPersistentPartitionedTopicStats.getPublishers().add(new NonPersistentPublisherStatsImpl());\n        nonPersistentPartitionedTopicStats.getSubscriptions().put(\"test_ns\", new NonPersistentSubscriptionStatsImpl());\n        nonPersistentPartitionedTopicStats.getReplication().put(\"test_ns\", new NonPersistentReplicatorStatsImpl());\n        nonPersistentPartitionedTopicStats.metadata.partitions = 1;\n        nonPersistentPartitionedTopicStats.partitions.put(\"test\", nonPersistentPartitionedTopicStats);\n        nonPersistentPartitionedTopicStats.reset();\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.averageMsgSize, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.storageSize, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getPublishers().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getSubscriptions().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getReplication().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.metadata.partitions, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.partitions.size(), 0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/NonPersistentPartitionedTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"0aca5f9153afc7804a3ae9b169346a06ee9811d9","commitMessage":"@@@Fix MsgDropRate missing from NonPersistentTopics stats output. (#11119)\n\nFixes #https://github.com/apache/pulsar/issues/10495\n\n\n Motivation\nMsgDropRate info is missing after NonPersistentTopics admin api merged with Topics admin api. This PR is trying to fix this.\n\n\n Modifications\nSeems due to API merging.  data is not properly deserialized in admin client.\nAnd also due to the added TopicsStats interface.  the field hiding causing weird behavior with Jackson so fields in NonPersistentTopicStatsImpl intended to hide superclass' fields are not shown in output.\n\nFixing by not using same field name to hide superclass fields and use @JsonIgnore to hide them from output. And add new fields to store subscription/publisher/replicator info for NonPersistentTopic.\nThis does change the output name of those info.  but it only changed in cli output.  for admin client the old getSubscriptions/getSubscriptions/getReplication will still work. ","date":"2021-08-09 08:36:19","modifiedFileCount":"9","status":"M","submitter":"Marvin Cai"},{"authorTime":"2021-08-09 08:36:19","codes":[{"authorDate":"2021-08-21 22:58:20","commitOrder":8,"curCode":"    public void testPersistentTopicStats() {\n        TopicStatsImpl topicStats = new TopicStatsImpl();\n        topicStats.msgRateIn = 1;\n        topicStats.msgThroughputIn = 1;\n        topicStats.msgRateOut = 1;\n        topicStats.msgThroughputOut = 1;\n        topicStats.averageMsgSize = 1;\n        topicStats.storageSize = 1;\n        topicStats.offloadedStorageSize = 1;\n        topicStats.publishers.add(new PublisherStatsImpl());\n        topicStats.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n        TopicStatsImpl target = new TopicStatsImpl();\n        target.add(topicStats);\n        assertEquals(topicStats.msgRateIn, 1.0);\n        assertEquals(topicStats.msgThroughputIn, 1.0);\n        assertEquals(topicStats.msgRateOut, 1.0);\n        assertEquals(topicStats.msgThroughputOut, 1.0);\n        assertEquals(topicStats.averageMsgSize, 1.0);\n        assertEquals(topicStats.offloadedStorageSize, 1);\n        assertEquals(topicStats.lastOffloadLedgerId, 0);\n        assertEquals(topicStats.lastOffloadSuccessTimeStamp, 0);\n        assertEquals(topicStats.lastOffloadFailureTimeStamp, 0);\n        assertEquals(topicStats.storageSize, 1);\n        assertEquals(topicStats.publishers.size(), 1);\n        assertEquals(topicStats.subscriptions.size(), 1);\n        assertEquals(topicStats.replication.size(), 1);\n        assertEquals(topicStats.compaction.lastCompactionRemovedEventCount, 0);\n        assertEquals(topicStats.compaction.lastCompactionSucceedTimestamp, 0);\n        assertEquals(topicStats.compaction.lastCompactionFailedTimestamp, 0);\n        assertEquals(topicStats.compaction.lastCompactionDurationTimeInMills, 0);\n        topicStats.reset();\n        assertEquals(topicStats.msgRateIn, 0.0);\n        assertEquals(topicStats.msgThroughputIn, 0.0);\n        assertEquals(topicStats.msgRateOut, 0.0);\n        assertEquals(topicStats.msgThroughputOut, 0.0);\n        assertEquals(topicStats.averageMsgSize, 0.0);\n        assertEquals(topicStats.storageSize, 0);\n        assertEquals(topicStats.publishers.size(), 0);\n        assertEquals(topicStats.subscriptions.size(), 0);\n        assertEquals(topicStats.replication.size(), 0);\n        assertEquals(topicStats.offloadedStorageSize, 0);\n    }\n","date":"2021-08-21 22:58:20","endLine":78,"groupId":"1012","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testPersistentTopicStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/9c/4c3b24e183362f4023165eb040fb0b6dfcc9b6.src","preCode":"    public void testPersistentTopicStats() {\n        TopicStatsImpl topicStats = new TopicStatsImpl();\n        topicStats.msgRateIn = 1;\n        topicStats.msgThroughputIn = 1;\n        topicStats.msgRateOut = 1;\n        topicStats.msgThroughputOut = 1;\n        topicStats.averageMsgSize = 1;\n        topicStats.storageSize = 1;\n        topicStats.offloadedStorageSize = 1;\n        topicStats.publishers.add(new PublisherStatsImpl());\n        topicStats.subscriptions.put(\"test_ns\", new SubscriptionStatsImpl());\n        topicStats.replication.put(\"test_ns\", new ReplicatorStatsImpl());\n        TopicStatsImpl target = new TopicStatsImpl();\n        target.add(topicStats);\n        assertEquals(topicStats.msgRateIn, 1.0);\n        assertEquals(topicStats.msgThroughputIn, 1.0);\n        assertEquals(topicStats.msgRateOut, 1.0);\n        assertEquals(topicStats.msgThroughputOut, 1.0);\n        assertEquals(topicStats.averageMsgSize, 1.0);\n        assertEquals(topicStats.offloadedStorageSize, 1);\n        assertEquals(topicStats.lastOffloadLedgerId, 0);\n        assertEquals(topicStats.lastOffloadSuccessTimeStamp, 0);\n        assertEquals(topicStats.lastOffloadFailureTimeStamp, 0);\n        assertEquals(topicStats.storageSize, 1);\n        assertEquals(topicStats.publishers.size(), 1);\n        assertEquals(topicStats.subscriptions.size(), 1);\n        assertEquals(topicStats.replication.size(), 1);\n        topicStats.reset();\n        assertEquals(topicStats.msgRateIn, 0.0);\n        assertEquals(topicStats.msgThroughputIn, 0.0);\n        assertEquals(topicStats.msgRateOut, 0.0);\n        assertEquals(topicStats.msgThroughputOut, 0.0);\n        assertEquals(topicStats.averageMsgSize, 0.0);\n        assertEquals(topicStats.storageSize, 0);\n        assertEquals(topicStats.publishers.size(), 0);\n        assertEquals(topicStats.subscriptions.size(), 0);\n        assertEquals(topicStats.replication.size(), 0);\n        assertEquals(topicStats.offloadedStorageSize, 0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/PersistentTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-08-09 08:36:19","commitOrder":8,"curCode":"    public void testPartitionedTopicStats() {\n        NonPersistentPartitionedTopicStatsImpl nonPersistentPartitionedTopicStats = new NonPersistentPartitionedTopicStatsImpl();\n        nonPersistentPartitionedTopicStats.msgRateIn = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputIn = 1;\n        nonPersistentPartitionedTopicStats.msgRateOut = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputOut = 1;\n        nonPersistentPartitionedTopicStats.averageMsgSize = 1;\n        nonPersistentPartitionedTopicStats.storageSize = 1;\n        nonPersistentPartitionedTopicStats.getPublishers().add(new NonPersistentPublisherStatsImpl());\n        nonPersistentPartitionedTopicStats.getSubscriptions().put(\"test_ns\", new NonPersistentSubscriptionStatsImpl());\n        nonPersistentPartitionedTopicStats.getReplication().put(\"test_ns\", new NonPersistentReplicatorStatsImpl());\n        nonPersistentPartitionedTopicStats.metadata.partitions = 1;\n        nonPersistentPartitionedTopicStats.partitions.put(\"test\", nonPersistentPartitionedTopicStats);\n        nonPersistentPartitionedTopicStats.reset();\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.averageMsgSize, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.storageSize, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getPublishers().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getSubscriptions().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getReplication().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.metadata.partitions, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.partitions.size(), 0);\n    }\n","date":"2021-08-09 08:36:19","endLine":60,"groupId":"1012","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testPartitionedTopicStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/51/35acf4e0996796b006545b04e2049ed6a4555f.src","preCode":"    public void testPartitionedTopicStats() {\n        NonPersistentPartitionedTopicStatsImpl nonPersistentPartitionedTopicStats = new NonPersistentPartitionedTopicStatsImpl();\n        nonPersistentPartitionedTopicStats.msgRateIn = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputIn = 1;\n        nonPersistentPartitionedTopicStats.msgRateOut = 1;\n        nonPersistentPartitionedTopicStats.msgThroughputOut = 1;\n        nonPersistentPartitionedTopicStats.averageMsgSize = 1;\n        nonPersistentPartitionedTopicStats.storageSize = 1;\n        nonPersistentPartitionedTopicStats.getPublishers().add(new NonPersistentPublisherStatsImpl());\n        nonPersistentPartitionedTopicStats.getSubscriptions().put(\"test_ns\", new NonPersistentSubscriptionStatsImpl());\n        nonPersistentPartitionedTopicStats.getReplication().put(\"test_ns\", new NonPersistentReplicatorStatsImpl());\n        nonPersistentPartitionedTopicStats.metadata.partitions = 1;\n        nonPersistentPartitionedTopicStats.partitions.put(\"test\", nonPersistentPartitionedTopicStats);\n        nonPersistentPartitionedTopicStats.reset();\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputIn, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgRateOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.msgThroughputOut, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.averageMsgSize, 0.0);\n        assertEquals(nonPersistentPartitionedTopicStats.storageSize, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getPublishers().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getSubscriptions().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.getReplication().size(), 0);\n        assertEquals(nonPersistentPartitionedTopicStats.metadata.partitions, 0);\n        assertEquals(nonPersistentPartitionedTopicStats.partitions.size(), 0);\n    }\n","realPath":"pulsar-common/src/test/java/org/apache/pulsar/common/policies/data/NonPersistentPartitionedTopicStatsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"c0ef593990ce8a7ea9ee6f1def880f71def3fc97","commitMessage":"@@@Add compacted topic metrics for TopicStats in CLI (#11564)\n\n\n Motivation\nAdd below metrics to help track potential flows or examine the overall condition of compacted topics .\n- lastCompactionRemovedEventCount : the removed event count of last compaction\n- lastCompactionSucceedTimestamp : the timestamp of last succeed compaction\n- lastCompactionFailedTimestamp : the timestamp of last failed compaction\n- lastCompactionDurationTimeInMills: the duration time of last compaction\n\nThese 4 metrics will be displayed in topic stats CLI :\n```\n./pulsar-admin topics stats persistent://tenant/ns/topic\n```\n\n\n Documentation\nThis patch will add metrics in CLI .  which would generate doc automatically.","date":"2021-08-21 22:58:20","modifiedFileCount":"9","status":"M","submitter":"GuoJiwei"}]
