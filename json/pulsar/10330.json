[{"authorTime":"2018-10-26 04:43:04","codes":[{"authorDate":"2018-10-26 04:43:04","commitOrder":1,"curCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(fnName, creater.getFunctionName());\n        assertEquals(inputTopicName, creater.getInputs());\n        assertEquals(outputTopicName, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2018-10-26 04:43:04","endLine":905,"groupId":"13219","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7c/d870f519579858f4d69a3092a43347f0027a79.src","preCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(fnName, creater.getFunctionName());\n        assertEquals(inputTopicName, creater.getInputs());\n        assertEquals(outputTopicName, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":877,"status":"B"},{"authorDate":"2018-10-26 04:43:04","commitOrder":1,"curCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(fnName, updater.getFunctionName());\n        assertEquals(inputTopicName, updater.getInputs());\n        assertEquals(outputTopicName, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2018-10-26 04:43:04","endLine":999,"groupId":"13219","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7c/d870f519579858f4d69a3092a43347f0027a79.src","preCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(fnName, updater.getFunctionName());\n        assertEquals(inputTopicName, updater.getInputs());\n        assertEquals(outputTopicName, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":971,"status":"B"}],"commitId":"a9a7f30f0e8887a43b283b4aa22670b8f61ee00a","commitMessage":"@@@Set function resources properly (#2841)\n\n* Set function resources properly\n\n* Added unittests\n","date":"2018-10-26 04:43:04","modifiedFileCount":"2","status":"B","submitter":"Sanjeev Kulkarni"},{"authorTime":"2019-05-07 01:24:09","codes":[{"authorDate":"2018-10-26 04:43:04","commitOrder":2,"curCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(fnName, creater.getFunctionName());\n        assertEquals(inputTopicName, creater.getInputs());\n        assertEquals(outputTopicName, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2018-10-26 04:43:04","endLine":905,"groupId":"13219","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/7c/d870f519579858f4d69a3092a43347f0027a79.src","preCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(fnName, creater.getFunctionName());\n        assertEquals(inputTopicName, creater.getInputs());\n        assertEquals(outputTopicName, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":877,"status":"N"},{"authorDate":"2019-05-07 01:24:09","commitOrder":2,"curCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(fnName, updater.getFunctionName());\n        assertEquals(inputTopicName, updater.getInputs());\n        assertEquals(outputTopicName, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","date":"2019-05-07 01:24:09","endLine":791,"groupId":"13219","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c1/e40fbe67720a4137471ddc791c17ff5a338bf9.src","preCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(fnName, updater.getFunctionName());\n        assertEquals(inputTopicName, updater.getInputs());\n        assertEquals(outputTopicName, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":763,"status":"M"}],"commitId":"08fcc215e833594f6c96df4de34ce7d96d92286d","commitMessage":"@@@Allow users to update auth data during function update (#4198)\n\n* allow users to update auth data during function update\n","date":"2019-05-07 01:24:09","modifiedFileCount":"35","status":"M","submitter":"Boyang Jerry Peng"},{"authorTime":"2020-03-07 04:50:55","codes":[{"authorDate":"2020-03-07 04:50:55","commitOrder":3,"curCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(FN_NAME, creater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, creater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2020-03-07 04:50:55","endLine":614,"groupId":"12313","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c1/62c4b3f345a7ea314132b5719b0d52c74cbc1a.src","preCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(fnName, creater.getFunctionName());\n        assertEquals(inputTopicName, creater.getInputs());\n        assertEquals(outputTopicName, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"M"},{"authorDate":"2020-03-07 04:50:55","commitOrder":3,"curCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(FN_NAME, updater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, updater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","date":"2020-03-07 04:50:55","endLine":693,"groupId":"12313","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/c1/62c4b3f345a7ea314132b5719b0d52c74cbc1a.src","preCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        String fnName = TEST_NAME + \"-function\";\n        String inputTopicName = TEST_NAME + \"-input-topic\";\n        String outputTopicName = TEST_NAME + \"-output-topic\";\n\n        final String url = \"file:\" + JAR_NAME;\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", fnName,\n                \"--inputs\", inputTopicName,\n                \"--output\", outputTopicName,\n                \"--jar\", url,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(fnName, updater.getFunctionName());\n        assertEquals(inputTopicName, updater.getInputs());\n        assertEquals(outputTopicName, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), new Long(8080808080808080l));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), new Long(1073741824l));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"}],"commitId":"73e8beb62f9a9bfc13a347611859f1b2af0fd33c","commitMessage":"@@@Refactor tests in pulsar client tools test (#6472)\n\n\n Modifications\n\nThe main modification was the reduction of repeated initialization of the variables in the tests.","date":"2020-03-07 04:50:55","modifiedFileCount":"3","status":"M","submitter":"Sergii Zhevzhyk"},{"authorTime":"2020-11-09 16:35:54","codes":[{"authorDate":"2020-11-09 16:35:54","commitOrder":4,"curCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(FN_NAME, creater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, creater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2020-11-09 16:35:54","endLine":614,"groupId":"12313","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e3/58126c2dd768707c6d6d62b488bd86bbae2619.src","preCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(FN_NAME, creater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, creater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"M"},{"authorDate":"2020-11-09 16:35:54","commitOrder":4,"curCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(FN_NAME, updater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, updater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","date":"2020-11-09 16:35:54","endLine":693,"groupId":"12313","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e3/58126c2dd768707c6d6d62b488bd86bbae2619.src","preCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(FN_NAME, updater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, updater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"}],"commitId":"3d6377b104bd56599865b3cc5d74a8ba33fb9c7d","commitMessage":"@@@Update deps.  allow to run tests with forkCount=1 (#8465)\n\n\n# Motivation\nIn current master you cannot run the tests with \"forkCount=1\".  this is very annoying as by default we are running all of the tests in parallel.\nThis change upgrades a few testing dependencies and fixes a problem with PowerMock + Testng + Log4j2 + forkCount=1\n\n# Modifications\nUpgrade TestNG\nUpgrade PowerMock\nUpgrade Mockito\nVerifying this change\nAll tests should pass\n\nThis change is a trivial rework / code cleanup without any test coverage.\n\n\n* Update deps.  allow to run tests with forkCount=1\n\n* revert log4j2\n\n* fix build\n\n* revert javaassist\n\n* revert surefire\n\n* use https for TestNG DTDs\n\n* remove SnakeYAML\n\nCo-authored-by: Enrico Olivelli <eolivelli@apache.org>","date":"2020-11-09 16:35:54","modifiedFileCount":"3","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2021-06-03 05:17:04","codes":[{"authorDate":"2020-11-09 16:35:54","commitOrder":5,"curCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(FN_NAME, creater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, creater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","date":"2020-11-09 16:35:54","endLine":614,"groupId":"10330","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/e3/58126c2dd768707c6d6d62b488bd86bbae2619.src","preCode":"    public void testCreateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"create\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        CreateFunction creater = cmd.getCreater();\n\n        assertEquals(FN_NAME, creater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, creater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, creater.getOutput());\n        assertEquals(creater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(creater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(creater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).createFunctionWithUrl(any(FunctionConfig.class), anyString());\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"N"},{"authorDate":"2021-06-03 05:17:04","commitOrder":5,"curCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(FN_NAME, updater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, updater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptionsImpl()));\n    }\n","date":"2021-06-03 05:17:04","endLine":736,"groupId":"10330","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateFunctionWithDisk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d7/f68a4b790f0e1d6e0fea285afe725fd28f0df0.src","preCode":"    public void testUpdateFunctionWithDisk() throws Exception {\n        cmd.run(new String[] {\n                \"update\",\n                \"--name\", FN_NAME,\n                \"--inputs\", INPUT_TOPIC_NAME,\n                \"--output\", OUTPUT_TOPIC_NAME,\n                \"--jar\", URL,\n                \"--tenant\", \"sample\",\n                \"--namespace\", \"ns1\",\n                \"--className\", DummyFunction.class.getName(),\n                \"--disk\", \"8080808080808080\"\n        });\n\n        UpdateFunction updater = cmd.getUpdater();\n\n        assertEquals(FN_NAME, updater.getFunctionName());\n        assertEquals(INPUT_TOPIC_NAME, updater.getInputs());\n        assertEquals(OUTPUT_TOPIC_NAME, updater.getOutput());\n        assertEquals(updater.getFunctionConfig().getResources().getDisk(), Long.valueOf(8080808080808080L));\n        \r\n        assertEquals(updater.getFunctionConfig().getResources().getRam(), Long.valueOf(1073741824L));\n        assertEquals(updater.getFunctionConfig().getResources().getCpu(), 1.0, 0);\n        verify(functions, times(1)).updateFunctionWithUrl(any(FunctionConfig.class), anyString(), eq(new UpdateOptions()));\n    }\n","realPath":"pulsar-client-tools-test/src/test/java/org/apache/pulsar/admin/cli/CmdFunctionsTest.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":713,"status":"M"}],"commitId":"301a76435ce918520f1b70b95b7ebed9bf1b08b5","commitMessage":"@@@Remove pulsar-client-admin-api dependency : pulsar-common (#10774)\n\n* remove gson from admin api Topics.java\n\n* Bookies.java\n\n* Brokers.java\n\n* BrokerStats.java\n\n* fix PulsarAdminException\n\n* Clusters.java\n\n* Tenants.java\n\n* minor fix on ResourceGroups\n\n* Namespaces.java & OffloadPolicies\n\n* temp remove JsonProperty in OffloadPolicies\n\n* Topics & NonPersistentTopics\n\n* ResourceQuotas with MixIn class\n\n* Functions\n\n* Sources.java\n\n* Sinks.java\n\n* Schemas.java\n\n* resolve checkstyle\n\n* minor fix\n\n* Transactions.java\n\n* fix stylecheck\n\n* set ObjectMapper module\n\n* fix ci\n\n* fix PulsarAdminException\n\n* remove gson\n\n* remove swagger\n\n* merge master\n\n* remove swagger\n\n* remove io.swagger\n\n* remove commons-lang3\n\n* use Objects.requireNonNull\n\n* remove commons-lang3\n\n* fix interface mapping\n\n* fix ci\n\n* extract OffloadPoliciesInterface\n\n* extract FunctionStats interfaces\n\n* fix unit test\n\n* fix shaded class\n\n* add object mapper mixin tests\n\n* fix ci\n\n* fix admin exception ci error\n\n* UpdateOptions\n\n* AutoFailoverPolicyData\n\n* BrokerNamespaceIsolationData\n\n* ClusterData\n\n* FailureDomain\n\n* FunctionInstanceStats\n\n* NamespaceIsolationData\n\n* OffloadPolicies\n\n* TenantInfo\n\n* FunctionStats\n\n* fix stylecheck\n\n* Fixed interface\n\n* Fixed ClusterData equals method\n\n* Fixed merge issue\n\n* Fixed another merge issue\n\n* Fixed test issue after merge\n\nCo-authored-by: Rui Fu <freelz@gmail.com>","date":"2021-06-03 05:17:04","modifiedFileCount":"266","status":"M","submitter":"Matteo Merli"}]
