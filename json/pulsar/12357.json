[{"authorTime":"2020-08-11 08:57:20","codes":[{"authorDate":"2018-11-29 04:42:05","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2018-11-29 04:42:05","endLine":372,"groupId":"2285","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/66/5061887477b2c7620d4e0d75e6562ed6fb4fbe.src","preCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"NB"},{"authorDate":"2020-08-11 08:57:20","commitOrder":4,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.topics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2020-08-11 08:57:20","endLine":981,"groupId":"2285","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/65/8233f3448b3e86add65c41054dc6121faa21f4.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.topics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"B"}],"commitId":"824cb08b40526d66ed447b9fc1d1f41aebca5dd3","commitMessage":"@@@[Issue 2688]Support set retention on topic level. (#7747)\n\n\n Motivation\nSupport set retention quota on topic level.\nBased on the system topic function.\n\n Modifications\nSupport get-retention on topic level.\nSupport set-retention on topic level.\nSupport remove-retention on topic level.","date":"2020-08-11 08:57:20","modifiedFileCount":"8","status":"M","submitter":"jianyun"},{"authorTime":"2021-01-29 03:06:36","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":5,"curCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getAdmin().namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2021-01-29 03:06:36","endLine":586,"groupId":"2285","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ec/636499520574781a4fcbea12fc708c94530242.src","preCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"M"},{"authorDate":"2021-01-29 03:06:36","commitOrder":5,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getAdmin().topics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2021-01-29 03:06:36","endLine":1270,"groupId":"2285","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/0c/610c2779cd4584c2874daaace658aee5f2b9db.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            admin.topics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1251,"status":"M"}],"commitId":"232b32439687995dd3102d8c281cf50b7b91e0bf","commitMessage":"@@@Lazily init PulsarAdmin in PulsarAdminTool (#9312)\n\n\n Motivation\npulsar-admin (PulsarAdminTool) initialises eagerly the PulsarAdmin object and some of the the underlying REST API intefaces.\nThis initialisation process triggers lot of resource loading (like SSL/RESTAPI classes....) that slows down the JVM even for stuff that is not needed.\nAlso there are shutdown hooks that are useless by they are executed while existing from the command.\n\nRemoving initialisation of useless stuff helps in having a better bootstrap time.  especially in case that you are not performing API calls.  like when you are learning the tool and you make lots of syntax errors. \n\n\n Modifications\n- Initialise as lazily as possible PulsarAdmin \n- Make PulsarAdminTool#main \"testable\" by allowing it to not call System.exit\n- Use halt instead of exit in order to not trigger shutdown hooks\n\n\n Verifying this change\nThis change is a trivial rework / code cleanup.  but I have added tests for parts that have been touched and had not unit tests.\n","date":"2021-01-29 03:06:36","modifiedFileCount":"27","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2021-04-15 23:59:11","codes":[{"authorDate":"2021-01-29 03:06:36","commitOrder":6,"curCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getAdmin().namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2021-01-29 03:06:36","endLine":586,"groupId":"12357","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/ec/636499520574781a4fcbea12fc708c94530242.src","preCode":"        void run() throws PulsarAdminException {\n            String namespace = validateNamespace(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getAdmin().namespaces().setRetention(namespace, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"N"},{"authorDate":"2021-04-15 23:59:11","commitOrder":6,"curCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getTopics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","date":"2021-04-15 23:59:11","endLine":1316,"groupId":"12357","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pulsar-10-0.7/blobInfo/CC_OUT/blobs/d6/4d98aed4396b8d058faaf570c2fdad3237e29b.src","preCode":"        void run() throws PulsarAdminException {\n            String persistentTopic = validatePersistentTopic(params);\n            long sizeLimit = validateSizeString(limitStr);\n            long retentionTimeInSec = RelativeTimeUtil.parseRelativeTimeInSeconds(retentionTimeStr);\n\n            final int retentionTimeInMin;\n            if (retentionTimeInSec != -1) {\n                retentionTimeInMin = (int) TimeUnit.SECONDS.toMinutes(retentionTimeInSec);\n            } else {\n                retentionTimeInMin = -1;\n            }\n\n            final int retentionSizeInMB;\n            if (sizeLimit != -1) {\n                retentionSizeInMB = (int) (sizeLimit / (1024 * 1024));\n            } else {\n                retentionSizeInMB = -1;\n            }\n            getAdmin().topics().setRetention(persistentTopic, new RetentionPolicies(retentionTimeInMin, retentionSizeInMB));\n        }\n","realPath":"pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java","repoName":"pulsar","snippetEndLine":0,"snippetStartLine":0,"startLine":1297,"status":"M"}],"commitId":"2e305277c0ad89106beac260e9c3d5b517c10ab0","commitMessage":"@@@[ISSUE 10176] fix npe in CmdTopics (#10178)\n\n* [cmd] fix npe in CmdTopics\n\n* add unit tests\n\n* accept suggestion\n\nCo-authored-by: linjunhua <linjh1@jiguang.cn>","date":"2021-04-15 23:59:11","modifiedFileCount":"2","status":"M","submitter":"linlinnn"}]
