[{"authorTime":"2018-02-13 02:13:48","codes":[{"authorDate":"2018-02-13 02:13:48","commitOrder":1,"curCode":"    public void testAppendWithSeparators_Collection() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Collection<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","date":"2018-02-13 02:13:48","endLine":1153,"groupId":"651","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendWithSeparators_Collection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendWithSeparators_Collection() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Collection<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1133,"status":"B"},{"authorDate":"2018-02-13 02:13:48","commitOrder":1,"curCode":"    public void testAppendWithSeparators_Iterator() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Iterator<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","date":"2018-02-13 02:13:48","endLine":1177,"groupId":"56","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendWithSeparators_Iterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendWithSeparators_Iterator() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Iterator<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1157,"status":"B"}],"commitId":"978e2896dbaeeb24eaed566972a09b0653b39f2b","commitMessage":"@@@[TEXT-115] Add a StrBuilder replacement based on the StringMatcher\ninterface: TextStringBuilder.","date":"2018-02-13 02:13:48","modifiedFileCount":"4","status":"B","submitter":"Gary Gregory"},{"authorTime":"2019-12-19 10:16:43","codes":[{"authorDate":"2019-12-19 10:16:43","commitOrder":2,"curCode":"    public void testAppendWithSeparators_Collection() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Collection<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", \"bar\", \"baz\"), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", \"bar\", \"baz\"), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", null, \"baz\"), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1182,"groupId":"10415","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendWithSeparators_Collection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/26/870c50ed76f8dad517eefcf93fe548a77726b4.src","preCode":"    public void testAppendWithSeparators_Collection() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Collection<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1162,"status":"M"},{"authorDate":"2019-12-19 10:16:43","commitOrder":2,"curCode":"    public void testAppendWithSeparators_Iterator() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Iterator<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", \"bar\", \"baz\").iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", \"bar\", \"baz\").iterator(), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(\"foo\", null, \"baz\").iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1206,"groupId":"10415","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendWithSeparators_Iterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/26/870c50ed76f8dad517eefcf93fe548a77726b4.src","preCode":"    public void testAppendWithSeparators_Iterator() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendWithSeparators((Iterator<?>) null, \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,bar,baz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator(), null);\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendWithSeparators(Arrays.asList(new Object[]{\"foo\", null, \"baz\"}).iterator(), \",\");\n        assertThat(sb.toString()).isEqualTo(\"foo,,baz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1186,"status":"M"}],"commitId":"282e4aa2eceffdb8c824250c13e098aa3bfe7f38","commitMessage":"@@@Remove unnecessary array creation for varargs.\n","date":"2019-12-19 10:16:43","modifiedFileCount":"7","status":"M","submitter":"Gary Gregory"}]
