[{"authorTime":"2016-11-30 11:27:04","codes":[{"authorDate":"2016-11-30 11:27:04","commitOrder":1,"curCode":"    public void testEscapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",            StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\",        StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\",     StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.escapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.escapeCsv(null));\n    }\n","date":"2016-11-30 11:27:04","endLine":453,"groupId":"216","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEscapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/47/00cdedfafc89be6279333ad3d313264f7a7946.src","preCode":"    public void testEscapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",            StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\",        StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\",     StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.escapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.escapeCsv(null));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"B"},{"authorDate":"2016-11-30 11:27:04","commitOrder":1,"curCode":"    public void testUnescapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",              StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\",              StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\",   StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.unescapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\",          StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","date":"2016-11-30 11:27:04","endLine":489,"groupId":"675","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnescapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/47/00cdedfafc89be6279333ad3d313264f7a7946.src","preCode":"    public void testUnescapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",              StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\",              StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\",   StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.unescapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\",          StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"B"}],"commitId":"e3bb7f75a17e613fafa0b9c9a24439fbeda39c13","commitMessage":"@@@TEXT-2: Resolving merge conflict\n","date":"2016-11-30 11:27:04","modifiedFileCount":"37","status":"B","submitter":"Rob Tompkins"},{"authorTime":"2017-10-15 16:34:51","codes":[{"authorDate":"2017-10-15 16:34:51","commitOrder":2,"curCode":"    public void testEscapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",            StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\",        StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\",     StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.escapeCsv(\"\"));\n        assertNull(StringEscapeUtils.escapeCsv(null));\n    }\n","date":"2017-10-15 16:34:51","endLine":417,"groupId":"216","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEscapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/72/36b032116723729eafaedd4a31cdced2ab061b.src","preCode":"    public void testEscapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",            StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\",        StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\",       StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\",     StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.escapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.escapeCsv(null));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"M"},{"authorDate":"2017-10-15 16:34:51","commitOrder":2,"curCode":"    public void testUnescapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",              StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\",              StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\",   StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.unescapeCsv(\"\"));\n        assertNull(StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\",          StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","date":"2017-10-15 16:34:51","endLine":453,"groupId":"675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnescapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/72/36b032116723729eafaedd4a31cdced2ab061b.src","preCode":"    public void testUnescapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\",              StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\",              StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\",             StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\",   StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\",   StringEscapeUtils.unescapeCsv(\"\"));\n        assertEquals(null, StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\",          StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"M"}],"commitId":"17e5ee725a0e1478abf870ae9536fb69d085059b","commitMessage":"@@@use assertNull where possible\n","date":"2017-10-15 16:34:51","modifiedFileCount":"8","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2017-11-04 20:20:44","codes":[{"authorDate":"2017-11-04 20:20:44","commitOrder":3,"curCode":"    public void testEscapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\", StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.escapeCsv(\"\"));\n        assertNull(StringEscapeUtils.escapeCsv(null));\n    }\n","date":"2017-11-04 20:20:44","endLine":422,"groupId":"216","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEscapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/84/eba94e0f9b64b31e7444b16a1d268f0f236697.src","preCode":"    public void testEscapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\", StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\", StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.escapeCsv(\"\"));\n        assertNull(StringEscapeUtils.escapeCsv(null));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"M"},{"authorDate":"2017-11-04 20:20:44","commitOrder":3,"curCode":"    public void testUnescapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.unescapeCsv(\"\"));\n        assertNull(StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\", StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","date":"2017-11-04 20:20:44","endLine":458,"groupId":"675","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnescapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/84/eba94e0f9b64b31e7444b16a1d268f0f236697.src","preCode":"    public void testUnescapeCsvString() throws Exception {\n        assertEquals(\"foo.bar\", StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.unescapeCsv(\"\"));\n        assertNull(StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\", StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"ccfb4562b71c5abf4ddf5f761b56acc90bdc4af2","commitMessage":"@@@remove unnecessary \"throws Exception\" declarations from test method signatures\n","date":"2017-11-04 20:20:44","modifiedFileCount":"15","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2019-09-23 05:08:05","codes":[{"authorDate":"2017-11-04 20:20:44","commitOrder":4,"curCode":"    public void testEscapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\", StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.escapeCsv(\"\"));\n        assertNull(StringEscapeUtils.escapeCsv(null));\n    }\n","date":"2017-11-04 20:20:44","endLine":422,"groupId":"10268","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEscapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/84/eba94e0f9b64b31e7444b16a1d268f0f236697.src","preCode":"    public void testEscapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.escapeCsv(\"foo.bar\"));\n        assertEquals(\"\\\"foo,bar\\\"\", StringEscapeUtils.escapeCsv(\"foo,bar\"));\n        assertEquals(\"\\\"foo\\nbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n        assertEquals(\"\\\"foo\\rbar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\rbar\"));\n        assertEquals(\"\\\"foo\\\"\\\"bar\\\"\", StringEscapeUtils.escapeCsv(\"foo\\\"bar\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.escapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.escapeCsv(\"\"));\n        assertNull(StringEscapeUtils.escapeCsv(null));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"N"},{"authorDate":"2019-09-23 05:08:05","commitOrder":4,"curCode":"    public void testUnescapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.unescapeCsv(\"\"));\n        assertNull(StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"foo.bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","date":"2019-09-23 05:08:05","endLine":464,"groupId":"10268","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnescapeCsvString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a1/ef2e6f70d1d68f0a52f336152405ea8310f868.src","preCode":"    public void testUnescapeCsvString() {\n        assertEquals(\"foo.bar\", StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n        assertEquals(\"foo,bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n        assertEquals(\"foo\\nbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n        assertEquals(\"foo\\rbar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\rbar\\\"\"));\n        assertEquals(\"foo\\\"bar\", StringEscapeUtils.unescapeCsv(\"\\\"foo\\\"\\\"bar\\\"\"));\n        assertEquals(\"foo\\uD84C\\uDFB4bar\", StringEscapeUtils.unescapeCsv(\"foo\\uD84C\\uDFB4bar\"));\n        assertEquals(\"\", StringEscapeUtils.unescapeCsv(\"\"));\n        assertNull(StringEscapeUtils.unescapeCsv(null));\n\n        assertEquals(\"\\\"foo.bar\\\"\", StringEscapeUtils.unescapeCsv(\"\\\"foo.bar\\\"\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StringEscapeUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"}],"commitId":"15abbfa3ae7a4944b7ab90b3f7343a9f4566e006","commitMessage":"@@@Merge branch 'pr-119'\n\nThis closes #119\n","date":"2019-09-23 05:08:05","modifiedFileCount":"2","status":"M","submitter":"Bruno P. Kinoshita"}]
