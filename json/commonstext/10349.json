[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}));\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","date":"2016-11-15 20:45:23","endLine":1089,"groupId":"423","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendAll_Collection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/22/8c8df272fec1e230d0adcace5433f7903a8fcb.src","preCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}));\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1077,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator());\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","date":"2016-11-15 20:45:23","endLine":1105,"groupId":"423","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendAll_Iterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/22/8c8df272fec1e230d0adcace5433f7903a8fcb.src","preCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator());\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1093,"status":"B"}],"commitId":"594aa29b8100d9766334be2b96da55a8a8befd54","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-text\n","date":"2016-11-15 20:45:23","modifiedFileCount":"1","status":"B","submitter":"Rob Tompkins"},{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2017-10-15 18:11:39","commitOrder":2,"curCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}));\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2017-10-27 22:25:04","endLine":1089,"groupId":"840","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendAll_Collection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/30/78808f1cad3d03ef89b34591a403bc62ab6c2c.src","preCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}));\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1077,"status":"M"},{"authorDate":"2017-10-15 18:11:39","commitOrder":2,"curCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator());\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2017-10-27 22:25:04","endLine":1105,"groupId":"423","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendAll_Iterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/30/78808f1cad3d03ef89b34591a403bc62ab6c2c.src","preCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertEquals(\"\", sb.toString());\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator());\n        assertEquals(\"foobarbaz\", sb.toString());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1093,"status":"M"}],"commitId":"e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a","commitMessage":"@@@Partial and mostly automated migration of assertions from JUnit to AssertJ. (closes #70)\n","date":"2017-10-27 22:25:04","modifiedFileCount":"33","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2019-12-19 10:16:43","codes":[{"authorDate":"2019-12-19 10:16:43","commitOrder":3,"curCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(\"foo\", \"bar\", \"baz\"));\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1093,"groupId":"10349","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendAll_Collection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/18/178b1b4bf49d7cd45fcd729762960866e666f9.src","preCode":"    public void testAppendAll_Collection() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Collection<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}));\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1081,"status":"M"},{"authorDate":"2019-12-19 10:16:43","commitOrder":3,"curCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(\"foo\", \"bar\", \"baz\").iterator());\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1109,"groupId":"10349","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendAll_Iterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/18/178b1b4bf49d7cd45fcd729762960866e666f9.src","preCode":"    public void testAppendAll_Iterator() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Iterator<?>) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Collections.EMPTY_LIST.iterator());\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(Arrays.asList(new Object[]{\"foo\", \"bar\", \"baz\"}).iterator());\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1097,"status":"M"}],"commitId":"282e4aa2eceffdb8c824250c13e098aa3bfe7f38","commitMessage":"@@@Remove unnecessary array creation for varargs.\n","date":"2019-12-19 10:16:43","modifiedFileCount":"7","status":"M","submitter":"Gary Gregory"}]
