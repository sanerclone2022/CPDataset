[{"authorTime":"2018-02-13 02:13:48","codes":[{"authorDate":"2018-02-13 02:13:48","commitOrder":1,"curCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]);  \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2018-02-13 02:13:48","endLine":604,"groupId":"359","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]);  \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"B"},{"authorDate":"2018-02-13 02:13:48","commitOrder":1,"curCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2018-02-13 02:13:48","endLine":628,"groupId":"379","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_String_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"B"}],"commitId":"978e2896dbaeeb24eaed566972a09b0653b39f2b","commitMessage":"@@@[TEXT-115] Add a StrBuilder replacement based on the StringMatcher\ninterface: TextStringBuilder.","date":"2018-02-13 02:13:48","modifiedFileCount":"4","status":"B","submitter":"Gary Gregory"},{"authorTime":"2018-02-13 02:13:48","codes":[{"authorDate":"2018-02-14 02:10:18","commitOrder":2,"curCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2018-02-14 02:10:18","endLine":604,"groupId":"359","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/82/87d99d8a42cbff3c54f4f3f3e595e9e99c3afa.src","preCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]);  \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"},{"authorDate":"2018-02-13 02:13:48","commitOrder":2,"curCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2018-02-13 02:13:48","endLine":628,"groupId":"379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_String_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"N"}],"commitId":"145aa52ff2c928780e7adf33221d37bcce697e74","commitMessage":"@@@enable asserts disabled by mistake\n","date":"2018-02-14 02:10:18","modifiedFileCount":"2","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2020-07-02 23:46:20","codes":[{"authorDate":"2018-02-14 02:10:18","commitOrder":3,"curCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2018-02-14 02:10:18","endLine":604,"groupId":"359","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/82/87d99d8a42cbff3c54f4f3f3e595e9e99c3afa.src","preCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"N"},{"authorDate":"2020-07-02 23:46:20","commitOrder":3,"curCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        \r\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2020-07-02 23:46:20","endLine":922,"groupId":"379","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_String_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/38/6fddd95a29b1b7de9039fcc873a7437cf97fb9.src","preCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":901,"status":"M"}],"commitId":"b44957c633c3c34934f829e23c56c7591c20868a","commitMessage":"@@@Simplify by reusing own methods.\n","date":"2020-07-02 23:46:20","modifiedFileCount":"2","status":"M","submitter":"Gary Gregory"},{"authorTime":"2020-07-03 04:16:18","codes":[{"authorDate":"2020-07-03 04:16:18","commitOrder":4,"curCode":"    public void testAppendln_String() {\n        final TextStringBuilder sb = spy(new TextStringBuilder());\n        sb.appendln(\"foo\");\n\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n\n        verify(sb, times(2)).append(anyString()); \r\n        verify(sb, times(1)).appendNewLine();\n    }\n","date":"2020-07-03 04:16:18","endLine":825,"groupId":"10358","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9f/6fe323fa5a570aeb80d3a1383ce724fa838df5.src","preCode":"    public void testAppendln_String() {\n        final int[] count = new int[2];\n        \r\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str) {\n                count[0]++;\n                return super.append(str);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\");\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":817,"status":"M"},{"authorDate":"2020-07-03 04:16:18","commitOrder":4,"curCode":"    public void testAppendln_String_int_int() {\n        final TextStringBuilder sb = spy(new TextStringBuilder());\n        sb.appendln(\"foo\", 0, 3);\n\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n\n        verify(sb, times(2)).append(anyString(), anyInt(), anyInt()); \r\n        verify(sb, times(1)).appendNewLine();\n    }\n","date":"2020-07-03 04:16:18","endLine":836,"groupId":"10358","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_String_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9f/6fe323fa5a570aeb80d3a1383ce724fa838df5.src","preCode":"    public void testAppendln_String_int_int() {\n        final int[] count = new int[2];\n        \r\n        final TextStringBuilder sb = new TextStringBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public TextStringBuilder append(final String str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public TextStringBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(\"foo\", 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(2); \r\n        assertThat(count[1]).isEqualTo(1);\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":828,"status":"M"}],"commitId":"4fadc3c508afda0b20d26d0a5031bf241e4e4d1d","commitMessage":"@@@Use mocks instead of custom code to verify API calls.\n","date":"2020-07-03 04:16:18","modifiedFileCount":"1","status":"M","submitter":"Gary Gregory"}]
