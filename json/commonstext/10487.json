[{"authorTime":"2017-07-18 07:26:06","codes":[{"authorDate":"2017-07-18 07:26:06","commitOrder":1,"curCode":"    public void testCreateConverterFromCharsAndEquals() {\n        Character[] characterArray = new Character[2];\n        char charOne = '+';\n        Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n\n        assertFalse(alphabetConverter.equals(charOne));\n    }\n","date":"2017-07-25 05:16:35","endLine":272,"groupId":"491","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateConverterFromCharsAndEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4f/fd20c32083532d365f0bc01e0aa91bb5b7793a.src","preCode":"    public void testCreateConverterFromCharsAndEquals() {\n        Character[] characterArray = new Character[2];\n        char charOne = '+';\n        Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n\n        assertFalse(alphabetConverter.equals(charOne));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"B"},{"authorDate":"2017-07-18 07:26:06","commitOrder":1,"curCode":"    public void testEquals() {\n        Character[] characterArray = new Character[2];\n        Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n        Map<Integer, String> map = new HashMap<>();\n        AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertEquals(1, alphabetConverterTwo.getEncodedCharLength());\n        assertFalse(alphabetConverter.equals(alphabetConverterTwo));\n    }\n","date":"2017-07-25 05:16:35","endLine":252,"groupId":"625","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4f/fd20c32083532d365f0bc01e0aa91bb5b7793a.src","preCode":"    public void testEquals() {\n        Character[] characterArray = new Character[2];\n        Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n        Map<Integer, String> map = new HashMap<>();\n        AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertEquals(1, alphabetConverterTwo.getEncodedCharLength());\n        assertFalse(alphabetConverter.equals(alphabetConverterTwo));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"}],"commitId":"79ef3cdf1a931531774da378209772dfc743d84a","commitMessage":"@@@Add some unit tests to increase code coverage (closes #56).\n","date":"2017-07-25 05:16:35","modifiedFileCount":"6","status":"B","submitter":"Michael Hausegger"},{"authorTime":"2017-09-24 01:24:24","codes":[{"authorDate":"2017-09-24 01:24:24","commitOrder":2,"curCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n\n        assertFalse(alphabetConverter.equals(charOne));\n    }\n","date":"2017-09-24 01:24:24","endLine":284,"groupId":"491","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateConverterFromCharsAndEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4a/efad71be155d507c251334c61c769048388027.src","preCode":"    public void testCreateConverterFromCharsAndEquals() {\n        Character[] characterArray = new Character[2];\n        char charOne = '+';\n        Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n\n        assertFalse(alphabetConverter.equals(charOne));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"},{"authorDate":"2017-09-24 01:24:24","commitOrder":2,"curCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertEquals(1, alphabetConverterTwo.getEncodedCharLength());\n        assertFalse(alphabetConverter.equals(alphabetConverterTwo));\n    }\n","date":"2017-09-24 01:24:24","endLine":253,"groupId":"625","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4a/efad71be155d507c251334c61c769048388027.src","preCode":"    public void testEquals() {\n        Character[] characterArray = new Character[2];\n        Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray, characterArray, characterArray);\n        Map<Integer, String> map = new HashMap<>();\n        AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertEquals(1, alphabetConverterTwo.getEncodedCharLength());\n        assertFalse(alphabetConverter.equals(alphabetConverterTwo));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"}],"commitId":"0be254ad1483e67d452a74330b78f5896888c2df","commitMessage":"@@@Use final.","date":"2017-09-24 01:24:24","modifiedFileCount":"31","status":"M","submitter":"Gary Gregory"},{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2017-10-15 18:11:39","commitOrder":3,"curCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertThat(alphabetConverter.equals(charOne)).isFalse();\n    }\n","date":"2017-10-27 22:25:04","endLine":310,"groupId":"491","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateConverterFromCharsAndEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7a/59c6e47b909bdc17504829ca197eb2b8ec86ba.src","preCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertFalse(alphabetConverter.equals(charOne));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"},{"authorDate":"2017-10-15 18:11:39","commitOrder":3,"curCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertThat(alphabetConverterTwo.getEncodedCharLength()).isEqualTo(1);\n        assertThat(alphabetConverter.equals(alphabetConverterTwo)).isFalse();\n    }\n","date":"2017-10-27 22:25:04","endLine":276,"groupId":"625","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7a/59c6e47b909bdc17504829ca197eb2b8ec86ba.src","preCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertEquals(1, alphabetConverterTwo.getEncodedCharLength());\n        assertFalse(alphabetConverter.equals(alphabetConverterTwo));\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a","commitMessage":"@@@Partial and mostly automated migration of assertions from JUnit to AssertJ. (closes #70)\n","date":"2017-10-27 22:25:04","modifiedFileCount":"33","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2017-11-04 19:49:09","codes":[{"authorDate":"2017-11-04 19:49:09","commitOrder":4,"curCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = '+';\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertThat(alphabetConverter.equals(charOne)).isFalse();\n    }\n","date":"2017-11-04 20:06:22","endLine":310,"groupId":"614","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateConverterFromCharsAndEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7e/b888797c58a62c69ab7e4bd6f910b49e1e8941.src","preCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = new Character('+');\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertThat(alphabetConverter.equals(charOne)).isFalse();\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"},{"authorDate":"2017-11-04 19:49:09","commitOrder":4,"curCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = 'R';\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertThat(alphabetConverterTwo.getEncodedCharLength()).isEqualTo(1);\n        assertThat(alphabetConverter.equals(alphabetConverterTwo)).isFalse();\n    }\n","date":"2017-11-04 20:06:22","endLine":276,"groupId":"625","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7e/b888797c58a62c69ab7e4bd6f910b49e1e8941.src","preCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = new Character('R');\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertThat(alphabetConverterTwo.getEncodedCharLength()).isEqualTo(1);\n        assertThat(alphabetConverter.equals(alphabetConverterTwo)).isFalse();\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"50c38d6c0eedc8f8a6530a7f19b3ca940bd25927","commitMessage":"@@@- remove unnecessary (un)boxing (closes #75)\n- replace `for: add` with bulk add `Collections.addAll`\n- replace iterator with `for each` where possible\n","date":"2017-11-04 20:06:22","modifiedFileCount":"11","status":"M","submitter":"abrasha"},{"authorTime":"2020-12-21 02:02:43","codes":[{"authorDate":"2020-12-21 02:02:43","commitOrder":5,"curCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final char character = '+';\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertThat(alphabetConverter.equals(charOne)).isFalse();\n    }\n","date":"2020-12-21 02:02:43","endLine":198,"groupId":"10487","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateConverterFromCharsAndEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/66/4b3cf053f96bfa3292129a3444d2224af6e10f.src","preCode":"    public void testCreateConverterFromCharsAndEquals() {\n        final Character[] characterArray = new Character[2];\n        final char charOne = '+';\n        final Character character = '+';\n        characterArray[0] = character;\n        characterArray[1] = characterArray[0];\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n\n        assertThat(alphabetConverter.equals(charOne)).isFalse();\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2020-12-21 02:02:43","commitOrder":5,"curCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final char character = 'R';\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertThat(alphabetConverterTwo.getEncodedCharLength()).isEqualTo(1);\n        assertThat(alphabetConverter.equals(alphabetConverterTwo)).isFalse();\n    }\n","date":"2020-12-21 02:02:43","endLine":255,"groupId":"10487","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testEquals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/66/4b3cf053f96bfa3292129a3444d2224af6e10f.src","preCode":"    public void testEquals() {\n        final Character[] characterArray = new Character[2];\n        final Character character = 'R';\n        characterArray[0] = character;\n        characterArray[1] = character;\n        final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,\n                characterArray, characterArray);\n        final Map<Integer, String> map = new HashMap<>();\n        final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map);\n\n        assertThat(alphabetConverterTwo.getEncodedCharLength()).isEqualTo(1);\n        assertThat(alphabetConverter.equals(alphabetConverterTwo)).isFalse();\n    }\n","realPath":"src/test/java/org/apache/commons/text/AlphabetConverterTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"4d2a8b5102cf34a05bd26270aa4a8207a50e61c3","commitMessage":"@@@Minor Improvement: (#192)\n\n* Add Final\n* Use StandardCharsets.UTF_8\n* convert wrapper to primitive\n* Use  Collections.singletonList(","date":"2020-12-21 02:02:43","modifiedFileCount":"10","status":"M","submitter":"Arturo Bernal"}]
