[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testBasicIgnoreTrimmed1() {\n        final String input = \"a: bIGNOREc : \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","date":"2016-11-15 20:45:23","endLine":454,"groupId":"523","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicIgnoreTrimmed1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4b/39f55cf75c02930fa3930a9510d32fba2895ed.src","preCode":"    public void testBasicIgnoreTrimmed1() {\n        final String input = \"a: bIGNOREc : \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrTokenizerTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testBasicIgnoreTrimmed2() {\n        final String input = \"IGNOREaIGNORE: IGNORE bIGNOREc IGNORE : IGNORE \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","date":"2016-11-15 20:45:23","endLine":468,"groupId":"523","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicIgnoreTrimmed2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/4b/39f55cf75c02930fa3930a9510d32fba2895ed.src","preCode":"    public void testBasicIgnoreTrimmed2() {\n        final String input = \"IGNOREaIGNORE: IGNORE bIGNOREc IGNORE : IGNORE \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrTokenizerTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":457,"status":"B"}],"commitId":"594aa29b8100d9766334be2b96da55a8a8befd54","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-text\n","date":"2016-11-15 20:45:23","modifiedFileCount":"1","status":"B","submitter":"Rob Tompkins"},{"authorTime":"2017-10-15 16:34:51","codes":[{"authorDate":"2017-10-15 16:34:51","commitOrder":2,"curCode":"    public void testBasicIgnoreTrimmed1() {\n        final String input = \"a: bIGNOREc : \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertNull(tok.next());\n        assertFalse(tok.hasNext());\n    }\n","date":"2017-10-15 16:34:51","endLine":488,"groupId":"10201","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicIgnoreTrimmed1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/44/d252494032a637086ec86e4a0852eed774f0a1.src","preCode":"    public void testBasicIgnoreTrimmed1() {\n        final String input = \"a: bIGNOREc : \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrTokenizerTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":477,"status":"M"},{"authorDate":"2017-10-15 16:34:51","commitOrder":2,"curCode":"    public void testBasicIgnoreTrimmed2() {\n        final String input = \"IGNOREaIGNORE: IGNORE bIGNOREc IGNORE : IGNORE \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertNull(tok.next());\n        assertFalse(tok.hasNext());\n    }\n","date":"2017-10-15 16:34:51","endLine":502,"groupId":"10201","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicIgnoreTrimmed2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/44/d252494032a637086ec86e4a0852eed774f0a1.src","preCode":"    public void testBasicIgnoreTrimmed2() {\n        final String input = \"IGNOREaIGNORE: IGNORE bIGNOREc IGNORE : IGNORE \";\n        final StrTokenizer tok = new StrTokenizer(input, ':');\n        tok.setIgnoredMatcher(StrMatcher.stringMatcher(\"IGNORE\"));\n        tok.setTrimmerMatcher(StrMatcher.trimMatcher());\n        tok.setIgnoreEmptyTokens(false);\n        tok.setEmptyTokenAsNull(true);\n        assertEquals(\"a\", tok.next());\n        assertEquals(\"bc\", tok.next());\n        assertEquals(null, tok.next());\n        assertFalse(tok.hasNext());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrTokenizerTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"M"}],"commitId":"17e5ee725a0e1478abf870ae9536fb69d085059b","commitMessage":"@@@use assertNull where possible\n","date":"2017-10-15 16:34:51","modifiedFileCount":"8","status":"M","submitter":"Pascal Schumacher"}]
