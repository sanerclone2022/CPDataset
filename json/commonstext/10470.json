[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testAppendln_StringBuffer_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuffer str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuffer(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","date":"2016-11-15 20:45:23","endLine":700,"groupId":"825","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_StringBuffer_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/22/8c8df272fec1e230d0adcace5433f7903a8fcb.src","preCode":"    public void testAppendln_StringBuffer_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuffer str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuffer(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":680,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testAppendln_StringBuilder_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuilder str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuilder(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","date":"2016-11-15 20:45:23","endLine":724,"groupId":"825","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_StringBuilder_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/22/8c8df272fec1e230d0adcace5433f7903a8fcb.src","preCode":"    public void testAppendln_StringBuilder_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuilder str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuilder(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"B"}],"commitId":"594aa29b8100d9766334be2b96da55a8a8befd54","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-text\n","date":"2016-11-15 20:45:23","modifiedFileCount":"1","status":"B","submitter":"Rob Tompkins"},{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2017-10-15 18:11:39","commitOrder":2,"curCode":"    public void testAppendln_StringBuffer_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuffer str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuffer(\"foo\"), 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2017-10-27 22:25:04","endLine":700,"groupId":"10470","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendln_StringBuffer_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/30/78808f1cad3d03ef89b34591a403bc62ab6c2c.src","preCode":"    public void testAppendln_StringBuffer_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuffer str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuffer(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":680,"status":"M"},{"authorDate":"2017-10-15 18:11:39","commitOrder":2,"curCode":"    public void testAppendln_StringBuilder_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuilder str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuilder(\"foo\"), 0, 3);\n        assertThat(sb.toString()).isEqualTo(\"foo\" + SEP);\n        assertThat(count[0]).isEqualTo(1);\n        assertThat(count[1]).isEqualTo(1);\n    }\n","date":"2017-10-27 22:25:04","endLine":724,"groupId":"10470","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendln_StringBuilder_int_int","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/30/78808f1cad3d03ef89b34591a403bc62ab6c2c.src","preCode":"    public void testAppendln_StringBuilder_int_int() {\n        final int[] count = new int[2];\n        final StrBuilder sb = new StrBuilder() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public StrBuilder append(final StringBuilder str, final int startIndex, final int length) {\n                count[0]++;\n                return super.append(str, startIndex, length);\n            }\n            @Override\n            public StrBuilder appendNewLine() {\n                count[1]++;\n                return super.appendNewLine();\n            }\n        };\n        sb.appendln(new StringBuilder(\"foo\"), 0, 3);\n        assertEquals(\"foo\" + SEP, sb.toString());\n        assertEquals(1, count[0]);\n        assertEquals(1, count[1]);\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"M"}],"commitId":"e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a","commitMessage":"@@@Partial and mostly automated migration of assertions from JUnit to AssertJ. (closes #70)\n","date":"2017-10-27 22:25:04","modifiedFileCount":"33","status":"M","submitter":"Pascal Schumacher"}]
