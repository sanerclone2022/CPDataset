[{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2018-02-13 02:13:48","commitOrder":3,"curCode":"    public void testAppendAll_Array() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2018-02-13 02:13:48","endLine":1073,"groupId":"140","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendAll_Array","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/9a/944c789c91259953470b63d55db98bffe6d319.src","preCode":"    public void testAppendAll_Array() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1057,"status":"B"},{"authorDate":"2017-10-15 18:11:39","commitOrder":3,"curCode":"    public void testAppendAll_Array() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2017-10-27 22:25:04","endLine":1073,"groupId":"140","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendAll_Array","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/30/78808f1cad3d03ef89b34591a403bc62ab6c2c.src","preCode":"    public void testAppendAll_Array() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1057,"status":"NB"}],"commitId":"978e2896dbaeeb24eaed566972a09b0653b39f2b","commitMessage":"@@@[TEXT-115] Add a StrBuilder replacement based on the StringMatcher\ninterface: TextStringBuilder.","date":"2018-02-13 02:13:48","modifiedFileCount":"4","status":"M","submitter":"Gary Gregory"},{"authorTime":"2019-12-19 10:16:43","codes":[{"authorDate":"2019-12-19 10:16:43","commitOrder":4,"curCode":"    public void testAppendAll_Array() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll();\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1102,"groupId":"10343","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendAll_Array","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/26/870c50ed76f8dad517eefcf93fe548a77726b4.src","preCode":"    public void testAppendAll_Array() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1086,"status":"M"},{"authorDate":"2019-12-19 10:16:43","commitOrder":4,"curCode":"    public void testAppendAll_Array() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll();\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","date":"2019-12-19 10:16:43","endLine":1077,"groupId":"10343","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendAll_Array","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/18/178b1b4bf49d7cd45fcd729762960866e666f9.src","preCode":"    public void testAppendAll_Array() {\n        final StrBuilder sb = new StrBuilder();\n        sb.appendAll((Object[]) null);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[0]);\n        assertThat(sb.toString()).isEqualTo(\"\");\n\n        sb.clear();\n        sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n\n        sb.clear();\n        sb.appendAll(\"foo\", \"bar\", \"baz\");\n        assertThat(sb.toString()).isEqualTo(\"foobarbaz\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderAppendInsertTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1061,"status":"M"}],"commitId":"282e4aa2eceffdb8c824250c13e098aa3bfe7f38","commitMessage":"@@@Remove unnecessary array creation for varargs.\n","date":"2019-12-19 10:16:43","modifiedFileCount":"7","status":"M","submitter":"Gary Gregory"}]
