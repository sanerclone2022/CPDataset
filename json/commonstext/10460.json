[{"authorTime":"2020-06-27 04:02:41","codes":[{"authorDate":"2020-06-27 04:02:41","commitOrder":2,"curCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","date":"2020-06-27 04:02:41","endLine":147,"groupId":"415","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatcherIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/31/b350ff4bd0c28672f2334b176d41fc0005b5e5.src","preCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringMatcherOnCharSequenceStringTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"MB"},{"authorDate":"2020-06-27 04:02:41","commitOrder":2,"curCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","date":"2020-06-27 04:02:41","endLine":147,"groupId":"415","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatcherIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a4/c4e776b55115ec4ec3608695c18936ce1e2088.src","preCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringMatcherOnCharArrayTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"MB"}],"commitId":"306c368ce1cce49c386462065ad09c12c61a144c","commitMessage":"@@@Add isMatch(CharSequence.  int)\n\nAdd isMatch(CharSequence.  int.  int.  int)\n","date":"2020-06-27 04:02:41","modifiedFileCount":"2","status":"M","submitter":"Gary Gregory"},{"authorTime":"2020-07-14 03:53:13","codes":[{"authorDate":"2020-07-14 03:53:13","commitOrder":3,"curCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(INPUT2, 1, 1, INPUT2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(INPUT2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(INPUT2, 1, 0, 2)).isEqualTo(0);\n    }\n","date":"2020-07-14 03:53:13","endLine":168,"groupId":"10460","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatcherIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/de/89159fba77d0331cccda344b07f9c43a68f1c1.src","preCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringMatcherOnCharSequenceStringTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2020-07-14 03:53:13","commitOrder":3,"curCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(INPUT2, 1, 1, INPUT2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(INPUT2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(INPUT2, 1, 0, 2)).isEqualTo(0);\n    }\n","date":"2020-07-14 03:53:13","endLine":168,"groupId":"10460","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatcherIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/75/0acaab7b7e232492255088185007315fc9eb20.src","preCode":"    public void testMatcherIndices() {\n        \r\n        \r\n        \r\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\");\n        assertEquals(2, matcher.size());\n        assertThat(matcher.isMatch(BUFFER2, 1, 1, BUFFER2_LENGTH)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 3)).isEqualTo(2);\n        assertThat(matcher.isMatch(BUFFER2, 1, 0, 2)).isEqualTo(0);\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringMatcherOnCharArrayTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"b64446fcb3b8fcd8292129415281fd6348cbece3","commitMessage":"@@@Add org.apache.commons.text.matcher.StringMatcherFactory.andMatcher(StringMatcher...).","date":"2020-07-14 03:53:13","modifiedFileCount":"7","status":"M","submitter":"Gary Gregory"}]
