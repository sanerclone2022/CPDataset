[{"authorTime":"2016-12-19 01:01:37","codes":[{"authorDate":"2018-02-13 02:13:48","commitOrder":3,"curCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","date":"2018-02-13 02:13:48","endLine":525,"groupId":"279","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/88/d3a504890fd76c3379eb504c0e1c5c0a2ef6a5.src","preCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"B"},{"authorDate":"2016-12-19 01:01:37","commitOrder":3,"curCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","date":"2016-12-19 01:01:37","endLine":512,"groupId":"279","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a0/c923baebeb732c9210242494ef7cb05879b6af.src","preCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"NB"}],"commitId":"978e2896dbaeeb24eaed566972a09b0653b39f2b","commitMessage":"@@@[TEXT-115] Add a StrBuilder replacement based on the StringMatcher\ninterface: TextStringBuilder.","date":"2018-02-13 02:13:48","modifiedFileCount":"4","status":"M","submitter":"Gary Gregory"},{"authorTime":"2018-04-08 23:42:14","codes":[{"authorDate":"2018-04-08 23:42:14","commitOrder":4,"curCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","date":"2018-04-08 23:42:14","endLine":526,"groupId":"587","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7f/713dc5fca75870d2f321a6ffc171a13c9c5a38.src","preCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"M"},{"authorDate":"2018-04-08 23:42:14","commitOrder":4,"curCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","date":"2018-04-08 23:42:14","endLine":527,"groupId":"587","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a7/fafe23bdff981d1a4c17144d0035acc2cdd1f6.src","preCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 5, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"junit\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(\"toCharArray(int,int) result incorrect length\", 4, a.length);\n        assertTrue(\"toCharArray(int,int) result does not match\", Arrays.equals(\"juni\".toCharArray(), a));\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(\"toCharArray(int,int) result is null\", a);\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"}],"commitId":"49db4cb38baa24348023258924e63e9dac786f00","commitMessage":"@@@Update tests from JUnit 4 to 5. Closes #79.","date":"2018-04-08 23:42:14","modifiedFileCount":"63","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2018-10-27 02:42:44","codes":[{"authorDate":"2018-10-27 02:42:44","commitOrder":5,"curCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2018-10-27 02:42:44","endLine":470,"groupId":"587","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/8e/dcbd76d93dafef72d0d5894d6ffc44fd25dbc6.src","preCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"},{"authorDate":"2018-10-27 02:42:44","commitOrder":5,"curCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2018-10-27 02:42:44","endLine":470,"groupId":"587","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c1/7631a587697b0c7053f05dc219f60b6cb6ed88.src","preCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        try {\n            sb.toCharArray(-1, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n\n        try {\n            sb.toCharArray(6, 5);\n            fail(\"no string index out of bound on -1\");\n        } catch (final IndexOutOfBoundsException e) {\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"6c3cc5239c2143256976c9e8a05dd76b31c74baf","commitMessage":"@@@Refactor some try/catch assertions to assertThrows\n","date":"2018-10-27 02:42:44","modifiedFileCount":"11","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2018-10-27 02:42:44","codes":[{"authorDate":"2020-07-03 21:23:40","commitOrder":6,"curCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2020-07-03 21:23:40","endLine":2017,"groupId":"770","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/37/60340b22121aa229b2fe1403af60ffea9e82d4.src","preCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1994,"status":"M"},{"authorDate":"2018-10-27 02:42:44","commitOrder":6,"curCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2018-10-27 02:42:44","endLine":470,"groupId":"587","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c1/7631a587697b0c7053f05dc219f60b6cb6ed88.src","preCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"N"}],"commitId":"83ea37aeef44e9457237c7318fff866613a5acaf","commitMessage":"@@@Use assertArrayEquals().\n","date":"2020-07-03 21:23:40","modifiedFileCount":"1","status":"M","submitter":"Gary Gregory"},{"authorTime":"2020-07-03 21:25:01","codes":[{"authorDate":"2020-07-03 21:23:40","commitOrder":7,"curCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2020-07-03 21:23:40","endLine":2017,"groupId":"10157","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/37/60340b22121aa229b2fe1403af60ffea9e82d4.src","preCode":"    public void testToCharArrayIntInt() {\n        final TextStringBuilder sb = new TextStringBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1994,"status":"N"},{"authorDate":"2020-07-03 21:25:01","commitOrder":7,"curCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","date":"2020-07-03 21:25:01","endLine":2020,"groupId":"10157","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testToCharArrayIntInt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/8b/780587d8e51a9d1ded8f2b5a6b950d90ed04fd.src","preCode":"    public void testToCharArrayIntInt() {\n        final StrBuilder sb = new StrBuilder();\n        assertEquals(0, sb.toCharArray(0, 0).length);\n\n        sb.append(\"junit\");\n        char[] a = sb.toCharArray(0, 20); \r\n        assertEquals(5, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"junit\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 4);\n        assertEquals(4, a.length, \"toCharArray(int,int) result incorrect length\");\n        assertTrue(Arrays.equals(\"juni\".toCharArray(), a), \"toCharArray(int,int) result does not match\");\n\n        a = sb.toCharArray(0, 1);\n        assertNotNull(a, \"toCharArray(int,int) result is null\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(-1, 5));\n\n        assertThrows(IndexOutOfBoundsException.class, () -> sb.toCharArray(6, 5));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1997,"status":"M"}],"commitId":"2f3a058f7b111bf84c02fa21d00065ca66d5beef","commitMessage":"@@@Use assertArrayEquals().\n","date":"2020-07-03 21:25:01","modifiedFileCount":"1","status":"M","submitter":"Gary Gregory"}]
