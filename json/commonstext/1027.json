[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2018-02-13 02:13:48","commitOrder":2,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","date":"2018-02-13 02:13:48","endLine":1802,"groupId":"668","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/88/d3a504890fd76c3379eb504c0e1c5c0a2ef6a5.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1729,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":2,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n        \n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n        \n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n        \n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n        \n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        \n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n        \n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n        \n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","date":"2016-11-15 20:45:23","endLine":1768,"groupId":"668","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/e4/4c76757ca049852d0acf7977c0b1c1110ea3a6.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n        \n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n        \n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n        \n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n        \n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {}\n        \n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n        \n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n        \n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1700,"status":"NB"}],"commitId":"978e2896dbaeeb24eaed566972a09b0653b39f2b","commitMessage":"@@@[TEXT-115] Add a StrBuilder replacement based on the StringMatcher\ninterface: TextStringBuilder.","date":"2018-02-13 02:13:48","modifiedFileCount":"4","status":"M","submitter":"Gary Gregory"},{"authorTime":"2018-04-08 23:42:14","codes":[{"authorDate":"2018-04-08 23:42:14","commitOrder":3,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","date":"2018-04-08 23:42:14","endLine":1803,"groupId":"732","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7f/713dc5fca75870d2f321a6ffc171a13c9c5a38.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1730,"status":"M"},{"authorDate":"2018-04-08 23:42:14","commitOrder":3,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","date":"2018-04-08 23:42:14","endLine":1804,"groupId":"732","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a7/fafe23bdff981d1a4c17144d0035acc2cdd1f6.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail();\n        } catch (final IndexOutOfBoundsException ex) {\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1731,"status":"M"}],"commitId":"49db4cb38baa24348023258924e63e9dac786f00","commitMessage":"@@@Update tests from JUnit 4 to 5. Closes #79.","date":"2018-04-08 23:42:14","modifiedFileCount":"63","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2019-06-30 21:32:56","codes":[{"authorDate":"2019-06-30 21:32:56","commitOrder":4,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2019-06-30 21:32:56","endLine":1719,"groupId":"121","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/ec/58c8f8bc4f53706fa1ee1b67e474738ad2253d.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1639,"status":"M"},{"authorDate":"2019-06-30 21:32:56","commitOrder":4,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2019-06-30 21:32:56","endLine":1718,"groupId":"121","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/ea/813cb7f202e5e874696f73b67665684bf0a032.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        Reader reader = sb.asReader();\n        assertTrue(reader.ready());\n        final char[] buf = new char[40];\n        assertEquals(9, reader.read(buf));\n        assertEquals(\"some text\", new String(buf, 0, 9));\n\n        assertEquals(-1, reader.read());\n        assertFalse(reader.ready());\n        assertEquals(0, reader.skip(2));\n        assertEquals(0, reader.skip(-1));\n\n        assertTrue(reader.markSupported());\n        reader = sb.asReader();\n        assertEquals('s', reader.read());\n        reader.mark(-1);\n        char[] array = new char[3];\n        assertEquals(3, reader.read(array, 0, 3));\n        assertEquals('o', array[0]);\n        assertEquals('m', array[1]);\n        assertEquals('e', array[2]);\n        reader.reset();\n        assertEquals(1, reader.read(array, 1, 1));\n        assertEquals('o', array[0]);\n        assertEquals('o', array[1]);\n        assertEquals('e', array[2]);\n        assertEquals(2, reader.skip(2));\n        assertEquals(' ', reader.read());\n\n        assertTrue(reader.ready());\n        reader.close();\n        assertTrue(reader.ready());\n\n        reader = sb.asReader();\n        array = new char[3];\n        try {\n            reader.read(array, -1, 0);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 0, -1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 100, 1);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, 0, 100);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n        try {\n            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n            fail(\"Exception expected!\");\n        } catch (final IndexOutOfBoundsException ex) {\n            \r\n        }\n\n        assertEquals(0, reader.read(array, 0, 0));\n        assertEquals(0, array[0]);\n        assertEquals(0, array[1]);\n        assertEquals(0, array[2]);\n\n        reader.skip(9);\n        assertEquals(-1, reader.read(array, 0, 1));\n\n        reader.reset();\n        array = new char[30];\n        assertEquals(9, reader.read(array, 0, 30));\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1638,"status":"M"}],"commitId":"2337c038d703d6ecfdd18c164cd21dee0c32f0a5","commitMessage":"@@@Fix compiler warnings.","date":"2019-06-30 21:32:56","modifiedFileCount":"3","status":"M","submitter":"Gary Gregory"},{"authorTime":"2019-06-30 21:32:56","codes":[{"authorDate":"2020-06-29 05:59:47","commitOrder":5,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2020-06-29 05:59:47","endLine":331,"groupId":"121","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/81/51e8bbaf712f0dfb257071fffe27ca3e61558e.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2019-06-30 21:32:56","commitOrder":5,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2019-06-30 21:32:56","endLine":1718,"groupId":"121","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/ea/813cb7f202e5e874696f73b67665684bf0a032.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1638,"status":"N"}],"commitId":"d57ae18c2d9fa72c93ecdfa9fc2cb7e47c9d8573","commitMessage":"@@@Add org.apache.commons.text.TextStringBuilder.readFrom(Reader.  int).\n","date":"2020-06-29 05:59:47","modifiedFileCount":"2","status":"M","submitter":"Gary Gregory"},{"authorTime":"2019-06-30 21:32:56","codes":[{"authorDate":"2020-07-03 21:19:31","commitOrder":6,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            final char[] array = new char[3];\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, -1, 0));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, -1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 100, 1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, 100));\n            assertThrows(IndexOutOfBoundsException.class,\n                () -> reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE));\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            final char[] array2 = new char[30];\n            assertEquals(9, reader.read(array2, 0, 30));\n        }\n    }\n","date":"2020-07-03 21:19:31","endLine":306,"groupId":"717","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a9/b3f1ab0f083f9f7d0a7f5cba41ff0ef6e0bdd3.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"M"},{"authorDate":"2019-06-30 21:32:56","commitOrder":6,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2019-06-30 21:32:56","endLine":1718,"groupId":"121","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/ea/813cb7f202e5e874696f73b67665684bf0a032.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":1638,"status":"N"}],"commitId":"48185ff6cbaadd44860f80eedeb298afbe85c54a","commitMessage":"@@@Use assertThrows() instead of boilerpate over and over.\n","date":"2020-07-03 21:19:31","modifiedFileCount":"1","status":"M","submitter":"Gary Gregory"},{"authorTime":"2020-11-21 11:15:07","codes":[{"authorDate":"2020-07-03 21:19:31","commitOrder":7,"curCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            final char[] array = new char[3];\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, -1, 0));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, -1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 100, 1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, 100));\n            assertThrows(IndexOutOfBoundsException.class,\n                () -> reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE));\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            final char[] array2 = new char[30];\n            assertEquals(9, reader.read(array2, 0, 30));\n        }\n    }\n","date":"2020-07-03 21:19:31","endLine":306,"groupId":"1027","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/a9/b3f1ab0f083f9f7d0a7f5cba41ff0ef6e0bdd3.src","preCode":"    public void testAsReader() throws Exception {\n        final TextStringBuilder sb = new TextStringBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            final char[] array = new char[3];\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, -1, 0));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, -1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 100, 1));\n            assertThrows(IndexOutOfBoundsException.class, () -> reader.read(array, 0, 100));\n            assertThrows(IndexOutOfBoundsException.class,\n                () -> reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE));\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            final char[] array2 = new char[30];\n            assertEquals(9, reader.read(array2, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/TextStringBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"N"},{"authorDate":"2020-11-21 11:15:07","commitOrder":7,"curCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            final char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","date":"2020-11-21 11:15:07","endLine":336,"groupId":"1027","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testAsReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/47/1d3e3bf2b4e545beef317873ffff5c6b46cff9.src","preCode":"    public void testAsReader() throws Exception {\n        final StrBuilder sb = new StrBuilder(\"some text\");\n        try (Reader reader = sb.asReader()) {\n            assertTrue(reader.ready());\n            final char[] buf = new char[40];\n            assertEquals(9, reader.read(buf));\n            assertEquals(\"some text\", new String(buf, 0, 9));\n\n            assertEquals(-1, reader.read());\n            assertFalse(reader.ready());\n            assertEquals(0, reader.skip(2));\n            assertEquals(0, reader.skip(-1));\n\n            assertTrue(reader.markSupported());\n        }\n        try (Reader reader = sb.asReader()) {\n            assertEquals('s', reader.read());\n            reader.mark(-1);\n            char[] array = new char[3];\n            assertEquals(3, reader.read(array, 0, 3));\n            assertEquals('o', array[0]);\n            assertEquals('m', array[1]);\n            assertEquals('e', array[2]);\n            reader.reset();\n            assertEquals(1, reader.read(array, 1, 1));\n            assertEquals('o', array[0]);\n            assertEquals('o', array[1]);\n            assertEquals('e', array[2]);\n            assertEquals(2, reader.skip(2));\n            assertEquals(' ', reader.read());\n\n            assertTrue(reader.ready());\n            reader.close();\n            assertTrue(reader.ready());\n        }\n        try (Reader reader = sb.asReader()) {\n            char[] array = new char[3];\n            try {\n                reader.read(array, -1, 0);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, -1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 100, 1);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, 0, 100);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n            try {\n                reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);\n                fail(\"Exception expected!\");\n            } catch (final IndexOutOfBoundsException ex) {\n                \r\n            }\n\n            assertEquals(0, reader.read(array, 0, 0));\n            assertEquals(0, array[0]);\n            assertEquals(0, array[1]);\n            assertEquals(0, array[2]);\n\n            reader.skip(9);\n            assertEquals(-1, reader.read(array, 0, 1));\n\n            reader.reset();\n            array = new char[30];\n            assertEquals(9, reader.read(array, 0, 30));\n        }\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrBuilderTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"da703545ad252040dae2124c351186a7a3893e49","commitMessage":"@@@Use final.\n","date":"2020-11-21 11:15:07","modifiedFileCount":"3","status":"M","submitter":"Gary Gregory"}]
