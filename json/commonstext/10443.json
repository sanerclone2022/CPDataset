[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n    }\n","date":"2016-11-15 20:45:23","endLine":247,"groupId":"49","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCapitalizeFullyWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/6b/57072ee81b451e970b8c4409fe740bb9b84359.src","preCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":1,"curCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","date":"2016-11-15 20:45:23","endLine":215,"groupId":"49","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCapitalizeWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/6b/57072ee81b451e970b8c4409fe740bb9b84359.src","preCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"594aa29b8100d9766334be2b96da55a8a8befd54","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-text\n","date":"2016-11-15 20:45:23","modifiedFileCount":"1","status":"B","submitter":"Rob Tompkins"},{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2017-06-23 13:40:51","commitOrder":2,"curCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", null) ); \r\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'}) ); \r\n    }\n","date":"2017-06-23 13:40:51","endLine":250,"groupId":"49","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCapitalizeFullyWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/45/11efacfe8f88c45a8bfb646ecbabd57973e0e4.src","preCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2016-11-15 20:45:23","commitOrder":2,"curCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","date":"2016-11-15 20:45:23","endLine":215,"groupId":"49","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCapitalizeWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/6b/57072ee81b451e970b8c4409fe740bb9b84359.src","preCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n        \n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"b7ac42b27d0c0678a18c39b2929a21725aed6086","commitMessage":"@@@Merge branch 'TEXT-93' of github.com:ameyjadiye/commons-text into TEXT-93\n","date":"2017-06-23 13:40:51","modifiedFileCount":"10","status":"M","submitter":"Amey Jadiye"},{"authorTime":"2017-10-15 16:34:51","codes":[{"authorDate":"2017-10-15 16:34:51","commitOrder":3,"curCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertNull(WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", null) ); \r\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'}) ); \r\n    }\n","date":"2017-10-15 16:34:51","endLine":257,"groupId":"49","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCapitalizeFullyWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/95/5d0944dd3e07ab6504a06bd8371bb8b4da2f44.src","preCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null) );\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", null) ); \r\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'}) ); \r\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2017-10-15 16:34:51","commitOrder":3,"curCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertNull(WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","date":"2017-10-15 16:34:51","endLine":212,"groupId":"49","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCapitalizeWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/95/5d0944dd3e07ab6504a06bd8371bb8b4da2f44.src","preCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertEquals(null, WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n\n        char[] chars = new char[] { '-', '+', ' ', '@' };\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars) );\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars) );\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars) );\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars) );\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars) );\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars) );\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars) );\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null) );\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"17e5ee725a0e1478abf870ae9536fb69d085059b","commitMessage":"@@@use assertNull where possible\n","date":"2017-10-15 16:34:51","modifiedFileCount":"8","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2017-10-15 18:11:39","commitOrder":4,"curCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertThat(WordUtils.capitalizeFully(null, null)).isNull();\n        assertThat(WordUtils.capitalizeFully(\"\", new char[0])).isEqualTo(\"\");\n        assertThat(WordUtils.capitalizeFully(\"  \", new char[0])).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalizeFully(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalizeFully(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalizeFully(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-Here 123\");\n        assertThat(WordUtils.capitalizeFully(\"I-AM HERE+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalizeFully(\"i aM.fine\", chars)).isEqualTo(\"I am.Fine\");\n        assertThat(WordUtils.capitalizeFully(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", null)).isEqualTo(\"Alphabet\"); \r\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'})).isEqualTo(\"Alphabet\"); \r\n    }\n","date":"2017-10-27 22:25:04","endLine":257,"groupId":"420","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCapitalizeFullyWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/53/684ae693355d1361a294f1719328042c5f49df.src","preCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertNull(WordUtils.capitalizeFully(null, null));\n        assertEquals(\"\", WordUtils.capitalizeFully(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \", new char[0]));\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"I\", chars));\n        assertEquals(\"I\", WordUtils.capitalizeFully(\"i\", chars));\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"i-am here+123\", chars));\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalizeFully(\"I Am+Here-123\", chars));\n        assertEquals(\"I+Am-Here 123\", WordUtils.capitalizeFully(\"i+am-HERE 123\", chars));\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalizeFully(\"I-AM HERE+123\", chars));\n        chars = new char[] {'.'};\n        assertEquals(\"I am.Fine\", WordUtils.capitalizeFully(\"i aM.fine\", chars));\n        assertEquals(\"I Am.fine\", WordUtils.capitalizeFully(\"i am.fine\", null));\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", null)); \r\n        assertEquals(\"Alphabet\", WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'})); \r\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2017-10-15 18:11:39","commitOrder":4,"curCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertThat(WordUtils.capitalize(null, null)).isNull();\n        assertThat(WordUtils.capitalize(\"\", new char[0])).isEqualTo(\"\");\n        assertThat(WordUtils.capitalize(\"  \", new char[0])).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalize(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalize(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalize(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-HERE 123\");\n        assertThat(WordUtils.capitalize(\"I-AM HERE+123\", chars)).isEqualTo(\"I-AM HERE+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalize(\"i aM.fine\", chars)).isEqualTo(\"I aM.Fine\");\n        assertThat(WordUtils.capitalize(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n    }\n","date":"2017-10-27 22:25:04","endLine":212,"groupId":"419","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCapitalizeWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/53/684ae693355d1361a294f1719328042c5f49df.src","preCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertNull(WordUtils.capitalize(null, null));\n        assertEquals(\"\", WordUtils.capitalize(\"\", new char[0]));\n        assertEquals(\"  \", WordUtils.capitalize(\"  \", new char[0]));\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertEquals(\"I\", WordUtils.capitalize(\"I\", chars));\n        assertEquals(\"I\", WordUtils.capitalize(\"i\", chars));\n        assertEquals(\"I-Am Here+123\", WordUtils.capitalize(\"i-am here+123\", chars));\n        assertEquals(\"I Am+Here-123\", WordUtils.capitalize(\"I Am+Here-123\", chars));\n        assertEquals(\"I+Am-HERE 123\", WordUtils.capitalize(\"i+am-HERE 123\", chars));\n        assertEquals(\"I-AM HERE+123\", WordUtils.capitalize(\"I-AM HERE+123\", chars));\n        chars = new char[] {'.'};\n        assertEquals(\"I aM.Fine\", WordUtils.capitalize(\"i aM.fine\", chars));\n        assertEquals(\"I Am.fine\", WordUtils.capitalize(\"i am.fine\", null));\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a","commitMessage":"@@@Partial and mostly automated migration of assertions from JUnit to AssertJ. (closes #70)\n","date":"2017-10-27 22:25:04","modifiedFileCount":"33","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2020-06-27 05:02:28","codes":[{"authorDate":"2020-06-27 05:02:28","commitOrder":5,"curCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertThat(WordUtils.capitalizeFully(null, null)).isNull();\n        assertThat(WordUtils.capitalizeFully(\"\", ArrayUtils.EMPTY_CHAR_ARRAY)).isEqualTo(\"\");\n        assertThat(WordUtils.capitalizeFully(\"  \", ArrayUtils.EMPTY_CHAR_ARRAY)).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalizeFully(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalizeFully(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalizeFully(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-Here 123\");\n        assertThat(WordUtils.capitalizeFully(\"I-AM HERE+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalizeFully(\"i aM.fine\", chars)).isEqualTo(\"I am.Fine\");\n        assertThat(WordUtils.capitalizeFully(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", null)).isEqualTo(\"Alphabet\"); \r\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'})).isEqualTo(\"Alphabet\"); \r\n    }\n","date":"2020-06-27 05:02:28","endLine":259,"groupId":"10443","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCapitalizeFullyWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c3/7f826128371eec80f6583c0a6848a3047e48b7.src","preCode":"    public void testCapitalizeFullyWithDelimiters_String() {\n        assertThat(WordUtils.capitalizeFully(null, null)).isNull();\n        assertThat(WordUtils.capitalizeFully(\"\", new char[0])).isEqualTo(\"\");\n        assertThat(WordUtils.capitalizeFully(\"  \", new char[0])).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalizeFully(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalizeFully(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalizeFully(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalizeFully(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-Here 123\");\n        assertThat(WordUtils.capitalizeFully(\"I-AM HERE+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalizeFully(\"i aM.fine\", chars)).isEqualTo(\"I am.Fine\");\n        assertThat(WordUtils.capitalizeFully(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", null)).isEqualTo(\"Alphabet\"); \r\n        assertThat(WordUtils.capitalizeFully(\"alphabet\", new char[] {'!'})).isEqualTo(\"Alphabet\"); \r\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2020-06-27 05:02:28","commitOrder":5,"curCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertThat(WordUtils.capitalize(null, null)).isNull();\n        assertThat(WordUtils.capitalize(\"\", ArrayUtils.EMPTY_CHAR_ARRAY)).isEqualTo(\"\");\n        assertThat(WordUtils.capitalize(\"  \", ArrayUtils.EMPTY_CHAR_ARRAY)).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalize(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalize(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalize(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-HERE 123\");\n        assertThat(WordUtils.capitalize(\"I-AM HERE+123\", chars)).isEqualTo(\"I-AM HERE+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalize(\"i aM.fine\", chars)).isEqualTo(\"I aM.Fine\");\n        assertThat(WordUtils.capitalize(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n    }\n","date":"2020-06-27 05:02:28","endLine":214,"groupId":"10443","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCapitalizeWithDelimiters_String","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c3/7f826128371eec80f6583c0a6848a3047e48b7.src","preCode":"    public void testCapitalizeWithDelimiters_String() {\n        assertThat(WordUtils.capitalize(null, null)).isNull();\n        assertThat(WordUtils.capitalize(\"\", new char[0])).isEqualTo(\"\");\n        assertThat(WordUtils.capitalize(\"  \", new char[0])).isEqualTo(\"  \");\n\n        char[] chars = new char[] {'-', '+', ' ', '@'};\n        assertThat(WordUtils.capitalize(\"I\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i\", chars)).isEqualTo(\"I\");\n        assertThat(WordUtils.capitalize(\"i-am here+123\", chars)).isEqualTo(\"I-Am Here+123\");\n        assertThat(WordUtils.capitalize(\"I Am+Here-123\", chars)).isEqualTo(\"I Am+Here-123\");\n        assertThat(WordUtils.capitalize(\"i+am-HERE 123\", chars)).isEqualTo(\"I+Am-HERE 123\");\n        assertThat(WordUtils.capitalize(\"I-AM HERE+123\", chars)).isEqualTo(\"I-AM HERE+123\");\n        chars = new char[] {'.'};\n        assertThat(WordUtils.capitalize(\"i aM.fine\", chars)).isEqualTo(\"I aM.Fine\");\n        assertThat(WordUtils.capitalize(\"i am.fine\", null)).isEqualTo(\"I Am.fine\");\n    }\n","realPath":"src/test/java/org/apache/commons/text/WordUtilsTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"93b8a088a0ebbd2bdb80d05c6f87381976906763","commitMessage":"@@@No need to create a new size 0 char[] each time one is needed.\n","date":"2020-06-27 05:02:28","modifiedFileCount":"35","status":"M","submitter":"Gary Gregory"}]
