[{"authorTime":"2017-10-21 00:00:13","codes":[{"authorDate":"2017-10-21 00:00:13","commitOrder":3,"curCode":"    public void testLongestCommonSubsequence() {\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.longestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.longestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.longestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\", subject.longestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\", subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.longestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.longestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.longestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.longestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","date":"2017-10-21 00:06:13","endLine":83,"groupId":"453","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongestCommonSubsequence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c8/ad6a4465310bfd1dee4bf64eebb988c6439755.src","preCode":"    public void testLongestCommonSubsequence() {\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.longestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.longestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.longestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\", subject.longestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\", subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.longestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.longestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.longestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.longestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/similarity/LongestCommonSubsequenceTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"MB"},{"authorDate":"2017-10-21 00:00:13","commitOrder":3,"curCode":"    public void testLogestCommonSubsequence() {\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.logestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.logestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.logestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\", subject.logestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\", subject.logestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.logestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.logestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.logestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.logestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","date":"2017-10-21 00:06:13","endLine":116,"groupId":"453","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLogestCommonSubsequence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/c8/ad6a4465310bfd1dee4bf64eebb988c6439755.src","preCode":"    public void testLogestCommonSubsequence() {\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.logestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.logestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.logestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\", subject.logestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\", subject.logestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.logestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.logestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.logestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.logestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/similarity/LongestCommonSubsequenceTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"804e4599bd63e4bb14c905613711eac8829e54fb","commitMessage":"@@@TEXT-105: Typo in LongestCommonSubsequence#logestCommonSubsequence\n\nDeprecate method and add method with correct spelling.\n","date":"2017-10-21 00:06:13","modifiedFileCount":"2","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2017-10-15 18:11:39","codes":[{"authorDate":"2017-10-15 18:11:39","commitOrder":4,"curCode":"    public void testLongestCommonSubsequence() {\n        assertThat(subject.longestCommonSubsequence(\"\", \"\")).isEqualTo(\"\");\n        assertThat(subject.longestCommonSubsequence(\"left\", \"\")).isEqualTo(\"\");\n        assertThat(subject.longestCommonSubsequence(\"\", \"right\")).isEqualTo(\"\");\n        assertThat(subject.longestCommonSubsequence(\"frog\", \"fog\")).isEqualTo(\"fog\");\n        assertThat(subject.longestCommonSubsequence(\"fly\", \"ant\")).isEqualTo(\"\");\n        assertThat(subject.longestCommonSubsequence(\"elephant\", \"hippo\")).isEqualTo(\"h\");\n        assertThat(subject.longestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\")).isEqualTo(\"ABC Corp\");\n        assertThat(subject.longestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"))\n            .isEqualTo(\"D  H Enterprises Inc\");\n        assertThat(subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"))\n            .isEqualTo(\"My Gym Childrens Fitness\");\n        assertThat(subject.longestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\")).isEqualTo(\"PENNSYLVNIA\");\n        assertThat(subject.longestCommonSubsequence(\"left\", \"right\")).isEqualTo(\"t\");\n        assertThat(subject.longestCommonSubsequence(\"leettteft\", \"ritttght\")).isEqualTo(\"tttt\");\n        assertThat(subject.longestCommonSubsequence(\"the same string\", \"the same string\")).isEqualTo(\"the same string\");\n    }\n","date":"2017-10-27 22:25:04","endLine":85,"groupId":"10288","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongestCommonSubsequence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/1b/0efa57f565e5e519bd4a7d2013ba3ce593623b.src","preCode":"    public void testLongestCommonSubsequence() {\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.longestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.longestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.longestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.longestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\",\n                subject.longestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\",\n                subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.longestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.longestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.longestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.longestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/similarity/LongestCommonSubsequenceTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2017-10-15 18:11:39","commitOrder":4,"curCode":"    public void testLogestCommonSubsequence() {\n        assertThat(subject.logestCommonSubsequence(\"\", \"\")).isEqualTo(\"\");\n        assertThat(subject.logestCommonSubsequence(\"left\", \"\")).isEqualTo(\"\");\n        assertThat(subject.logestCommonSubsequence(\"\", \"right\")).isEqualTo(\"\");\n        assertThat(subject.logestCommonSubsequence(\"frog\", \"fog\")).isEqualTo(\"fog\");\n        assertThat(subject.logestCommonSubsequence(\"fly\", \"ant\")).isEqualTo(\"\");\n        assertThat(subject.logestCommonSubsequence(\"elephant\", \"hippo\")).isEqualTo(\"h\");\n        assertThat(subject.logestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\")).isEqualTo(\"ABC Corp\");\n        assertThat(subject.logestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"))\n            .isEqualTo(\"D  H Enterprises Inc\");\n        assertThat(subject.logestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"))\n            .isEqualTo(\"My Gym Childrens Fitness\");\n        assertThat(subject.logestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\")).isEqualTo(\"PENNSYLVNIA\");\n        assertThat(subject.logestCommonSubsequence(\"left\", \"right\")).isEqualTo(\"t\");\n        assertThat(subject.logestCommonSubsequence(\"leettteft\", \"ritttght\")).isEqualTo(\"tttt\");\n        assertThat(subject.logestCommonSubsequence(\"the same string\", \"the same string\")).isEqualTo(\"the same string\");\n    }\n","date":"2017-10-27 22:25:04","endLine":120,"groupId":"10288","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLogestCommonSubsequence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/1b/0efa57f565e5e519bd4a7d2013ba3ce593623b.src","preCode":"    public void testLogestCommonSubsequence() {\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"left\", \"\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"\", \"right\"));\n        assertEquals(\"fog\", subject.logestCommonSubsequence(\"frog\", \"fog\"));\n        assertEquals(\"\", subject.logestCommonSubsequence(\"fly\", \"ant\"));\n        assertEquals(\"h\", subject.logestCommonSubsequence(\"elephant\", \"hippo\"));\n        assertEquals(\"ABC Corp\", subject.logestCommonSubsequence(\"ABC Corporation\", \"ABC Corp\"));\n        assertEquals(\"D  H Enterprises Inc\",\n                subject.logestCommonSubsequence(\"D N H Enterprises Inc\", \"D & H Enterprises, Inc.\"));\n        assertEquals(\"My Gym Childrens Fitness\",\n                subject.logestCommonSubsequence(\"My Gym Children's Fitness Center\", \"My Gym. Childrens Fitness\"));\n        assertEquals(\"PENNSYLVNIA\", subject.logestCommonSubsequence(\"PENNSYLVANIA\", \"PENNCISYLVNIA\"));\n        assertEquals(\"t\", subject.logestCommonSubsequence(\"left\", \"right\"));\n        assertEquals(\"tttt\", subject.logestCommonSubsequence(\"leettteft\", \"ritttght\"));\n        assertEquals(\"the same string\", subject.logestCommonSubsequence(\"the same string\", \"the same string\"));\n    }\n","realPath":"src/test/java/org/apache/commons/text/similarity/LongestCommonSubsequenceTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a","commitMessage":"@@@Partial and mostly automated migration of assertions from JUnit to AssertJ. (closes #70)\n","date":"2017-10-27 22:25:04","modifiedFileCount":"33","status":"M","submitter":"Pascal Schumacher"}]
