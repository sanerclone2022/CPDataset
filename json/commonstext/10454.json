[{"authorTime":"2016-11-15 20:45:23","codes":[{"authorDate":"2018-02-13 01:22:04","commitOrder":2,"curCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        try {\n            sub.setVariablePrefix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        try {\n            sub.setVariablePrefixMatcher((StringMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","date":"2018-02-13 01:22:04","endLine":63,"groupId":"175","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSetPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/73/3c8535ebe906a1939010e6b0022d4ff9d9b3b0.src","preCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        try {\n            sub.setVariablePrefix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        try {\n            sub.setVariablePrefixMatcher((StringMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringSubstitutorGetSetTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2016-11-15 20:45:23","commitOrder":2,"curCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        try {\n            sub.setVariableSuffix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        try {\n            sub.setVariableSuffixMatcher((StrMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","date":"2016-11-15 20:45:23","endLine":529,"groupId":"334","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSetSuffix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/e3/8269134241608c6f13e9a74e830bfe073a3635.src","preCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        try {\n            sub.setVariableSuffix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        try {\n            sub.setVariableSuffixMatcher((StrMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrSubstitutorTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"NB"}],"commitId":"4b67dd516dbb23b31d4b35d3f737f31de86a1cda","commitMessage":"@@@[TEXT-114] Add a replacement for StrSubstitutor based on interfaces:\nStringSubstitutor.","date":"2018-02-13 01:22:04","modifiedFileCount":"8","status":"M","submitter":"Gary Gregory"},{"authorTime":"2018-04-08 23:42:14","codes":[{"authorDate":"2018-04-08 23:42:14","commitOrder":3,"curCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        try {\n            sub.setVariablePrefix((String) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        try {\n            sub.setVariablePrefixMatcher((StringMatcher) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","date":"2018-04-08 23:42:14","endLine":63,"groupId":"175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSetPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/ce/e1caa9d86d4faed3406b42da7e6c522da8667e.src","preCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        try {\n            sub.setVariablePrefix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        try {\n            sub.setVariablePrefixMatcher((StringMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringSubstitutorGetSetTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-04-08 23:42:14","commitOrder":3,"curCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        try {\n            sub.setVariableSuffix((String) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        try {\n            sub.setVariableSuffixMatcher((StrMatcher) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","date":"2018-04-08 23:42:14","endLine":548,"groupId":"175","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSetSuffix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/dc/d62970322c9d6fe0e8ccb16cb1894b3a0370a1.src","preCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        try {\n            sub.setVariableSuffix((String) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        try {\n            sub.setVariableSuffixMatcher((StrMatcher) null);\n            fail();\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrSubstitutorTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"}],"commitId":"49db4cb38baa24348023258924e63e9dac786f00","commitMessage":"@@@Update tests from JUnit 4 to 5. Closes #79.","date":"2018-04-08 23:42:14","modifiedFileCount":"63","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2018-10-27 02:42:44","codes":[{"authorDate":"2018-10-27 02:42:44","commitOrder":4,"curCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefix((String) null));\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefixMatcher((StringMatcher) null));\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","date":"2018-10-27 02:42:44","endLine":53,"groupId":"282","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSetPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/24/4d6b5280a5eeff5bec120a90d29f6b2b1ca906.src","preCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        try {\n            sub.setVariablePrefix((String) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        try {\n            sub.setVariablePrefixMatcher((StringMatcher) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringSubstitutorGetSetTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-10-27 02:42:44","commitOrder":4,"curCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffix((String) null));\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffixMatcher((StrMatcher) null));\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","date":"2018-10-27 02:42:44","endLine":518,"groupId":"832","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSetSuffix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/76/0e6fccf2228db2a3cd634f329db3de59f8fc52.src","preCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        try {\n            sub.setVariableSuffix((String) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        try {\n            sub.setVariableSuffixMatcher((StrMatcher) null);\n            fail(\"Exception expected!\");\n        } catch (final IllegalArgumentException ex) {\n            \r\n        }\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrSubstitutorTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"6c3cc5239c2143256976c9e8a05dd76b31c74baf","commitMessage":"@@@Refactor some try/catch assertions to assertThrows\n","date":"2018-10-27 02:42:44","modifiedFileCount":"11","status":"M","submitter":"Pascal Schumacher"},{"authorTime":"2018-10-27 02:42:44","codes":[{"authorDate":"2020-07-14 03:53:13","commitOrder":5,"curCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefix((String) null));\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefixMatcher((StringMatcher) null));\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","date":"2020-07-14 03:53:13","endLine":53,"groupId":"10454","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSetPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/7b/e17e9fc59d3711fd86a26ad29c0a12a2e98dce.src","preCode":"    public void testGetSetPrefix() {\n        final StringSubstitutor sub = new StringSubstitutor();\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        sub.setVariablePrefix('<');\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher);\n\n        sub.setVariablePrefix(\"<<\");\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefix((String) null));\n        assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher);\n\n        final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher();\n        sub.setVariablePrefixMatcher(matcher);\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariablePrefixMatcher((StringMatcher) null));\n        assertSame(matcher, sub.getVariablePrefixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/matcher/StringSubstitutorGetSetTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-10-27 02:42:44","commitOrder":5,"curCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffix((String) null));\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffixMatcher((StrMatcher) null));\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","date":"2018-10-27 02:42:44","endLine":518,"groupId":"10454","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSetSuffix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-commonstext-10-0.7/blobInfo/CC_OUT/blobs/76/0e6fccf2228db2a3cd634f329db3de59f8fc52.src","preCode":"    public void testGetSetSuffix() {\n        final StrSubstitutor sub = new StrSubstitutor();\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        sub.setVariableSuffix('<');\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher);\n\n        sub.setVariableSuffix(\"<<\");\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffix((String) null));\n        assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher);\n\n        final StrMatcher matcher = StrMatcher.commaMatcher();\n        sub.setVariableSuffixMatcher(matcher);\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n        assertThrows(IllegalArgumentException.class, () -> sub.setVariableSuffixMatcher((StrMatcher) null));\n        assertSame(matcher, sub.getVariableSuffixMatcher());\n    }\n","realPath":"src/test/java/org/apache/commons/text/StrSubstitutorTest.java","repoName":"commonstext","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"N"}],"commitId":"b64446fcb3b8fcd8292129415281fd6348cbece3","commitMessage":"@@@Add org.apache.commons.text.matcher.StringMatcherFactory.andMatcher(StringMatcher...).","date":"2020-07-14 03:53:13","modifiedFileCount":"7","status":"M","submitter":"Gary Gregory"}]
