[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":2,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             null, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2010-01-30 10:06:08","endLine":2129,"groupId":"245","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             null, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2098,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":2,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2007-04-27 06:04:11","endLine":1938,"groupId":"245","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-02-10 10:12:18","commitOrder":3,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                        new RevisionRange[] { new RevisionRange(null, null) },\n                        false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2010-02-10 10:12:18","endLine":2130,"groupId":"245","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/43/3514e39662bb47775c63a8bbbf37d308d24bc6.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             null, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2098,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":3,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2007-04-27 06:04:11","endLine":1938,"groupId":"245","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"N"}],"commitId":"ece607ec744178df18a43e84de4784235164e031","commitMessage":"@@@JavaHL: Fix an API violation in the tests that was crashing the JVM.  With\nthis commit.  the tests of the new apache packages now pass.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java\n  (testBasicLogMessage): Don't pass a null revision range array to the\n    log message API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@908317 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-10 10:12:18","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-02 00:10:06","commitOrder":4,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2010-03-02 00:10:06","endLine":2132,"groupId":"245","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/6e/3cfb2c6ed809fb26c8d2aa0ea0d3c84ae54c3c.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                        new RevisionRange[] { new RevisionRange(null, null) },\n                        false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2099,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":4,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2007-04-27 06:04:11","endLine":1938,"groupId":"245","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"N"}],"commitId":"6bcb900e3f576a7c7654dda9687a8ecb526f0ff3","commitMessage":"@@@JavaHL: Convert RevisionRange[] args to a couple of methods into\nList<RevisionRange> args.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java\n  (testBasicLogMessage.  testMergeUsingHistory.  testMergeReintegrate. \n   testMergeConflictResolution.  testRecordOnlyMerge.  toRevisionRange. \n   collectLogMessages): Update tests to reflect the API change.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (logMessages.  merge): Update wrappers to the new API.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (logMessages.  merge): Update APIs to take a List of RevisionRanges.  rather\n    than an array.  Update wrappers accordingly.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (logMessages.  merge): Update the API to use a List of RevisionRanges.  rather\n    than an array.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@917569 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-02 00:10:06","modifiedFileCount":"4","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-04 01:11:22","commitOrder":5,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        Set<ChangePath> cp = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.size());\n        ChangePath changedApath = cp.toArray(new ChangePath[1])[0];\n        assertNotNull(\"wrong path\", changedApath);\n        assertEquals(\"wrong copy source rev\", -1,\n                      changedApath.getCopySrcRevision());\n        assertNull(\"wrong copy source path\", changedApath.getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', changedApath.getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2010-03-04 01:11:22","endLine":2142,"groupId":"399","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/39/2030891439ae9bd3bb533ea6d1682120bf1083.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2107,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":5,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2007-04-27 06:04:11","endLine":1938,"groupId":"245","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"N"}],"commitId":"4f92f855d5099bdf94a151ba0007a7d32e7a55e6","commitMessage":"@@@JavaHL: Update a callback interface to return a Set in place of an array.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update test implemetations to expect the new API.\n\n* native/LogMessageCallback.cpp\n  (singleMessage): Return a set of ChangePaths.  in place of the array.\n\n* src/org/tigris/subversion/javahl/ChangePath.java:\n  Make this class Comparable.  for backward compat.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (logMessages.  getMergeinfoLog): Update compat wrappers for the new API.\n\n* src/org/apache/subversion/javahl/LogMessage.java\n  (LogMessage): Update constructor to take the new type.\n  (changedPaths): Use the Set type.\n  (getChangedPaths): Return the new type.\n\n* src/org/apache/subversion/javahl/callback/LogMessageCallback.java\n  (singleMessage): Update the interface to use a Set of change paths.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@918579 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-04 01:11:22","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-07-15 21:20:39","commitOrder":6,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        Set<ChangePath> cp = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.size());\n        ChangePath changedApath = cp.toArray(new ChangePath[1])[0];\n        assertNotNull(\"wrong path\", changedApath);\n        assertEquals(\"wrong copy source rev\", -1,\n                      changedApath.getCopySrcRevision());\n        assertNull(\"wrong copy source path\", changedApath.getCopySrcPath());\n        assertEquals(\"wrong action\", ChangePath.Action.add,\n                     changedApath.getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2010-07-15 21:20:39","endLine":2096,"groupId":"407","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/71/f8e2ab6f963446acebe15538f35b79bf15a417.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        Set<ChangePath> cp = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.size());\n        ChangePath changedApath = cp.toArray(new ChangePath[1])[0];\n        assertNotNull(\"wrong path\", changedApath);\n        assertEquals(\"wrong copy source rev\", -1,\n                      changedApath.getCopySrcRevision());\n        assertNull(\"wrong copy source path\", changedApath.getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', changedApath.getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2060,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":6,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","date":"2007-04-27 06:04:11","endLine":1938,"groupId":"245","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"N"}],"commitId":"3d11b340e17ce28021952676c1b804f803839c2b","commitMessage":"@@@JavaHL: Add an enum for returning a value.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java\n  (testBasicLogMessage): Change expectation.\n\n* native/CreateJ.cpp\n  (ChangedPath): Create the right type of action object.\n\n* native/EnumMapper.h\n  (mapChangePathAction): New.\n\n* native/EnumMapper.cpp\n  (mapChangePathAction): New.\n\n* src/org/apache/subversion/javahl/ChangePath.java\n  (ChangePath.  action.  getAction): Update type.\n  (Action): New enum.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@964416 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-07-15 21:20:39","modifiedFileCount":"2","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2012-06-28 02:12:16","codes":[{"authorDate":"2012-06-28 02:12:16","commitOrder":7,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        Set<ChangePath> cp = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.size());\n        ChangePath changedApath = cp.toArray(new ChangePath[1])[0];\n        assertNotNull(\"wrong path\", changedApath);\n        assertEquals(\"wrong copy source rev\", -1,\n                      changedApath.getCopySrcRevision());\n        assertNull(\"wrong copy source path\", changedApath.getCopySrcPath());\n        assertEquals(\"wrong action\", ChangePath.Action.add,\n                     changedApath.getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n\n        \r\n        String non_canonical = thisTest.getUrl().toString() + \"/\";\n        LogMessage lm2[] = collectLogMessages(non_canonical, null,\n                                              ranges, false, true, false, 0);\n    }\n","date":"2012-06-28 02:12:16","endLine":1991,"groupId":"1040","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/bb/73b1ee4b8320f9d4509e17a158c17f7d987c02.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        List<RevisionRange> ranges = new ArrayList<RevisionRange>(1);\n        ranges.add(new RevisionRange(null, null));\n        LogMessage lm[] = collectLogMessages(thisTest.getWCPath(), null,\n                                             ranges, false, true, false, 0);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        Set<ChangePath> cp = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.size());\n        ChangePath changedApath = cp.toArray(new ChangePath[1])[0];\n        assertNotNull(\"wrong path\", changedApath);\n        assertEquals(\"wrong copy source rev\", -1,\n                      changedApath.getCopySrcRevision());\n        assertNull(\"wrong copy source path\", changedApath.getCopySrcPath());\n        assertEquals(\"wrong action\", ChangePath.Action.add,\n                     changedApath.getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1950,"status":"M"},{"authorDate":"2012-06-28 02:12:16","commitOrder":7,"curCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n\n        \r\n        String non_canonical = thisTest.getUrl().toString() + \"/\";\n        LogMessage lm2[] = client.logMessages(non_canonical, null,\n                                              null, false, true);\n    }\n","date":"2012-06-28 02:12:16","endLine":1971,"groupId":"1040","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicLogMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/85/2e0879352e6b0eb74390faa777512f5d73bd4d.src","preCode":"    public void testBasicLogMessage() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        LogMessage lm[] = client.logMessages(thisTest.getWCPath(), null,\n                                             null, false, true);\n        assertEquals(\"wrong number of objects\", 1, lm.length);\n        assertEquals(\"wrong message\", \"Log Message\", lm[0].getMessage());\n        assertEquals(\"wrong revision\", 1, lm[0].getRevisionNumber());\n        assertEquals(\"wrong user\", \"jrandom\", lm[0].getAuthor());\n        assertNotNull(\"changed paths set\", lm[0].getChangedPaths());\n        ChangePath cp[] = lm[0].getChangedPaths();\n        assertEquals(\"wrong number of chang pathes\", 20, cp.length);\n        assertEquals(\"wrong path\", \"/A\", cp[0].getPath());\n        assertEquals(\"wrong copy source rev\", -1, cp[0].getCopySrcRevision());\n        assertNull(\"wrong copy source path\", cp[0].getCopySrcPath());\n        assertEquals(\"wrong action\", 'A', cp[0].getAction());\n        assertEquals(\"wrong time with getTimeMicros()\",\n                     lm[0].getTimeMicros()/1000,\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong time with getTimeMillis()\",\n                     lm[0].getTimeMillis(),\n                     lm[0].getDate().getTime());\n        assertEquals(\"wrong date with getTimeMicros()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMicros()/1000));\n        assertEquals(\"wrong date with getTimeMillis()\",\n                     lm[0].getDate(),\n                     new java.util.Date(lm[0].getTimeMillis()));\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1935,"status":"M"}],"commitId":"8de736777717e7f54e641efb4e0c2e3293c6d93c","commitMessage":"@@@Regression test for r1354626.\n\n[ in subversion/bindings/javahl/ ]\n\n* tests/org/apache/subversion/javahl/BasicTests.java\n* tests/org/tigris/subversion/javahl/BasicTests.java\n  (testBasicLogMessage): Test non-canonical URL target.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1354652 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-28 02:12:16","modifiedFileCount":"2","status":"M","submitter":"Philip Martin"}]
