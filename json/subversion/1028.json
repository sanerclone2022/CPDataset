[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":2,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null, false,\n                null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true,\n                      false, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-01-30 10:06:08","endLine":1423,"groupId":"464","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null, false,\n                null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true,\n                      false, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1325,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":2,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1263,"groupId":"57","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1167,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-02 04:03:48","commitOrder":3,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-03-02 04:03:48","endLine":1424,"groupId":"464","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/47/734788eb25270974daa3e1c0b7dc7efcd91bb2.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null, false,\n                null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true,\n                      false, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1327,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":3,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1263,"groupId":"57","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1167,"status":"N"}],"commitId":"5d3891f1932b0b1a17e7a0c7a8aa103b2dcabb99","commitMessage":"@@@JavaHL: For APIs which accept multiple paths.  use a Set of paths.  rather than\nan array.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update calls to the affected APIs to pass a Set.  rather than an array.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (getWCPathSet.  getWCPathSet.  getUrlSet): New helpers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update the API to accept Sets for APIs which accept multiple\n    paths.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@917687 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-02 04:03:48","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-08-14 04:09:35","commitOrder":4,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-08-14 04:09:35","endLine":1354,"groupId":"464","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/be/274490ae55c7b77b9fa5663ca0af725b3d0579.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1257,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":4,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1263,"groupId":"57","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1167,"status":"N"}],"commitId":"a3814ee3994e0e2d9ee7c40908a5981719c1be6f","commitMessage":"@@@JavaHL: Extend the commit callback to all commit-y APIs.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests to use the updated API.\n\n* tests/org/apache/subversion/javahl/SVNTests.java:\n  Same.\n\n* subversion/bindings/javahl/native/SVNClient.h\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param.\n\n* subversion/bindings/javahl/native/SVNClient.cpp\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param. \n    and set it in the client context.\n\n* native/org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_remove. \n   Java_org_apache_subversion_javahl_SVNClient_copy. \n   Java_org_apache_subversion_javahl_SVNClient_move. \n   Java_org_apache_subversion_javahl_SVNClient_mkdir. \n   Java_org_apache_subversion_javahl_SVNClient_doImport. \n   Java_org_apache_subversion_javahl_SVNClient_propertySet):\n    Add commit callback param.  and pass it to the C++ object.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet): Add CommitCallback\n    param.\n  (propertyRemove.  propertyCreate): Add param and update callers.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Update wrappers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Add CommitCallback\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@985339 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-14 04:09:35","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-09-02 02:11:34","codes":[{"authorDate":"2010-09-02 02:11:34","commitOrder":5,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 02:11:34","endLine":1357,"groupId":"464","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/56/ca3a64c6dbd90dacd13f1f95332aeaa9857685.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1257,"status":"M"},{"authorDate":"2010-09-02 02:11:34","commitOrder":5,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 02:11:34","endLine":1369,"groupId":"57","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/23/67d094be043a7e6c20e699ac8d369a3cf7ba6c.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().removeItem(\"A/B/E/alpha\");\n        thisTest.getWc().removeItem(\"A/B/E/beta\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1270,"status":"M"}],"commitId":"71de9b6663628b99e19ef582d9e6ac98cdcce806","commitMessage":"@@@Fix javahl testBasicRevert by adjusting the expected outcome to match\nthe new single-db behaviour.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java\n* subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java\n   (testBasicRevert): Children of a deleted/removed directory show up as\n   status deleted.  revert restores the tree.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@991631 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-02 02:11:34","modifiedFileCount":"2","status":"M","submitter":"Philip Martin"},{"authorTime":"2010-09-02 02:11:34","codes":[{"authorDate":"2010-09-02 03:20:13","commitOrder":6,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), true,\n                      false, null, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 03:20:13","endLine":1369,"groupId":"464","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f3/c5129fe1c260839a5a29515f45e2ba506cb1b0.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), null, true,\n                      false, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1269,"status":"M"},{"authorDate":"2010-09-02 02:11:34","commitOrder":6,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 02:11:34","endLine":1369,"groupId":"57","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/23/67d094be043a7e6c20e699ac8d369a3cf7ba6c.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1270,"status":"N"}],"commitId":"7bc741ef31c0ffe597ee300eea19241a144b34a6","commitMessage":"@@@Followup to r991656.  this time with commit() and remove() APIs.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  commit): Remove Java wrappers.  and change the public API.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  commit): Update the public API to take a commit message callback.\n \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  commit): Update wrappers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@991663 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-02 03:20:13","modifiedFileCount":"4","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-09-02 02:11:34","codes":[{"authorDate":"2010-09-02 04:44:39","commitOrder":7,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), false, null, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), true,\n                      false, null, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 04:44:39","endLine":1369,"groupId":"1028","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f1/ff41bc01647254e076a024cb261e2d39f5f296.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), Depth.empty, false, false, false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", Depth.empty, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), Depth.empty, null);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(thisTest.getWCPathSet(\"/X\"), null, false, null, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", Depth.empty, null);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/B/E\"), true,\n                      false, null, null, null);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", Depth.infinity, null);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1269,"status":"M"},{"authorDate":"2010-09-02 02:11:34","commitOrder":7,"curCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 02:11:34","endLine":1369,"groupId":"1028","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicRevert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/23/67d094be043a7e6c20e699ac8d369a3cf7ba6c.src","preCode":"    public void testBasicRevert() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        PrintWriter pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'beta'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"iota\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'iota'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'rho'.\");\n        pw.close();\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.modified);\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/D/H/zeta\");\n        pw = new PrintWriter(new FileOutputStream(file, true));\n        pw.print(\"Added some text to 'zeta'.\");\n        pw.close();\n        thisTest.getWc().addItem(\"A/D/H/zeta\", \"Added some text to 'zeta'.\");\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\", Status.Kind.added);\n        client.add(file.getAbsolutePath(), false);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E/beta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/iota\", false);\n        thisTest.getWc().setItemTextStatus(\"iota\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/G/rho\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.normal);\n        client.revert(thisTest.getWCPath()+\"/A/D/H/zeta\", false);\n        thisTest.getWc().setItemTextStatus(\"A/D/H/zeta\",\n                Status.Kind.unversioned);\n        thisTest.getWc().setItemNodeKind(\"A/D/H/zeta\", NodeKind.unknown);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        file = new File(thisTest.getWorkingCopy(), \"A/B/E/beta\");\n        file.delete();\n        client.revert(file.getAbsolutePath(), false);\n\n        \r\n        assertTrue(\"reverted file is not readonly\",\n                file.canWrite()&& file.canRead());\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.mkdir(new String[] {thisTest.getWCPath()+\"/X\"}, null);\n        thisTest.getWc().addItem(\"X\", null);\n        thisTest.getWc().setItemTextStatus(\"X\", Status.Kind.added);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"X\"));\n        client.revert(thisTest.getWCPath()+\"/X\", false);\n        thisTest.getWc().removeItem(\"X\");\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.remove(new String[] {thisTest.getWCPath()+\"/A/B/E\"}, null, true);\n        removeDirOrFile(new File(thisTest.getWorkingCopy(), \"A/B/E\"));\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.revert(thisTest.getWCPath()+\"/A/B/E\", true);\n        thisTest.getWc().setItemTextStatus(\"A/B/E\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/alpha\", Status.Kind.normal);\n        thisTest.getWc().setItemTextStatus(\"A/B/E/beta\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1270,"status":"N"}],"commitId":"46a8bb14b94c7b8c5355a88ffd7e229d93ee14aa","commitMessage":"@@@Finish making the CommitMessage callbacks part of the public API.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java\n  (SVNTests): Don't set a default handler.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/SVNClient.java\n  (commitMessageHandler.  messageHandler.  ConstMsg): Remove.\n  (copy.  move.  mkdir.  remove): Remove wrappers.  update public API.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ISVNClient.java\n  (commitMessageHandler): Remove.\n  (copy.  move.  mkdir.  remove): Update public API.\n\n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/SVNClient.java\n  (commitMessageHandler): Don't call the proxy version of this method.\n  (copy.  move.  mkdir.  remove): Update wrappers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@991698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-02 04:44:39","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"}]
