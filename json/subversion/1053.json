[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":2,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2010-01-30 10:06:08","endLine":3058,"groupId":"94","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":3041,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":2,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2007-04-27 06:04:11","endLine":2305,"groupId":"94","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2288,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-18 05:30:15","commitOrder":3,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   betaDiff.getDiffKind() == DiffSummary.DiffKind.added);\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2010-03-18 05:30:15","endLine":3077,"groupId":"355","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/e9/16a0e8bfe884dc7ad6856ad896fa6934534288.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":3060,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":3,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2007-04-27 06:04:11","endLine":2305,"groupId":"94","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2288,"status":"N"}],"commitId":"5187cd7a81944e6b2f254586c173ccf40607db71","commitMessage":"@@@JavaHL: Replace a hacked-together class with an enum that provides the same\nfunctionality.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests to use the enum type.\n\n* native/DiffSummaryReceiver.cpp\n  (onSummary): Treat the enum as an object.  allocate and free it accordingly.\n\n* native/EnumMapper.h. \n  native/EnumMapper.cpp\n  (mapSummarizeKind): New.\n\n* src/org/apache/subversion/javahl/DiffSummary.java\n  (DiffSummary): Update constructor to take the right type.\n  (DiffKind): Rewrite as an enum.  stripping out the enum facilities we now get\n    for free.\n\n* src/org/tigris/subversion/javahl/DiffSummary.java\n  (DiffSummary): Update compat wrapper.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@924502 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-18 05:30:15","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-19 00:25:16","commitOrder":4,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   betaDiff.getDiffKind() == DiffSummary.DiffKind.added);\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, NodeKind.file,\n                     betaDiff.getNodeKind());\n    }\n","date":"2010-03-19 00:25:16","endLine":3077,"groupId":"355","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/b6/5b63bfcbe894835dd5853f9b698dba85b8114b.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   betaDiff.getDiffKind() == DiffSummary.DiffKind.added);\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":3060,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":4,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2007-04-27 06:04:11","endLine":2305,"groupId":"94","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2288,"status":"N"}],"commitId":"2ef93981c287c2c37b44f6a361f90e5ef791de6d","commitMessage":"@@@JavaHL: Make the NodeKind values part of an enum.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java:\n  Adjust tests to use the new enum.\n\n* native/DiffSummaryReceiver.cpp\n  (onSummary): Use the new enum mapper to create the Java object.  making sure\n    to destroy it later.\n\n* native/CreateJ.cpp\n  (ConflictDescriptor.  ConflictVersion.  Info):\n    Same.\n\n* native/StatusCallback.cpp\n  (createJavaStatus): Same.\n\n* native/Notify.cpp\n  (onNofity): Same.\n\n* native/CommitMessage.cpp\n  (getCommitMessage): Same.\n\n* native/LogMessageCallback.cpp\n  (singleMessage): Same.\n\n* native/InfoCallback.cpp\n  (createJavaInfo2): Same.\n \n* native/NotifyCallback.cpp\n  (onNotify): Same.\n\n* native/ListCallback.cpp\n  (createJavaDirEntry): Same.\n\n* native/EnumMapper.h. \n  native/EnumMapper.cpp\n  (mapNodeKind): Update to return the Java object.\n\n* src/org/apache/subversion/javahl/ConflictDescriptor.java. \n  src/org/apache/subversion/javahl/ConflictVersion.java. \n  src/org/apache/subversion/javahl/DirEntry.java. \n  src/org/apache/subversion/javahl/ChangePath.java. \n  src/org/apache/subversion/javahl/CommitItem.java. \n  src/org/apache/subversion/javahl/Info2.java. \n  src/org/apache/subversion/javahl/NotifyInformation.java. \n  src/org/apache/subversion/javahl/Status.java. \n  src/org/apache/subversion/javahl/Info.java. \n  src/org/apache/subversion/javahl/DiffSummary.java:\n  Update node kind types in classes and constructors.\n\n* src/org/apache/subversion/javahl/NodeKind.java:\n  Make this class an enum.  with descriptions.\n\n* src/org/tigris/subversion/javahl/ConflictVersion.java. \n  src/org/tigris/subversion/javahl/ChangePath.java. \n  src/org/tigris/subversion/javahl/CommitItem.java. \n  src/org/tigris/subversion/javahl/Info2.java. \n  src/org/tigris/subversion/javahl/ConflictDescriptor.java. \n  src/org/tigris/subversion/javahl/DirEntry.java. \n  src/org/tigris/subversion/javahl/Status.java. \n  src/org/tigris/subversion/javahl/DiffSummary.java. \n  src/org/tigris/subversion/javahl/NotifyInformation.java. \n  src/org/tigris/subversion/javahl/Info.java:\n  Use the NodeKind compat wrapper.\n\n* src/org/tigris/subversion/javahl/NodeKind.java\n  (fromApache): New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@924884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-19 00:25:16","modifiedFileCount":"25","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2013-11-23 00:06:35","commitOrder":5,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   betaDiff.getDiffKind() == DiffSummary.DiffKind.added);\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, NodeKind.file,\n                     betaDiff.getNodeKind());\n    }\n","date":"2013-11-23 00:06:35","endLine":3283,"groupId":"1053","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/1d/e8bbf4008913c7000f65530b468b7cc2168702.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   betaDiff.getDiffKind() == DiffSummary.DiffKind.added);\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, NodeKind.file,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":3266,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":5,"curCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","date":"2007-04-27 06:04:11","endLine":2305,"groupId":"1053","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertExpectedDiffSummaries","params":"(DiffSummariessummaries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    private void assertExpectedDiffSummaries(DiffSummaries summaries)\n    {\n        assertEquals(\"Wrong number of diff summary descriptors\", 20,\n                     summaries.size());\n\n        \r\n        final String BETA_PATH = \"A/B/E/beta\";\n        DiffSummary betaDiff = (DiffSummary) summaries.get(BETA_PATH);\n        assertNotNull(\"No diff summary for \" + BETA_PATH, betaDiff);\n        assertEquals(\"Incorrect path for \" + BETA_PATH, BETA_PATH,\n                     betaDiff.getPath());\n        assertTrue(\"Incorrect diff kind for \" + BETA_PATH,\n                   DiffSummary.DiffKind.ADDED.equals(betaDiff.getDiffKind()));\n        assertEquals(\"Incorrect props changed notice for \" + BETA_PATH,\n                     false, betaDiff.propsChanged());\n        assertEquals(\"Incorrect node kind for \" + BETA_PATH, 1,\n                     betaDiff.getNodeKind());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2288,"status":"N"}],"commitId":"680a43b2fec143bbbc5556470234cb12e974f3f0","commitMessage":"@@@Clean up the remaining warnings in JavaHL tests.\n\n[in subversion/bindings/javahl]\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (SVNTests.getStatusArray): Remove useless cast.\n* tests/org/apache/subversion/javahl/BasicTests.java\n  (BasicTests.testMergeReintegrate): Suppress deprecation warnings from this\n   test case.  since it exercises a deprecated method.\n  (BasicTests.acquireMergeinfoAndAssertEquals. \n   BasicTests.assertExpectedDiffSummaries): Remove useless casts.\n\n* tests/org/apache/subversion/javahl/WC.java:\n   Do not import (deprecated) class junit.framework.Assert.\n  (WC): Inherit from TestCase instead.  and update all\n   assertions to use the inherited methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1544594 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-23 00:06:35","modifiedFileCount":"3","status":"M","submitter":"Branko ?ibej"}]
