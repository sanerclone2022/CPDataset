[{"authorTime":"2009-09-12 04:07:01","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":3,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2010-01-30 10:06:08","endLine":214,"groupId":"333","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d9/3bbb076669c9bc40229e7bf07e2bc31bac5af8.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2009-09-12 04:07:01","commitOrder":3,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2009-09-12 04:07:01","endLine":210,"groupId":"333","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d1/6177359d040ef0108b95df4cfd49a01ebfe49d.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2009-09-12 04:07:01","codes":[{"authorDate":"2010-03-08 23:03:57","commitOrder":4,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNAdmin.FSFS).toLowerCase();\n            if (!(ISVNAdmin.FSFS.equals(this.fsType) ||\n                  ISVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2010-03-08 23:03:57","endLine":215,"groupId":"333","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/79/244c8fd80d65f76e6c28d4b22c0230b966ba49.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2009-09-12 04:07:01","commitOrder":4,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2009-09-12 04:07:01","endLine":210,"groupId":"333","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d1/6177359d040ef0108b95df4cfd49a01ebfe49d.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"522993bb1bac53c8416606b723109f0ff627928e","commitMessage":"@@@JavaHL: Extract interface from SVNAdmin class to make it easier for\nalternative implementations to exist.\n\nSuggested by: Alexander Kitaev\n\n[ in subversion/bindings/javahl/ ]\n\n* src/org/apache/subversion/javahl/ISVNAdmin.java\n  New interface class for SVNAdmin methods.\n\n* src/org/apache/subversion/javahl/SVNAdmin.java\n  Updated to implement ISVNAdmin.\n\n* tests/org/apache/subversion/javahl/SVNTests.java:\n  Reference ISVNAdmin instead of SVNAdmin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@920343 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-08 23:03:57","modifiedFileCount":"2","status":"M","submitter":"Mark Phippard"},{"authorTime":"2009-09-12 04:07:01","codes":[{"authorDate":"2010-07-15 18:52:06","commitOrder":5,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNRepos.FSFS).toLowerCase();\n            if (!(ISVNRepos.FSFS.equals(this.fsType) ||\n                  ISVNRepos.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNRepos.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2010-07-15 18:52:06","endLine":216,"groupId":"333","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/54/9dee523aff35d79cb65f3ab2fb5ca3efb23377.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNAdmin.FSFS).toLowerCase();\n            if (!(ISVNAdmin.FSFS.equals(this.fsType) ||\n                  ISVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2009-09-12 04:07:01","commitOrder":5,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2009-09-12 04:07:01","endLine":210,"groupId":"333","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d1/6177359d040ef0108b95df4cfd49a01ebfe49d.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"77975a92d78d381f126610856063296acba2db0c","commitMessage":"@@@Rename the JavaHL SVNAdmin class to SVNRepos.  which better reflects its role\nas a wrapper of that library.\n\n* build.conf\n  (private-built-includes): Change the header file name.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNTests.java:\n  Change refences to (I)SVNAdmin to (I)SVNRepos.\n\n* native/SVNAdmin.cpp:\n  Rename from this...\n\n* native/SVNRepos.cpp:\n  ...to this.\n\n* native/org_apache_subversion_javahl_SVNRepos.cpp:\n  Rename from this...\n\n* native/org_apache_subversion_javahl_SVNAdmin.cpp:\n  ...to this.\n\n* native/SVNAdmin.h:\n  Rename this...\n\n* native/SVNRepos.h:\n  ...to this.\n\n* src/org/apache/subversion/javahl/ISVNAdmin.java:\n  Rename this...\n\n* src/org/apache/subversion/javahl/ISVNRepos.java:\n  ...to this.\n\n* src/org/apache/subversion/javahl/SVNAdmin.java:\n  Rename this...\n\n* src/org/apache/subversion/javahl/SVNRepos.java:\n  ...to this.\n\n* src/org/tigris/subversion/javahl/SVNAdmin.java:\n  Use the updated class name from org.apache.subversion.javahl.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@964382 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-07-15 18:52:06","modifiedFileCount":"2","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2009-09-12 04:07:01","codes":[{"authorDate":"2013-08-31 09:27:12","commitOrder":6,"curCode":"    private void init()\n    {\n        String disableCredStore = System.getProperty(\"test.disablecredstore\");\n        if (disableCredStore != null)\n        {\n            try {\n                SVNUtil.disableNativeCredentialsStore();\n            } catch(Throwable ex) {\n                System.err.println(\"*** ERROR: Could not disable\" +\n                                   \" the native credentials store\");\n            }\n        }\n\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNRepos.FSFS).toLowerCase();\n            if (!(ISVNRepos.FSFS.equals(this.fsType) ||\n                  ISVNRepos.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNRepos.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2013-08-31 09:27:12","endLine":239,"groupId":"333","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ac/fef39fd3cc0bcba1aa111534f9c9945451b3e2.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNRepos.FSFS).toLowerCase();\n            if (!(ISVNRepos.FSFS.equals(this.fsType) ||\n                  ISVNRepos.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNRepos.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2009-09-12 04:07:01","commitOrder":6,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2009-09-12 04:07:01","endLine":210,"groupId":"333","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d1/6177359d040ef0108b95df4cfd49a01ebfe49d.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"d4a7e4c104b57e1f556b2fdfcdff6f08bee80af8","commitMessage":"@@@[Reverted in r1539931]\n\nIntroduce global configuration options into JavaHL:\n - An option to completely ignore Subversion's authentication credentials\n   store.  so that JavaHL-based clients can implement their own auth store\n   using the authentication callbacks;\n - A global callback triggered by loading the configuration files into\n   memory (this replaces the current ISVNClient and ISVNRemote object-\n   specific callbacks).\n\n* build.conf (private-built-includes):\n   Added org_apache_subversion_javahl_util_ConfigLib.h.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* ISVNClient.java.  SVNClient.java\n  (ISVNClient.setConfigEventHandler): Removed.\n* remote/RemoteFactory.java\n  (RemoteFactory.setConfigEventHandler. configHandler): Removed.\n  (RemoteFactory.RemoteFactory): Removed configHandler parameter.\n  (RemoteFactory.open): Likewise; all callers updated.\n* SVNUtil.java\n  (SVNUtil.enableNativeCredentialsStore. \n   SVNUtil.disableNativeCredentialsStore. \n   SVNUtil.isNativeCredentialsStoreEnabled. \n   SVNUtil.setConfigEventHandler. \n   SVNUtil.getConfigEventHandler): New static methods.\n* util/ConfigLib.java (ConfigLib): New file and public class.\n   Implements the new methods in SVNUtil.\n\n[in subversion/bindings/javahl/native]\n* GlobalConfig.h (GlobalConfig): New file and class.\n* JNIUtil.h (JNIUtil::g_configMutex): New global mutex.\n   Controls access to the global configuration parameters.\n* JNIUtil.cpp (JNIUtil::JNIInit): Make initialisation guard atomic.\n   Initialise JNIUtil::g_configMutex.\n* OperationContext.h\n  (OperationContext::setConfigCallback. \n   OperationContext::getConfigCallback): Removed.\n* OperationContext.cpp (OperationContext::attachJavaObject):\n   Initialise the context-specific copy of the config event callback\n   from the global configuration.\n  (OperationContext::getAuthBaton): If the native credentials store is\n   disabled.  do not add the default authn providers.\n  (OperationContext::setConfigCallback. \n   OperationContext::getConfigCallback): Removed obsolete implementation.\n* RemoteSession.h (RemoteSession.open.  RemoteSession.RemoteSession):\n   Remove the jconfigHandler parameter from these functions.\n* RemoteSessionContext.h (RemoteSessionContext.RemoteSessionContext):\n   Remove the jconfigHandler parameter.\n* RemoteSession.cpp.  RemoteSessionContext.cpp: Update implementation\n   now that the jconfigHandler parameters are gone.\n* SVNClient.cpp (SVNClient::openRemoteSession): Update implementation\n   now that the jconfigHandler parameters are gone.\n* org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_setConfigEventHandler): Gone.\n* org_apache_subversion_javahl_remote_RemoteFactory.cpp\n  (Java_org_apache_subversion_javahl_remote_RemoteFactory_open): No more\n   jconfigHandler parameter.\n* org_apache_subversion_javahl_util_ConfigLib.cpp: New file.\n   Implements ConfigLib native wrappers and the GlobalConfig class.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* SVNRemoteTests.java\n  (SVNRemoteTests.getSession.  SVNRemoteTests.testGetSession_ConfigConstructor):\n   Removed configHandler parameter.\n  (SVNRemoteTests.testConfigHandler): Use SVNUtil method to set the handler.\n* SVNTests.java (SVNTests.init): Optionally disable the native credentials\n   store for the test run.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1519126 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-31 09:27:12","modifiedFileCount":"6","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2009-09-12 04:07:01","codes":[{"authorDate":"2015-04-04 01:57:25","commitOrder":7,"curCode":"    private void init()\n    {\n        String cleanupProp = System.getProperty(\"test.cleanup\");\n        if (cleanupProp != null)\n            cleanupAfterTests = (0 < cleanupProp.trim().length());\n\n        String disableCredStore = System.getProperty(\"test.disablecredstore\");\n        if (disableCredStore != null)\n        {\n            try {\n                SVNUtil.disableNativeCredentialsStore();\n            } catch(Throwable ex) {\n                System.err.println(\"*** ERROR: Could not disable\" +\n                                   \" the native credentials store\");\n            }\n        }\n\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNRepos.FSFS).toLowerCase();\n            if (!(ISVNRepos.FSFS.equals(this.fsType) ||\n                  ISVNRepos.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNRepos.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2015-04-04 01:57:25","endLine":254,"groupId":"1070","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/63/461955c72f3a88a17d35ada158dcf746fd1a8c.src","preCode":"    private void init()\n    {\n        String disableCredStore = System.getProperty(\"test.disablecredstore\");\n        if (disableCredStore != null)\n        {\n            try {\n                SVNUtil.disableNativeCredentialsStore();\n            } catch(Throwable ex) {\n                System.err.println(\"*** ERROR: Could not disable\" +\n                                   \" the native credentials store\");\n            }\n        }\n\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", ISVNRepos.FSFS).toLowerCase();\n            if (!(ISVNRepos.FSFS.equals(this.fsType) ||\n                  ISVNRepos.BDB.equals(this.fsType)))\n            {\n                this.fsType = ISVNRepos.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2009-09-12 04:07:01","commitOrder":7,"curCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","date":"2009-09-12 04:07:01","endLine":210,"groupId":"1070","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d1/6177359d040ef0108b95df4cfd49a01ebfe49d.src","preCode":"    private void init()\n    {\n        \r\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"test.rootdir\");\n        if (rootDirectoryName == null)\n            rootDirectoryName = System.getProperty(\"user.dir\");\n        rootDir = new File(rootDirectoryName);\n\n        \r\n        if (rootUrl == null)\n            rootUrl = System.getProperty(\"test.rooturl\");\n        if (rootUrl == null || rootUrl.trim().length() == 0)\n        {\n            \r\n            rootUrl = rootDir.toURI().toString();\n            \r\n            \r\n            \r\n            if (rootUrl.startsWith(\"file:///\"))\n                ; \r\n            else if (rootUrl.startsWith(\"file://\"))\n                rootUrl = rootUrl.replaceFirst(\"file://\", \"file:///\");\n            else if (rootUrl.startsWith(\"file:/\"))\n                rootUrl = rootUrl.replaceFirst(\"file:/\", \"file:///\");\n\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (!rootUrl.endsWith(\"/\"))\n                rootUrl = rootUrl + '/';\n        }\n\n        \r\n        if (this.fsType == null)\n        {\n            this.fsType =\n                System.getProperty(\"test.fstype\", SVNAdmin.FSFS).toLowerCase();\n            if (!(SVNAdmin.FSFS.equals(this.fsType) ||\n                  SVNAdmin.BDB.equals(this.fsType)))\n            {\n                this.fsType = SVNAdmin.FSFS;\n            }\n        }\n\n        this.localTmp = new File(this.rootDir, \"local_tmp\");\n        this.conf = new File(this.localTmp, \"config\");\n        this.repositories = new File(this.rootDir, \"repositories\");\n        this.workingCopies = new File(this.rootDir, \"working_copies\");\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"5e06d1562d08a8736e068b14e11c50d2462edee3","commitMessage":"@@@Teach the JavaHL tests to optionally clean up after themselves\nwhen given the JAVAHL_CLEAN option on the make command line\n(or with the system property test.cleanup set to a non-empty string).\n\n* Makefile.in\n  (check-tigris-javahl.  check-apache-javahl.  check-deprecated-authn-javahl):\n   Define the test.cleanup property when running JavaHL tests.\n\n[in subversion/bindings/javahl/tests]\n* org/apache/subversion/javahl/SVNTests.java\n  (SVNTest.cleanupAfterTests.  SVNTest.testDirs): New fields.\n  (SVNTest.init): Initialize SVNTest.cleanupAfterTests from properties.\n  (SVNTest.tearDown): Optionally remove test directories.\n  (SVNTest.trackDir): New.\n  (SVNTest.OneTest.createInitialRepository. \n   SVNTest.OneTest.createInitialWorkingCopy): Track created directories.\n\n* org/apache/subversion/javahl/SVNRemoteTests.java. \n* org/apache/subversion/javahl/SVNReposTests.java. \n* org/tigris/subversion/javahl/SVNAdminTests.java:\n  (<test-class>.testName): Declare the base name for test directories.\n  (<test-class>.<init>): Call init().\n  (<test-class>.init): Initialize the global test name.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1671113 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-04 01:57:25","modifiedFileCount":"4","status":"M","submitter":"Branko ?ibej"}]
