[{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2010-06-11 03:32:09","commitOrder":2,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \r\n\n        update_obstruction  (\"update obstruction\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \r\n\n        update_add_deleted  (\"update add deleted\"),\n\n        \r\n\n        update_update_deleted   (\"update modified deleted\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-11 03:32:09","endLine":518,"groupId":"305","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/fd/5ce9d137614d2e9ade00d7dd62918eee12ab0d.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \r\n\n        update_obstruction  (\"update obstruction\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \r\n\n        update_add_deleted  (\"update add deleted\"),\n\n        \r\n\n        update_update_deleted   (\"update modified deleted\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"B"},{"authorDate":"2010-06-10 23:21:11","commitOrder":2,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"NB"}],"commitId":"a5d07cdbbeb8983cbe416ff75935e4e3e31c7d8d","commitMessage":"@@@JavaHL: Add additional values to the ClientNotifyInformation.  to bring it up to\ndate with the C version of the struct.\n\n[ in subversion/bindings/javahl/ ]\n* native/CreateJ.cpp\n  (ClientNotifyInformation): Populate the additional fields in the constructor.\n  (PropertyMap): If the incoming hash is null.  return null.\n\n* native/ClientNotifyCallback.cpp\n  (onNotify): Add a pool when creating the Java object.\n \n* native/CreateJ.h\n  (ClientNotifyInformation): Add a pool parameter.\n\n* src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (propName.  revProps.  oldRevision.  hunkOriginalStart.  hunkOriginalLength. \n   hunkModifiedStart.  hunkModifiedLength.  hunkMatchedLine.  hunkFuzz):\n    New.  along with the requisite getters.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@953425 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-11 03:32:09","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-03-09 05:25:26","commitOrder":3,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \r\n\n        update_obstruction  (\"update obstruction\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \r\n\n        update_add_deleted  (\"update add deleted\"),\n\n        \r\n\n        update_update_deleted   (\"update modified deleted\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-03-09 05:25:26","endLine":535,"groupId":"305","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/25/fda1c372f0c72e29653034cd663fbfda815255.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \r\n\n        update_obstruction  (\"update obstruction\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \r\n\n        update_add_deleted  (\"update add deleted\"),\n\n        \r\n\n        update_update_deleted   (\"update modified deleted\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":3,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"48a83fe43e012e73723229aa4026ae61862fbd92","commitMessage":"@@@Followup to r1079508 by adding the new enums to JavaHL.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Add the new enum values.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1079551 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-03-09 05:25:26","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-04-08 23:28:49","commitOrder":4,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_update (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-04-08 23:28:49","endLine":541,"groupId":"305","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/bb/ecd026d67e2d57d4e8caff179bdf0af8c78a3f.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \r\n\n        update_obstruction  (\"update obstruction\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \r\n\n        update_add_deleted  (\"update add deleted\"),\n\n        \r\n\n        update_update_deleted   (\"update modified deleted\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":4,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"d9f6ae3562702a745a95b8338fcd305f7c4853bb","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Sync notification types after recent changes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1090297 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-04-08 23:28:49","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-04-08 23:52:48","commitOrder":5,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-04-08 23:52:48","endLine":541,"groupId":"305","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f4/61c85725ae7179063807cc1a6711923dbdc007.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_update (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":5,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"5eeebfd7634d45414103911b1768fa31ddaef865","commitMessage":"@@@Followup to r1090297 by fixing a copy-pasto in an enum member name.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Change second instance of update_shadowed_update to\n    update_shadowed_delete.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1090313 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-04-08 23:52:48","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-06-16 22:34:35","commitOrder":6,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-06-16 22:34:35","endLine":551,"groupId":"305","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ce/1e7248503134f5511facc42e1aff85f07568bf.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":6,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"8e7cc49f37ca8f8581b995203ac907d9d8084b93","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Following up on r1095159.  r1099734 and\n    r1136429.  add new notification actions.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1136457 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-06-16 22:34:35","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-06-24 22:57:02","commitOrder":7,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \n        failed_locked (\"failed by lock\");\n\n        \n        failed_forbidden_by_server;\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-06-24 22:57:02","endLine":557,"groupId":"305","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/14/3c219fff346b5a241ecd41bd26fc985e11e16b.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":7,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"582f29623f92b9ddfb5966e223a5aeadaa668df9","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Add new enum values.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1139345 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-06-24 22:57:02","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-06-24 23:26:48","commitOrder":8,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \n        failed_locked (\"failed by lock\");\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-06-24 23:26:48","endLine":557,"groupId":"305","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d9/811966d63369d8471f7143b6f81a74380c7f27.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \n        failed_locked (\"failed by lock\");\n\n        \n        failed_forbidden_by_server;\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":8,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"80371a80784b330bd19d3ed96a95d28e600e2a5b","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Fix compilation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1139355 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-06-24 23:26:48","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-06-24 23:28:16","commitOrder":9,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-06-24 23:28:16","endLine":557,"groupId":"305","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/3d/7aba71f82777776d8e892441ba014b2e27a4e0.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\");\n\n        \n        failed_locked (\"failed by lock\");\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":9,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"bfc3b4bd7fe7246584b178416bca754f23163293","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Really fix compilation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1139356 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-06-24 23:28:16","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-07-05 22:17:22","commitOrder":10,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-07-05 22:17:22","endLine":560,"groupId":"305","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c6/8a87dd74921d4ef43cffdf7ef5d0c91c316c6f.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":10,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"178b25404600ac51aa2abf636312e507b5a8903e","commitMessage":"@@@Make svn update handle some access denied scenarios with a proper skip. This\nmakes it less likely that the database will be closed after updating with\nworking queue items left.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Add new value\n\n* subversion/include/svn_error_codes.h\n  (SVN_ERR_WC_PATH_ACCESS_DENIED): New error code.\n\n* subversion/include/svn_wc.h\n  (svn_wc_notify_action_t): Add new value.\n\n* subversion/libsvn_wc/questions.c\n  (svn_wc__internal_file_modified_p): Wrap EACCESS errors with\n    SVN_ERR_WC_PATH_ACCESS_DENIED to allow callers to check for this condition\n    versus any access denied.\n\n* subversion/libsvn_wc/status.c\n  (assemble_status): Handle the new error code instead of all access denied\n    errors.\n\n* subversion/libsvn_wc/update_editor.c\n  (close_file): Handle the access denied error with a proper skip. Call the\n    notification handler.\n\n* subversion/svn/notify.c\n  (notify): Handle the new skip action.\n\n* subversion/tests/cmdline/update_tests.py\n  (skip_access_denied): New windows-only test that tests access denied in\n    update and status.\n  (test_list): Add skip_access_denied.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1143071 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-05 22:17:22","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2011-12-22 00:31:35","commitOrder":11,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2011-12-22 00:31:35","endLine":563,"groupId":"305","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/b1/213c27c5425e2c47777c2f28f46112a5858b50.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":11,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"af9364f8eb7f8aa4ae72514dc55985f9ff692f77","commitMessage":"@@@Fix runtime exception ArrayIndexOutOfBoundsException: 68\n\n* subversion/bindings/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Added missing item for skip_conflicted\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1221793 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-22 00:31:35","modifiedFileCount":"1","status":"M","submitter":"Mark Phippard"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-04-25 02:01:23","commitOrder":12,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\");\n\n        \n        update_broken_lock (\"broken lock removed\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-04-25 02:01:23","endLine":567,"groupId":"305","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/30/eda1b7dbd5f7f7b88619123c371d67de59ae1b.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":12,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"ecbc5ede1e49feb36476f924c01126ef383ce830","commitMessage":"@@@Following up on r1329876.  report updated files that had only their lock removed\nwith a specific notify action.\n\n* subversion/include/svn_wc.h\n  (svn_wc_notify_action_t): Add value.\n  \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation): Add value.\n  \n* subversion/tests/cmdline/svntest/wc.py\n  (_re_parse_checkout): Handle B action.\n  \n* subversion/tests/cmdline/lock_tests.py\n  (update_locked_deleted): Update expected output.\n  \n* svn/notify.c\n  (notify): Add special action for just unlocking.\n  \n* libsvn_wc/update_editor.c\n  (close_file): Use special action.\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1329897 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-04-25 02:01:23","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-04-25 02:23:09","commitOrder":13,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-04-25 02:23:09","endLine":567,"groupId":"305","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/cb/0e623347cb77afd4c79765569065d9011e5ee3.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\");\n\n        \n        update_broken_lock (\"broken lock removed\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":13,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"7fc5b7b99dcf546e88e6c57f8d0898f6e3dd6fed","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation): Fix syntax error from r1329897.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1329911 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-04-25 02:23:09","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-05-13 03:58:11","commitOrder":14,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-05-13 03:58:11","endLine":570,"groupId":"305","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/60/f83508bcfd20cb72a4bd8fcba420e9bb65aea0.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":14,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"f1f728dba83bc343b4adab0fe95c750ce2c4fe57","commitMessage":"@@@Following up on r1337604.  report a commit error on all obstructed commit\ntargets instead of just symlink changes.\n\nNote that the old behavior could result in checking the commit status in a\ndifferent working copy.  in case a node is obstructed by another working copy.\n\nThis allows removing more processing from libsvn_wc's commit helper function.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Add new value.\n\n* subversion/include/private/svn_wc_private.h\n  (svn_wc__node_get_commit_status): Remove many unneeded arguments.\n\n* subversion/include/svn_wc.h\n  (svn_wc_notify_action_t): Add notification for obstruction.  to help gui\n    clients diagnose this error.\n\n* subversion/libsvn_client/commit_util.c\n  (harvest_status_callback): Remove unused and/or unneeded variables.\n    Generalize obstruction handling. Update caller.\n    Use result pool for lock tokens.\n\n* subversion/libsvn_wc/node.c\n  (svn_wc__node_get_commit_status): Remove unneeded processing.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1337619 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-13 03:58:11","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-06-20 00:13:56","commitOrder":15,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_start (\"conflict resolver start\"),\n        conflict_resolver_end (\"conflict resolver end\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-06-20 00:13:56","endLine":573,"groupId":"305","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/34/849fec7afb1423320ccea87ed3acd2667760ed.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\");\n\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":15,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"c8dc80edcae0d3adf84c7f33bc39585f1e2da471","commitMessage":"@@@Fix JavaHL runtime exception ArrayIndexOutOfBoundsException: 71\n\n* subversion/bindings/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Added missing item for resolver_start and resolver_end.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1351760 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-20 00:13:56","modifiedFileCount":"1","status":"M","submitter":"Stefan Sperling"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-06-20 00:26:48","commitOrder":16,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n        conflict_resolver_done (\"conflict resolver done\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-06-20 00:26:48","endLine":573,"groupId":"305","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/27/61a133d8bc5791b6fc69075f6622a04ae4f136.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_start (\"conflict resolver start\"),\n        conflict_resolver_end (\"conflict resolver end\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":16,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"521257f99cc471cb80bd9e09b20251fc2792f974","commitMessage":"@@@Cosmetic change: Give the new resolver-related notifications nicer names.\n\n* subversion/include/svn_wc.h\n  (svn_wc_notify_action_t): svn_wc_notify_conflict_resolver_{start. end} ->\n   svn_wc_notify_conflict_resolver_{starting. done}\n\n* subversion/libsvn_wc/conflicts.c\n  (svn_wc__resolve_conflicts): Track above renames.\n\n* subversion/svn/notify.c\n  (notify): Track above renames.\n\n* subversion/bindings/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): conflict_resolver_{start. end} -> conflict_resolver_{starting. done}\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1351768 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-20 00:26:48","modifiedFileCount":"1","status":"M","submitter":"Stefan Sperling"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2012-07-26 23:08:04","commitOrder":17,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2012-07-26 23:08:04","endLine":578,"groupId":"305","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/8f/d1ea99e904bd7e5d6ebee2d318fde982182a88.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n        conflict_resolver_done (\"conflict resolver done\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":17,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"a4354a379c535ebb3f54d1b837990d0c99eb9651","commitMessage":"@@@* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (Action): Add missing '\"'.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1366031 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-26 23:08:04","modifiedFileCount":"1","status":"M","submitter":"Bert Huijben"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2013-04-16 01:11:15","commitOrder":18,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\"),\n\n        \r\n\n        foreign_copy_begin (\"foreign copy begin\"),\n\n        \r\n\n        move_broken (\"move broken\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2013-04-16 01:11:15","endLine":586,"groupId":"305","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/8a/59e4d3484a049aa8eef959020678bade97d4bd.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":18,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"f3c38ef3aefab4b2d37e7bf715bd04d8428992f1","commitMessage":"@@@Updated some missing bits in JavaHL.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* ISVNClient.java.  SVNClient.java (ISVNClient.mergeReintegrate): Marked as\n   deprecated.\n* ClientNotifyInformation.java (ClientNotifyInformation.Action):\n   Added missing enumeration constants foreign_copy_begin and move_broken.\n* CommitItem.java (CommitItem.movedFromPath): New data member.\n  (CommitItem.<init>): Added parameter to initialize movedFromPath.\n  (CommitItem.getMovedFromPath): New getter method.\n* CommitItemStateFlags.java\n  (CommitItemStateFlags.LockToken. \n   CommitItemStateFlags.MovedHere): New flag constants.\n* ConflictVersion.java (ConflictVersion.reposUUID): New data member.\n  (ConflictVersion.<init>): Added parameter to initialise reposUUID.\n  (ConflictVersion.getReposUUID): New getter method.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* BasicTests.java (BasicTests.testTreeConflict): Check that\n   ConflictVersion.reposUUID is present.\n\n[in subversion/bindings/javahl/native]\n* CreateJ.cpp (CreateJ::ConflictVersion.  CreateJ::CommitItem):\n   Updated native calls to ConflictVersion and CommitItem constructors.\n* JNIUtil.cpp (JNIUtil::JNIGlobalInit): Call svn_utf_initialize2 instead\n   of the deprecated svn_utf_initialize.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1468151 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-16 01:11:15","modifiedFileCount":"7","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2013-10-28 20:01:45","commitOrder":19,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\"),\n\n        \r\n\n        foreign_copy_begin (\"foreign copy begin\"),\n\n        \r\n\n        move_broken (\"move broken\"),\n\n        \r\n\n        cleanup_external (\"cleanup external\"),\n\n        \r\n\r\n\n        failed_requires_target (\"failed requires target\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2013-10-28 20:01:45","endLine":640,"groupId":"305","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/b4/e5e7f86c19bb62b5019d75382ab8545f19f018.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\"),\n\n        \r\n\n        foreign_copy_begin (\"foreign copy begin\"),\n\n        \r\n\n        move_broken (\"move broken\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":19,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"90","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"daf57d5dee35df95d73ef0926dc1309664495378","commitMessage":"@@@Add missing enumeration mappings to JavaHL and re-enable test that was broken\nbecause of the omission.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* ClientNotifyInformation.java\n  (ClientNotifyInformation.Action.cleanup_external. \n   ClientNotifyInformation.Action.failed_requires_target): New enum constants.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* BasicTests.java (BasicTests.testCommitPartialMove): Enable test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1536319 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-28 20:01:45","modifiedFileCount":"2","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2010-06-10 23:21:11","codes":[{"authorDate":"2014-06-19 04:04:37","commitOrder":20,"curCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\"),\n\n        \r\n\n        foreign_copy_begin (\"foreign copy begin\"),\n\n        \r\n\n        move_broken (\"move broken\"),\n\n        \r\n\n        cleanup_external (\"cleanup external\"),\n\n        \r\n\r\n\n        failed_requires_target (\"failed requires target\"),\n\n        \r\n\n        info_external (\"info external\"),\n\n        \r\n\n        commit_finalizing (\"commit finalizing\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2014-06-19 04:04:37","endLine":678,"groupId":"10105","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"getHunkFuzz","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/bd/2792fbb780a555e850c40677ee59df29e3d6cd.src","preCode":"    public int getHunkFuzz()\n    {\n        return hunkFuzz;\n    }\n\n    \r\n\n    public enum Action\n    {\n        \n        add             (\"add\"),\n\n        \n        copy            (\"copy\"),\n\n        \n        delete          (\"delete\"),\n\n        \n        restore         (\"restore\"),\n\n        \n        revert          (\"revert\"),\n\n        \n        failed_revert   (\"failed revert\"),\n\n        \n        resolved        (\"resolved\"),\n\n        \n        skip            (\"skip\"),\n\n        \r\n\n\n        \n        update_delete   (\"update delete\"),\n\n        \n        update_add      (\"update add\"),\n\n        \n        update_update   (\"update modified\"),\n\n        \n        update_completed (\"update completed\"),\n\n        \r\n\r\n\n        update_external (\"update external\"),\n\n        \r\n\n        status_completed (\"status completed\"),\n\n        \n        status_external (\"status external\"),\n\n        \n        commit_modified (\"sending modified\"),\n\n        \n        commit_added    (\"sending added\"),\n\n        \n        commit_deleted  (\"sending deleted\"),\n\n        \n        commit_replaced (\"sending replaced\"),\n\n        \n        commit_postfix_txdelta (\"transfer\"),\n\n        \n        blame_revision  (\"blame revision processed\"),\n\n        \n        locked          (\"locked\"),\n\n        \n        unlocked        (\"unlocked\"),\n\n        \n        failed_lock     (\"locking failed\"),\n\n        \n        failed_unlock   (\"unlocking failed\"),\n\n        \n        exists          (\"path exists\"),\n\n        \n        changelist_set  (\"changelist set\"),\n\n        \n        changelist_clear (\"changelist cleared\"),\n\n        \n        changelist_moved    (\"changelist moved\"),\n\n        \n        merge_begin     (\"merge begin\"),\n\n        \n        foreign_merge_begin (\"foreign merge begin\"),\n\n        \n        update_replaced (\"replaced\"),\n\n        \n        property_added  (\"property added\"),\n\n        \n        property_modified (\"property modified\"),\n\n        \n        property_deleted (\"property deleted\"),\n\n        \n        property_deleted_nonexistent (\"nonexistent property deleted\"),\n\n        \n        revprop_set     (\"revprop set\"),\n\n        \n        revprop_deleted (\"revprop deleted\"),\n\n        \n        merge_completed (\"merge completed\"),\n\n        \n        tree_conflict   (\"tree conflict\"),\n\n        \r\n\n        failed_external (\"failed external\"),\n\n        \n        update_started (\"update started\"),\n\n        \n        update_skip_obstruction (\"update skip obstruction\"),\n\n        \n        update_skip_working_only (\"update skip working only\"),\n\n        \n        update_skip_access_denied (\"update skip access denied\"),\n\n        \n        update_external_removed (\"update external removed\"),\n\n        \n        update_shadowed_add (\"update shadowed add\"),\n\n        \n        update_shadowed_update (\"update shadowed update\"),\n\n        \n        update_shadowed_delete (\"update shadowed delete\"),\n\n        \n        merge_record_info   (\"merge record info\"),\n\n        \n        upgraded_path       (\"upgraded path\"),\n\n        \n        merge_record_info_begin     (\"merge record info begin\"),\n\n        \n        merge_elide_info    (\"Merge elide info\"),\n\n        \n        patch       (\"patch\"),\n\n        \n        patch_applied_hunk  (\"patch applied hunk\"),\n\n        \n        patch_rejected_hunk (\"patch rejected hunk\"),\n\n        \n        patch_hunk_already_applied (\"patch hunk already applied\"),\n\n        \r\n\n        commit_copied   (\"commit copied\"),\n\n        \r\n\n        commit_copied_replaced  (\"commit copied replaced\"),\n\n        \r\n\n        url_redirect    (\"url redirect\"),\n\n        \n        path_nonexistent (\"path nonexistent\"),\n\n        \n        exclude (\"exclude\"),\n\n        \n        failed_conflict (\"failed conflict\"),\n\n        \n        failed_missing (\"failed missing\"),\n\n        \n        failed_out_of_date (\"failed out of date\"),\n\n        \n        failed_no_parent (\"failed no parent\"),\n\n        \n        failed_locked (\"failed by lock\"),\n\n        \n        failed_forbidden_by_server (\"failed forbidden by server\"),\n\n        \n        skip_conflicted (\"skipped conflicted path\"),\n\n        \n        update_broken_lock (\"broken lock removed\"),\n\n        \n        failed_obstructed (\"failed by obstruction\"),\n\n        \n        conflict_resolver_starting (\"conflict resolver starting\"),\n\n        \n        conflict_resolver_done (\"conflict resolver done\"),\n\n        \n        left_local_modifications (\"left local modifications\"),\n\n        \r\n\n        foreign_copy_begin (\"foreign copy begin\"),\n\n        \r\n\n        move_broken (\"move broken\"),\n\n        \r\n\n        cleanup_external (\"cleanup external\"),\n\n        \r\n\r\n\n        failed_requires_target (\"failed requires target\");\n\n        \r\n\n        private String description;\n\n        Action(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"},{"authorDate":"2010-06-10 23:21:11","commitOrder":20,"curCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","date":"2010-06-10 23:21:11","endLine":483,"groupId":"10105","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"toString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/ed/d54be6ed5d539a3563d493116177e5f98145f7.src","preCode":"        public String toString()\n        {\n            return description;\n        }\n    }\n\n    public enum Status\n    {\n        \n        inapplicable    (\"inapplicable\"),\n\n        \n        unknown         (\"unknown\"),\n\n        \n        unchanged       (\"unchanged\"),\n\n        \n        missing         (\"missing\"),\n\n        \n        obstructed      (\"obstructed\"),\n\n        \n        changed         (\"changed\"),\n\n        \n        merged          (\"merged\"),\n\n        \n        conflicted      (\"conflicted\");\n\n        \r\n\n        private String description;\n\n        Status(String description)\n        {\n            this.description = description;\n        }\n\n        public String toString()\n        {\n            return description;\n        }\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"86040d490f5afc7aeee4169924a0f4ef1bec652c","commitMessage":"@@@Fix JavaHL tests.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ClientNotifyInformation.java\n  (ClientNotifyInformation.Action): Add missing enumeration constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1603616 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-19 04:04:37","modifiedFileCount":"1","status":"M","submitter":"Branko ?ibej"}]
