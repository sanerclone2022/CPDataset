[{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":3,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false, false, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-01-30 10:06:08","endLine":680,"groupId":"244","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false, false, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":634,"status":"B"},{"authorDate":"2007-07-12 05:52:26","commitOrder":3,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":553,"groupId":"143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2010-03-02 04:03:48","commitOrder":4,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"), null,\n                      false, false, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-03-02 04:03:48","endLine":684,"groupId":"381","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/47/734788eb25270974daa3e1c0b7dc7efcd91bb2.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false, false, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"},{"authorDate":"2007-07-12 05:52:26","commitOrder":4,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":553,"groupId":"143","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"}],"commitId":"5d3891f1932b0b1a17e7a0c7a8aa103b2dcabb99","commitMessage":"@@@JavaHL: For APIs which accept multiple paths.  use a Set of paths.  rather than\nan array.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update calls to the affected APIs to pass a Set.  rather than an array.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (getWCPathSet.  getWCPathSet.  getUrlSet): New helpers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update the API to accept Sets for APIs which accept multiple\n    paths.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@917687 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-02 04:03:48","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2010-08-14 04:09:35","commitOrder":5,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"), null,\n                      false, false, null, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-08-14 04:09:35","endLine":620,"groupId":"579","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/be/274490ae55c7b77b9fa5663ca0af725b3d0579.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"), null,\n                      false, false, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":574,"status":"M"},{"authorDate":"2007-07-12 05:52:26","commitOrder":5,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":553,"groupId":"143","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"}],"commitId":"a3814ee3994e0e2d9ee7c40908a5981719c1be6f","commitMessage":"@@@JavaHL: Extend the commit callback to all commit-y APIs.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests to use the updated API.\n\n* tests/org/apache/subversion/javahl/SVNTests.java:\n  Same.\n\n* subversion/bindings/javahl/native/SVNClient.h\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param.\n\n* subversion/bindings/javahl/native/SVNClient.cpp\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param. \n    and set it in the client context.\n\n* native/org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_remove. \n   Java_org_apache_subversion_javahl_SVNClient_copy. \n   Java_org_apache_subversion_javahl_SVNClient_move. \n   Java_org_apache_subversion_javahl_SVNClient_mkdir. \n   Java_org_apache_subversion_javahl_SVNClient_doImport. \n   Java_org_apache_subversion_javahl_SVNClient_propertySet):\n    Add commit callback param.  and pass it to the C++ object.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet): Add CommitCallback\n    param.\n  (propertyRemove.  propertyCreate): Add param and update callers.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Update wrappers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Add CommitCallback\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@985339 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-14 04:09:35","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2010-09-02 03:20:13","commitOrder":6,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"),\n                      false, false, null, null, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 03:20:13","endLine":633,"groupId":"281","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f3/c5129fe1c260839a5a29515f45e2ba506cb1b0.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"), null,\n                      false, false, null, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"M"},{"authorDate":"2007-07-12 05:52:26","commitOrder":6,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":553,"groupId":"143","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"}],"commitId":"7bc741ef31c0ffe597ee300eea19241a144b34a6","commitMessage":"@@@Followup to r991656.  this time with commit() and remove() APIs.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  commit): Remove Java wrappers.  and change the public API.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  commit): Update the public API to take a commit message callback.\n \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  commit): Update wrappers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@991663 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-02 03:20:13","modifiedFileCount":"4","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2010-09-03 00:34:58","commitOrder":7,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"),\n                      false, false, null, null, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl().toString(), thisTest.getWCPath(),\n                   null, null, Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-03 00:34:58","endLine":633,"groupId":"107","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/256301f178cdca9dae962d0fb360f896f60b82.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, null, Depth.infinity, false, false);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(thisTest.getWCPathSet(\"/A/D/G\"),\n                      false, false, null, null, null);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, null,\n                    Depth.infinity, false, false);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"M"},{"authorDate":"2007-07-12 05:52:26","commitOrder":7,"curCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":553,"groupId":"107","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCheckout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCheckout() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n        try\n        {\n            \r\n            client.checkout(thisTest.getUrl() + \"/A\", thisTest.getWCPath(),\n                            null, true);\n            fail(\"missing exception\");\n        }\n        catch (ClientException expected)\n        {\n        }\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemTextStatus(\"A/mu\", Status.Kind.modified);\n\n        \r\n        File lambda = new File(thisTest.getWorkingCopy(), \"A/B/lambda\");\n        lambda.delete();\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.missing);\n\n        \r\n        client.remove(new String[]{thisTest.getWCPath() + \"/A/D/G\"}, null,\n                      false);\n        thisTest.getWc().setItemTextStatus(\"A/D/G\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/pi\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/rho\", Status.Kind.deleted);\n        thisTest.getWc().setItemTextStatus(\"A/D/G/tau\", Status.Kind.deleted);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        client.checkout(thisTest.getUrl(), thisTest.getWCPath(), null, true);\n\n        \r\n        thisTest.getWc().setItemTextStatus(\"A/B/lambda\", Status.Kind.normal);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"}],"commitId":"502fbeac018384945b585dff779a333a1c5900a9","commitMessage":"@@@JavaHL: Use the java.net.URI class internally in the tests.  There are a few\nplaces we can / should use it in the public API as a more appropriate type\nthan a simple String.  but testing it out on the tests first is initialy safer.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java:\n  Update API calls to de-wrap the URI.\n\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Same.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (OneTest.makeReposUrl): Return a URI.\n  (OneTest.url): Change from String to URI.\n  (OneTest.getUrl): Return a URI.\n  (OneTest.createInitialWorkingCopy): Use the URI type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@992010 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-03 00:34:58","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"}]
