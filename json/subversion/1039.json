[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":2,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(new String[] {thisTest.getWCPath()}, null,\n                        Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-01-30 10:06:08","endLine":2072,"groupId":"476","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(new String[] {thisTest.getWCPath()}, null,\n                        Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2036,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":2,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1882,"groupId":"290","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1848,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-02 04:03:48","commitOrder":3,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-03-02 04:03:48","endLine":2081,"groupId":"476","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/47/734788eb25270974daa3e1c0b7dc7efcd91bb2.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(new String[] {thisTest.getWCPath()}, null,\n                        Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":2045,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":3,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1882,"groupId":"290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1848,"status":"N"}],"commitId":"5d3891f1932b0b1a17e7a0c7a8aa103b2dcabb99","commitMessage":"@@@JavaHL: For APIs which accept multiple paths.  use a Set of paths.  rather than\nan array.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update calls to the affected APIs to pass a Set.  rather than an array.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (getWCPathSet.  getWCPathSet.  getUrlSet): New helpers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update the API to accept Sets for APIs which accept multiple\n    paths.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@917687 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-02 04:03:48","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-08-14 04:09:35","commitOrder":4,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-08-14 04:09:35","endLine":2011,"groupId":"594","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/be/274490ae55c7b77b9fa5663ca0af725b3d0579.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1975,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":4,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1882,"groupId":"290","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1848,"status":"N"}],"commitId":"a3814ee3994e0e2d9ee7c40908a5981719c1be6f","commitMessage":"@@@JavaHL: Extend the commit callback to all commit-y APIs.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests to use the updated API.\n\n* tests/org/apache/subversion/javahl/SVNTests.java:\n  Same.\n\n* subversion/bindings/javahl/native/SVNClient.h\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param.\n\n* subversion/bindings/javahl/native/SVNClient.cpp\n  (propertySet.  doImport.  mkdir.  move.  copy.  remove): Add commit callback param. \n    and set it in the client context.\n\n* native/org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_remove. \n   Java_org_apache_subversion_javahl_SVNClient_copy. \n   Java_org_apache_subversion_javahl_SVNClient_move. \n   Java_org_apache_subversion_javahl_SVNClient_mkdir. \n   Java_org_apache_subversion_javahl_SVNClient_doImport. \n   Java_org_apache_subversion_javahl_SVNClient_propertySet):\n    Add commit callback param.  and pass it to the C++ object.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet): Add CommitCallback\n    param.\n  (propertyRemove.  propertyCreate): Add param and update callers.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Update wrappers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  copy.  move.  mkdir.  doImport.  propertySet.  propertyRemove. \n   propertyCreate): Add CommitCallback\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@985339 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-14 04:09:35","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-09-02 03:10:15","commitOrder":5,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                Depth.infinity, false, false, null,\n                new ConstMsg(\"log message for import\"), null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-02 03:10:15","endLine":1936,"groupId":"37","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/61/eeb7edcbfb369424079999a7e9bde30905c920.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", Depth.infinity,\n                false, false, null, null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1900,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":5,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1882,"groupId":"290","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1848,"status":"N"}],"commitId":"bc05bc712cc0b84c06151e40bfcdb7f513689f23","commitMessage":"@@@JavaHL: Remove the native wrapper for doImport() by updating the public API\nto accept a commit message handler.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java\n  (testBasicImport.  testBasicImportIgnores): Update tests.\n  (ConstMsg): New helper class.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java\n  (setUp): Update the import API.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/SVNClient.java\n  (doImport): Update the public API to add a log message callback.\n\n* subversion/bindings/javahl/src/org/apache/subversion/javahl/ISVNClient.java\n  (doImport): Same.\n\n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/SVNClient.java\n  (commitMessageHandler): Update wrapper.\n  (cachedHandler): New.\n  (doImport): Update wrapper.\n  (ConstMsg): New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@991656 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-02 03:10:15","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-12-31 00:46:55","commitOrder":6,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                Depth.infinity, false, false, null,\n                new ConstMsg(\"log message for import\"), null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\",\n                     update(thisTest), 2);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-12-31 00:46:55","endLine":1937,"groupId":"1039","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/38/a81b80b347d3fbe9cc65ff6b498c4014bad382.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                Depth.infinity, false, false, null,\n                new ConstMsg(\"log message for import\"), null);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                     client.update(thisTest.getWCPathSet(), null,\n                     Depth.unknown, false, false, false)[0]);\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1902,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":6,"curCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":1882,"groupId":"1039","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicImportIgnores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicImportIgnores() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File dir = new File(thisTest.getWorkingCopy(), \"dir\");\n        dir.mkdir();\n\n        \r\n        File fileC = new File(dir, \"foo.c\");\n        new FileOutputStream(fileC).close();\n\n        \r\n        File fileO = new File(dir, \"foo.o\");\n        new FileOutputStream(fileO).close();\n\n        \r\n        addExpectedCommitItem(thisTest.getWCPath(),\n                null, \"dir\", NodeKind.none, CommitItemStateFlags.Add);\n        client.doImport(dir.getAbsolutePath(), thisTest.getUrl()+\"/dir\",\n                \"log message for import\", true);\n\n        \r\n        removeDirOrFile(dir);\n\n        \r\n        assertEquals(\"wrong revision from update\", 2,\n                client.update(thisTest.getWCPath(), null, true));\n        thisTest.getWc().addItem(\"dir\", null);\n        thisTest.getWc().addItem(\"dir/foo.c\", \"\");\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":1848,"status":"N"}],"commitId":"bf046bca32b9624b1ac89ee070af41b2e37153bd","commitMessage":"@@@JavaHL: Add a couple of helpers in the testsuite to do a simple update.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java\n  (update): New helpers.\n  [elsewhere]: Use the new helpers when prudent.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1053937 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-31 00:46:55","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"}]
