[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2007-04-27 06:04:11","commitOrder":1,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":598,"groupId":"247","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":1,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPath(), null, true),\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2007-04-27 06:04:11","endLine":709,"groupId":"247","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a0/e143eecaa159a4c5dc744e73b35bafd6e18038.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPath(), null, true),\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":650,"status":"B"}],"commitId":"0284da23036b7a870c57557073c08d55c9b73c23","commitMessage":"@@@JavaHL: Split test classes into separate.  orthogonal directory\nstructure.  so that test classes can be freely mixed into the same Java\npackage as the bindings code.  while still making it clear that they\nare not part of the runtime.\n\n* build.conf\n  (javahl-tests): Point \"path\" to new directory.\n\n* Makefile.in\n  (check-javahl): Provide new package name for the RunTests class.\n\n[ in subversion/bindings/javahl/ ]\n\n* tests/org/tigris/subversion/javahl/BasicTests.java\n* tests/org/tigris/subversion/javahl/RunTests.java\n* tests/org/tigris/subversion/javahl/SVNAdminTests.java\n* tests/org/tigris/subversion/javahl/SVNTests.java\n* tests/org/tigris/subversion/javahl/WC.java\n  Add new \"tests/\" directory.  populated with contents of the old\n  \"src/org/tigris/subversion/javahl/tests/\" directory.\n\n* src/org/tigris/subversion/javahl/tests/\n  Remove directory and its contents.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@864871 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-04-27 06:04:11","modifiedFileCount":"0","status":"B","submitter":"Daniel Rall"},{"authorTime":"2007-07-12 05:52:26","codes":[{"authorDate":"2007-07-12 05:52:26","commitOrder":2,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":599,"groupId":"1089","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"M"},{"authorDate":"2007-07-12 05:52:26","commitOrder":2,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPath(), null, true),\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2007-07-12 05:52:26","endLine":712,"groupId":"1089","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/9a/18bef3094561d62b49351335823dc3941ed79d.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muPW = new PrintWriter(new FileOutputStream(mu, true));\n        muPW.print(\"appended mu text\");\n        muPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoPW = new PrintWriter(new FileOutputStream(rho, true));\n        rhoPW.print(\"new appended text for rho\");\n        rhoPW.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\",\n                                   true),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPath(), null, true),\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":652,"status":"M"}],"commitId":"2c4dcb160afdfb1e2fded097f0fd76e2674c382e","commitMessage":"@@@JavaHL: Variable naming improvement.\n\n* subversion/bindings/javahl/tests/org/tigris/subversion/javahl/BasicTests.java\n  Rename muPW and rhoPW to muWriter and rhoWriter throughout.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@865789 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-07-12 05:52:26","modifiedFileCount":"1","status":"M","submitter":"Daniel Rall"}]
