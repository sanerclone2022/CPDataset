[{"authorTime":"2013-06-28 20:52:07","codes":[{"authorDate":"2013-06-28 20:52:07","commitOrder":2,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(), null,\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(), null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2013-06-28 20:52:07","endLine":123,"groupId":"203","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/52/03c3dcb5e4c4732d092c38428e9799ad6de591.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(), null,\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(), null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"MB"},{"authorDate":"2013-06-28 20:52:07","commitOrder":2,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        ISVNRemote session = getSession(getTestRepoUrl(),\n                                        super.conf.getAbsolutePath(),\n                                        handler);\n        session.getLatestRevision(); \r\n    }\n","date":"2013-06-28 20:52:07","endLine":785,"groupId":"222","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/52/03c3dcb5e4c4732d092c38428e9799ad6de591.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        ISVNRemote session = getSession(getTestRepoUrl(),\n                                        super.conf.getAbsolutePath(),\n                                        handler);\n        session.getLatestRevision(); \r\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":752,"status":"B"}],"commitId":"e1cd4a5d8a81bbeb29ce3556ab4f07e0d62bafb1","commitMessage":"@@@Add methods to set the configuration change handler callback in JavaHL.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* ISVNClient.java.  SVNClient.java (ISVNClient.void setConfigEventHandler):\n   New method that registers a configuration event handler callback.\n\n* remote/RemoteFactory.java (RemoteFactory.setConfigEventHandler): Same method.\n  (RemoteFactory.RemoteFactory): Initialising constructor accepts a\n   new ConfigEvent parameter.\n  (RemoteFactory.open) [native method] Likewise.\n  (RemoteFactory.open): Pass ConfigEvent parameter to native open().\n\n[in subversion/bindings/javahl/native]\n* RemoteSession.h.  RemoteSession.cpp\n  (RemoteSession::open.  RemoteSession::RemoteSession):\n   Accept new config handler parameter and pass it on to the context.\n* org_apache_subversion_javahl_remote_RemoteFactory.cpp\n  (Java_org_apache_subversion_javahl_remote_RemoteFactory_open): Likewise.\n* RemoteSessionContext.h.  RemoteSessionContext.cpp\n  (RemoteSessionContext::RemoteSessionContext): Accept new config handler\n   parameter and register it in the context constructor.\n* RemoteSession.cpp (RemoteSession::open): Normalize the config directory path.\n\n* org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_setConfigEventHandler):\n   Implement SVNClient.setConfigEventHandler.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* SVNRemoteTests.java\n  (SVNRemoteTests.getSession. \n   SVNRemoteTests.testGetSession_ConfigConstructor): Update for config handler.\n  (SVNRemoteTests.testConfigHandler): New test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1497753 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-28 20:52:07","modifiedFileCount":"4","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2013-08-31 09:27:12","codes":[{"authorDate":"2013-08-31 09:27:12","commitOrder":3,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(), null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2013-08-31 09:27:12","endLine":123,"groupId":"203","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/1f/4c2acd032cabd631ee2e3558eaf3197e750ff3.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(), null,\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(), null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2013-08-31 09:27:12","commitOrder":3,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        try {\n            SVNUtil.setConfigEventHandler(handler);\n            ISVNRemote session = getSession();\n            session.getLatestRevision();\n        } finally {\n            SVNUtil.setConfigEventHandler(null);\n        }\n    }\n","date":"2013-08-31 09:27:12","endLine":818,"groupId":"222","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/1f/4c2acd032cabd631ee2e3558eaf3197e750ff3.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        ISVNRemote session = getSession(getTestRepoUrl(),\n                                        super.conf.getAbsolutePath(),\n                                        handler);\n        session.getLatestRevision(); \r\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":782,"status":"M"}],"commitId":"d4a7e4c104b57e1f556b2fdfcdff6f08bee80af8","commitMessage":"@@@[Reverted in r1539931]\n\nIntroduce global configuration options into JavaHL:\n - An option to completely ignore Subversion's authentication credentials\n   store.  so that JavaHL-based clients can implement their own auth store\n   using the authentication callbacks;\n - A global callback triggered by loading the configuration files into\n   memory (this replaces the current ISVNClient and ISVNRemote object-\n   specific callbacks).\n\n* build.conf (private-built-includes):\n   Added org_apache_subversion_javahl_util_ConfigLib.h.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* ISVNClient.java.  SVNClient.java\n  (ISVNClient.setConfigEventHandler): Removed.\n* remote/RemoteFactory.java\n  (RemoteFactory.setConfigEventHandler. configHandler): Removed.\n  (RemoteFactory.RemoteFactory): Removed configHandler parameter.\n  (RemoteFactory.open): Likewise; all callers updated.\n* SVNUtil.java\n  (SVNUtil.enableNativeCredentialsStore. \n   SVNUtil.disableNativeCredentialsStore. \n   SVNUtil.isNativeCredentialsStoreEnabled. \n   SVNUtil.setConfigEventHandler. \n   SVNUtil.getConfigEventHandler): New static methods.\n* util/ConfigLib.java (ConfigLib): New file and public class.\n   Implements the new methods in SVNUtil.\n\n[in subversion/bindings/javahl/native]\n* GlobalConfig.h (GlobalConfig): New file and class.\n* JNIUtil.h (JNIUtil::g_configMutex): New global mutex.\n   Controls access to the global configuration parameters.\n* JNIUtil.cpp (JNIUtil::JNIInit): Make initialisation guard atomic.\n   Initialise JNIUtil::g_configMutex.\n* OperationContext.h\n  (OperationContext::setConfigCallback. \n   OperationContext::getConfigCallback): Removed.\n* OperationContext.cpp (OperationContext::attachJavaObject):\n   Initialise the context-specific copy of the config event callback\n   from the global configuration.\n  (OperationContext::getAuthBaton): If the native credentials store is\n   disabled.  do not add the default authn providers.\n  (OperationContext::setConfigCallback. \n   OperationContext::getConfigCallback): Removed obsolete implementation.\n* RemoteSession.h (RemoteSession.open.  RemoteSession.RemoteSession):\n   Remove the jconfigHandler parameter from these functions.\n* RemoteSessionContext.h (RemoteSessionContext.RemoteSessionContext):\n   Remove the jconfigHandler parameter.\n* RemoteSession.cpp.  RemoteSessionContext.cpp: Update implementation\n   now that the jconfigHandler parameters are gone.\n* SVNClient.cpp (SVNClient::openRemoteSession): Update implementation\n   now that the jconfigHandler parameters are gone.\n* org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_setConfigEventHandler): Gone.\n* org_apache_subversion_javahl_remote_RemoteFactory.cpp\n  (Java_org_apache_subversion_javahl_remote_RemoteFactory_open): No more\n   jconfigHandler parameter.\n* org_apache_subversion_javahl_util_ConfigLib.cpp: New file.\n   Implements ConfigLib native wrappers and the GlobalConfig class.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* SVNRemoteTests.java\n  (SVNRemoteTests.getSession.  SVNRemoteTests.testGetSession_ConfigConstructor):\n   Removed configHandler parameter.\n  (SVNRemoteTests.testConfigHandler): Use SVNUtil method to set the handler.\n* SVNTests.java (SVNTests.init): Optionally disable the native credentials\n   store for the test run.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1519126 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-31 09:27:12","modifiedFileCount":"6","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2013-08-31 09:27:12","codes":[{"authorDate":"2013-10-15 12:29:52","commitOrder":4,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2013-10-15 12:29:52","endLine":124,"groupId":"203","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/3c/28317a78fd3c9c9a60ea1c2269561bdec57f75.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(), null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2013-08-31 09:27:12","commitOrder":4,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        try {\n            SVNUtil.setConfigEventHandler(handler);\n            ISVNRemote session = getSession();\n            session.getLatestRevision();\n        } finally {\n            SVNUtil.setConfigEventHandler(null);\n        }\n    }\n","date":"2013-08-31 09:27:12","endLine":818,"groupId":"222","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/1f/4c2acd032cabd631ee2e3558eaf3197e750ff3.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        try {\n            SVNUtil.setConfigEventHandler(handler);\n            ISVNRemote session = getSession();\n            session.getLatestRevision();\n        } finally {\n            SVNUtil.setConfigEventHandler(null);\n        }\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":782,"status":"N"}],"commitId":"61dcdbe4a4a9e384e123b1cd162afb7bee67d7f2","commitMessage":"@@@Expose the tunnel management callbacks in JavaHL.\n\n* build.conf (private-built-includes): Add new generated JavaHL headers.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* callback/TunnelAgent.java: New public interface.\n* ISVNClient.java.  SVNClient.java (ISVNClient.setTunnelAgent): New method.\n* remote/RemoteFactory.java\n  (RemoteFactory.RemoteFactory): New parameter tunnelAgent.\n  (RemoteFactory.setTunnelAgent): New method.\n  (RemoteFactory.tunnelAgent): New member.\n  (RemoteFactory.open): New parameter tunnelAgent; all callers updated.\n* util/TunnelChannel.java.  util/RequestChannel.java.  util/ResponseChannel.java:\n   New private utility classes; implement byte channes for tunnels.\n\n[in subversion/bindings/javahl/native]\n* OperationContext.h\n  (OperationContext::m_jtunnelcb): New class member.\n  (OperationContext::checkTunnel. \n   OperationContext::openTunnel. \n   OperationContext::closeTUnnel): New static methods.\n  (OperationContext::setTunnelCallback. \n   OperationContext::getTunnelCallback): New methods.\n* OperationContext.cpp\n  (OperationContext::OperationContext): Initialise m_jtunnelcb.\n  (OperationContext::~OperationContext): Release m_jtunnelcb.\n  (OperationContext::checkTunnel.  OperationContext::openTunnel. \n   OperationContext::closeTUnnel.  OperationContext::setTunnelCallback. \n   OperationContext::getTunnelCallback): Implement.\n  (TunnelContext): New local helper class.\n  (create_Channel.  create_RequestChannel. \n   create_ResponseChannel): new local helper functions.\n\n* ClientContext.h (ClientContext::setTunnelCallback): Override method.\n* ClientContext.cpp (ClientContext::ClientContext): Set tunnel callbacks.\n  (ClientContext::setTunnelCallback): Implement.\n\n* RemoteSessionContext.h\n  (RemoteSessionContext::RemoteSessionContext): New parameter jtunnelcb.\n* RemoteSessionContext.cpp\n  (RemoteSessionContext::RemoteSessionContext): Update signature and\n   set tunnel callbacks.\n\n* RemoteSession.h (RemoteSession::open.  RemoteSession::RemoteSession):\n   New parameter jtunnelcb.\n* RemoteSession.cpp (RemoteSession::open.  RemoteSession::RemoteSession):\n   Update signature and implementation.\n* SVNClient.cpp (SVNClient::openRemoteSession): Pass the tunnel callback\n   from the context to the session factory.\n\n* org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_setTunnelAgent):\n   Implement native method.\n* org_apache_subversion_javahl_remote_RemoteFactory.cpp\n  (Java_org_apache_subversion_javahl_remote_RemoteFactory_open)\n   Update native method.\n* org_apache_subversion_javahl_util_TunnelChannel.cpp: New.\n   Implementation of TunnelChannel.  RequestChannel and ResponseChannel.\n\n* JNIByteArray.h (JNIByteArray::m_abortOnRelease): New member.\n  (JNIByteArray::JNIByteArray): New default parameter abortOnRelease.\n* JNIByteArray.cpp (JNIByteArray::JNIByteArray): Update constructor.\n  (JNIByteArray::~JNIByteArray): Optionally commit array changes.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* SVNTests.java (SVNTests.DefaultProgressListener): Make protected.\n* BasicTests.java (BasicTests.Tunnel): New helper class.\n  (BasicTests.testTunnelAgent): New test case for tunnels.\n* SVNRemoteTests.java\n  (SVNRemoteTests.testSessionGC) Update factory construction.\n  (SVNRemoteTests.testGetSession_ConfigConstructor): Likewise.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1532182 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-15 12:29:52","modifiedFileCount":"6","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2013-11-08 15:07:18","codes":[{"authorDate":"2013-11-08 15:07:18","commitOrder":5,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2013-11-08 15:07:18","endLine":124,"groupId":"203","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/77/a9a4e8758a5bd7840df73f54ec092873ec0d12.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2013-11-08 15:07:18","commitOrder":5,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n\n            };\n\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, handler, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        session.getLatestRevision();\n    }\n","date":"2013-11-08 15:07:18","endLine":864,"groupId":"574","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/77/a9a4e8758a5bd7840df73f54ec092873ec0d12.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n            };\n\n        try {\n            SVNUtil.setConfigEventHandler(handler);\n            ISVNRemote session = getSession();\n            session.getLatestRevision();\n        } finally {\n            SVNUtil.setConfigEventHandler(null);\n        }\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":819,"status":"M"}],"commitId":"88c2f5dd5a71b879123f4736bd0324ab714297e8","commitMessage":"@@@Revert r1519126: JavaHL's ConfigEvent handler is connection-specific\nagain.  not global. The reason for this reversion is that client may\nwant to adjust configuration based on a specific connection rather\nthan globally.  and it's easier to do so if the callback objects can\nstore the per-connection parameters.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1539931 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-08 15:07:18","modifiedFileCount":"6","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2014-06-07 02:01:51","codes":[{"authorDate":"2014-06-07 02:01:51","commitOrder":6,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, null, \r\n\n                new DefaultPromptUserPassword(),\n                null, null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2014-06-07 02:01:51","endLine":128,"groupId":"203","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/c9c6448a8ba0c22c5fc8f233f1761a0a2d1b7d.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2014-06-07 02:01:51","commitOrder":6,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n\n            };\n\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, null, \r\n                new DefaultPromptUserPassword(),\n                null, handler, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        session.getLatestRevision();\n    }\n","date":"2014-06-07 02:01:51","endLine":1001,"groupId":"574","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/c9c6448a8ba0c22c5fc8f233f1761a0a2d1b7d.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n\n            };\n\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, PASSWORD,\n                new DefaultPromptUserPassword(),\n                null, handler, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        session.getLatestRevision();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":956,"status":"M"}],"commitId":"b57b7f1fe184cd9e674c9592bbbfc0918bad23b6","commitMessage":"@@@Tweak JavaHL tests to test the authentication callback\nimplementation a bit more.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java:\n   Do not set the default password in the remote session anywhere.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1600972 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-07 02:01:51","modifiedFileCount":"1","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2014-06-07 04:00:20","codes":[{"authorDate":"2014-06-07 04:00:20","commitOrder":7,"curCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            if (DefaultAuthn.useDeprecated())\n                session = new RemoteFactory(\n                    super.conf.getAbsolutePath(),\n                    USERNAME, null, \r\n                    DefaultAuthn.getDeprecated(),\n                    null, null, null)\n                    .openRemoteSession(getTestRepoUrl());\n            else\n                session = new RemoteFactory(\n                    super.conf.getAbsolutePath(),\n                    USERNAME, null, \r\n                    DefaultAuthn.getDefault(),\n                    null, null, null)\n                    .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","date":"2014-06-07 04:00:20","endLine":138,"groupId":"1079","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSession_ConfigConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f8/266f0275693f37555c91dc3e3a05d0a9cafc29.src","preCode":"    public void testGetSession_ConfigConstructor() throws Exception\n    {\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, null, \r\n\n                new DefaultPromptUserPassword(),\n                null, null, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        assertNotNull(\"Null session was returned by factory\", session);\n        assertEquals(getTestRepoUrl(), session.getSessionUrl());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2014-06-07 04:00:20","commitOrder":7,"curCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n\n            };\n\n        ISVNRemote session;\n        try\n        {\n            if (DefaultAuthn.useDeprecated())\n                session = new RemoteFactory(\n                    super.conf.getAbsolutePath(),\n                    USERNAME, null, \r\n                    DefaultAuthn.getDeprecated(),\n                    null, handler, null)\n                    .openRemoteSession(getTestRepoUrl());\n            else\n                session = new RemoteFactory(\n                    super.conf.getAbsolutePath(),\n                    USERNAME, null, \r\n                    DefaultAuthn.getDefault(),\n                    null, handler, null)\n                    .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        session.getLatestRevision();\n    }\n","date":"2014-06-07 04:00:20","endLine":1028,"groupId":"1079","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigHandler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f8/266f0275693f37555c91dc3e3a05d0a9cafc29.src","preCode":"    public void testConfigHandler() throws Exception\n    {\n        ConfigEvent handler = new ConfigEvent()\n            {\n                public void onLoad(ISVNConfig cfg)\n                {\n                    \r\n                    onecat(cfg.config());\n                    \r\n                    onecat(cfg.servers());\n                }\n\n                private void onecat(ISVNConfig.Category cat)\n                {\n                    for (String sec : cat.sections()) {\n                        \r\n                        ISVNConfig.Enumerator en = new ISVNConfig.Enumerator()\n                            {\n                                public void option(String name, String value)\n                                {\n                                    \r\n                                    \r\n                                }\n                            };\n                        cat.enumerate(sec, en);\n                    }\n                }\n\n            };\n\n        ISVNRemote session;\n        try\n        {\n            session = new RemoteFactory(\n                super.conf.getAbsolutePath(),\n                USERNAME, null, \r\n                new DefaultPromptUserPassword(),\n                null, handler, null)\n                .openRemoteSession(getTestRepoUrl());\n        }\n        catch (ClientException ex)\n        {\n            throw new RuntimeException(ex);\n        }\n        session.getLatestRevision();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNRemoteTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":975,"status":"M"}],"commitId":"ddc2fb935260f3906099a770ea5062a81181a4a8","commitMessage":"@@@Modify JavaHL tests to enable testing with the deprecated\nUserPasswordCallback authentication interface.\n\n* Makefile.in\n  (check-deprecated-authn-javahl): New target.\n  (check-all-javahl): Include dependency on check-deprecated-authn-javahl.\n\n[in subversion/bindings/javahl]\n* src/org/apache/subversion/javahl/ISVNClient.java. \n  src/org/apache/subversion/javahl/SVNClient.java\n  (ISVNClient.setPrompt): Add overloads for both AuthnCallback\n   and UserPasswordCallback variants.\n* src/org/apache/subversion/javahl/remote/RemoteFactory.java\n  (RemoteFactory.RemoteFactory.  RemoteFactory.setPrompt): Likewise.\n  (RemoteFactory.open): Handler both types of prompters. Update all callers.\n\n* native/org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_setPrompt*): Implement native overloads\n   of the ISVNClent.setPrompt() method.\n* native/org_apache_subversion_javahl_remote_RemoteFactory.cpp\n  (Java_org_apache_subversion_javahl_remote_RemoteFactory_open):\n   Adjust implementation for changed prototype.\n* native/RemoteSession.h.  native/RemoteSession.cpp\n  (RemoteSession::open): Create prompter wrapper depending on which type\n   of prompter was set in the factory.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (SVNTests.DefaultPromptUserPassword): Removed.\n  (SVNTests.DefaultAuthn): New; factory for both variants of the prompter.\n  (SVNTests.initClient): Select prompter based on system propery settings.\n* tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/SVNRemoteTests.java:\n   Select prompter based on system propery settings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1600993 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-07 04:00:20","modifiedFileCount":"6","status":"M","submitter":"Branko ?ibej"}]
