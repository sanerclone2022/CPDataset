[{"authorTime":"2013-08-29 18:45:44","codes":[{"authorDate":"2013-08-29 18:45:44","commitOrder":3,"curCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","date":"2013-08-29 18:45:44","endLine":104,"groupId":"274","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFileDiff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/22/879828fc13b691fc4fea43c52e8977eaece55e.src","preCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"MB"},{"authorDate":"2013-08-29 18:45:44","commitOrder":3,"curCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\" + NL +\n                                 \"modified\\n\" +\n                                 \"||||||| base\" + NL +\n                                 \"original\\n\" +\n                                 \"=======\" + NL +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\" + NL +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","date":"2013-08-29 18:45:44","endLine":139,"groupId":"320","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFileMerge","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/22/879828fc13b691fc4fea43c52e8977eaece55e.src","preCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\" + NL +\n                                 \"modified\\n\" +\n                                 \"||||||| base\" + NL +\n                                 \"original\\n\" +\n                                 \"=======\" + NL +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\" + NL +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"MB"}],"commitId":"d067556ce8c2a4757cff481275c446c1283caf47","commitMessage":"@@@Updated JavaHL diff utilities to return useful values from the diff and merge\nfunctions. Incidentally.  attempted to fix the related tests on Windows.\n\n[in subversion/bindings/javahl/src/org/apache/subversion/javahl]\n* SVNUtil.java (SVNUtil.fileDiff): Return a boolean value indicating\n   that there were differences between the files.\n  (SVNUtil.fileMerge): Return a boolean value indicating that\n   the merge produced conflicts.\n\n* util/DiffLib.java\n   (DiffLib.fileDiff.  DiffLib.fileMerge. \n    DiffLib.nativeFileDiff.  DiffLib.nativeFileMerge):\n    Same changes as above.\n\n[in subversion/bindings/javahl/native]\n* org_apache_subversion_javahl_util_DiffLib.cpp\n  (Java_org_apache_subversion_javahl_util_DiffLib_nativeFileDiff. \n   Java_org_apache_subversion_javahl_util_DiffLib_nativeFileMerge):\n   Calculate and and return the boolean return value.\n\n[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]\n* UtilTests.java (UtilTests.testFileDiff): Check return value from\n   SVNUtil.fileDiff.  and adjust expected output for platform-specific\n   end-of-line sequences.\n  (UtilTests.testFileMerge): Similar changes as above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1518577 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-29 18:45:44","modifiedFileCount":"3","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2013-08-30 01:56:24","codes":[{"authorDate":"2013-08-29 18:45:44","commitOrder":4,"curCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","date":"2013-08-29 18:45:44","endLine":104,"groupId":"274","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFileDiff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/22/879828fc13b691fc4fea43c52e8977eaece55e.src","preCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2013-08-30 01:56:24","commitOrder":4,"curCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\\n\" +\n                                 \"modified\\n\" +\n                                 \"||||||| base\\n\" +\n                                 \"original\\n\" +\n                                 \"=======\\n\" +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\\n\" +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","date":"2013-08-30 01:56:24","endLine":139,"groupId":"320","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFileMerge","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/0c/9790951915a6dada7b38fb1a7ecb92d04bc161.src","preCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\" + NL +\n                                 \"modified\\n\" +\n                                 \"||||||| base\" + NL +\n                                 \"original\\n\" +\n                                 \"=======\" + NL +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\" + NL +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"8faa3dec770bc4365791527346441efeb618e4c6","commitMessage":"@@@Revert the part of r1518577 that modified the JavaHL merge utility test.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java\n  (UtilTests.testFileMerge): Do not use platform-specific newlines in the\n   expected output. Unlike diff.  merge apparently uses the surrounding end-of-line\n   style when outputting the conflict markers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1518733 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-30 01:56:24","modifiedFileCount":"1","status":"M","submitter":"Branko ?ibej"},{"authorTime":"2013-10-25 09:22:48","codes":[{"authorDate":"2013-10-25 09:22:48","commitOrder":5,"curCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        assertTrue(Arrays.equals(expected, result.toByteArray()));\n    }\n","date":"2013-10-25 09:22:48","endLine":102,"groupId":"1065","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFileDiff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a9/0112266d740457286ef3707bc721dc8c9af701.src","preCode":"    public void testFileDiff() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean diffs =  SVNUtil.fileDiff(original.getAbsolutePath(),\n                                          modified.getAbsolutePath(),\n                                          null, \"original\", \"modified\", \"UTF-8\",\n                                          null, result);\n        assertTrue(diffs);\n\n        final byte[] expected = (\"--- original\" + NL +\n                                 \"+++ modified\" + NL +\n                                 \"@@ -3,7 +3,7 @@\" + NL +\n                                 \" 3\\n 4\\n \\n\" +\n                                 \"-original\\n\" +\n                                 \"+modified\\n\" +\n                                 \" \\n N-3\\n N-2\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2013-10-25 09:22:48","commitOrder":5,"curCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\\n\" +\n                                 \"modified\\n\" +\n                                 \"||||||| base\\n\" +\n                                 \"original\\n\" +\n                                 \"=======\\n\" +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\\n\" +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        assertTrue(Arrays.equals(expected, result.toByteArray()));\n    }\n","date":"2013-10-25 09:22:48","endLine":137,"groupId":"1065","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFileMerge","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/a9/0112266d740457286ef3707bc721dc8c9af701.src","preCode":"    public void testFileMerge() throws Throwable\n    {\n        File original = File.createTempFile(\"merge\", \".original\", localTmp);\n        File modified = File.createTempFile(\"merge\", \".modified\", localTmp);\n        File latest = File.createTempFile(\"merge\", \".latest\", localTmp);\n\n        writeFileContents(original, \"\\noriginal\\n\\n\");\n        writeFileContents(modified, \"\\nmodified\\n\\n\");\n        writeFileContents(latest, \"\\nlatest\\n\\n\");\n\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),\n                                              modified.getAbsolutePath(),\n                                              latest.getAbsolutePath(),\n                                              null,\n                                              \"||||||| base\",\n                                              \"<<<<<<< branch\",\n                                              \">>>>>>> local\",\n                                              \"=======\",\n                                              SVNUtil.ConflictDisplayStyle.modified_original_latest,\n                                              result);\n        assertTrue(conflicts);\n\n        final byte[] expected = (\"1\\n2\\n3\\n4\\n\\n\" +\n                                 \"<<<<<<< branch\\n\" +\n                                 \"modified\\n\" +\n                                 \"||||||| base\\n\" +\n                                 \"original\\n\" +\n                                 \"=======\\n\" +\n                                 \"latest\\n\" +\n                                 \">>>>>>> local\\n\" +\n                                 \"\\nN-3\\nN-2\\nN-1\\nN\\n\").getBytes();\n        Assert.assertArrayEquals(expected, result.toByteArray());\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"84bcd6bdbd49d24d129210687ba68a2a833b11fe","commitMessage":"@@@Do not require JUnit to build JavaHL; only to test it.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/UtilTests.java:\n   Do not import org.junit.Assert.\n  (UtilTests.testFileDiff.  UtilTests.testFileMerge): Update assertions.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1535603 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-25 09:22:48","modifiedFileCount":"1","status":"M","submitter":"Branko ?ibej"}]
