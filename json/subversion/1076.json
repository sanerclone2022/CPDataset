[{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":2,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2010-01-30 10:06:08","endLine":845,"groupId":"567","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d9/3bbb076669c9bc40229e7bf07e2bc31bac5af8.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":816,"status":"B"},{"authorDate":"2007-04-27 06:04:11","commitOrder":2,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2007-04-27 06:04:11","endLine":782,"groupId":"567","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c4/1acc8d363812332e41daa5c02feb8524e96496.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"NB"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-02-27 02:44:49","commitOrder":3,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2010-02-27 02:44:49","endLine":839,"groupId":"31","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/bf/ae36d43c4336f37538969a6cccde3ecbd857e6.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":3,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2007-04-27 06:04:11","endLine":782,"groupId":"567","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c4/1acc8d363812332e41daa5c02feb8524e96496.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"N"}],"commitId":"43cefcd9e88aec9d52b835ea9095a6ae0d46768f","commitMessage":"@@@JavaHL: Followup to the change to Java 5.0 language features: get rid of\nIterators in the test suite.\n\n[ in subversion/bindings/javahl/tests/ ]\n* org/apache/subversion/javahl/BasicTests.java. \n  org/apache/subversion/javahl/SVNTests.java. \n  org/apache/subversion/javahl/WC.java:\n    Remove any use of iterators in favor of the new for-each loop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@916783 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-27 02:44:49","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-03-04 02:07:25","commitOrder":4,"curCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2010-03-04 02:07:25","endLine":870,"groupId":"31","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(Set<CommitItem>elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/d5/386299cf425af5eff695d8cbfb0078aef383d6.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":845,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":4,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2007-04-27 06:04:11","endLine":782,"groupId":"567","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c4/1acc8d363812332e41daa5c02feb8524e96496.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"N"}],"commitId":"7149883b26b89baef628beba97a64e39d76eaea9","commitMessage":"@@@JavaHL: Update another API to return a Set of items.  rather than an array.\n\n[ subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (testBasicCommit): Expect the new API.\n\n* native/CommitMessage.cpp\n  (getCommitMessage): Update to create a Set of items.  rather than an array.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (commitMessageHandler): Update wrapper.\n\n* src/org/apache/subversion/javahl/CommitMessage.java\n  (getLogMessage): Return a set of commit items.  rather than an array.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@918604 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-04 02:07:25","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-09-03 02:04:32","commitOrder":5,"curCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl().toString();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2010-09-03 02:04:32","endLine":825,"groupId":"31","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(Set<CommitItem>elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/b3/0b8a6217945b015b13ac558edfacc41f612ac7.src","preCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":800,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":5,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2007-04-27 06:04:11","endLine":782,"groupId":"567","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c4/1acc8d363812332e41daa5c02feb8524e96496.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"N"}],"commitId":"fe452e80d6f456b487cd00142ed99a2ee7060c10","commitMessage":"@@@[Note from future: reverted in r993356.]\n\nJavaHL: Make a couple of URI fields of the public java.net.URI type.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java\n  (getLogMessage): Retrieve the string from the commit item.\n \n* subversion/bindings/javahl/native/CreateJ.cpp\n  (CommitItem): Create the URIs for the commit item.\n \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/CommitItem.java\n  (url.  copyUrl): Re-type as URIs.\n  (CommitItem): Accept URI parameters.\n  (getUrl.  getCopyUrl): Return URIs.\n\n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/CommitItem.java\n  (CommitItem): Update wrapper constructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@992041 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-03 02:04:32","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2007-04-27 06:04:11","codes":[{"authorDate":"2010-09-07 21:42:33","commitOrder":6,"curCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2010-09-07 21:42:33","endLine":825,"groupId":"31","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(Set<CommitItem>elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/f8/1a0b25d185bfcfb7915cb507eab49873ab6460.src","preCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl().toString();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":800,"status":"M"},{"authorDate":"2007-04-27 06:04:11","commitOrder":6,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2007-04-27 06:04:11","endLine":782,"groupId":"567","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommited)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/c4/1acc8d363812332e41daa5c02feb8524e96496.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"N"}],"commitId":"3f0f3f14935624122e428ea02eab01206f58030b","commitMessage":"@@@Revert r992041.  as a result of this discussion:\nhttp://svn.haxx.se/dev/archive-2010-09/0044.shtml\n\nNote: this revert itself accidentally included a change for ConflictVersion. \nwhich was reverted in r993358.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@993356 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-07 21:42:33","modifiedFileCount":"4","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2011-07-13 02:37:44","codes":[{"authorDate":"2011-07-13 02:37:44","commitOrder":7,"curCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommitted)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommitted)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2011-07-13 02:37:44","endLine":826,"groupId":"1076","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getLogMessage","params":"(Set<CommitItem>elementsToBeCommitted)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/5e/4f32e36ac079f81912bad37dbf61f0781235c7.src","preCode":"        public String getLogMessage(Set<CommitItem> elementsToBeCommited)\n        {\n            \r\n            for (CommitItem commitItem : elementsToBeCommited)\n            {\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = expectedCommitItems.get(key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (String str : expectedCommitItems.keySet())\n            {\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":801,"status":"M"},{"authorDate":"2011-07-13 02:37:44","commitOrder":7,"curCode":"        public String getLogMessage(CommitItem[] elementsToBeCommitted)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommitted.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommitted[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","date":"2011-07-13 02:37:44","endLine":904,"groupId":"1076","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getLogMessage","params":"(CommitItem[]elementsToBeCommitted)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/8b/7d6ff49a66b66dad2e18923cd4f58bdc2a4a13.src","preCode":"        public String getLogMessage(CommitItem[] elementsToBeCommited)\n        {\n            \r\n            for (int i = 0; i < elementsToBeCommited.length; i++)\n            {\n                CommitItem commitItem = elementsToBeCommited[i];\n                \r\n                \r\n                String key;\n                if (commitItem.getUrl() != null)\n                    key = commitItem.getUrl();\n                else\n                    key = commitItem.getPath();\n\n                MyCommitItem myItem = (MyCommitItem) expectedCommitItems.get(\n                        key);\n                \r\n                assertNotNull(\"commit item for \"+key+ \" not expected\", myItem);\n                myItem.test(commitItem, key);\n            }\n\n            \r\n            for (Iterator iterator = expectedCommitItems.keySet().iterator();\n                 iterator.hasNext();)\n            {\n                String str =  (String) iterator.next();\n                fail(\"commit item for \"+str+\" not found\");\n            }\n            return logMessage;\n        }\n","realPath":"subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":875,"status":"M"}],"commitId":"0f313771c1197fc5e513d4d68cd3d216f339d03d","commitMessage":"@@@Fix spelling of committed everywhere.\n\n* contrib/hook-scripts/enforcer/enforcer. \n* notes/merge-tracking/func-spec.html. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/CommitInfo.java. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/CommitItem.java. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/CommitItemStateFlags.java. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/callback/CommitMessageCallback.java. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/types/ChangePath.java. \n* subversion/bindings/javahl/src/org/apache/subversion/javahl/types/Revision.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/ChangePath.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/CommitItem.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/CommitItemStateFlags.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/CommitMessage.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/Revision.java. \n* subversion/bindings/javahl/src/org/tigris/subversion/javahl/SVNClientInterface.java. \n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/SVNTests.java. \n* subversion/bindings/javahl/tests/org/tigris/subversion/javahl/SVNTests.java. \n* subversion/include/svn_repos.h. \n* subversion/libsvn_client/mergeinfo.c. \n* tools/hook-scripts/svnperms.py:\n  s/commited/committed/g.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1145712 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-13 02:37:44","modifiedFileCount":"14","status":"M","submitter":"Blair Zajac"}]
