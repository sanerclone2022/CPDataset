[{"authorTime":"2010-01-30 10:06:08","codes":[{"authorDate":"2010-01-30 10:06:08","commitOrder":1,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-01-30 10:06:08","endLine":726,"groupId":"247","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"B"},{"authorDate":"2010-01-30 10:06:08","commitOrder":1,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(new String[] {backupTest.getWCPath()}, null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2010-01-30 10:06:08","endLine":842,"groupId":"247","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/85b406f167dae59b5a39f282a07a7e60ca4c97.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(new String[] {backupTest.getWCPath()}, null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":781,"status":"B"}],"commitId":"6928e23ce539756dfb45f2763d31147ec1abb736","commitMessage":"@@@JavaHL: First attempt to port the JavaHL tests to the new org.apache.subversion\npackage.  The tests should now compile with 'make javahl-compat-tests'.  but\nit is doubtful they will run and/or pass.\n\n* Makefile.in:\n  Add check-javahl-compat target.\n\n* build.conf\n  (javahl-compat-tests): New.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java. \n  tests/org/apache/subversion/javahl/BasicTests.java. \n  tests/org/apache/subversion/javahl/RunTests.java. \n  tests/org/apache/subversion/javahl/SVNTests.java. \n  tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/NotifyAction.java. \n  src/org/apache/subversion/javahl/IInput.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/BlameCallbackImpl.java. \n  src/org/apache/subversion/javahl/LogMessage.java. \n  src/org/apache/subversion/javahl/ScheduleKind.java. \n  src/org/apache/subversion/javahl/IOutput.java. \n  src/org/apache/subversion/javahl/SVNAdmin.java. \n  src/org/apache/subversion/javahl/MergeinfoLogKind.java. \n  src/org/apache/subversion/javahl/Path.java:\n  New.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@904709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-01-30 10:06:08","modifiedFileCount":"0","status":"B","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-03-02 04:03:48","codes":[{"authorDate":"2010-03-02 04:03:48","commitOrder":2,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(thisTest.getWCPathSet(),\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-03-02 04:03:48","endLine":730,"groupId":"247","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/47/734788eb25270974daa3e1c0b7dc7efcd91bb2.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":690,"status":"M"},{"authorDate":"2010-03-02 04:03:48","commitOrder":2,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(thisTest.getWCPathSet(),\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2010-03-02 04:03:48","endLine":843,"groupId":"247","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/47/734788eb25270974daa3e1c0b7dc7efcd91bb2.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(new String[]{thisTest.getWCPath()},\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(new String[] {backupTest.getWCPath()}, null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":782,"status":"M"}],"commitId":"5d3891f1932b0b1a17e7a0c7a8aa103b2dcabb99","commitMessage":"@@@JavaHL: For APIs which accept multiple paths.  use a Set of paths.  rather than\nan array.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update calls to the affected APIs to pass a Set.  rather than an array.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (getWCPathSet.  getWCPathSet.  getUrlSet): New helpers.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update wrappers to use Sets.\n\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (remove.  update.  commit.  mkdir.  addToChangelist.  removeFromChangelist.  lock. \n   unlock): Update the API to accept Sets for APIs which accept multiple\n    paths.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@917687 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-03-02 04:03:48","modifiedFileCount":"5","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-08-14 01:33:26","codes":[{"authorDate":"2010-08-14 01:33:26","commitOrder":3,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-08-14 01:33:26","endLine":664,"groupId":"247","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/84c56f6e8239568042dfe9508cd92c5f82b3dd.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(thisTest.getWCPathSet(),\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":626,"status":"M"},{"authorDate":"2010-08-14 01:33:26","commitOrder":3,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2010-08-14 01:33:26","endLine":778,"groupId":"247","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/7b/84c56f6e8239568042dfe9508cd92c5f82b3dd.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        assertEquals(\"wrong revision number from commit\",\n                     client.commit(thisTest.getWCPathSet(),\n                                   \"log msg\", Depth.infinity, false, false,\n                                   null, null),\n                     2);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":719,"status":"M"}],"commitId":"4059dd07b9460b84f3966fcc2e55462194eb4412","commitMessage":"@@@JavaHL: Introduce the commit information callback for the commit() API.  This\ncallback will eventually spread to the other commit-y APIs.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Update tests calling commit().\n\n* native/CreateJ.cpp. \n* native/CreateJ.h\n  (CommitInfo): New.\n\n* native/SVNClient.h. \n* native/SVNClient.cpp\n  (commit): Update to use the user-provided callback.\n  (CommitNotfier): Remove.\n  (getContext): Don't set up the commit notifier.\n\n* native/CommitCallback.h:\n  New.\n\n* native/CommitCallback.cpp:\n  New.\n\n* native/org_apache_subversion_javahl_SVNClient.cpp\n  (Java_org_apache_subversion_javahl_SVNClient_commit): Change return type and\n    params to match the Java API.\n\n* src/org/apache/subversion/javahl/CommitInfo.java:\n  New.\n\n* src/org/apache/subversion/javahl/SVNClient.java\n* src/org/apache/subversion/javahl/ISVNClient.java\n  (commit): Take a callback to return the commit revision.  author.  date.  etc.\n\n* src/org/apache/subversion/javahl/callback/CommitCallback.java:\n  New.\n\n* src/org/tigris/subversion/javahl/SVNClient.java\n  (commit): Update compat wrapper for new callback.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@985295 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-14 01:33:26","modifiedFileCount":"4","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-09-03 00:34:58","codes":[{"authorDate":"2010-09-03 00:34:58","commitOrder":4,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-03 00:34:58","endLine":677,"groupId":"247","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/256301f178cdca9dae962d0fb360f896f60b82.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":639,"status":"M"},{"authorDate":"2010-09-03 00:34:58","commitOrder":4,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2010-09-03 00:34:58","endLine":791,"groupId":"247","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/256301f178cdca9dae962d0fb360f896f60b82.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"M"}],"commitId":"502fbeac018384945b585dff779a333a1c5900a9","commitMessage":"@@@JavaHL: Use the java.net.URI class internally in the tests.  There are a few\nplaces we can / should use it in the public API as a more appropriate type\nthan a simple String.  but testing it out on the tests first is initialy safer.\n\n[ in subversion/bindings/javahl/ ]\n* tests/org/apache/subversion/javahl/SVNAdminTests.java:\n  Update API calls to de-wrap the URI.\n\n* tests/org/apache/subversion/javahl/BasicTests.java:\n  Same.\n\n* tests/org/apache/subversion/javahl/SVNTests.java\n  (OneTest.makeReposUrl): Return a URI.\n  (OneTest.url): Change from String to URI.\n  (OneTest.getUrl): Return a URI.\n  (OneTest.createInitialWorkingCopy): Use the URI type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@992010 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-03 00:34:58","modifiedFileCount":"3","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2010-12-31 00:46:55","codes":[{"authorDate":"2010-09-03 00:34:58","commitOrder":5,"curCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","date":"2010-09-03 00:34:58","endLine":677,"groupId":"108","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/21/256301f178cdca9dae962d0fb360f896f60b82.src","preCode":"    public void testBasicCommit() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":639,"status":"N"},{"authorDate":"2010-12-31 00:46:55","commitOrder":5,"curCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     update(backupTest), 2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","date":"2010-12-31 00:46:55","endLine":788,"groupId":"108","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/38/a81b80b347d3fbe9cc65ff6b498c4014bad382.src","preCode":"    public void testBasicUpdate() throws Throwable\n    {\n        \r\n        OneTest thisTest = new OneTest();\n\n        \r\n        OneTest backupTest = thisTest.copy(\".backup\");\n\n        \r\n        File mu = new File(thisTest.getWorkingCopy(), \"A/mu\");\n        PrintWriter muWriter = new PrintWriter(new FileOutputStream(mu, true));\n        muWriter.print(\"appended mu text\");\n        muWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        thisTest.getWc().setItemContent(\"A/mu\",\n                thisTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/mu\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        File rho = new File(thisTest.getWorkingCopy(), \"A/D/G/rho\");\n        PrintWriter rhoWriter =\n            new PrintWriter(new FileOutputStream(rho, true));\n        rhoWriter.print(\"new appended text for rho\");\n        rhoWriter.close();\n        thisTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        thisTest.getWc().setItemContent(\"A/D/G/rho\",\n                thisTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n        addExpectedCommitItem(thisTest.getWCPath(),\n                thisTest.getUrl().toString(), \"A/D/G/rho\",NodeKind.file,\n                CommitItemStateFlags.TextMods);\n\n        \r\n        checkCommitRevision(thisTest, \"wrong revision number from commit\", 2,\n                            thisTest.getWCPathSet(), \"log msg\", Depth.infinity,\n                            false, false, null, null);\n\n        \r\n        thisTest.checkStatus();\n\n        \r\n        assertEquals(\"wrong revision number from update\",\n                     client.update(backupTest.getWCPathSet(), null,\n                                   Depth.unknown, false, false, false)[0],\n                     2);\n\n        \r\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/mu\", 2);\n        backupTest.getWc().setItemContent(\"A/mu\",\n                backupTest.getWc().getItemContent(\"A/mu\") + \"appended mu text\");\n        backupTest.getWc().setItemWorkingCopyRevision(\"A/D/G/rho\", 2);\n        backupTest.getWc().setItemContent(\"A/D/G/rho\",\n                backupTest.getWc().getItemContent(\"A/D/G/rho\")\n                + \"new appended text for rho\");\n\n        \r\n        backupTest.checkStatus();\n    }\n","realPath":"subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":731,"status":"M"}],"commitId":"bf046bca32b9624b1ac89ee070af41b2e37153bd","commitMessage":"@@@JavaHL: Add a couple of helpers in the testsuite to do a simple update.\n\n* subversion/bindings/javahl/tests/org/apache/subversion/javahl/BasicTests.java\n  (update): New helpers.\n  [elsewhere]: Use the new helpers when prudent.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1053937 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-31 00:46:55","modifiedFileCount":"1","status":"M","submitter":"Hyrum Kurt Wright"}]
