[{"authorTime":"2008-05-25 10:30:40","codes":[{"authorDate":"2011-01-04 00:36:51","commitOrder":5,"curCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","date":"2011-01-04 00:36:51","endLine":62,"groupId":"211","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"LogDate","params":"(Stringdatestr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/af/2ef9ccbbd21e6f7362edf143dba774a9be6b18.src","preCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/types/LogDate.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2008-05-25 10:30:40","commitOrder":5,"curCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z') \n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000 \n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","date":"2008-05-25 10:30:40","endLine":57,"groupId":"211","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"LogDate","params":"(Stringdatestr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/20/223dbd0e395cd49e8e6818475fbd37095df583.src","preCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z') \n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000 \n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","realPath":"subversion/bindings/javahl/src/org/tigris/subversion/javahl/LogDate.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"}],"commitId":"9577ed3e8975b54e98001d91913db452eb7a836c","commitMessage":"@@@JavaHL: Move several classes to the types package.\n\nThis will break JavaHL for a bit.  while I patch up the C++-side of things.\n\n[ in subversion/bindings/javahl/ ]\n\n* tests/org/apache/subversion/javahl/WC.java. \n  src/org/apache/subversion/javahl/ClientNotifyInformation.java. \n  src/org/apache/subversion/javahl/CopySource.java. \n  src/org/apache/subversion/javahl/CommitInfo.java. \n  src/org/apache/subversion/javahl/RevisionRange.java. \n  src/org/apache/subversion/javahl/callback/StatusCallback.java. \n  src/org/apache/subversion/javahl/callback/LogMessageCallback.java. \n  src/org/apache/subversion/javahl/callback/ListCallback.java. \n  src/org/apache/subversion/javahl/ConflictDescriptor.java:\n  Update imports and doc references.\n\n* src/org/apache/subversion/javahl/ConflictVersion.java. \n  src/org/apache/subversion/javahl/LogDate.java. \n  src/org/apache/subversion/javahl/DirEntry.java. \n  src/org/apache/subversion/javahl/ChangePath.java. \n  src/org/apache/subversion/javahl/Status.java. \n  src/org/apache/subversion/javahl/Revision.java. \n  src/org/apache/subversion/javahl/Lock.java:\n  Moved to src/org/apache/subversion/javahl/types/.\n\n* src/org/tigris/subversion/javahl/ConflictVersion.java. \n  src/org/tigris/subversion/javahl/SVNClient.java. \n  src/org/tigris/subversion/javahl/SVNAdmin.java. \n  src/org/tigris/subversion/javahl/Revision.java. \n  src/org/tigris/subversion/javahl/Lock.java. \n  src/org/tigris/subversion/javahl/DirEntry.java. \n  src/org/tigris/subversion/javahl/Status.java. \n  src/org/tigris/subversion/javahl/ChangePath.java:\n  Update references to implementation classes (from the wrappers).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1054680 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-04 00:36:51","modifiedFileCount":"17","status":"M","submitter":"Hyrum Kurt Wright"},{"authorTime":"2013-04-27 03:48:34","codes":[{"authorDate":"2013-04-27 03:48:34","commitOrder":6,"curCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date;\n        synchronized(formatter)\n        {\n            date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        }\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","date":"2013-04-27 03:48:34","endLine":64,"groupId":"1093","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"LogDate","params":"(Stringdatestr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/64/55fa01e068297606eb0e24410c859866d2898c.src","preCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","realPath":"subversion/bindings/javahl/src/org/apache/subversion/javahl/types/LogDate.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2013-04-27 03:48:34","commitOrder":6,"curCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date;\n        synchronized(formatter)\n        {\n            date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        }\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","date":"2013-04-27 03:48:34","endLine":66,"groupId":"1093","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"LogDate","params":"(Stringdatestr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-subversion-10-0.7/blobInfo/CC_OUT/blobs/0a/7c80882c71324b146a39c0535e77e8e07da5a7.src","preCode":"    public LogDate(String datestr) throws ParseException\n    {\n        if (datestr == null || datestr.length() != 27 || datestr.charAt(26) != 'Z')\n        {\n            throw new ParseException(\"String is not a valid Subversion date\", 0);\n        }\n        Date date = formatter.parse(datestr.substring(0, 23) + \" UTC\");\n        this.cachedString = datestr;\n        cachedDate = Calendar.getInstance(UTC);\n        cachedDate.setTime(date);\n        timeMicros = cachedDate.getTimeInMillis() * 1000\n                        + Integer.parseInt(datestr.substring(23, 26));\n    }\n","realPath":"subversion/bindings/javahl/src/org/tigris/subversion/javahl/LogDate.java","repoName":"subversion","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"e8b05b2d58174aa10b0995748642985a6ea68acf","commitMessage":"@@@JavaHL: fix a thread safety bug that has been observed in Subclipse.\n\nThe Java SimpleDateFormat class is not thread safe. Solved by synchronizing\nthe use of the object. Also audited all of our usage of this class and only\nthis one usage has an issue. There are alternate implementations we could use. \nbut we would have to copy in the class to our package. I chose to take the simple\napproach.\n\nOne example we could use if someone objects to using synchronized.\n\nhttps://code.google.com/p/safe-simple-date-format/\n\n[ in subversion/bindings/javahl/ ]\n\n* src/org/apache/subversion/javahl/types/LogDate.java\n  Synchronize the usage of SimpleDateFormat\n\n* src/org/tigris/subversion/javahl/LogDate.java\n  Synchronize the usage of SimpleDateFormat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1476359 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-27 03:48:34","modifiedFileCount":"2","status":"M","submitter":"Mark Phippard"}]
