[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void shiftMergedRowsToMergedRowsUp() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 2);\n\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 1, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(1, sheet.getLastRowNum(), -1);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A1:C1\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","date":"2021-04-08 05:40:33","endLine":661,"groupId":"19367","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shiftMergedRowsToMergedRowsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/67/d351bffcb2497ac2ffb7af14fbdeec11e00484.src","preCode":"    void shiftMergedRowsToMergedRowsUp() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 2);\n\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 1, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(1, sheet.getLastRowNum(), -1);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A1:C1\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","realPath":"poi/src/test/java/org/apache/poi/ss/usermodel/BaseTestSheetShiftRows.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void shiftMergedRowsToMergedRowsOverlappingMergedRegion() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 10);\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 7, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(0, 0, 4);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A5:E5\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","date":"2021-04-08 05:40:33","endLine":683,"groupId":"19367","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shiftMergedRowsToMergedRowsOverlappingMergedRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/67/d351bffcb2497ac2ffb7af14fbdeec11e00484.src","preCode":"    void shiftMergedRowsToMergedRowsOverlappingMergedRegion() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 10);\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 7, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(0, 0, 4);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A5:E5\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","realPath":"poi/src/test/java/org/apache/poi/ss/usermodel/BaseTestSheetShiftRows.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":664,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-08-29 07:48:48","codes":[{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    void shiftMergedRowsToMergedRowsUp() throws IOException {\n        try (Workbook wb = _testDataProvider.createWorkbook()) {\n            Sheet sheet = wb.createSheet(\"test\");\n            populateSheetCells(sheet, 2);\n\n\n            CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n            CellRangeAddress A2_C2 = new CellRangeAddress(1, 1, 0, 2);\n\n            assertEquals(0, sheet.addMergedRegion(A1_E1));\n            assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n            \r\n            \r\n            sheet.shiftRows(1, sheet.getLastRowNum(), -1);\n\n            assertEquals(1, sheet.getNumMergedRegions());\n            assertEquals(CellRangeAddress.valueOf(\"A1:C1\"), sheet.getMergedRegion(0));\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":636,"groupId":"101361","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"shiftMergedRowsToMergedRowsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/86/9b591effa53459f025af5ea433b1e9d42a12c4.src","preCode":"    void shiftMergedRowsToMergedRowsUp() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 2);\n\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 1, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(1, sheet.getLastRowNum(), -1);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A1:C1\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","realPath":"poi/src/test/java/org/apache/poi/ss/usermodel/BaseTestSheetShiftRows.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"M"},{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    void shiftMergedRowsToMergedRowsOverlappingMergedRegion() throws IOException {\n        try (Workbook wb = _testDataProvider.createWorkbook()) {\n            Sheet sheet = wb.createSheet(\"test\");\n            populateSheetCells(sheet, 10);\n\n            CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n            CellRangeAddress A2_C2 = new CellRangeAddress(1, 7, 0, 2);\n\n            assertEquals(0, sheet.addMergedRegion(A1_E1));\n            assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n            \r\n            \r\n            sheet.shiftRows(0, 0, 4);\n\n            assertEquals(1, sheet.getNumMergedRegions());\n            assertEquals(CellRangeAddress.valueOf(\"A5:E5\"), sheet.getMergedRegion(0));\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":657,"groupId":"101361","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"shiftMergedRowsToMergedRowsOverlappingMergedRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/86/9b591effa53459f025af5ea433b1e9d42a12c4.src","preCode":"    void shiftMergedRowsToMergedRowsOverlappingMergedRegion() throws IOException {\n        Workbook wb = _testDataProvider.createWorkbook();\n        Sheet sheet = wb.createSheet(\"test\");\n        populateSheetCells(sheet, 10);\n\n        CellRangeAddress A1_E1 = new CellRangeAddress(0, 0, 0, 4);\n        CellRangeAddress A2_C2 = new CellRangeAddress(1, 7, 0, 2);\n\n        assertEquals(0, sheet.addMergedRegion(A1_E1));\n        assertEquals(1, sheet.addMergedRegion(A2_C2));\n\n        \r\n        \r\n        sheet.shiftRows(0, 0, 4);\n\n        assertEquals(1, sheet.getNumMergedRegions());\n        assertEquals(CellRangeAddress.valueOf(\"A5:E5\"), sheet.getMergedRegion(0));\n\n        wb.close();\n    }\n","realPath":"poi/src/test/java/org/apache/poi/ss/usermodel/BaseTestSheetShiftRows.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":639,"status":"M"}],"commitId":"f71cebcce5ed809ee15cd69524f8cb0b0b2ea47c","commitMessage":"@@@sonar fixes\nclose resources in tests\nfix gradle warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1892683 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-08-29 07:48:48","modifiedFileCount":"44","status":"M","submitter":"Andreas Beeker"}]
