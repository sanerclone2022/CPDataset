[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testAddSlides2() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        \r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(2, ppt.getSlides().size());\n    }\n","date":"2021-04-08 05:40:33","endLine":91,"groupId":"4777","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddSlides2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/c5/39a09b03f70632f3a5f4b7330c94f16c719aa4.src","preCode":"    void testAddSlides2() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        \r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(2, ppt.getSlides().size());\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/model/TestSlides.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testAddSlides3() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        HSLFSlide s3 = ppt.createSlide();\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(5, s3._getSheetRefId());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(3, s3.getSlideNumber());\n\n\n        \r\n         ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(3, ppt.getSlides().size());\n\n        \r\n        s1 = ppt.getSlides().get(0);\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(3, s1._getSheetRefId());\n        s2 = ppt.getSlides().get(1);\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(4, s2._getSheetRefId());\n        s3 = ppt.getSlides().get(2);\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(5, s3._getSheetRefId());\n    }\n","date":"2021-04-08 05:40:33","endLine":140,"groupId":"4777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSlides3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/c5/39a09b03f70632f3a5f4b7330c94f16c719aa4.src","preCode":"    void testAddSlides3() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        HSLFSlide s3 = ppt.createSlide();\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(5, s3._getSheetRefId());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(3, s3.getSlideNumber());\n\n\n        \r\n         ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(3, ppt.getSlides().size());\n\n        \r\n        s1 = ppt.getSlides().get(0);\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(3, s1._getSheetRefId());\n        s2 = ppt.getSlides().get(1);\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(4, s2._getSheetRefId());\n        s3 = ppt.getSlides().get(2);\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(5, s3._getSheetRefId());\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/model/TestSlides.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-05-14 08:37:50","codes":[{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testAddSlides2() throws Exception {\n        try (HSLFSlideShow ppt1 = new HSLFSlideShow()) {\n            assertTrue(ppt1.getSlides().isEmpty());\n\n            HSLFSlide s1 = ppt1.createSlide();\n            assertEquals(1, ppt1.getSlides().size());\n            assertEquals(3, s1._getSheetRefId());\n            assertEquals(256, s1._getSheetNumber());\n            assertEquals(1, s1.getSlideNumber());\n\n            HSLFSlide s2 = ppt1.createSlide();\n            assertEquals(2, ppt1.getSlides().size());\n            assertEquals(4, s2._getSheetRefId());\n            assertEquals(257, s2._getSheetNumber());\n            assertEquals(2, s2.getSlideNumber());\n\n            \r\n            try (HSLFSlideShow ppt2 = writeOutAndReadBack(ppt1)) {\n                assertEquals(2, ppt2.getSlides().size());\n            }\n        }\n    }\n","date":"2021-05-14 08:37:50","endLine":82,"groupId":"10297","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddSlides2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/15/850e60475ba56febdfce3e9d384184796522f2.src","preCode":"    void testAddSlides2() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        \r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(2, ppt.getSlides().size());\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/model/TestSlides.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testAddSlides3() throws Exception {\n        try (HSLFSlideShow ppt1 = new HSLFSlideShow()) {\n            assertTrue(ppt1.getSlides().isEmpty());\n\n            HSLFSlide s1 = ppt1.createSlide();\n            assertEquals(1, ppt1.getSlides().size());\n            assertEquals(3, s1._getSheetRefId());\n            assertEquals(256, s1._getSheetNumber());\n            assertEquals(1, s1.getSlideNumber());\n\n            HSLFSlide s2 = ppt1.createSlide();\n            assertEquals(2, ppt1.getSlides().size());\n            assertEquals(4, s2._getSheetRefId());\n            assertEquals(257, s2._getSheetNumber());\n            assertEquals(2, s2.getSlideNumber());\n\n            HSLFSlide s3 = ppt1.createSlide();\n            assertEquals(3, ppt1.getSlides().size());\n            assertEquals(5, s3._getSheetRefId());\n            assertEquals(258, s3._getSheetNumber());\n            assertEquals(3, s3.getSlideNumber());\n\n\n            \r\n            try (HSLFSlideShow ppt2 = writeOutAndReadBack(ppt1)) {\n                assertEquals(3, ppt2.getSlides().size());\n\n                \r\n                s1 = ppt2.getSlides().get(0);\n                assertEquals(256, s1._getSheetNumber());\n                assertEquals(3, s1._getSheetRefId());\n                s2 = ppt2.getSlides().get(1);\n                assertEquals(257, s2._getSheetNumber());\n                assertEquals(4, s2._getSheetRefId());\n                s3 = ppt2.getSlides().get(2);\n                assertEquals(3, ppt2.getSlides().size());\n                assertEquals(258, s3._getSheetNumber());\n                assertEquals(5, s3._getSheetRefId());\n            }\n        }\n    }\n","date":"2021-05-14 08:37:50","endLine":128,"groupId":"10297","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddSlides3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/15/850e60475ba56febdfce3e9d384184796522f2.src","preCode":"    void testAddSlides3() throws Exception {\n        HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl( TestSlides.class.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\") ));\n        assertTrue(ppt.getSlides().isEmpty());\n\n        HSLFSlide s1 = ppt.createSlide();\n        assertEquals(1, ppt.getSlides().size());\n        assertEquals(3, s1._getSheetRefId());\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(1, s1.getSlideNumber());\n\n        HSLFSlide s2 = ppt.createSlide();\n        assertEquals(2, ppt.getSlides().size());\n        assertEquals(4, s2._getSheetRefId());\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(2, s2.getSlideNumber());\n\n        HSLFSlide s3 = ppt.createSlide();\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(5, s3._getSheetRefId());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(3, s3.getSlideNumber());\n\n\n        \r\n         ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ppt.write(out);\n        out.close();\n\n        ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())));\n        assertEquals(3, ppt.getSlides().size());\n\n        \r\n        s1 = ppt.getSlides().get(0);\n        assertEquals(256, s1._getSheetNumber());\n        assertEquals(3, s1._getSheetRefId());\n        s2 = ppt.getSlides().get(1);\n        assertEquals(257, s2._getSheetNumber());\n        assertEquals(4, s2._getSheetRefId());\n        s3 = ppt.getSlides().get(2);\n        assertEquals(3, ppt.getSlides().size());\n        assertEquals(258, s3._getSheetNumber());\n        assertEquals(5, s3._getSheetRefId());\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/model/TestSlides.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"0614835c55f44ab6f3e9b0850ca51e0e53a65a49","commitMessage":"@@@#65304 - Add commons-io as a dependency\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1889871 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-05-14 08:37:50","modifiedFileCount":"277","status":"M","submitter":"Andreas Beeker"}]
