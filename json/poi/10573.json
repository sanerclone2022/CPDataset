[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testRepeatedEval() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"test_conditional_formatting.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(0);\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n    }\n","date":"2021-04-08 05:40:33","endLine":167,"groupId":"10129","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepeatedEval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/4e/6257c650dc32d11456ba93220f7a40f4cbff78.src","preCode":"    void testRepeatedEval() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"test_conditional_formatting.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(0);\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/ss/tests/usermodel/TestConditionalFormattingEval.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testCellValueIsWrongType() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"conditional_formatting_cell_is.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(1);\n\n        assertEquals(1, getRulesFor(3, 1).size(), \"wrong # of matching rules\");\n    }\n","date":"2021-04-08 05:40:33","endLine":178,"groupId":"10129","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCellValueIsWrongType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/4e/6257c650dc32d11456ba93220f7a40f4cbff78.src","preCode":"    void testCellValueIsWrongType() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"conditional_formatting_cell_is.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(1);\n\n        assertEquals(1, getRulesFor(3, 1).size(), \"wrong # of matching rules\");\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/ss/tests/usermodel/TestConditionalFormattingEval.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-04-26 23:12:22","codes":[{"authorDate":"2021-04-26 23:12:22","commitOrder":2,"curCode":"    void testRepeatedEval() throws IOException {\n        try (XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook(\"test_conditional_formatting.xlsx\")) {\n            XSSFFormulaEvaluator formulaEval = new XSSFFormulaEvaluator(wb);\n            ConditionalFormattingEvaluator cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n            Sheet sheet = wb.getSheetAt(0);\n            assertEquals(0, getRulesFor(2, 1, sheet, cfe).size(), \"no rules should apply\");\n\n            assertEquals(0, getRulesFor(2, 1, sheet, cfe).size(), \"no rules should apply\");\n        }\n    }\n","date":"2021-04-26 23:12:22","endLine":149,"groupId":"10573","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRepeatedEval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/f6/903206da1df735a05d6249bca86b68cfae26b8.src","preCode":"    void testRepeatedEval() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"test_conditional_formatting.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(0);\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n        assertEquals(0, getRulesFor(2, 1).size(), \"no rules should apply\");\n\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/ss/tests/usermodel/TestConditionalFormattingEval.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2021-04-26 23:12:22","commitOrder":2,"curCode":"    void testCellValueIsWrongType() throws IOException {\n        try (XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook(\"conditional_formatting_cell_is.xlsx\")) {\n            XSSFFormulaEvaluator formulaEval = new XSSFFormulaEvaluator(wb);\n            ConditionalFormattingEvaluator cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n            Sheet sheet = wb.getSheetAt(1);\n\n            assertEquals(1, getRulesFor(3, 1, sheet, cfe).size(), \"wrong # of matching rules\");\n        }\n    }\n","date":"2021-04-26 23:12:22","endLine":161,"groupId":"10573","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCellValueIsWrongType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/f6/903206da1df735a05d6249bca86b68cfae26b8.src","preCode":"    void testCellValueIsWrongType() {\n        wb = XSSFTestDataSamples.openSampleWorkbook(\"conditional_formatting_cell_is.xlsx\");\n        formulaEval = new XSSFFormulaEvaluator(wb);\n        cfe = new ConditionalFormattingEvaluator(wb, formulaEval);\n\n        sheet = wb.getSheetAt(1);\n\n        assertEquals(1, getRulesFor(3, 1).size(), \"wrong # of matching rules\");\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/ss/tests/usermodel/TestConditionalFormattingEval.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"9517445fa944a1ce199283819d571c378a447139","commitMessage":"@@@Rework test to not cause file-handle leaks and add an exclude for Log4j 2\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1889203 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-26 23:12:22","modifiedFileCount":"2","status":"M","submitter":"Dominik Stadler"}]
