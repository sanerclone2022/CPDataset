[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testWrite() throws Exception {\n\t\tComment2000 ca = new Comment2000(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","date":"2021-04-08 05:40:33","endLine":156,"groupId":"1777","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/19/a12a95a2f9cb026cb9e937027cbb5e3e14eff8.src","preCode":"    void testWrite() throws Exception {\n\t\tComment2000 ca = new Comment2000(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/record/TestComment2000.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testWrite() throws Exception {\n\t\tComment2000Atom ca = new Comment2000Atom(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","date":"2021-04-08 05:40:33","endLine":118,"groupId":"1777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/05/68afaef5ade5fb1bfc4d8f640de3190d10db68.src","preCode":"    void testWrite() throws Exception {\n\t\tComment2000Atom ca = new Comment2000Atom(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/record/TestComment2000Atom.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-05-14 08:37:50","codes":[{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testWrite() throws Exception {\n\t\tComment2000 ca = new Comment2000(data_a, 0, data_a.length);\n\t\tUnsynchronizedByteArrayOutputStream baos = new UnsynchronizedByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\t\tassertArrayEquals(data_a, b);\n\t}\n","date":"2021-05-14 08:37:50","endLine":151,"groupId":"10258","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/ff/ff00f289a0d9176fcb2266079c70c0a8f29d4b.src","preCode":"    void testWrite() throws Exception {\n\t\tComment2000 ca = new Comment2000(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/record/TestComment2000.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testWrite() throws Exception {\n\t\tComment2000Atom ca = new Comment2000Atom(data_a, 0, data_a.length);\n\t\tUnsynchronizedByteArrayOutputStream baos = new UnsynchronizedByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\t\tassertArrayEquals(data_a, b);\n\t}\n","date":"2021-05-14 08:37:50","endLine":113,"groupId":"10258","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/f3/bbdcaa8fb200c152f4ff11a23f5f0d5ef79b39.src","preCode":"    void testWrite() throws Exception {\n\t\tComment2000Atom ca = new Comment2000Atom(data_a, 0, data_a.length);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tca.writeOut(baos);\n\t\tbyte[] b = baos.toByteArray();\n\n\t\tassertEquals(data_a.length, b.length);\n\t\tfor(int i=0; i<data_a.length; i++) {\n\t\t\tassertEquals(data_a[i],b[i]);\n\t\t}\n\t}\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/record/TestComment2000Atom.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"0614835c55f44ab6f3e9b0850ca51e0e53a65a49","commitMessage":"@@@#65304 - Add commons-io as a dependency\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1889871 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-05-14 08:37:50","modifiedFileCount":"277","status":"M","submitter":"Andreas Beeker"}]
