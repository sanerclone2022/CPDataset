[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    private static void populateData(Workbook wb, final int rowNum, final int sheetNum) {\n        for(int i = 0; i < sheetNum; i++){\n            Sheet sh = wb.createSheet(\"sheet\" + i);\n            for(int j = 0; j < rowNum; j++){\n                Row row = sh.createRow(j);\n                Cell cell1 = row.createCell(0);\n                cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                Cell cell2 = row.createCell(1);\n                cell2.setCellValue(i);\n\n                Cell cell3 = row.createCell(2);\n                cell3.setCellValue(j);\n            }\n        }\n    }\n","date":"2021-04-08 05:40:33","endLine":332,"groupId":"9240","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"populateData","params":"(Workbookwb@finalintrowNum@finalintsheetNum)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/e0/65b26adb12d67a01af04750ebf64145cc54c74.src","preCode":"    private static void populateData(Workbook wb, final int rowNum, final int sheetNum) {\n        for(int i = 0; i < sheetNum; i++){\n            Sheet sh = wb.createSheet(\"sheet\" + i);\n            for(int j = 0; j < rowNum; j++){\n                Row row = sh.createRow(j);\n                Cell cell1 = row.createCell(0);\n                cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                Cell cell2 = row.createCell(1);\n                cell2.setCellValue(i);\n\n                Cell cell3 = row.createCell(2);\n                cell3.setCellValue(j);\n            }\n        }\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    private static void populateData(DeferredSXSSFWorkbook wb, final int rowNum, final int sheetNum) {\n        for (int i = 0; i < sheetNum; i++) {\n            DeferredSXSSFSheet sheet = wb.createSheet(\"sheet\" + i);\n            int index = i;\n            sheet.setRowGenerator((sh) -> {\n                for (int j = 0; j < rowNum; j++) {\n                    Row row = sh.createRow(j);\n                    Cell cell1 = row.createCell(0);\n                    cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                    Cell cell2 = row.createCell(1);\n                    cell2.setCellValue(index);\n\n                    Cell cell3 = row.createCell(2);\n                    cell3.setCellValue(j);\n                }\n            });\n        }\n    }\n","date":"2021-04-08 05:40:33","endLine":305,"groupId":"15765","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"populateData","params":"(DeferredSXSSFWorkbookwb@finalintrowNum@finalintsheetNum)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/74/df887a504b928ca4eeef46c2fe095701e4fd19.src","preCode":"    private static void populateData(DeferredSXSSFWorkbook wb, final int rowNum, final int sheetNum) {\n        for (int i = 0; i < sheetNum; i++) {\n            DeferredSXSSFSheet sheet = wb.createSheet(\"sheet\" + i);\n            int index = i;\n            sheet.setRowGenerator((sh) -> {\n                for (int j = 0; j < rowNum; j++) {\n                    Row row = sh.createRow(j);\n                    Cell cell1 = row.createCell(0);\n                    cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                    Cell cell2 = row.createCell(1);\n                    cell2.setCellValue(index);\n\n                    Cell cell3 = row.createCell(2);\n                    cell3.setCellValue(j);\n                }\n            });\n        }\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestDeferredSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-08-29 07:48:48","codes":[{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    private static void populateData(Workbook wb) {\n        for(int i = 0; i < 5; i++){\n            Sheet sh = wb.createSheet(\"sheet\" + i);\n            for(int j = 0; j < 1000; j++){\n                Row row = sh.createRow(j);\n                Cell cell1 = row.createCell(0);\n                cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                Cell cell2 = row.createCell(1);\n                cell2.setCellValue(i);\n\n                Cell cell3 = row.createCell(2);\n                cell3.setCellValue(j);\n            }\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":309,"groupId":"10857","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"populateData","params":"(Workbookwb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/f4/eb9e0990560ce45f952583f1f3210942857737.src","preCode":"    private static void populateData(Workbook wb, final int rowNum, final int sheetNum) {\n        for(int i = 0; i < sheetNum; i++){\n            Sheet sh = wb.createSheet(\"sheet\" + i);\n            for(int j = 0; j < rowNum; j++){\n                Row row = sh.createRow(j);\n                Cell cell1 = row.createCell(0);\n                cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                Cell cell2 = row.createCell(1);\n                cell2.setCellValue(i);\n\n                Cell cell3 = row.createCell(2);\n                cell3.setCellValue(j);\n            }\n        }\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"},{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    private static void populateData(DeferredSXSSFWorkbook wb) {\n        for (int i = 0; i < 5; i++) {\n            DeferredSXSSFSheet sheet = wb.createSheet(\"sheet\" + i);\n            int index = i;\n            sheet.setRowGenerator((sh) -> {\n                for (int j = 0; j < 1000; j++) {\n                    Row row = sh.createRow(j);\n                    Cell cell1 = row.createCell(0);\n                    cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                    Cell cell2 = row.createCell(1);\n                    cell2.setCellValue(index);\n\n                    Cell cell3 = row.createCell(2);\n                    cell3.setCellValue(j);\n                }\n            });\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":298,"groupId":"10857","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"populateData","params":"(DeferredSXSSFWorkbookwb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/c0/7b59ca132a250ad2298b15a20fa07d8637ca5e.src","preCode":"    private static void populateData(DeferredSXSSFWorkbook wb, final int rowNum, final int sheetNum) {\n        for (int i = 0; i < sheetNum; i++) {\n            DeferredSXSSFSheet sheet = wb.createSheet(\"sheet\" + i);\n            int index = i;\n            sheet.setRowGenerator((sh) -> {\n                for (int j = 0; j < rowNum; j++) {\n                    Row row = sh.createRow(j);\n                    Cell cell1 = row.createCell(0);\n                    cell1.setCellValue(new CellReference(cell1).formatAsString());\n\n                    Cell cell2 = row.createCell(1);\n                    cell2.setCellValue(index);\n\n                    Cell cell3 = row.createCell(2);\n                    cell3.setCellValue(j);\n                }\n            });\n        }\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestDeferredSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"f71cebcce5ed809ee15cd69524f8cb0b0b2ea47c","commitMessage":"@@@sonar fixes\nclose resources in tests\nfix gradle warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1892683 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-08-29 07:48:48","modifiedFileCount":"44","status":"M","submitter":"Andreas Beeker"}]
