[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"\tvoid testGetSimpleText() throws IOException {\n\t\t\r\n\t\tXSSFExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\n\t\tString text = extractor.getText();\n\t\tassertTrue(text.length() > 0);\n\n\t\t\r\n\t\tassertStartsWith(text, \"Sheet1\");\n\t\tassertEndsWith(text, \"Sheet3\\n\");\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(false);\n\t\ttext = extractor.getText();\n\t\tString CHUNK1 =\n\t\t\t\"Lorem\\t111\\n\" +\n    \t\t\"ipsum\\t222\\n\" +\n    \t\t\"dolor\\t333\\n\" +\n    \t\t\"sit\\t444\\n\" +\n    \t\t\"amet\\t555\\n\" +\n    \t\t\"consectetuer\\t666\\n\" +\n    \t\t\"adipiscing\\t777\\n\" +\n    \t\t\"elit\\t888\\n\" +\n    \t\t\"Nunc\\t999\\n\";\n\t\tString CHUNK2 =\n\t\t\t\"The quick brown fox jumps over the lazy dog\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\";\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\t4995\\n\" +\n\t\t\t\tCHUNK2\n\t\t\t\t, text);\n\n\t\t\r\n\t\textractor.setFormulasNotResults(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\tCHUNK2, text);\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\t\"Sheet1\\n\" +\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\t\"rich test\\n\" +\n\t\t\t\tCHUNK2 +\n\t\t\t\t\"Sheet3\\n\"\n\t\t\t\t, text);\n\n\t\textractor.close();\n\t}\n","date":"2021-04-08 05:40:33","endLine":109,"groupId":"1658","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetSimpleText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/20/68a4a993c9a312e453cc5f74f34d2c891a8581.src","preCode":"\tvoid testGetSimpleText() throws IOException {\n\t\t\r\n\t\tXSSFExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\n\t\tString text = extractor.getText();\n\t\tassertTrue(text.length() > 0);\n\n\t\t\r\n\t\tassertStartsWith(text, \"Sheet1\");\n\t\tassertEndsWith(text, \"Sheet3\\n\");\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(false);\n\t\ttext = extractor.getText();\n\t\tString CHUNK1 =\n\t\t\t\"Lorem\\t111\\n\" +\n    \t\t\"ipsum\\t222\\n\" +\n    \t\t\"dolor\\t333\\n\" +\n    \t\t\"sit\\t444\\n\" +\n    \t\t\"amet\\t555\\n\" +\n    \t\t\"consectetuer\\t666\\n\" +\n    \t\t\"adipiscing\\t777\\n\" +\n    \t\t\"elit\\t888\\n\" +\n    \t\t\"Nunc\\t999\\n\";\n\t\tString CHUNK2 =\n\t\t\t\"The quick brown fox jumps over the lazy dog\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\";\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\t4995\\n\" +\n\t\t\t\tCHUNK2\n\t\t\t\t, text);\n\n\t\t\r\n\t\textractor.setFormulasNotResults(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\tCHUNK2, text);\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\t\"Sheet1\\n\" +\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\t\"rich test\\n\" +\n\t\t\t\tCHUNK2 +\n\t\t\t\t\"Sheet3\\n\"\n\t\t\t\t, text);\n\n\t\textractor.close();\n\t}\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/extractor/TestXSSFExcelExtractor.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"\tvoid testGetSimpleText() throws Exception {\n\t\t\r\n\t   XSSFEventBasedExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\t\textractor.getText();\n\n\t\tString text = extractor.getText();\n\t\tassertTrue(text.length() > 0);\n\n\t\t\r\n\t\tassertStartsWith(text, \"Sheet1\");\n\t\tassertEndsWith(text, \"Sheet3\\n\");\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(false);\n\t\ttext = extractor.getText();\n\t\tString CHUNK1 =\n\t\t\t\"Lorem\\t111\\n\" +\n    \t\t\"ipsum\\t222\\n\" +\n    \t\t\"dolor\\t333\\n\" +\n    \t\t\"sit\\t444\\n\" +\n    \t\t\"amet\\t555\\n\" +\n    \t\t\"consectetuer\\t666\\n\" +\n    \t\t\"adipiscing\\t777\\n\" +\n    \t\t\"elit\\t888\\n\" +\n    \t\t\"Nunc\\t999\\n\";\n\t\tString CHUNK2 =\n\t\t\t\"The quick brown fox jumps over the lazy dog\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\";\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\t4995\\n\" +\n\t\t\t\tCHUNK2\n\t\t\t\t, text);\n\n\t\t\r\n\t\textractor.setFormulasNotResults(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\tCHUNK2, text);\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\t\"Sheet1\\n\" +\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\t\"rich test\\n\" +\n\t\t\t\tCHUNK2 +\n\t\t\t\t\"Sheet3\\n\"\n\t\t\t\t, text);\n\n\t\textractor.close();\n\t}\n","date":"2021-04-08 05:40:33","endLine":109,"groupId":"1658","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSimpleText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/0d/e3611bc1d01c048bf0f0da191ca26954a26a8a.src","preCode":"\tvoid testGetSimpleText() throws Exception {\n\t\t\r\n\t   XSSFEventBasedExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\t\textractor.getText();\n\n\t\tString text = extractor.getText();\n\t\tassertTrue(text.length() > 0);\n\n\t\t\r\n\t\tassertStartsWith(text, \"Sheet1\");\n\t\tassertEndsWith(text, \"Sheet3\\n\");\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(false);\n\t\ttext = extractor.getText();\n\t\tString CHUNK1 =\n\t\t\t\"Lorem\\t111\\n\" +\n    \t\t\"ipsum\\t222\\n\" +\n    \t\t\"dolor\\t333\\n\" +\n    \t\t\"sit\\t444\\n\" +\n    \t\t\"amet\\t555\\n\" +\n    \t\t\"consectetuer\\t666\\n\" +\n    \t\t\"adipiscing\\t777\\n\" +\n    \t\t\"elit\\t888\\n\" +\n    \t\t\"Nunc\\t999\\n\";\n\t\tString CHUNK2 =\n\t\t\t\"The quick brown fox jumps over the lazy dog\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\" +\n\t\t\t\"hello, xssf\thello, xssf\\n\";\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\t4995\\n\" +\n\t\t\t\tCHUNK2\n\t\t\t\t, text);\n\n\t\t\r\n\t\textractor.setFormulasNotResults(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\tCHUNK2, text);\n\n\t\t\r\n\t\textractor.setIncludeSheetNames(true);\n\t\ttext = extractor.getText();\n\t\tassertEquals(\n\t\t\t\t\"Sheet1\\n\" +\n\t\t\t\tCHUNK1 +\n\t\t\t\t\"at\\tSUM(B1:B9)\\n\" +\n\t\t\t\t\"rich test\\n\" +\n\t\t\t\tCHUNK2 +\n\t\t\t\t\"Sheet3\\n\"\n\t\t\t\t, text);\n\n\t\textractor.close();\n\t}\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/extractor/TestXSSFEventBasedExcelExtractor.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-05-23 07:02:02","codes":[{"authorDate":"2021-05-23 07:02:02","commitOrder":2,"curCode":"    void testGetSimpleText() throws IOException {\n        \r\n        XSSFExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\n        String text = extractor.getText();\n        assertTrue(text.length() > 0);\n\n        \r\n        assertStartsWith(text, \"Sheet1\");\n        assertEndsWith(text, \"Sheet3\\n\");\n\n        \r\n        extractor.setIncludeSheetNames(false);\n        text = extractor.getText();\n        String CHUNK1 =\n            \"Lorem\\t111\\n\" +\n            \"ipsum\\t222\\n\" +\n            \"dolor\\t333\\n\" +\n            \"sit\\t444\\n\" +\n            \"amet\\t555\\n\" +\n            \"consectetuer\\t666\\n\" +\n            \"adipiscing\\t777\\n\" +\n            \"elit\\t888\\n\" +\n            \"Nunc\\t999\\n\";\n        String CHUNK2 =\n            \"The quick brown fox jumps over the lazy dog\\n\" +\n            \"hello, xssf\\thello, xssf\\n\" +\n            \"hello, xssf\\thello, xssf\\n\" +\n            \"hello, xssf\\thello, xssf\\n\" +\n            \"hello, xssf\\thello, xssf\\n\";\n        assertEquals(\n                CHUNK1 +\n                \"at\\t4995\\n\" +\n                CHUNK2\n                , text);\n\n        \r\n        extractor.setFormulasNotResults(true);\n        text = extractor.getText();\n        assertEquals(\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                CHUNK2, text);\n\n        \r\n        extractor.setIncludeSheetNames(true);\n        text = extractor.getText();\n        assertEquals(\n                \"Sheet1\\n\" +\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                \"rich test\\n\" +\n                CHUNK2 +\n                \"Sheet3\\n\"\n                , text);\n\n        extractor.close();\n    }\n","date":"2021-05-23 07:02:02","endLine":109,"groupId":"10900","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetSimpleText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/1e/435753fad24f6f569103ea593dab436a4486a2.src","preCode":"    void testGetSimpleText() throws IOException {\n        \r\n        XSSFExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n\n        String text = extractor.getText();\n        assertTrue(text.length() > 0);\n\n        \r\n        assertStartsWith(text, \"Sheet1\");\n        assertEndsWith(text, \"Sheet3\\n\");\n\n        \r\n        extractor.setIncludeSheetNames(false);\n        text = extractor.getText();\n        String CHUNK1 =\n            \"Lorem\\t111\\n\" +\n            \"ipsum\\t222\\n\" +\n            \"dolor\\t333\\n\" +\n            \"sit\\t444\\n\" +\n            \"amet\\t555\\n\" +\n            \"consectetuer\\t666\\n\" +\n            \"adipiscing\\t777\\n\" +\n            \"elit\\t888\\n\" +\n            \"Nunc\\t999\\n\";\n        String CHUNK2 =\n            \"The quick brown fox jumps over the lazy dog\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\";\n        assertEquals(\n                CHUNK1 +\n                \"at\\t4995\\n\" +\n                CHUNK2\n                , text);\n\n        \r\n        extractor.setFormulasNotResults(true);\n        text = extractor.getText();\n        assertEquals(\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                CHUNK2, text);\n\n        \r\n        extractor.setIncludeSheetNames(true);\n        text = extractor.getText();\n        assertEquals(\n                \"Sheet1\\n\" +\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                \"rich test\\n\" +\n                CHUNK2 +\n                \"Sheet3\\n\"\n                , text);\n\n        extractor.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/extractor/TestXSSFExcelExtractor.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-05-23 07:02:02","commitOrder":2,"curCode":"    void testGetSimpleText() throws Exception {\n        \r\n        XSSFEventBasedExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n        extractor.getText();\n\n        String text = extractor.getText();\n        assertTrue(text.length() > 0);\n\n        \r\n        assertStartsWith(text, \"Sheet1\");\n        assertEndsWith(text, \"Sheet3\\n\");\n\n        \r\n        extractor.setIncludeSheetNames(false);\n        text = extractor.getText();\n        String CHUNK1 =\n                \"Lorem\\t111\\n\" +\n                        \"ipsum\\t222\\n\" +\n                        \"dolor\\t333\\n\" +\n                        \"sit\\t444\\n\" +\n                        \"amet\\t555\\n\" +\n                        \"consectetuer\\t666\\n\" +\n                        \"adipiscing\\t777\\n\" +\n                        \"elit\\t888\\n\" +\n                        \"Nunc\\t999\\n\";\n        String CHUNK2 =\n                \"The quick brown fox jumps over the lazy dog\\n\" +\n                        \"hello, xssf\\thello, xssf\\n\" +\n                        \"hello, xssf\\thello, xssf\\n\" +\n                        \"hello, xssf\\thello, xssf\\n\" +\n                        \"hello, xssf\\thello, xssf\\n\";\n        assertEquals(\n                CHUNK1 +\n                        \"at\\t4995\\n\" +\n                        CHUNK2\n                , text);\n\n        \r\n        extractor.setFormulasNotResults(true);\n        text = extractor.getText();\n        assertEquals(\n                CHUNK1 +\n                        \"at\\tSUM(B1:B9)\\n\" +\n                        CHUNK2, text);\n\n        \r\n        extractor.setIncludeSheetNames(true);\n        text = extractor.getText();\n        assertEquals(\n                \"Sheet1\\n\" +\n                        CHUNK1 +\n                        \"at\\tSUM(B1:B9)\\n\" +\n                        \"rich test\\n\" +\n                        CHUNK2 +\n                        \"Sheet3\\n\"\n                , text);\n\n        extractor.close();\n    }\n","date":"2021-05-23 07:02:02","endLine":109,"groupId":"10900","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetSimpleText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/df/801fafbc4fe644b2a43d3a6809157e9455e9ab.src","preCode":"    void testGetSimpleText() throws Exception {\n        \r\n       XSSFEventBasedExcelExtractor extractor = getExtractor(\"sample.xlsx\");\n        extractor.getText();\n\n        String text = extractor.getText();\n        assertTrue(text.length() > 0);\n\n        \r\n        assertStartsWith(text, \"Sheet1\");\n        assertEndsWith(text, \"Sheet3\\n\");\n\n        \r\n        extractor.setIncludeSheetNames(false);\n        text = extractor.getText();\n        String CHUNK1 =\n            \"Lorem\\t111\\n\" +\n            \"ipsum\\t222\\n\" +\n            \"dolor\\t333\\n\" +\n            \"sit\\t444\\n\" +\n            \"amet\\t555\\n\" +\n            \"consectetuer\\t666\\n\" +\n            \"adipiscing\\t777\\n\" +\n            \"elit\\t888\\n\" +\n            \"Nunc\\t999\\n\";\n        String CHUNK2 =\n            \"The quick brown fox jumps over the lazy dog\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\" +\n            \"hello, xssf    hello, xssf\\n\";\n        assertEquals(\n                CHUNK1 +\n                \"at\\t4995\\n\" +\n                CHUNK2\n                , text);\n\n        \r\n        extractor.setFormulasNotResults(true);\n        text = extractor.getText();\n        assertEquals(\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                CHUNK2, text);\n\n        \r\n        extractor.setIncludeSheetNames(true);\n        text = extractor.getText();\n        assertEquals(\n                \"Sheet1\\n\" +\n                CHUNK1 +\n                \"at\\tSUM(B1:B9)\\n\" +\n                \"rich test\\n\" +\n                CHUNK2 +\n                \"Sheet3\\n\"\n                , text);\n\n        extractor.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/extractor/TestXSSFEventBasedExcelExtractor.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"fdacf6fcaab880f885de5cf7bf63a05f0af47e60","commitMessage":"@@@try to fix tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1890126 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-05-23 07:02:02","modifiedFileCount":"3","status":"M","submitter":"PJ Fanning"}]
