[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void existingWorkbook() throws IOException {\n    \tXSSFWorkbook xssfWb1 = new XSSFWorkbook();\n    \txssfWb1.createSheet(\"S1\");\n        SXSSFWorkbook wb1 = new SXSSFWorkbook(xssfWb1);\n    \tXSSFWorkbook xssfWb2 = SXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n    \tassertTrue(wb1.dispose());\n\n        SXSSFWorkbook wb2 = new SXSSFWorkbook(xssfWb2);\n    \tassertEquals(1, wb2.getNumberOfSheets());\n    \tSheet sheet  = wb2.getSheetAt(0);\n    \tassertNotNull(sheet);\n    \tassertEquals(\"S1\", sheet.getSheetName());\n\t    assertTrue(wb2.dispose());\n\t    xssfWb2.close();\n\t    xssfWb1.close();\n\n\t    wb2.close();\n\t    wb1.close();\n    }\n","date":"2021-04-08 05:40:33","endLine":119,"groupId":"2600","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"existingWorkbook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/e0/65b26adb12d67a01af04750ebf64145cc54c74.src","preCode":"    void existingWorkbook() throws IOException {\n    \tXSSFWorkbook xssfWb1 = new XSSFWorkbook();\n    \txssfWb1.createSheet(\"S1\");\n        SXSSFWorkbook wb1 = new SXSSFWorkbook(xssfWb1);\n    \tXSSFWorkbook xssfWb2 = SXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n    \tassertTrue(wb1.dispose());\n\n        SXSSFWorkbook wb2 = new SXSSFWorkbook(xssfWb2);\n    \tassertEquals(1, wb2.getNumberOfSheets());\n    \tSheet sheet  = wb2.getSheetAt(0);\n    \tassertNotNull(sheet);\n    \tassertEquals(\"S1\", sheet.getSheetName());\n\t    assertTrue(wb2.dispose());\n\t    xssfWb2.close();\n\t    xssfWb1.close();\n\n\t    wb2.close();\n\t    wb1.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void existingWorkbook() throws IOException {\n        XSSFWorkbook xssfWb1 = new XSSFWorkbook();\n        xssfWb1.createSheet(\"S1\");\n        DeferredSXSSFWorkbook wb1 = new DeferredSXSSFWorkbook(xssfWb1);\n        XSSFWorkbook xssfWb2 = DeferredSXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n        assertTrue(wb1.dispose());\n\n        DeferredSXSSFWorkbook wb2 = new DeferredSXSSFWorkbook(xssfWb2);\n        assertEquals(1, wb2.getNumberOfSheets());\n        Sheet sheet = wb2.getStreamingSheetAt(0);\n        assertNotNull(sheet);\n        assertEquals(\"S1\", sheet.getSheetName());\n        assertTrue(wb2.dispose());\n        xssfWb2.close();\n        xssfWb1.close();\n\n        wb2.close();\n        wb1.close();\n    }\n","date":"2021-04-08 05:40:33","endLine":110,"groupId":"2600","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"existingWorkbook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/74/df887a504b928ca4eeef46c2fe095701e4fd19.src","preCode":"    void existingWorkbook() throws IOException {\n        XSSFWorkbook xssfWb1 = new XSSFWorkbook();\n        xssfWb1.createSheet(\"S1\");\n        DeferredSXSSFWorkbook wb1 = new DeferredSXSSFWorkbook(xssfWb1);\n        XSSFWorkbook xssfWb2 = DeferredSXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n        assertTrue(wb1.dispose());\n\n        DeferredSXSSFWorkbook wb2 = new DeferredSXSSFWorkbook(xssfWb2);\n        assertEquals(1, wb2.getNumberOfSheets());\n        Sheet sheet = wb2.getStreamingSheetAt(0);\n        assertNotNull(sheet);\n        assertEquals(\"S1\", sheet.getSheetName());\n        assertTrue(wb2.dispose());\n        xssfWb2.close();\n        xssfWb1.close();\n\n        wb2.close();\n        wb1.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestDeferredSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-08-29 07:48:48","codes":[{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    void existingWorkbook() throws IOException {\n        try (XSSFWorkbook xssfWb1 = new XSSFWorkbook()) {\n            xssfWb1.createSheet(\"S1\");\n            try (SXSSFWorkbook wb1 = new SXSSFWorkbook(xssfWb1);\n                 XSSFWorkbook xssfWb2 = SXSSFITestDataProvider.instance.writeOutAndReadBack(wb1)) {\n                assertTrue(wb1.dispose());\n\n                try (SXSSFWorkbook wb2 = new SXSSFWorkbook(xssfWb2)) {\n                    assertEquals(1, wb2.getNumberOfSheets());\n                    Sheet sheet = wb2.getSheetAt(0);\n                    assertNotNull(sheet);\n                    assertEquals(\"S1\", sheet.getSheetName());\n                    assertTrue(wb2.dispose());\n                }\n            }\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":118,"groupId":"10854","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"existingWorkbook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/f4/eb9e0990560ce45f952583f1f3210942857737.src","preCode":"    void existingWorkbook() throws IOException {\n        XSSFWorkbook xssfWb1 = new XSSFWorkbook();\n        xssfWb1.createSheet(\"S1\");\n        SXSSFWorkbook wb1 = new SXSSFWorkbook(xssfWb1);\n        XSSFWorkbook xssfWb2 = SXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n        assertTrue(wb1.dispose());\n\n        SXSSFWorkbook wb2 = new SXSSFWorkbook(xssfWb2);\n        assertEquals(1, wb2.getNumberOfSheets());\n        Sheet sheet  = wb2.getSheetAt(0);\n        assertNotNull(sheet);\n        assertEquals(\"S1\", sheet.getSheetName());\n        assertTrue(wb2.dispose());\n        xssfWb2.close();\n        xssfWb1.close();\n\n        wb2.close();\n        wb1.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2021-08-29 07:48:48","commitOrder":2,"curCode":"    void existingWorkbook() throws IOException {\n        try (XSSFWorkbook xssfWb1 = new XSSFWorkbook()) {\n            xssfWb1.createSheet(\"S1\");\n            try (DeferredSXSSFWorkbook wb1 = new DeferredSXSSFWorkbook(xssfWb1);\n                 XSSFWorkbook xssfWb2 = DeferredSXSSFITestDataProvider.instance.writeOutAndReadBack(wb1)) {\n                assertTrue(wb1.dispose());\n\n                try (DeferredSXSSFWorkbook wb2 = new DeferredSXSSFWorkbook(xssfWb2)) {\n                    assertEquals(1, wb2.getNumberOfSheets());\n                    Sheet sheet = wb2.getStreamingSheetAt(0);\n                    assertNotNull(sheet);\n                    assertEquals(\"S1\", sheet.getSheetName());\n                    assertTrue(wb2.dispose());\n                }\n            }\n        }\n    }\n","date":"2021-08-29 07:48:48","endLine":110,"groupId":"10854","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"existingWorkbook","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/c0/7b59ca132a250ad2298b15a20fa07d8637ca5e.src","preCode":"    void existingWorkbook() throws IOException {\n        XSSFWorkbook xssfWb1 = new XSSFWorkbook();\n        xssfWb1.createSheet(\"S1\");\n        DeferredSXSSFWorkbook wb1 = new DeferredSXSSFWorkbook(xssfWb1);\n        XSSFWorkbook xssfWb2 = DeferredSXSSFITestDataProvider.instance.writeOutAndReadBack(wb1);\n        assertTrue(wb1.dispose());\n\n        DeferredSXSSFWorkbook wb2 = new DeferredSXSSFWorkbook(xssfWb2);\n        assertEquals(1, wb2.getNumberOfSheets());\n        Sheet sheet = wb2.getStreamingSheetAt(0);\n        assertNotNull(sheet);\n        assertEquals(\"S1\", sheet.getSheetName());\n        assertTrue(wb2.dispose());\n        xssfWb2.close();\n        xssfWb1.close();\n\n        wb2.close();\n        wb1.close();\n    }\n","realPath":"poi-ooxml/src/test/java/org/apache/poi/xssf/streaming/TestDeferredSXSSFWorkbook.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"f71cebcce5ed809ee15cd69524f8cb0b0b2ea47c","commitMessage":"@@@sonar fixes\nclose resources in tests\nfix gradle warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1892683 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-08-29 07:48:48","modifiedFileCount":"44","status":"M","submitter":"Andreas Beeker"}]
