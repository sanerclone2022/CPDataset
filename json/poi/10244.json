[{"authorTime":"2021-04-08 05:40:33","codes":[{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testEditPictureData() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        \r\n        try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png.ppt\")) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            picture.setData(newImage);\n            ppt.write(modifiedSlideShow);\n        }\n\n        \r\n        try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            byte[] modifiedImageData = picture.getData();\n            assertArrayEquals(newImage, modifiedImageData);\n        }\n    }\n","date":"2021-04-08 05:40:33","endLine":591,"groupId":"12576","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEditPictureData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/a1/96ed685b90876039585dbaca4cf7c005b9a71e.src","preCode":"    void testEditPictureData() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        \r\n        try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png.ppt\")) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            picture.setData(newImage);\n            ppt.write(modifiedSlideShow);\n        }\n\n        \r\n        try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            byte[] modifiedImageData = picture.getData();\n            assertArrayEquals(newImage, modifiedImageData);\n        }\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/usermodel/TestPictures.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":574,"status":"B"},{"authorDate":"2021-04-08 05:40:33","commitOrder":1,"curCode":"    void testEditPictureDataEncrypted() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        Biff8EncryptionKey.setCurrentUserPassword(\"password\");\n        try {\n            \r\n            try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png_encrypted.ppt\")) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                picture.setData(newImage);\n                ppt.write(modifiedSlideShow);\n            }\n\n            \r\n            try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                byte[] modifiedImageData = picture.getData();\n                assertArrayEquals(newImage, modifiedImageData);\n            }\n        } finally {\n            Biff8EncryptionKey.setCurrentUserPassword(null);\n        }\n    }\n","date":"2021-04-08 05:40:33","endLine":620,"groupId":"12576","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEditPictureDataEncrypted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/a1/96ed685b90876039585dbaca4cf7c005b9a71e.src","preCode":"    void testEditPictureDataEncrypted() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        Biff8EncryptionKey.setCurrentUserPassword(\"password\");\n        try {\n            \r\n            try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png_encrypted.ppt\")) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                picture.setData(newImage);\n                ppt.write(modifiedSlideShow);\n            }\n\n            \r\n            try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                byte[] modifiedImageData = picture.getData();\n                assertArrayEquals(newImage, modifiedImageData);\n            }\n        } finally {\n            Biff8EncryptionKey.setCurrentUserPassword(null);\n        }\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/usermodel/TestPictures.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"B"}],"commitId":"b6aee1ef6d3e92a28ffd4b5c03e677b63b43747f","commitMessage":"@@@65206 - Migrate ant / maven to gradle build\ncompile / jar / test of mrJars\ndon't include ants build.xml anymore\nrename directories to match project and maven artifact names\nrefactor artifacts - so each project has one artifact\nreplace static references in hssf/dev tests with junit5 constructs.  which had problems in parallel tests\nincrease gradle heap to 4gb because of OOM - maybe less would also work\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1888488 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-04-08 05:40:33","modifiedFileCount":"0","status":"B","submitter":"Andreas Beeker"},{"authorTime":"2021-05-14 08:37:50","codes":[{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testEditPictureData() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n\n        \r\n        try (HSLFSlideShow ppt1 = getSlideShow(\"ppt_with_png.ppt\")) {\n            HSLFPictureData picture1 = ppt1.getPictureData().get(0);\n            picture1.setData(newImage);\n\n            \r\n            try (HSLFSlideShow ppt2 = writeOutAndReadBack(ppt1)) {\n                HSLFPictureData picture2 = ppt2.getPictureData().get(0);\n                byte[] modifiedImageData = picture2.getData();\n                assertArrayEquals(newImage, modifiedImageData);\n            }\n        }\n    }\n","date":"2021-05-14 08:37:50","endLine":387,"groupId":"10244","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEditPictureData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/65/a27167110f131c9ba630963d28b84fd604c403.src","preCode":"    void testEditPictureData() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        \r\n        try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png.ppt\")) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            picture.setData(newImage);\n            ppt.write(modifiedSlideShow);\n        }\n\n        \r\n        try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n            HSLFPictureData picture = ppt.getPictureData().get(0);\n            byte[] modifiedImageData = picture.getData();\n            assertArrayEquals(newImage, modifiedImageData);\n        }\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/usermodel/TestPictures.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"},{"authorDate":"2021-05-14 08:37:50","commitOrder":2,"curCode":"    void testEditPictureDataEncrypted() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n\n        Biff8EncryptionKey.setCurrentUserPassword(\"password\");\n        try {\n            \r\n            try (HSLFSlideShow ppt1 = getSlideShow(\"ppt_with_png_encrypted.ppt\")) {\n                HSLFPictureData picture1 = ppt1.getPictureData().get(0);\n                picture1.setData(newImage);\n\n                \r\n                try (HSLFSlideShow ppt2 = writeOutAndReadBack(ppt1)) {\n                    HSLFPictureData picture2 = ppt2.getPictureData().get(0);\n                    byte[] modifiedImageData = picture2.getData();\n                    assertArrayEquals(newImage, modifiedImageData);\n                }\n            }\n        } finally {\n            Biff8EncryptionKey.setCurrentUserPassword(null);\n        }\n    }\n","date":"2021-05-14 08:37:50","endLine":414,"groupId":"10244","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEditPictureDataEncrypted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-poi-10-0.7/blobInfo/CC_OUT/blobs/65/a27167110f131c9ba630963d28b84fd604c403.src","preCode":"    void testEditPictureDataEncrypted() throws IOException {\n        byte[] newImage = slTests.readFile(\"tomcat.png\");\n        ByteArrayOutputStream modifiedSlideShow = new ByteArrayOutputStream();\n\n        Biff8EncryptionKey.setCurrentUserPassword(\"password\");\n        try {\n            \r\n            try (HSLFSlideShow ppt = HSLFTestDataSamples.getSlideShow(\"ppt_with_png_encrypted.ppt\")) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                picture.setData(newImage);\n                ppt.write(modifiedSlideShow);\n            }\n\n            \r\n            try (HSLFSlideShow ppt = new HSLFSlideShow(new ByteArrayInputStream(modifiedSlideShow.toByteArray()))) {\n                HSLFPictureData picture = ppt.getPictureData().get(0);\n                byte[] modifiedImageData = picture.getData();\n                assertArrayEquals(newImage, modifiedImageData);\n            }\n        } finally {\n            Biff8EncryptionKey.setCurrentUserPassword(null);\n        }\n    }\n","realPath":"poi-scratchpad/src/test/java/org/apache/poi/hslf/usermodel/TestPictures.java","repoName":"poi","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"}],"commitId":"0614835c55f44ab6f3e9b0850ca51e0e53a65a49","commitMessage":"@@@#65304 - Add commons-io as a dependency\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1889871 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2021-05-14 08:37:50","modifiedFileCount":"277","status":"M","submitter":"Andreas Beeker"}]
