[{"authorTime":"2014-07-10 20:33:26","codes":[{"authorDate":"2014-07-10 20:33:26","commitOrder":1,"curCode":"    public void testTitle() throws Exception {\n        final List<Method> methods = Arrays.asList(NormalDomainObject.class.getMethod(\"titleElement1\"), NormalDomainObject.class.getMethod(\"titleElement2\"), NormalDomainObject.class.getMethod(\"titleElement3\"));\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2014-07-10 20:33:26","endLine":120,"groupId":"17431","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5b/b9bec703d02a12ce9bdeec1bf22c20e997b3f5.src","preCode":"    public void testTitle() throws Exception {\n        final List<Method> methods = Arrays.asList(NormalDomainObject.class.getMethod(\"titleElement1\"), NormalDomainObject.class.getMethod(\"titleElement2\"), NormalDomainObject.class.getMethod(\"titleElement3\"));\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2014-07-10 20:33:26","commitOrder":1,"curCode":"    public void titleThrowsException() {\n        final List<Method> methods = MethodFinderUtils.findMethodsWithAnnotation(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, MethodScope.OBJECT, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2014-07-10 20:33:26","endLine":138,"groupId":"13589","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5b/b9bec703d02a12ce9bdeec1bf22c20e997b3f5.src","preCode":"    public void titleThrowsException() {\n        final List<Method> methods = MethodFinderUtils.findMethodsWithAnnotation(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, MethodScope.OBJECT, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"7227418b3ac684a93775c2ec71fe8cfdbffdd2df","commitMessage":"@@@ISIS-831: digression: moving progmodel/facets into metamodel/facets\n\n... and getting names consistent.\n","date":"2014-07-10 20:33:26","modifiedFileCount":"137","status":"B","submitter":"Dan Haywood"},{"authorTime":"2015-11-25 20:51:08","codes":[{"authorDate":"2015-11-25 20:51:08","commitOrder":2,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2015-11-25 20:51:08","endLine":121,"groupId":"17431","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6c/95e850d58b752796e78a89b9de9556a6952ccf.src","preCode":"    public void testTitle() throws Exception {\n        final List<Method> methods = Arrays.asList(NormalDomainObject.class.getMethod(\"titleElement1\"), NormalDomainObject.class.getMethod(\"titleElement2\"), NormalDomainObject.class.getMethod(\"titleElement3\"));\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2015-11-25 20:51:08","commitOrder":2,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2015-11-25 20:51:08","endLine":141,"groupId":"3208","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6c/95e850d58b752796e78a89b9de9556a6952ccf.src","preCode":"    public void titleThrowsException() {\n        final List<Method> methods = MethodFinderUtils.findMethodsWithAnnotation(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, MethodScope.OBJECT, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(methods, TitleComponent.FROM_METHOD);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"c6c3066e3b7e58dc1d338e44ba4ca926dc29d1ef","commitMessage":"@@@ISIS-1257: updates facet factory to allow @Title to be added to field.  Also updated .adoc.\n","date":"2015-11-25 20:51:08","modifiedFileCount":"6","status":"M","submitter":"Dan Haywood"},{"authorTime":"2016-06-09 15:06:35","codes":[{"authorDate":"2016-06-09 15:06:35","commitOrder":3,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2016-06-09 15:06:35","endLine":117,"groupId":"17431","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/47/3d7518f78ae769650f41fa1b995128b96046df.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2016-06-09 15:06:35","commitOrder":3,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2016-06-09 15:06:35","endLine":137,"groupId":"3208","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/47/3d7518f78ae769650f41fa1b995128b96046df.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter, null);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"83de0dc05be52525a01ce50f211bffe2aa513488","commitMessage":"@@@ISIS-1427: simplifying IsisContext and minimizing calls to it; also removed Localization (unused)\n","date":"2016-06-09 15:06:35","modifiedFileCount":"209","status":"M","submitter":"Dan Haywood"},{"authorTime":"2018-09-16 18:13:18","codes":[{"authorDate":"2018-09-16 18:13:18","commitOrder":4,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2018-09-16 18:13:18","endLine":116,"groupId":"17431","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5a/80443179fd45367af4e7625f252e31624afea0.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-09-16 18:13:18","commitOrder":4,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2018-09-16 18:13:18","endLine":136,"groupId":"3208","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5a/80443179fd45367af4e7625f252e31624afea0.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"0d5885e75037c833af4d2e1d661062cc8a27c03b","commitMessage":"@@@Merge pull request #127 from apache/ISIS-1976-squash\n\nISIS-1976: removes OA map.  stream for metamodel.  excising guava","date":"2018-09-16 18:13:18","modifiedFileCount":"354","status":"M","submitter":"Dan Haywood"},{"authorTime":"2018-09-17 19:42:56","codes":[{"authorDate":"2018-09-17 19:42:56","commitOrder":5,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2018-09-17 20:00:44","endLine":116,"groupId":"17431","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4e/7f31ed9f908677750f71ad49561aa8da88ad7c.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.transform(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-09-17 19:42:56","commitOrder":5,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2018-09-17 20:00:44","endLine":136,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4e/7f31ed9f908677750f71ad49561aa8da88ad7c.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.transform(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"796c9e122829abdf04213c15a6ed8bcc917ab22f","commitMessage":"@@@ISIS-1976: further remove guava\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976","date":"2018-09-17 20:00:44","modifiedFileCount":"313","status":"M","submitter":"Andi Huber"},{"authorTime":"2018-09-30 11:03:43","codes":[{"authorDate":"2018-09-30 11:03:43","commitOrder":6,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2018-09-30 11:03:43","endLine":116,"groupId":"17431","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/7c/6cbc5094d93431de25c9f4a627063917fe83ef.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-09-30 11:03:43","commitOrder":6,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2018-09-30 11:03:43","endLine":136,"groupId":"9208","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/7c/6cbc5094d93431de25c9f4a627063917fe83ef.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getObject();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"0b7afc6eb8cc0c7d48691eed9697be9f0d930963","commitMessage":"@@@ISIS-1976: rename ObjectAdapter.getObject() -> getPojo()\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976","date":"2018-09-30 11:03:43","modifiedFileCount":"116","status":"M","submitter":"Andi Huber"},{"authorTime":"2019-05-08 17:39:36","codes":[{"authorDate":"2019-05-08 17:39:36","commitOrder":7,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2019-05-09 18:45:36","endLine":116,"groupId":"3357","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b1/b44ae089d7592088820623cc80f1dc0bf8d28f.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2019-05-08 17:39:36","commitOrder":7,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2019-05-09 18:45:36","endLine":136,"groupId":"10996","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b1/b44ae089d7592088820623cc80f1dc0bf8d28f.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder, mockAdapterManager);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"16e80975e0126cc26c276b9891c1dae0054c7022","commitMessage":"@@@ISIS-2112: backporting from '2033-IoC_Spring' branch\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-2112","date":"2019-05-09 18:45:36","modifiedFileCount":"732","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-01-10 23:10:11","codes":[{"authorDate":"2020-01-10 23:10:11","commitOrder":8,"curCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleFacetViaTitleAnnotation.TitleComponent> components = _Lists.map(evaluatorList, TitleFacetViaTitleAnnotation.TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                \n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n                \n                allowing(mockManagedObject).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockObjectManager).adapt(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2020-01-10 23:10:11","endLine":127,"groupId":"7225","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a5/dd9b7c0f2d278815e8418a4762531802d68817.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleComponent> components = _Lists.map(evaluatorList, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockAdapterManager).adapterFor(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockAdapterManager).adapterFor(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-01-10 23:10:11","commitOrder":8,"curCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleFacetViaTitleAnnotation.TitleComponent> components = _Lists.map(evaluators, TitleFacetViaTitleAnnotation.TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                \n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n                \n                allowing(mockManagedObject).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2020-01-10 23:10:11","endLine":151,"groupId":"9208","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a5/dd9b7c0f2d278815e8418a4762531802d68817.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleComponent> components = _Lists.map(evaluators, TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                allowing(mockObjectAdapter).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockObjectAdapter);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"31b8b21f2e297439edf889faacfd685122a8751a","commitMessage":"@@@ISIS-2259: fixes up package name of isis-core-metamodel\n","date":"2020-01-10 23:10:11","modifiedFileCount":"436","status":"M","submitter":"danhaywood"},{"authorTime":"2021-09-10 19:00:42","codes":[{"authorDate":"2021-09-10 19:00:42","commitOrder":9,"curCode":"    public void testTitle() throws Exception {\n\n        final TitleFacetViaTitleAnnotation facet =\n                (TitleFacetViaTitleAnnotation) TitleFacetViaTitleAnnotation\n                .create(NormalDomainObject.class, mockFacetHolder)\n                .orElse(null);\n\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n\n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n\n                allowing(mockManagedObject).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockObjectManager).adapt(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","date":"2021-09-10 19:00:42","endLine":120,"groupId":"10706","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"testTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1e/b93d4cc5eece179d76b0a8c54f3ad0dd97fc9c.src","preCode":"    public void testTitle() throws Exception {\n        final List<Annotations.Evaluator<Title>> evaluatorList = Annotations\n                .getEvaluators(NormalDomainObject.class, Title.class);\n\n        TitleAnnotationFacetFactory.sort(evaluatorList);\n\n        final List<TitleFacetViaTitleAnnotation.TitleComponent> components = _Lists.map(evaluatorList, TitleFacetViaTitleAnnotation.TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final NormalDomainObject normalPojo = new NormalDomainObject();\n        final Sequence sequence = context.sequence(\"in-title-element-order\");\n        context.checking(new Expectations() {\n            {\n                \n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n                \n                allowing(mockManagedObject).getPojo();\n                will(returnValue(normalPojo));\n\n                allowing(mockObjectManager).adapt(\"Normal\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Domain\");\n                inSequence(sequence);\n\n                allowing(mockObjectManager).adapt(\"Object\");\n                inSequence(sequence);\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Normal Domain Object\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-09-10 19:00:42","commitOrder":9,"curCode":"    public void titleThrowsException() {\n\n        final TitleFacetViaTitleAnnotation facet =\n                (TitleFacetViaTitleAnnotation) TitleFacetViaTitleAnnotation\n                .create(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, mockFacetHolder)\n                .orElse(null);\n\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo =\n                new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n\n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n\n                allowing(mockManagedObject).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","date":"2021-09-10 19:00:42","endLine":145,"groupId":"10706","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"titleThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1e/b93d4cc5eece179d76b0a8c54f3ad0dd97fc9c.src","preCode":"    public void titleThrowsException() {\n\n        final List<Annotations.Evaluator<Title>> evaluators = Annotations\n                .getEvaluators(DomainObjectWithProblemInItsAnnotatedTitleMethod.class, Title.class);\n\n        final List<TitleFacetViaTitleAnnotation.TitleComponent> components = _Lists.map(evaluators, TitleFacetViaTitleAnnotation.TitleComponent.FROM_EVALUATORS);\n        final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components, mockFacetHolder);\n        final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod();\n        context.checking(new Expectations() {\n            {\n                \n                allowing(mockFacetHolder).getMetaModelContext();\n                will(returnValue(metaModelContext));\n                \n                allowing(mockManagedObject).getPojo();\n                will(returnValue(screwedPojo));\n            }\n        });\n\n        final String title = facet.title(mockManagedObject);\n        assertThat(title, is(\"Failed Title\"));\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/object/ident/title/annotation/TitleFacetViaTitleAnnotationTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"4b97e5535048ef6639e0b245dfe1dd533c30a827","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis\n","date":"2021-09-10 19:00:42","modifiedFileCount":"2287","status":"M","submitter":"J?rg Rade"}]
