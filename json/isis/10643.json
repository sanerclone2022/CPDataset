[{"authorTime":"2012-12-07 01:41:38","codes":[{"authorDate":"2012-12-07 01:41:38","commitOrder":4,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n    }\n","date":"2012-12-07 01:41:38","endLine":130,"groupId":"10660","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/bb/2e24e723b50662962204cfe3e615ab98713243.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"MB"},{"authorDate":"2012-12-07 01:41:38","commitOrder":4,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","date":"2012-12-07 01:41:38","endLine":141,"groupId":"10660","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6a/3f5f2ad61d6a121abf9e6fadc6665b6469b87a.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"255ef5146bdcea69a5b0a3acb1d29ddc87d927cd","commitMessage":"@@@ISIS-188: moving framework/ subdirs up to parent\n\n* also tidied up STATUS.  and removed the incubator DISCLAIMER\n","date":"2012-12-07 01:41:38","modifiedFileCount":"0","status":"M","submitter":"Dan Haywood"},{"authorTime":"2013-06-10 22:56:18","codes":[{"authorDate":"2013-06-10 22:56:18","commitOrder":5,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                \r\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n        };\n    }\n","date":"2013-06-10 22:56:18","endLine":139,"groupId":"10660","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/34/4a3b883db18d48b0115bb8aa2ebe501c4f72f3.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2013-06-10 22:56:18","commitOrder":5,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","date":"2013-06-10 22:56:18","endLine":147,"groupId":"10660","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1c/526b041856e4b501330a3cbd699d8b454ef58f.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"9bda4c3f310945d3045a8433726facf0652b8613","commitMessage":"@@@ISIS-433: Autocomplete prefix method for action parameters\n","date":"2013-06-10 22:56:18","modifiedFileCount":"21","status":"M","submitter":"Dan Haywood"},{"authorTime":"2013-06-22 22:44:32","codes":[{"authorDate":"2013-06-22 22:44:32","commitOrder":6,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2013-06-22 22:44:32","endLine":141,"groupId":"10660","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/8f/a3a297d7c6f58d65b31cc660db958e6b185c83.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                \r\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                \r\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2013-06-22 22:44:32","commitOrder":6,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","date":"2013-06-22 22:44:32","endLine":151,"groupId":"10660","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b3/59387fd95407b3b15adb8e5812f34c0728caed.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"050e9e32f2cbc7ccce972675bfe988a38ebdaba2","commitMessage":"@@@ISIS-444: @MinLength for autocomplete methods.  and no min length for choices.\n\n* also tiny performance improvement in ServicesInjectorDefault (no jira ticket raised).\n","date":"2013-06-22 22:44:32","modifiedFileCount":"18","status":"M","submitter":"Dan Haywood"},{"authorTime":"2013-09-05 18:59:39","codes":[{"authorDate":"2013-06-22 22:44:32","commitOrder":7,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2013-06-22 22:44:32","endLine":141,"groupId":"10660","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/8f/a3a297d7c6f58d65b31cc660db958e6b185c83.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2013-09-05 18:59:39","commitOrder":7,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","date":"2013-09-05 18:59:39","endLine":148,"groupId":"10660","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b4/cdf5ac6c477afb6372c3e2e48742c5920929dc.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n                allowing(facet).when();\n                will(returnValue(When.ALWAYS));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"c009dec571e84de2ea304807d43558ec08212111","commitMessage":"@@@ISIS-503: can now order contributed members\n\n* FacetProcessor extended to be able to request sorting on an individual object member\n  * introduced new MemberOrderingFacetFactory interface to identify the facet factories that do this work\n* ObjectSpecDefault/Abstract now call the FacetProcessor whenever the contributed actions/associations are computed\n* ObjectActionContributee.  OneToOneAssociationContributee and OneToManyAssociationContributee now have their own copy of FacetHolderImpl (initialized with the facets from the underlying contributed action).  so that can sort them without side-effects\n* fixed bug such that contributed actions that are associated to contributed associations are also suppressed from the header\n\nAlso:\n* ObjectAction.isAlwaysHidden redefined.  only true if never visible anywhere and always\n\nAnd also:\n* renamed ObjectAssociationFilters -> ObjectAssociation.Filters\n* renamed ObjectActionFilters -> ObjectAction.Filters\n* renamed ObjectActionParameterFilters -> ObjectActionParameter.Filters\n\nAnd also:\n* enhanced ToDoItem to demonstrate this capability\n* ToDoItemContributions#next and ToDoItemContributions#previous added\n","date":"2013-09-05 18:59:39","modifiedFileCount":"62","status":"M","submitter":"Dan Haywood"},{"authorTime":"2014-02-20 21:00:45","codes":[{"authorDate":"2014-02-20 21:00:45","commitOrder":8,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2014-02-20 21:00:45","endLine":141,"groupId":"10660","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c4/45bf61871e1ab80341fea843f6526dabbc3d0f.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2014-02-20 21:00:45","commitOrder":8,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","date":"2014-02-20 21:00:45","endLine":148,"groupId":"10660","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1b/fbfb73bf2ecf90d00d22ed0ede8b2722acccb8.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"f10d671f52303c45a53e3b83a3840bfa24713315","commitMessage":"@@@ISIS-707: bulk interaction facet contributed actions\n\nObjectActionContributee\n- same set up of Bulk.InteractionContext as currently done by ActionInvocationFacetViaMethod\n\nrequires changes to:\n- ObjectMemberContext\n  - to provide a servicesProvider (for lookup of the bookmarkService)\n- ObjectReflectorDefault\n  - to initialize ObjectMemberContext\n- ObjectMemberAbstract\n  - to expose servicesProvider to subclasses (ie ObjectActionContributee)\n- unit tests\n\nand requires changes to:\n- ServicesProvider API\n  - to provide a new lookupService(Class) method\n- RuntimeContextFromSession.  RuntimeContextNoRuntime\n  - corresponding impls\n","date":"2014-02-20 21:00:45","modifiedFileCount":"12","status":"M","submitter":"Dan Haywood"},{"authorTime":"2014-10-29 01:24:16","codes":[{"authorDate":"2014-10-29 01:24:16","commitOrder":9,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2014-10-29 01:24:16","endLine":141,"groupId":"10660","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/21/ee9cf403a21e96e810420852d0d54f496db125.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2014-10-29 01:24:16","commitOrder":9,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","date":"2014-10-29 01:24:16","endLine":148,"groupId":"10660","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d4/ac220d0843e5dbcd6c619281c984a171cc116d.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"51562c548660a220b74738ffdb500ab29bd4ae7b","commitMessage":"@@@ISIS-939: simplified CollectionTypeRegistry hierarchy (to single implementation).\n","date":"2014-10-29 01:24:16","modifiedFileCount":"20","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-01-23 00:55:11","codes":[{"authorDate":"2014-10-29 01:24:16","commitOrder":10,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2014-10-29 01:24:16","endLine":141,"groupId":"10660","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/21/ee9cf403a21e96e810420852d0d54f496db125.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2015-01-23 00:55:11","commitOrder":10,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-01-23 00:55:11","endLine":137,"groupId":"10660","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/0e/9604574ca7911f5c6dd5f5f6101d60c793a157.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n\n        context.checking(new Expectations() {\n            {\n                allowing(facet).facetType();\n                will(returnValue(HiddenFacet.class));\n            }\n        });\n\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"5287b69ef9329af961b230172bcccc25eff345cb","commitMessage":"@@@Merge branch 'ISIS-970'\n","date":"2015-01-23 00:55:11","modifiedFileCount":"207","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-08-14 16:00:50","codes":[{"authorDate":"2015-08-14 16:00:50","commitOrder":11,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final AuthenticationSession authenticationSession, final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final AuthenticationSession authenticationSession, final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-08-14 16:00:50","endLine":146,"groupId":"10660","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b9/806c737e6c23277d049aae3b62fbe61a9195ea.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2015-08-14 16:00:50","commitOrder":11,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final AuthenticationSession session,\n                    final InteractionInvocationMethod invocationMethod,\n                    final ObjectAdapter target,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final AuthenticationSession session,\n                    final InteractionInvocationMethod invocationMethod,\n                    final ObjectAdapter targetObjectAdapter,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-08-14 16:00:50","endLine":152,"groupId":"10660","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2d/c14093155949a7160211e80d219a669954738e.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(final ObjectAdapter object) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(ObjectAdapter object, String searchArg) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"bf6c4b806748e87c3240453f1c5fd3b2c06c2998","commitMessage":"@@@ISIS-1189: choices and autoComplete facets (for both properties and action parameters) now automatically filter out any objects that are not visible to the current user.\n\nto do this they now accept an AuthenticationSession and DeploymentCategory so that they can instantiate a VisibilityContext and call InteractionUtils against the appropriate facetholder (usually that of the type of the property or parameter).\n\nThe (Wicket and RO) viewers are responsible for providing the AuthenticationSession and DeploymentCategory.  In the case of the Wicket viewer.  this is looked up by the UI components (eg ReferencePanel) from the IsisContext.  In the case of the RO viewer.  this is passed through by the ResourceContext / RendererContext (a new subinterface to ensure backward compatibility with any custom extensions to the RepresentationService).\n","date":"2015-08-14 16:00:50","modifiedFileCount":"48","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-09-03 16:56:59","codes":[{"authorDate":"2015-09-03 16:56:59","commitOrder":12,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-03 16:56:59","endLine":154,"groupId":"9448","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/f8/1b1bc8ff49af1dc164664690a43c99b254dfc3.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final AuthenticationSession authenticationSession, final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter target, Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObjectAdapter, Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final AuthenticationSession authenticationSession, final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2015-09-03 16:56:59","commitOrder":12,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory, final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-03 16:56:59","endLine":149,"groupId":"9448","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/34/df7b2994c12f42827f1be8b6e1c1985332c71a.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(final ObjectAdapter fromObject) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final AuthenticationSession session,\n                    final InteractionInvocationMethod invocationMethod,\n                    final ObjectAdapter target,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final AuthenticationSession session,\n                    final InteractionInvocationMethod invocationMethod,\n                    final ObjectAdapter targetObjectAdapter,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"d120bf747f5fecf61bc98d4a9a74cdde77e42eec","commitMessage":"@@@ISIS-1044: adding interactionInitiatedBy as param to all interactions with metamodel members.\n\n- renamed/repurposed InvocationInteractionMethod\n\nalso:\n- added new RendererContext4 to provide access to this info\n- removed AuthenticationSession/DeploymentCategory as parameters to ObjectMember calls (since are injected)\n- call with InteractionInitiatedBy.USER for Wicket UI.  Restful Objects server.  WrapperFactory proxy when executionMode == enforce_rules\n- call with InteractionInitiatedBy.FRAMEWORK for Memento.  Auditing.  XmlSnapshot.  Dump.  DomainObjectContainer#validate().  Title context.  RecreatableObjectFacet (ie view models) and WrapperFactory proxy when executionMode != enforce_rules\n\nStill to do:\n- remove the ThreadLocal accessed by ObjectAdapter.Util#isVisible()\n- should inject AuthenticationSessionProvider and DeploymentCategoryProvider into all facet factories.  so can then propogate into Facet impls and not have to pass in as parameters\n- should write MetaModelValidator to disallow previous use of the old InteractionInvocationMethod (ProgramPersistable interface etc.  ie NotPersistableFacet implementations).\n- remove DeploymentCategory.  AuthenticationSession from the InteractionContext class hierarchy and also ParseValueContext\n","date":"2015-09-03 16:56:59","modifiedFileCount":"158","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-09-03 22:22:38","codes":[{"authorDate":"2015-09-03 22:22:38","commitOrder":13,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-03 22:22:38","endLine":151,"groupId":"9448","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a9/9fb4d6d5326b67255bc0ec333ba580c1951b7a.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2015-09-03 22:22:38","commitOrder":13,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-03 22:22:38","endLine":146,"groupId":"9448","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a9/79e460ace402cf8d32ed801e77902944e823cc.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberContext(DeploymentCategory.PRODUCTION, null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final AuthenticationSession authenticationSession,\n                    final DeploymentCategory deploymentCategory, final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"69450a333e250d07700464a4743a3c6d47285e71","commitMessage":"@@@ISIS-1194 (and also ISIS-1044): removing unused code.\n\n- ActionFacet#invoke(...)\n- Memento#encodedData.  recreateFrom\n- unused parameters (DeploymentCategory and AuthenticationSessionProvider) in ObjectFeature (members and parameters) class hierarchy\n- removed DeploymentCategory and AuthenticationSessionProvider fields for SpecificationContext and ObjectMemberContext\n- removed ObjectAssociationFilters static class.  no longer used\n\nAlso:\n- renamed SpecificationContext to ObjectSpecificationDependencies\n- renamed ObjectMemberContext to ObjectMemberDependencies\n","date":"2015-09-03 22:22:38","modifiedFileCount":"37","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-09-14 15:52:05","codes":[{"authorDate":"2015-09-14 15:52:05","commitOrder":14,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-14 15:52:05","endLine":151,"groupId":"9448","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/02/6e83b17f2106f1b03cd46255229b524d70eabe.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2015-09-14 15:52:05","commitOrder":14,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-14 15:52:05","endLine":146,"groupId":"9448","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/11/e30b1c8615bd6be70a76876436c4b666c52e86.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"cf98021e7473e72db8d804a1b4fc814665c9f4f6","commitMessage":"@@@ISIS-1194: moving methods from QuerySubmitter interface to ObjectPersistor interface.\n\nQuerySubmitter is now empty\n","date":"2015-09-14 15:52:05","modifiedFileCount":"22","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-09-14 17:06:08","codes":[{"authorDate":"2015-09-14 17:06:08","commitOrder":15,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-14 17:06:08","endLine":151,"groupId":"9448","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c3/ceeee9046448b9df0b8e713a3f0b2b727676ef.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2015-09-14 17:06:08","commitOrder":15,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-14 17:06:08","endLine":146,"groupId":"9448","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a9/79e460ace402cf8d32ed801e77902944e823cc.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"11cd0017f94e4dc9fe76bf510195a8a2bdddd6f1","commitMessage":"@@@ISIS-1194: removing MessageBrokerService from ObjectMemberDependencies\n","date":"2015-09-14 17:06:08","modifiedFileCount":"10","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-09-15 06:17:55","codes":[{"authorDate":"2015-09-15 06:17:55","commitOrder":16,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-15 06:17:55","endLine":151,"groupId":"9448","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/80/894f4a49d8a4b5d68dcadaff2337b7eea689ed.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2015-09-15 06:17:55","commitOrder":16,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-09-15 06:17:55","endLine":146,"groupId":"9448","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ee/765cdc542d425dd1ea7efa855f27036c391031.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"eeacac6064c842a63530cc0ec745ebaa38442301","commitMessage":"@@@ISIS-1194: remove AdapterManager from ObjectMemberDependencies context class.  use PersistenceSessionService instead.\n","date":"2015-09-15 06:17:55","modifiedFileCount":"16","status":"M","submitter":"Dan Haywood"},{"authorTime":"2015-10-13 06:55:39","codes":[{"authorDate":"2015-10-13 06:55:39","commitOrder":17,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-10-13 06:55:39","endLine":146,"groupId":"9448","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5a/d8d26991b9776e20d971a79354999d1a97e3eb.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2015-10-13 06:55:39","commitOrder":17,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2015-10-13 06:55:39","endLine":141,"groupId":"9448","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1c/8da275f0b1b71d4ee4e3e4b0633c82a47f6e8b.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public Instance getInstance(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"49dc51be61ea5d0690134bf1cee60f5752ab324d","commitMessage":"@@@ISIS-1194: deleting Specification#getInstance() and implementations - never used.\n","date":"2015-10-13 06:55:39","modifiedFileCount":"12","status":"M","submitter":"Dan Haywood"},{"authorTime":"2016-05-18 03:36:30","codes":[{"authorDate":"2016-05-18 03:36:30","commitOrder":18,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-18 03:36:30","endLine":140,"groupId":"9448","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/76/6fb04425ea607ac3b5f54bd9947f8d9bbe2fe7.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2016-05-18 03:36:30","commitOrder":18,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-18 03:36:30","endLine":136,"groupId":"9448","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/37/5c636f5095c1d256cbc887ecec1daf97551c56.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public String debugData() {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"d71f3213a3521314e272c418e9ce1e44b2749739","commitMessage":"@@@ISIS-1402: removing Debuggable interface and implementations.  and supporting unused debug methods.\n","date":"2016-05-18 03:36:30","modifiedFileCount":"30","status":"M","submitter":"Dan Haywood"},{"authorTime":"2016-05-20 08:44:12","codes":[{"authorDate":"2016-05-20 08:44:12","commitOrder":19,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-20 08:44:12","endLine":149,"groupId":"9448","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ae/b737778e0ede295fce17a63907252a1b3e7121.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, new ObjectMemberDependencies(\n                null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2016-05-20 08:44:12","commitOrder":19,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-20 08:44:12","endLine":148,"groupId":"9448","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/99/9ec2aea9624d51657450ea39123c991753ded7.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        \n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                new ObjectMemberDependencies(null, null, null)) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"03a1bd1cfacd131bb44c6d1e3aa10f07855ff125","commitMessage":"@@@ISIS-1408: removing RuntimeContext.  ObjectSpecificationDependencies.  ObjectMemberDependencies (WIP)\n\nAlso adding some micro-caching/helper methods in ServicesInjector (not sure if significant).\n\nWIP - runs up ok.  but unit tests failing.\n","date":"2016-05-20 08:44:12","modifiedFileCount":"103","status":"M","submitter":"Dan Haywood"},{"authorTime":"2016-05-20 15:03:47","codes":[{"authorDate":"2016-05-20 15:03:47","commitOrder":20,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-20 15:03:47","endLine":154,"groupId":"9448","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/da/69535e9dd757fee4a113704fe6178d42b182cf.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2016-05-20 15:03:47","commitOrder":20,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2016-05-20 15:03:47","endLine":154,"groupId":"9448","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9e/b6dd3a12392abe8b3412f33c6167107b9eb645.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"fc57e47c59bed24e6dc89f82035b3d4f7a26c6ca","commitMessage":"@@@ISIS-1408: removing RuntimeContext.  ObjectSpecificationDependencies.  ObjectMemberDependencies -  now passing the unit tests\n","date":"2016-05-20 15:03:47","modifiedFileCount":"7","status":"M","submitter":"Dan Haywood"},{"authorTime":"2018-09-28 20:45:21","codes":[{"authorDate":"2018-09-28 20:45:21","commitOrder":21,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            \n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2018-09-28 21:31:27","endLine":158,"groupId":"7719","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/3c/435a3d1325657edab8e44b0971b2f3bfb8047e.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            \n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-09-28 20:45:21","commitOrder":21,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2018-09-28 21:31:27","endLine":158,"groupId":"7719","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/10/ea14260c115574548ea70f4439649702f16fd9.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ObjectAdapter target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ObjectAdapter targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"daaf777dc802963d4cc98ba71d16a507673cfa07","commitMessage":"@@@ISIS-1976: introduces ManagedObject to replace OA within\nmost of metamodel\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976","date":"2018-09-28 21:31:27","modifiedFileCount":"141","status":"M","submitter":"Andi Huber"},{"authorTime":"2019-05-08 17:39:36","codes":[{"authorDate":"2019-05-08 17:39:36","commitOrder":22,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n\r\n\r\n\r\n\r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            \n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2019-05-09 18:45:36","endLine":158,"groupId":"7719","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ae/cbaee21c35a481a11f5fd3418e5e88a680e48a.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification, mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            \n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2019-05-08 17:39:36","commitOrder":22,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n\r\n\r\n\r\n\r\n\r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2019-05-09 18:45:36","endLine":157,"groupId":"7719","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c6/bedc4120e138c76f993511803e622b6ca36aa1.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            allowing(mockServicesInjector).getSpecificationLoader();\n            will(returnValue(mockSpecificationLoader));\n\n            allowing(mockServicesInjector).getPersistenceSessionServiceInternal();\n            will(returnValue(mockPersistenceSessionServiceInternal));\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification,\n                mockServicesInjector) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"16e80975e0126cc26c276b9891c1dae0054c7022","commitMessage":"@@@ISIS-2112: backporting from '2033-IoC_Spring' branch\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-2112","date":"2019-05-09 18:45:36","modifiedFileCount":"732","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-01-10 23:10:11","codes":[{"authorDate":"2020-01-10 23:10:11","commitOrder":23,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2020-01-10 23:10:11","endLine":150,"groupId":"12020","id":39,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/45/3a1ec595bd7304a521b353bd08e6b6f94e3b75.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n\r\n\r\n\r\n\r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            \n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    ObjectAdapter object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2020-01-10 23:10:11","commitOrder":23,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2020-01-10 23:10:11","endLine":150,"groupId":"12020","id":40,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2b/92020fa48586e8fbfc9d861a95edea676e3be4.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n\r\n\r\n\r\n\r\n\r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ObjectAdapter fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ObjectAdapter adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getChoices(\n                    final ObjectAdapter object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ObjectAdapter target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsDoOpFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public ObjectAdapter[] getAutoComplete(\n                    final ObjectAdapter object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"31b8b21f2e297439edf889faacfd685122a8751a","commitMessage":"@@@ISIS-2259: fixes up package name of isis-core-metamodel\n","date":"2020-01-10 23:10:11","modifiedFileCount":"436","status":"M","submitter":"danhaywood"},{"authorTime":"2020-05-26 16:49:42","codes":[{"authorDate":"2020-05-26 16:49:42","commitOrder":24,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2020-05-26 16:49:42","endLine":150,"groupId":"3195","id":41,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d6/50bbc9cc00f247ce0714d69ad411651fd7d8a3.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2020-05-26 16:49:42","commitOrder":24,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2020-05-26 16:49:42","endLine":150,"groupId":"3195","id":42,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/bf/5643fc7d47c7b80168e980c8294277de206256.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext<?> createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext<?> createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"4340168615e80fa33113255adb7a22fc5c441946","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis\n","date":"2020-05-26 16:49:42","modifiedFileCount":"230","status":"M","submitter":"J?rg Rade"},{"authorTime":"2020-10-07 21:53:59","codes":[{"authorDate":"2020-05-26 16:49:42","commitOrder":25,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2020-05-26 16:49:42","endLine":150,"groupId":"3195","id":43,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d6/50bbc9cc00f247ce0714d69ad411651fd7d8a3.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"},{"authorDate":"2020-10-07 21:53:59","commitOrder":25,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2020-10-07 21:53:59","endLine":149,"groupId":"3195","id":44,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/51/bbcbdf4b882ff243a6f9667c2f54a0f0f1e8df.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ObjectAdapter get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"640b7a58a69b2826c1fd8afcf33bbc3efa58fb80","commitMessage":"@@@Merge pull request #229 from apache/2441-auditing\n\n2441 auditing","date":"2020-10-07 21:53:59","modifiedFileCount":"84","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-05-05 19:48:45","codes":[{"authorDate":"2021-05-05 19:48:45","commitOrder":26,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2021-05-05 19:48:45","endLine":150,"groupId":"3195","id":45,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b0/750376081e75f4db0b99b4ae1f84ae0964fb02.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-05-05 19:48:45","commitOrder":26,"curCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2021-05-05 19:48:45","endLine":150,"groupId":"3195","id":46,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/f1/16e5d95e2035e0b565730c1792959c604f7e9f.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"2892201c4cc402f7ad3c9de2c35cb8523a478809","commitMessage":"@@@ISIS-2645: MM: make Identifier a first class citizen of ObjectMember(s)","date":"2021-05-05 19:48:45","modifiedFileCount":"24","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-06-17 01:35:27","codes":[{"authorDate":"2021-06-17 01:35:27","commitOrder":27,"curCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc , Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","date":"2021-06-17 01:35:27","endLine":155,"groupId":"3195","id":47,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/95/2b7b3a7fdaaf5d7507fe203d87ce7ec2d4c1d7.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-06-17 01:35:27","commitOrder":27,"curCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc, Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","date":"2021-06-17 01:35:27","endLine":155,"groupId":"3195","id":48,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d6/269a9349a2722224d8e2c9104f61741ba1e6bf.src","preCode":"    public void setup() {\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"ad5883b613b9e24b4c3bcdcbf7c798439c08d561","commitMessage":"@@@Merge pull request #587 from apache/2723_facet.preced\n\nISIS-2723: simplify facet precedence logic","date":"2021-06-17 01:35:27","modifiedFileCount":"805","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-09-10 19:00:42","codes":[{"authorDate":"2021-09-10 19:00:42","commitOrder":28,"curCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc , Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n            @Override\n            public boolean isExplicitlyAnnotated() {\n                return false;\n            }\n\n        };\n    }\n","date":"2021-09-10 19:00:42","endLine":158,"groupId":"10643","id":49,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4e/3ec5f591564595e981b630a334181c67553e06.src","preCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc , Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, objectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    ManagedObject object,\n                    String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2021-09-10 19:00:42","commitOrder":28,"curCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc, Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n            @Override\n            public boolean isExplicitlyAnnotated() {\n                return false;\n            }\n\n        };\n    }\n","date":"2021-09-10 19:00:42","endLine":159,"groupId":"10643","id":50,"instanceNumber":2,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d6/13fc97eeefbc3f25b3f4c02a616c6b579edeba.src","preCode":"    public void setup() {\n\n        MetaModelContext mmc = MetaModelContext_forTesting.buildDefault();\n        facetedMethod = FacetedMethod.createForProperty(mmc, Customer.class, \"firstName\");\n\n        context.checking(new Expectations() {{\n            \r\n            \r\n            \r\n            \r\n            \r\n        }});\n\n        objectAssociation = new ObjectAssociationAbstract(\n                facetedMethod.getFeatureIdentifier(),\n                facetedMethod, FeatureType.PROPERTY, mockObjectSpecification) {\n\n            @Override\n            public ManagedObject get(\n                    final ManagedObject fromObject,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public boolean isEmpty(final ManagedObject adapter, final InteractionInitiatedBy interactionInitiatedBy) {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getChoices(\n                    final ManagedObject object,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n\n            @Override\n            public ManagedObject getDefault(final ManagedObject adapter) {\n                return null;\n            }\n\n            @Override\n            public void toDefault(final ManagedObject target) {\n            }\n\n            @Override\n            public UsabilityContext createUsableInteractionContext(\n                    final ManagedObject target, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public VisibilityContext createVisibleInteractionContext(\n                    final ManagedObject targetObjectAdapter, final InteractionInitiatedBy interactionInitiatedBy,\n                    final Where where) {\n                return null;\n            }\n\n            @Override\n            public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType) {\n                return false;\n            }\n\n            @Override\n            public boolean hasAutoComplete() {\n                return false;\n            }\n\n            @Override\n            public Can<ManagedObject> getAutoComplete(\n                    final ManagedObject object,\n                    final String searchArg,\n                    final InteractionInitiatedBy interactionInitiatedBy) {\n                return null;\n            }\n            @Override\n            public int getAutoCompleteMinLength() {\n                return 0;\n            }\n        };\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectAssociationAbstractTest_alwaysHidden.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"4b97e5535048ef6639e0b245dfe1dd533c30a827","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis\n","date":"2021-09-10 19:00:42","modifiedFileCount":"2287","status":"M","submitter":"J?rg Rade"}]
