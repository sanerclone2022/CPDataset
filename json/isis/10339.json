[{"authorTime":"2021-04-14 23:26:49","codes":[{"authorDate":"2021-04-14 23:26:49","commitOrder":26,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n        \n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-04-14 23:26:49","endLine":134,"groupId":"9948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/38/e4d2b2b0984cd5f3399c05ed349cae5342b73d.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n        \n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2021-04-14 23:26:49","commitOrder":26,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","date":"2021-04-14 23:26:49","endLine":131,"groupId":"9948","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/19/7cdbe81b118b3f08c00f17bac6e1e191a039ae.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"MB"}],"commitId":"75633e1f8ce37deb39e3c2e2644357af15365d05","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-14 23:26:49","modifiedFileCount":"1999","status":"M","submitter":"J?rg Rade"},{"authorTime":"2021-06-10 12:27:06","codes":[{"authorDate":"2021-06-10 12:27:06","commitOrder":27,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-06-10 12:27:06","endLine":134,"groupId":"1393","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/10/f95d060dde11d8ebea4d46e36ea9be1b059abe.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n        \n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2021-06-10 12:27:06","commitOrder":27,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","date":"2021-06-10 12:27:06","endLine":131,"groupId":"1393","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4f/0cde54c5e64c9273a17f916b1590be9a67ae42.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationContext = context.mock(AuthenticationContext.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationContext(mockAuthenticationContext)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationContext).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n        \n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"62820feca3045e678fcee07e7f531f4f56c6f26a","commitMessage":"@@@Merge pull request #590 from apache/ISIS-2727\n\nIsis 2727 : factors out InteractionService as a low-level service available in the applib.","date":"2021-06-10 12:27:06","modifiedFileCount":"86","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-06-10 18:42:21","codes":[{"authorDate":"2021-06-10 18:42:21","commitOrder":28,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-06-10 18:42:21","endLine":132,"groupId":"1393","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ac/bb3fa84c7628e78a7eec6d60b99fcfcf7f7f1c.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2021-06-10 18:42:21","commitOrder":28,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","date":"2021-06-10 18:42:21","endLine":131,"groupId":"1393","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d3/76e4bc4150b712a89c18bf86761d60565ebc48.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n        mockAuthentication = context.mock(Authentication.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(mockAuthentication)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"e93e59ddbffbc6337f62e90f1bdc17389cc4d24c","commitMessage":"@@@ISIS-2727: remove Authentication from 'security'\n\ninstead have UserMemento hold the authentication state\n\nalso adds some todos","date":"2021-06-10 18:42:21","modifiedFileCount":"63","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-06-10 21:12:13","codes":[{"authorDate":"2021-06-10 21:12:13","commitOrder":29,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-06-10 21:12:13","endLine":132,"groupId":"1393","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b3/1b8b68a054415a711eba91dc19afbfecbcf558.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2021-06-10 21:12:13","commitOrder":29,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","date":"2021-06-10 21:12:13","endLine":131,"groupId":"1393","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2b/8ccd5a8023186bb5d5a16d2b6dfe8cdf236d36.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockAuthenticationProvider = context.mock(AuthenticationProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .authenticationProvider(mockAuthenticationProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockAuthenticationProvider).currentAuthentication();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"42d29aad778964e300a8e4316f8edbad180d843e","commitMessage":"@@@ISIS-2727: remove AuthenticationProvider\n\n(replaced with InteractionProvider)","date":"2021-06-10 21:12:13","modifiedFileCount":"32","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-06-17 01:35:27","codes":[{"authorDate":"2021-06-17 01:35:27","commitOrder":30,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-06-17 01:35:27","endLine":115,"groupId":"3944","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/3f/8cd691ff8ce8416ad7dc8fdca044fb9b553348.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-06-17 01:35:27","commitOrder":30,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n    }\n","date":"2021-06-17 01:35:27","endLine":115,"groupId":"3944","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ee/605e8ae0168ad9883c6caf1cee76d95fdc233a.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        facetHolder = new IdentifiedHolderImpl(\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n        facetedMethod = FacetedMethod.createForProperty(Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        ((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext);\n        facetedMethod.setMetaModelContext(metaModelContext);\n        facetedMethodParameter.setMetaModelContext(metaModelContext);\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"ad5883b613b9e24b4c3bcdcbf7c798439c08d561","commitMessage":"@@@Merge pull request #587 from apache/2723_facet.preced\n\nISIS-2723: simplify facet precedence logic","date":"2021-06-17 01:35:27","modifiedFileCount":"805","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-09-18 19:53:44","codes":[{"authorDate":"2021-09-18 19:53:44","commitOrder":31,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemover_forTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","date":"2021-09-18 19:53:44","endLine":116,"groupId":"10339","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ad/81936c9b5421462f683ea277b63b41bf2288af.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n        mockTranslationService = context.mock(TranslationService.class);\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n\n        jdoFacetContext = jdoFacetContextForTesting();\n    }\n","realPath":"persistence/jdo/metamodel/src/test/java/org/apache/isis/persistence/jdo/metamodel/testing/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2021-09-18 19:53:44","commitOrder":31,"curCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemover_forTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n    }\n","date":"2021-09-18 19:53:44","endLine":114,"groupId":"10339","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/83/3590428b4ab00ecf884e7ced02ee8ef653eb5c.src","preCode":"    protected void setUp() throws Exception {\n        super.setUp();\n\n        \r\n\n        methodRemover = new MethodRemoverForTesting();\n\n        mockInteractionProvider = context.mock(InteractionProvider.class);\n\n        mockTranslationService = context.mock(TranslationService.class);\n\n        mockSpecificationLoader = context.mock(SpecificationLoader.class);\n\n        metaModelContext = MetaModelContext_forTesting.builder()\n                .specificationLoader(mockSpecificationLoader)\n                .translationService(mockTranslationService)\n                .interactionProvider(mockInteractionProvider)\n                .build();\n\n        context.checking(new Expectations() {{\n\n            allowing(mockInteractionProvider).currentInteractionContext();\n            will(returnValue(Optional.of(iaContext)));\n        }});\n\n        facetHolder = FacetHolderAbstract.simple(\n                metaModelContext,\n                Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(Customer.class), \"firstName\"));\n\n        facetedMethod = FacetedMethod.createForProperty(metaModelContext, Customer.class, \"firstName\");\n        facetedMethodParameter = new FacetedMethodParameter(\n                metaModelContext,\n                FeatureType.ACTION_PARAMETER_SCALAR, facetedMethod.getOwningType(), facetedMethod.getMethod(), String.class\n                );\n    }\n","realPath":"core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/AbstractFacetFactoryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"13c3ae774c655ca2e810a3da8e26fb1ca655fc30","commitMessage":"@@@ISIS-2871: housekeeping","date":"2021-09-18 19:53:44","modifiedFileCount":"22","status":"M","submitter":"andi-huber"}]
