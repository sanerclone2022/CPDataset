[{"authorTime":"2021-04-21 23:42:54","codes":[{"authorDate":"2021-04-14 23:26:49","commitOrder":2,"curCode":"    protected Object invokeAction(Class<?> type, String actionId, @Nullable List<Object> pojoArgList) { \n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n        \n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n        \n        \r\n        val either = managedAction.invoke(args);\n        \n        assertTrue(either.isLeft()); \r\n        \n        val actionResultAsPojo = either.leftIfAny().getPojo();\n        \n        return actionResultAsPojo;\n    }\n","date":"2021-04-14 23:26:49","endLine":105,"groupId":"2038","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeAction","params":"(Class<?>type@StringactionId@@NullableList<Object>pojoArgList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/76/47f10b6016e00b6c6a9d08666f681cd609da6e.src","preCode":"    protected Object invokeAction(Class<?> type, String actionId, @Nullable List<Object> pojoArgList) { \n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n        \n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n        \n        \r\n        val either = managedAction.invoke(args);\n        \n        assertTrue(either.isLeft()); \r\n        \n        val actionResultAsPojo = either.leftIfAny().getPojo();\n        \n        return actionResultAsPojo;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/util/interaction/InteractionTestAbstract.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"},{"authorDate":"2021-04-21 23:42:54","commitOrder":2,"curCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","date":"2021-04-21 23:42:54","endLine":88,"groupId":"4276","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whenDisabled_shouldHaveVeto","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4f/937301c30f63a7413e1352675ca0430e646270.src","preCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","realPath":"regressiontests/stable-interact/src/test/java/org/apache/isis/testdomain/interact/ActionInteractionTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"0348bc49be1ca70a98f195ecaa09e1372df645ec","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-21 23:42:54","modifiedFileCount":"188","status":"M","submitter":"J?rg Rade"},{"authorTime":"2021-04-21 23:42:54","codes":[{"authorDate":"2021-07-31 21:41:36","commitOrder":3,"curCode":"    protected Object invokeAction(final Class<?> type, final String actionId, @Nullable final List<Object> pojoArgList) {\n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n\n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n\n        \r\n        val either = managedAction.invoke(args);\n\n        assertTrue(either.isLeft()); \r\n\n        val actionResultAsPojo = either.leftIfAny().getPojo();\n\n        return actionResultAsPojo;\n    }\n","date":"2021-07-31 21:41:36","endLine":99,"groupId":"2038","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeAction","params":"(finalClass<?>type@finalStringactionId@@NullablefinalList<Object>pojoArgList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5d/774256aa2ddbaab9290ff4e60bbeaf64bb567c.src","preCode":"    protected Object invokeAction(Class<?> type, String actionId, @Nullable List<Object> pojoArgList) {\n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n\n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n\n        \r\n        val either = managedAction.invoke(args);\n\n        assertTrue(either.isLeft()); \r\n\n        val actionResultAsPojo = either.leftIfAny().getPojo();\n\n        return actionResultAsPojo;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/util/interaction/InteractionTestAbstract.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-04-21 23:42:54","commitOrder":3,"curCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","date":"2021-04-21 23:42:54","endLine":88,"groupId":"4276","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"whenDisabled_shouldHaveVeto","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4f/937301c30f63a7413e1352675ca0430e646270.src","preCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","realPath":"regressiontests/stable-interact/src/test/java/org/apache/isis/testdomain/interact/ActionInteractionTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"c9a18fc0ed5d74c2506c74d74340dcc70efa7ebe","commitMessage":"@@@ISIS-2794: fixes object creation callbacks/events not triggered","date":"2021-07-31 21:41:36","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-04-21 23:42:54","codes":[{"authorDate":"2021-08-18 11:53:04","commitOrder":4,"curCode":"    protected Object invokeAction(final Class<?> type, final String actionId, final @Nullable List<Object> pojoArgList) {\n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n\n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n\n        \r\n        val either = managedAction.invoke(args);\n\n        assertTrue(either.isLeft()); \r\n\n        val actionResultAsPojo = either.leftIfAny().getPojo();\n\n        return actionResultAsPojo;\n    }\n","date":"2021-08-18 11:53:04","endLine":99,"groupId":"10131","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"invokeAction","params":"(finalClass<?>type@finalStringactionId@final@NullableList<Object>pojoArgList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/65/1129fe97b994f465a7258c7706e5a9368c486f.src","preCode":"    protected Object invokeAction(final Class<?> type, final String actionId, @Nullable final List<Object> pojoArgList) {\n        val managedAction = startActionInteractionOn(type, actionId, Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n        assertFalse(managedAction.checkUsability().isPresent()); \r\n\n        val args = managedAction.getInteractionHead()\n                .getPopulatedParameterValues(pojoArgList);\n\n        \r\n        val either = managedAction.invoke(args);\n\n        assertTrue(either.isLeft()); \r\n\n        val actionResultAsPojo = either.leftIfAny().getPojo();\n\n        return actionResultAsPojo;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/util/interaction/InteractionTestAbstract.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-04-21 23:42:54","commitOrder":4,"curCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","date":"2021-04-21 23:42:54","endLine":88,"groupId":"10131","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"whenDisabled_shouldHaveVeto","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4f/937301c30f63a7413e1352675ca0430e646270.src","preCode":"    void whenDisabled_shouldHaveVeto() {\n\n        val managedAction = startActionInteractionOn(InteractionDemo.class, \"noArgDisabled\", Where.OBJECT_FORMS)\n                .getManagedAction().get(); \r\n\n\n        assertFalse(managedAction.checkVisibility().isPresent()); \r\n\n        \r\n        val veto = managedAction.checkUsability().get(); \r\n        assertNotNull(veto);\n\n        assertEquals(\"Disabled for demonstration.\", veto.getReason());\n    }\n","realPath":"regressiontests/stable-interact/src/test/java/org/apache/isis/testdomain/interact/ActionInteractionTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"2ef51be03bb8e4670eb19d88fd067084d96c6de4","commitMessage":"@@@ISIS-2841: batch format order 'final @Nullable'","date":"2021-08-18 11:53:04","modifiedFileCount":"60","status":"M","submitter":"Andi Huber"}]
