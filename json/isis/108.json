[{"authorTime":"2021-04-21 23:42:54","codes":[{"authorDate":"2021-04-21 23:42:54","commitOrder":1,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n            \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","date":"2021-04-21 23:42:54","endLine":114,"groupId":"16145","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/92/7e3ecfded18acba15dfce2789229ad6c7e7a42.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n            \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","realPath":"regressiontests/stable-persistence-jdo/src/test/java/org/apache/isis/testdomain/persistence/jdo/JdoExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"},{"authorDate":"2021-04-21 23:42:54","commitOrder":1,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n                \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","date":"2021-04-21 23:42:54","endLine":114,"groupId":"16145","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/fe/f6619235dbb95fd8f0db8003344b5eeab12ee8.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n                \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","realPath":"regressiontests/stable-persistence-jpa/src/test/java/org/apache/isis/testdomain/persistence/jpa/JpaExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"0348bc49be1ca70a98f195ecaa09e1372df645ec","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-21 23:42:54","modifiedFileCount":"188","status":"B","submitter":"J?rg Rade"},{"authorTime":"2021-06-10 12:27:06","codes":[{"authorDate":"2021-06-10 12:27:06","commitOrder":2,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionFactory.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","date":"2021-06-10 12:27:06","endLine":113,"groupId":"12266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cf/ed472e98a841ba4712cbfadca489412771f8c2.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n            \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","realPath":"regressiontests/stable-persistence-jdo/src/test/java/org/apache/isis/testdomain/persistence/jdo/JdoExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-06-10 12:27:06","commitOrder":2,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionFactory.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","date":"2021-06-10 12:27:06","endLine":113,"groupId":"12266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/32/d433edcf6a05a9004b0e53552f21613b32c29c.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n        \n        final ThrowingRunnable uniqueConstraintViolator = \n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n                \n        assertThrows(DataIntegrityViolationException.class, ()->{\n        \n            interactionFactory.runAnonymous(()->{\n                \n                Result.ofVoid(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n            \n            });\n        \n        });\n        \n    }    \n","realPath":"regressiontests/stable-persistence-jpa/src/test/java/org/apache/isis/testdomain/persistence/jpa/JpaExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"62820feca3045e678fcee07e7f531f4f56c6f26a","commitMessage":"@@@Merge pull request #590 from apache/ISIS-2727\n\nIsis 2727 : factors out InteractionService as a low-level service available in the applib.","date":"2021-06-10 12:27:06","modifiedFileCount":"86","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-06-10 20:10:57","codes":[{"authorDate":"2021-06-10 20:10:57","commitOrder":3,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionService.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","date":"2021-06-10 20:10:57","endLine":113,"groupId":"108","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ee/720bea51f9c95ac1a2559a2a887594bc923c93.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionFactory.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n                \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","realPath":"regressiontests/stable-persistence-jdo/src/test/java/org/apache/isis/testdomain/persistence/jdo/JdoExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-06-10 20:10:57","commitOrder":3,"curCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionService.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","date":"2021-06-10 20:10:57","endLine":113,"groupId":"108","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2c/1d50c05aa51fc6158c70aa2f6519b252c896b5.src","preCode":"    void booksUniqueByIsbn_whenViolated_shouldThrowTranslatedException() {\n\n        \r\n        \r\n\n        final ThrowingRunnable uniqueConstraintViolator =\n                ()->inventoryDao.get().addBook_havingIsbnA_usingRepositoryService();\n\n        assertThrows(DataIntegrityViolationException.class, ()->{\n\n            interactionFactory.runAnonymous(()->{\n\n                ThrowingRunnable.resultOf(uniqueConstraintViolator)\n                .ifSuccess(__->fail(\"expected to fail, but did not\"))\n               \r\n                .ifFailure(ex->assertTrue(ex instanceof DataIntegrityViolationException))\n                .optionalElseFail();\n\n            });\n\n        });\n\n    }\n","realPath":"regressiontests/stable-persistence-jpa/src/test/java/org/apache/isis/testdomain/persistence/jpa/JpaExceptionTranslationTest_usingTransactional.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"fe9d58ed13592b52377d80d92d91eed1102c40bd","commitMessage":"@@@ISIS-2727: remove AnonymousInteractionFactory\n\n(merge up into InteractionService)\n\nremove InteractionFactory.  as is now identical to InteractionService\n\nrename InteractionFactoryDefault->\nInteractionServiceDefault\n\nalso cleanup InteractionContextFactory","date":"2021-06-10 20:10:57","modifiedFileCount":"64","status":"M","submitter":"Andi Huber"}]
