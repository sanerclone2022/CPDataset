[{"authorTime":"2020-01-10 21:59:03","codes":[{"authorDate":"2020-01-10 21:59:03","commitOrder":1,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(getResourceContext(), propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-01-10 21:59:03","endLine":449,"groupId":"17159","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/52/21dc2fccc372fcf594f6ff5da5520e67a09bf5.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(getResourceContext(), propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":420,"status":"B"},{"authorDate":"2020-01-10 21:59:03","commitOrder":1,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-01-10 21:59:03","endLine":482,"groupId":"16603","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/52/21dc2fccc372fcf594f6ff5da5520e67a09bf5.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"B"}],"commitId":"2074ec107287622d1cca7941b5b93b35c79d063f","commitMessage":"@@@ISIS-2259: moves core/viewers up a level.\n","date":"2020-01-10 21:59:03","modifiedFileCount":"0","status":"B","submitter":"danhaywood"},{"authorTime":"2020-02-12 17:25:20","codes":[{"authorDate":"2020-02-12 17:25:20","commitOrder":2,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        init(ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(getResourceContext(), propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-02-12 17:25:20","endLine":465,"groupId":"17159","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/05/475a0abe1385f7b94d7e3eabd097a58d41fb3c.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(getResourceContext(), propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"},{"authorDate":"2020-02-12 17:25:20","commitOrder":2,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        init(ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-02-12 17:25:20","endLine":499,"groupId":"16603","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/05/475a0abe1385f7b94d7e3eabd097a58d41fb3c.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        init(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE);\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"M"}],"commitId":"299e68709e8c2fd525ae03132fdd78f86dd660b6","commitMessage":"@@@ISIS-2275: refactor DomainObjectResourceServerside to support testing\n\nallows testing without having to mock or bring up a web stack","date":"2020-02-12 17:25:20","modifiedFileCount":"9","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-02-12 19:17:22","codes":[{"authorDate":"2020-02-12 19:17:22","commitOrder":3,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        val domainResourceHelper = DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(resourceContext, objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(resourceContext, propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return domainResourceHelper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-02-12 19:17:22","endLine":474,"groupId":"357","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5b/cdd36b7ab53ed24bf80bf16d5778e6bd273fc6.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        init(ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(getResourceContext(), propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"M"},{"authorDate":"2020-02-12 19:17:22","commitOrder":3,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        val domainResourceHelper = DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter);\n        val accessHelper = new ObjectAdapterAccessHelper(resourceContext, objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return domainResourceHelper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","date":"2020-02-12 19:17:22","endLine":509,"groupId":"16603","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5b/cdd36b7ab53ed24bf80bf16d5778e6bd273fc6.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        init(ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        final ManagedObject objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        final DomainResourceHelper helper = newDomainResourceHelper(objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(getResourceContext(), objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return helper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"M"}],"commitId":"1755bee10e5cd020723d718f8f983ce2ef3cd899","commitMessage":"@@@ISIS-2275: let ResourceAbstract no longer be a holder of ResourceContext\n\ndecouples the ResourceContext from the resource","date":"2020-02-12 19:17:22","modifiedFileCount":"9","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-05-01 22:53:40","codes":[{"authorDate":"2020-05-01 22:53:40","commitOrder":4,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId)\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-05-01 22:53:40","endLine":467,"groupId":"16343","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/dc/8f0ee1172b3980f45de03cb38d47ae4c7146ef.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        val domainResourceHelper = DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter);\n        final ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(resourceContext, objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(propertyId,\n                ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final ObjectSpecification propertySpec = property.getSpecification();\n        final String bodyAsString = Util.asStringUtf8(body);\n\n        final ManagedObject argAdapter = new JsonParserHelper(resourceContext, propertySpec).parseAsMapWithSingleValue(\n                bodyAsString);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, argAdapter, InteractionInitiatedBy.USER);\n\n        return domainResourceHelper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":445,"status":"M"},{"authorDate":"2020-05-01 22:53:40","commitOrder":4,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId)\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-05-01 22:53:40","endLine":494,"groupId":"16343","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/dc/8f0ee1172b3980f45de03cb38d47ae4c7146ef.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        val domainResourceHelper = DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter);\n        val accessHelper = new ObjectAdapterAccessHelper(resourceContext, objectAdapter);\n\n        final OneToOneAssociation property = accessHelper.getPropertyThatIsVisibleForIntent(\n                propertyId, ObjectAdapterAccessHelper.Intent.MUTATE);\n\n        final Consent consent = property.isAssociationValid(objectAdapter, null, InteractionInitiatedBy.USER);\n        if (consent.isVetoed()) {\n            throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED, consent.getReason());\n        }\n\n        property.set(objectAdapter, null, InteractionInitiatedBy.USER);\n\n        return domainResourceHelper.propertyDetails(\n                propertyId,\n                MemberReprMode.WRITE\n                );\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":477,"status":"M"}],"commitId":"c542086ffdb84215c6de71ccc523abb749daa733","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis\n","date":"2020-05-01 22:53:40","modifiedFileCount":"165","status":"M","submitter":"J?rg Rade"},{"authorTime":"2020-07-29 21:31:11","codes":[{"authorDate":"2020-07-29 21:31:11","commitOrder":5,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-07-29 21:31:11","endLine":468,"groupId":"12885","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/07/f67cc30a82b997a37c72e980b5ca179db5e18e.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId)\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"M"},{"authorDate":"2020-07-29 21:31:11","commitOrder":5,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-07-29 21:31:11","endLine":495,"groupId":"12885","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/07/f67cc30a82b997a37c72e980b5ca179db5e18e.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId)\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"572386c0c063456e7e4946fe781c83040ebf6373","commitMessage":"@@@ISIS-2340: ManagedProperty to hold an immutable 'Where' field","date":"2020-07-29 21:31:11","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-07-29 22:11:05","codes":[{"authorDate":"2020-07-29 22:11:05","commitOrder":6,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-07-29 22:11:05","endLine":468,"groupId":"5860","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ce/ac8031c7a111a205508fb3b7c5138f3e24497d.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"M"},{"authorDate":"2020-07-29 22:11:05","commitOrder":6,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-07-29 22:11:05","endLine":495,"groupId":"10474","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ce/ac8031c7a111a205508fb3b7c5138f3e24497d.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility(resourceContext.getWhere())\n        .checkUsability(resourceContext.getWhere(), AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"0e5857cfc522684283eb995283cdcbb2ba1a702b","commitMessage":"@@@ISIS-2340: ManagedCollection/Action to hold an immutable 'Where' field","date":"2020-07-29 22:11:05","modifiedFileCount":"26","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-09-20 18:51:52","codes":[{"authorDate":"2020-09-20 18:51:52","commitOrder":7,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-09-20 19:05:09","endLine":470,"groupId":"5860","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/13/2bab20e1b4a5712647be2ece87cdfee5f714e3.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n            \n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":450,"status":"M"},{"authorDate":"2020-09-20 18:51:52","commitOrder":7,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2020-09-20 19:05:09","endLine":495,"groupId":"10474","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")StringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/13/2bab20e1b4a5712647be2ece87cdfee5f714e3.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n        \n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        setCommandExecutor(Command.Executor.USER);\n        \n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n        \n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"M"}],"commitId":"228435a384f2f6b9d3b3b386befef2a3c9f9a32a","commitMessage":"@@@ISIS-2222 : reworking command (log and replay); other small improvements.\n","date":"2020-09-20 19:05:09","modifiedFileCount":"166","status":"M","submitter":"danhaywood"},{"authorTime":"2021-06-24 15:00:07","codes":[{"authorDate":"2021-06-24 15:00:07","commitOrder":8,"curCode":"    public Response modifyProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2021-06-24 15:00:07","endLine":408,"groupId":"5860","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/26/d8fc8d2a1e72c1cb67cb2e21744d5d1ec60b4d.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"M"},{"authorDate":"2021-06-24 15:00:07","commitOrder":8,"curCode":"    public Response clearProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","date":"2021-06-24 15:00:07","endLine":433,"groupId":"10474","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/26/d8fc8d2a1e72c1cb67cb2e21744d5d1ec60b4d.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"}],"commitId":"3e11ab8a79a3e10776cca9229497a2e8e3d0b182","commitMessage":"@@@ISIS-2761: fixes Vaadin and JavaFX provisioning issues\n\nso can work on a shared object-icon resolver utility\n\nalso changes the RO Viewer's object-icon resource href value 'image' ->\n'object-icon'","date":"2021-06-24 15:00:07","modifiedFileCount":"7","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-08-21 23:52:38","codes":[{"authorDate":"2021-08-21 23:52:38","commitOrder":9,"curCode":"    public Response modifyProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId,\n            final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return _EndpointLogging.response(log, \"PUT /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","date":"2021-08-21 23:52:38","endLine":459,"groupId":"5860","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d0/ecf46623eb0ca5b97ba19bed453253cefb6e8e.src","preCode":"    public Response modifyProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId, final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"M"},{"authorDate":"2021-08-21 23:52:38","commitOrder":9,"curCode":"    public Response clearProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return _EndpointLogging.response(log, \"DELETE /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","date":"2021-08-21 23:52:38","endLine":489,"groupId":"10474","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d0/ecf46623eb0ca5b97ba19bed453253cefb6e8e.src","preCode":"    public Response clearProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"instanceId\") final String instanceId, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return DomainResourceHelper.ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE);\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"}],"commitId":"d89d0e3810efd17c21002ecab5011fe9f39ce054","commitMessage":"@@@ISIS-2853: debug logging for DomainObjectResourceServerside\n","date":"2021-08-21 23:52:38","modifiedFileCount":"8","status":"M","submitter":"andi-huber"},{"authorTime":"2021-08-22 00:57:26","codes":[{"authorDate":"2021-08-22 00:57:26","commitOrder":10,"curCode":"    public Response modifyProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId,\n            final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId,\n                roEx->_EndpointLogging.error(log, \"PUT /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId, roEx));\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(veto->\n            _EndpointLogging.error(log, \"PUT /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId, InteractionFailureHandler.onFailure(veto)));\n\n        return _EndpointLogging.response(log, \"PUT /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","date":"2021-08-22 00:57:26","endLine":476,"groupId":"10466","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"modifyProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId@finalInputStreambody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ee/912aff095438a1069021034af395d782af99c1.src","preCode":"    public Response modifyProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId,\n            final InputStream body) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->{\n            val proposedNewValue = new JsonParserHelper(resourceContext, property.getSpecification())\n                    .parseAsMapWithSingleValue(Util.asStringUtf8(body));\n\n            return proposedNewValue;\n        })\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return _EndpointLogging.response(log, \"PUT /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"M"},{"authorDate":"2021-08-22 00:57:26","commitOrder":10,"curCode":"    public Response clearProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId,\n                roEx->_EndpointLogging.error(log, \"DELETE /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId, roEx));\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(veto->\n            _EndpointLogging.error(log, \"DELETE /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId, InteractionFailureHandler.onFailure(veto)));\n\n        return _EndpointLogging.response(log, \"DELETE /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","date":"2021-08-22 00:57:26","endLine":508,"groupId":"10466","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"clearProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"instanceId\")finalStringinstanceId@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/ee/912aff095438a1069021034af395d782af99c1.src","preCode":"    public Response clearProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"instanceId\") final String instanceId,\n            @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                ResourceDescriptor.generic(Where.OBJECT_FORMS, RepresentationService.Intent.NOT_APPLICABLE));\n\n        val objectAdapter = getObjectAdapterElseThrowNotFound(domainType, instanceId);\n\n        PropertyInteraction.start(objectAdapter, propertyId, resourceContext.getWhere())\n        .checkVisibility()\n        .checkUsability(AccessIntent.MUTATE)\n        .modifyProperty(property->null)\n        .validateElseThrow(InteractionFailureHandler::onFailure);\n\n        return _EndpointLogging.response(log, \"DELETE /objects/{}/{}/properties/{}\", domainType, instanceId, propertyId,\n                _DomainResourceHelper\n                .ofObjectResource(resourceContext, objectAdapter)\n                .propertyDetails(propertyId, ManagedMember.RepresentationMode.WRITE));\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainObjectResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"}],"commitId":"cf7a1193effc2e63185f87545447e5e2b92c60aa","commitMessage":"@@@ISIS-2853: cover more failure paths with DomainObjectResourceServerside","date":"2021-08-22 00:57:26","modifiedFileCount":"3","status":"M","submitter":"andi-huber"}]
