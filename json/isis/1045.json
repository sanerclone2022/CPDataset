[{"authorTime":"2021-07-23 23:25:16","codes":[{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":155,"groupId":"13889","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a5/405219c2f8a28a06fca357696cb8913078426c.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":158,"groupId":"13889","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/77/dab9061d7bf4c79364e3978e5c1ef814d099f3.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"9d274b298f6f14a63524851f7d2a609e44ab00db","commitMessage":"@@@ISIS-2573: publishing tests: enhanced step tracing\n\nidea is to record all essential execution steps/events.  so that at the\nend of the tests.  we can verify that the expected steps had taken place","date":"2021-07-23 23:25:16","modifiedFileCount":"9","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-07-24 04:04:33","codes":[{"authorDate":"2021-07-24 04:04:33","commitOrder":2,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        return true;\n    }\n","date":"2021-07-24 04:04:33","endLine":147,"groupId":"13889","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e3/06d8b41560c0003d25fc7395b7376aef30d0ce.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2021-07-24 04:04:33","commitOrder":2,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(preCommitListener);\n\n        \r\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        return true;\n    }\n","date":"2021-07-24 04:04:33","endLine":151,"groupId":"13889","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/df/2f20de5808bd2956f0a13713d6af66c8e873f5.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        \r\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"7e730cbf8ddc2fd29f687facf50f11a099899325","commitMessage":"@@@ISIS-2573: remove TransactionService#nextTransaction()\n\nalso fixes most publishing tests","date":"2021-07-24 04:04:33","modifiedFileCount":"6","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-28 20:50:02","codes":[{"authorDate":"2021-07-28 20:50:02","commitOrder":3,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:50:02","endLine":227,"groupId":"13889","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2a/dcd88c09697c98cc11558e4367ad9543a68908.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2021-07-28 20:50:02","commitOrder":3,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:50:02","endLine":234,"groupId":"13889","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/23/f8fc486a73718416100913850c4e610da97641.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(preCommitListener);\n\n        \r\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->{\n\n                val bookAdapter = objectManager.adapt(book);\n                val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                val propertyModel = managedProperty.startNegotiation();\n                val propertySpec = managedProperty.getSpecification();\n                propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                propertyModel.submit();\n\n            });\n\n        });\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"1d69d8f347ce0b1fbecbf892b95777adedd24c84","commitMessage":"@@@Merge pull request #692 from apache/2826-lightw.prop.ch.tr\n\nISIS-2826: Lightweight JPA Property Change Publishing","date":"2021-07-28 20:50:02","modifiedFileCount":"36","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-28 20:59:08","codes":[{"authorDate":"2021-07-28 20:59:08","commitOrder":4,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:59:08","endLine":227,"groupId":"13889","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/db/5148f04a05312549fce2eab370ffd4414d0584.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2021-07-28 20:59:08","commitOrder":4,"curCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:59:08","endLine":234,"groupId":"13889","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cc/9abaf40120cccec396997d1a736779acf9eca5.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"1e3f7c4debce090e4e6bf83749cda7829f6ab4e8","commitMessage":"@@@ISIS-2826: cosmetic change of enum (consistency)","date":"2021-07-28 20:59:08","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-31 15:25:36","codes":[{"authorDate":"2021-07-31 15:25:36","commitOrder":5,"curCode":"    protected void interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 15:25:36","endLine":254,"groupId":"1045","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/42/1a3f33514c232b3c6db382d27d8650c3e53c16.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2021-07-31 15:25:36","commitOrder":5,"curCode":"    protected void interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 15:25:36","endLine":257,"groupId":"1045","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"interactionApiExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a0/42cb68c65c8526df8648da7efc4cd977688c10.src","preCode":"    protected boolean interactionApiExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        switch(context.getScenario()) {\n\n        case PROPERTY_UPDATE:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n                    val propertyInteraction = PropertyInteraction.start(bookAdapter, \"name\", Where.OBJECT_FORMS);\n                    val managedProperty = propertyInteraction.getManagedPropertyElseThrow(__->_Exceptions.noSuchElement());\n                    val propertyModel = managedProperty.startNegotiation();\n                    val propertySpec = managedProperty.getSpecification();\n                    propertyModel.getValue().setValue(ManagedObject.of(propertySpec, \"Book #2\"));\n                    propertyModel.submit();\n\n                });\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            \r\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->{\n\n                    val bookAdapter = objectManager.adapt(book);\n\n                    val actionInteraction = ActionInteraction.start(bookAdapter, \"doubleThePrice\", Where.OBJECT_FORMS);\n                    val managedAction = actionInteraction.getManagedActionElseThrow(__->_Exceptions.noSuchElement());\n                    \r\n                    managedAction.invoke(Can.empty()); \r\n                });\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"e7d7c3d936ef537ebae412679c2008797c6161b2","commitMessage":"@@@ISIS-2794: rework tests to also test the tx rollback case","date":"2021-07-31 15:25:36","modifiedFileCount":"6","status":"M","submitter":"Andi Huber"}]
