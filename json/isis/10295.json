[{"authorTime":"2020-03-27 22:01:06","codes":[{"authorDate":"2020-01-15 23:57:11","commitOrder":3,"curCode":"    public Object act(\n\n            \r\n            @ParameterLayout(\n                    named = MixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = MixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2020-01-15 23:57:11","endLine":91,"groupId":"12655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"act","params":"(@ParameterLayout(named=MixinConstants.FILENAME_PROPERTY_NAME@describedAs=MixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c7/d59f580652ed1e4a6c3dd6b2dc62510247bf34.src","preCode":"    public Object act(\n\n            \r\n            @ParameterLayout(\n                    named = MixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = MixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetaModelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"NB"},{"authorDate":"2020-03-27 22:01:06","commitOrder":3,"curCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n        \n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2020-03-27 22:01:06","endLine":87,"groupId":"8165","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/62/9ee29cb6dd3303a18fe2d28125c1760ce0f34a.src","preCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n        \n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"7758ccc5c7a80c15d98e00ea47c91dcafeb243ad","commitMessage":"@@@ISIS-2333: adds Object_inspectMetamodel","date":"2020-03-27 22:01:06","modifiedFileCount":"2","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-03-28 16:24:12","codes":[{"authorDate":"2020-01-15 23:57:11","commitOrder":4,"curCode":"    public Object act(\n\n            \r\n            @ParameterLayout(\n                    named = MixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = MixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2020-01-15 23:57:11","endLine":91,"groupId":"12655","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"act","params":"(@ParameterLayout(named=MixinConstants.FILENAME_PROPERTY_NAME@describedAs=MixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c7/d59f580652ed1e4a6c3dd6b2dc62510247bf34.src","preCode":"    public Object act(\n\n            \r\n            @ParameterLayout(\n                    named = MixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = MixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetaModelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2020-03-28 16:24:12","commitOrder":4,"curCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n        \n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n        \n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title()); \n        \n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2020-03-28 16:24:12","endLine":98,"groupId":"8165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/69/4545f8666763424cb817a40e76404f678ceefa.src","preCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n        \n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"f9af7577d12a4bd9f99477fcfc37a60047e05254","commitMessage":"@@@ISIS-2333: load the view-model tree nodes eagerly (entire tree)","date":"2020-03-28 16:24:12","modifiedFileCount":"10","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-04-14 23:26:49","codes":[{"authorDate":"2021-04-14 23:26:49","commitOrder":5,"curCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2021-04-14 23:26:49","endLine":93,"groupId":"12655","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"act","params":"(@ParameterLayout(named=DtoMixinConstants.FILENAME_PROPERTY_NAME@describedAs=DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/4c/d7c244377341d0bde84a07795d7bbd4c8709eb.src","preCode":"    public Object act(\n\n            \r\n            @ParameterLayout(\n                    named = MixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = MixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetamodelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-04-14 23:26:49","commitOrder":5,"curCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2021-04-14 23:26:49","endLine":96,"groupId":"8165","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e8/0e479492038a9fa93158820ea7c5b8ac66e12e.src","preCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new MetaModelService.Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n        \n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n        \n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title()); \n        \n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"75633e1f8ce37deb39e3c2e2644357af15365d05","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-14 23:26:49","modifiedFileCount":"1999","status":"M","submitter":"J?rg Rade"},{"authorTime":"2021-06-03 14:16:17","codes":[{"authorDate":"2021-06-03 14:16:17","commitOrder":6,"curCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2021-06-03 14:16:17","endLine":107,"groupId":"8911","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"act","params":"(@ParameterLayout(named=DtoMixinConstants.FILENAME_PROPERTY_NAME@describedAs=DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e5/56dc30483bec860c5be0c7a62f17d88ce5cf83.src","preCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetamodelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2021-06-03 14:16:17","commitOrder":6,"curCode":"    public Object act() {\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2021-06-03 14:16:17","endLine":107,"groupId":"8165","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e8/bf35f877d36637104b8ae6bf4d56901fa749f8.src","preCode":"    public Object act() {\n\n        val pkg = holder.getClass().getPackage().getName();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withPackagePrefix(pkg);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"e68c44ef1343be0d5324e0727b60dcf12e361794","commitMessage":"@@@Merge pull request #579 from apache/ISIS-2712\n\nIsis 2712 : adds ability to download metamodel XML based on namespace prefix","date":"2021-06-03 14:16:17","modifiedFileCount":"12","status":"M","submitter":"Dan Haywood"},{"authorTime":"2021-06-08 14:39:03","codes":[{"authorDate":"2021-06-03 14:16:17","commitOrder":7,"curCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2021-06-03 14:16:17","endLine":107,"groupId":"8911","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"act","params":"(@ParameterLayout(named=DtoMixinConstants.FILENAME_PROPERTY_NAME@describedAs=DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e5/56dc30483bec860c5be0c7a62f17d88ce5cf83.src","preCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetamodelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2021-06-08 14:39:03","commitOrder":7,"curCode":"    public Object act() {\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(domainObject.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = domainObject.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2021-06-08 14:39:03","endLine":109,"groupId":"12279","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/05/105c9cf39ea9c9d55f1e009d115f0c6eb0545e.src","preCode":"    public Object act() {\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"3a96c175178f936d8f9acf60385370537630efac","commitMessage":"@@@ISIS-2724: remove wrong uses of @DomainObject annot. on mixin types","date":"2021-06-08 14:39:03","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-09-10 19:00:42","codes":[{"authorDate":"2021-09-10 19:00:42","commitOrder":8,"curCode":"    @MemberSupport public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","date":"2021-09-10 19:00:42","endLine":106,"groupId":"10295","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"act","params":"(@ParameterLayout(named=DtoMixinConstants.FILENAME_PROPERTY_NAME@describedAs=DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)finalStringfileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c3/69e9b005025525b791e6eaf752331a7a5fe8e0.src","preCode":"    public Object act(\n            @ParameterLayout(\n                    named = DtoMixinConstants.FILENAME_PROPERTY_NAME,\n                    describedAs = DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION)\n            final String fileName) {\n\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = holder.getClass().getName();\n\n        val domainClassDtos = metamodelDto.getDomainClassDto();\n        domainClassDtos.removeIf(classDto->!Objects.equals(classDto.getId(), className));\n\n        val xmlString = jaxbService.toXml(metamodelDto);\n\n        return Clob.of(fileName, CommonMimeType.XML, xmlString);\n    }\n","realPath":"api/applib/src/main/java/org/apache/isis/applib/mixins/metamodel/Object_downloadMetamodelXml.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-09-10 19:00:42","commitOrder":8,"curCode":"    @MemberSupport public Object act() {\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(domainObject.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = domainObject.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","date":"2021-09-10 19:00:42","endLine":107,"groupId":"10295","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"act","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/95/62cb015bda5cc424451d155bc98e3f9de814f4.src","preCode":"    public Object act() {\n\n        final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(domainObject.getClass());\n        if(!logicalTypeIfAny.isPresent()) {\n            messageService.warnUser(\"Unknown class, unable to export\");\n            return null;\n        }\n        final String namespace = logicalTypeIfAny.get().getNamespace();\n\n        val config =\n                new Config()\n                .withIgnoreNoop()\n                .withIgnoreAbstractClasses()\n                .withIgnoreInterfaces()\n                .withIgnoreBuiltInValueTypes()\n                .withNamespacePrefix(namespace);\n\n        val metamodelDto = metaModelService.exportMetaModel(config);\n\n        val className = domainObject.getClass().getName();\n\n        val domainClassDto = metamodelDto.getDomainClassDto()\n            .stream()\n            .filter(classDto->Objects.equals(classDto.getId(), className))\n            .findFirst()\n            .orElseThrow(_Exceptions::noSuchElement);\n\n        val root = MMNodeFactory.type(domainClassDto, null);\n        val tree = TreeNode.lazy(root, MMTreeAdapter.class);\n\n        \r\n        \r\n        \r\n        tree.streamDepthFirst()\n        .map(TreeNode::getValue)\n        .forEach(node->node.title());\n\n        tree.expand(TreePath.of(0)); \r\n        return tree;\n    }\n","realPath":"core/metamodel/src/main/java/org/apache/isis/core/metamodel/inspect/Object_inspectMetamodel.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"4b97e5535048ef6639e0b245dfe1dd533c30a827","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis\n","date":"2021-09-10 19:00:42","modifiedFileCount":"2287","status":"M","submitter":"J?rg Rade"}]
