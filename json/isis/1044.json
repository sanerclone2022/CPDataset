[{"authorTime":"2021-07-23 23:25:16","codes":[{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":116,"groupId":"7697","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a5/405219c2f8a28a06fca357696cb8913078426c.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":119,"groupId":"7697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/77/dab9061d7bf4c79364e3978e5c1ef814d099f3.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"9d274b298f6f14a63524851f7d2a609e44ab00db","commitMessage":"@@@ISIS-2573: publishing tests: enhanced step tracing\n\nidea is to record all essential execution steps/events.  so that at the\nend of the tests.  we can verify that the expected steps had taken place","date":"2021-07-23 23:25:16","modifiedFileCount":"9","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-07-28 20:50:02","codes":[{"authorDate":"2021-07-28 20:50:02","commitOrder":2,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:50:02","endLine":166,"groupId":"13888","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2a/dcd88c09697c98cc11558e4367ad9543a68908.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJpa();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2021-07-28 20:50:02","commitOrder":2,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:50:02","endLine":173,"groupId":"13888","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/23/f8fc486a73718416100913850c4e610da97641.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        \r\n        setupBookForJdo();\n\n        context.bind(preCommitListener);\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            \r\n            context.changeProperty(()->book.setName(\"Book #2\"));\n\n            repository.persistAndFlush(book);\n\n        });\n\n        context.unbind(preCommitListener);\n\n        \r\n        \r\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT_WHEN_PROGRAMMATIC);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"1d69d8f347ce0b1fbecbf892b95777adedd24c84","commitMessage":"@@@Merge pull request #692 from apache/2826-lightw.prop.ch.tr\n\nISIS-2826: Lightweight JPA Property Change Publishing","date":"2021-07-28 20:50:02","modifiedFileCount":"36","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-28 20:59:08","codes":[{"authorDate":"2021-07-28 20:59:08","commitOrder":3,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:59:08","endLine":166,"groupId":"13888","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/db/5148f04a05312549fce2eab370ffd4414d0584.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2021-07-28 20:59:08","commitOrder":3,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-28 20:59:08","endLine":173,"groupId":"13888","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cc/9abaf40120cccec396997d1a736779acf9eca5.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_EXECUTION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"1e3f7c4debce090e4e6bf83749cda7829f6ab4e8","commitMessage":"@@@ISIS-2826: cosmetic change of enum (consistency)","date":"2021-07-28 20:59:08","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-31 04:01:42","codes":[{"authorDate":"2021-07-31 04:01:42","commitOrder":4,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","date":"2021-07-31 04:01:42","endLine":177,"groupId":"13888","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/b2/33d79f687c81c432d345af50e0f48e73b948b1.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2021-07-31 04:01:42","commitOrder":4,"curCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","date":"2021-07-31 04:01:42","endLine":185,"groupId":"13888","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/dc/b540cdc4ec0c5607623944b491efaca815e210.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"ea748af95084e90ac63378a30217e5f728016153","commitMessage":"@@@ISIS-2794: fixes LoadedLifecycleEvents - also adding tests","date":"2021-07-31 04:01:42","modifiedFileCount":"14","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-31 15:25:36","codes":[{"authorDate":"2021-07-31 15:25:36","commitOrder":5,"curCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJdoBook()); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJpa();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 15:25:36","endLine":196,"groupId":"13888","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/42/1a3f33514c232b3c6db382d27d8650c3e53c16.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJpa();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2021-07-31 15:25:36","commitOrder":5,"curCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJdoBook()); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJdo();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 15:25:36","endLine":199,"groupId":"13888","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a0/42cb68c65c8526df8648da7efc4cd977688c10.src","preCode":"    protected boolean programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            setupBookForJdo();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"e7d7c3d936ef537ebae412679c2008797c6161b2","commitMessage":"@@@ISIS-2794: rework tests to also test the tx rollback case","date":"2021-07-31 15:25:36","modifiedFileCount":"6","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-31 21:58:44","codes":[{"authorDate":"2021-07-31 21:58:44","commitOrder":6,"curCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJpaBook()); \r\n            factoryService.detachedEntity(JpaBook.class); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJpa();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 21:58:44","endLine":197,"groupId":"1044","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/1e/e662051006d237f000dac6ecf8b50864522877.src","preCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJdoBook()); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJpa();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2021-07-31 21:58:44","commitOrder":6,"curCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJdoBook()); \r\n            factoryService.detachedEntity(JdoBook.class); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJdo();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","date":"2021-07-31 21:58:44","endLine":200,"groupId":"1044","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"programmaticExecution","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/2d/4e4e1429d486ff0573227f4e8819d4d120a624.src","preCode":"    protected void programmaticExecution(\n            final PublishingTestContext context) {\n\n        context.bind(commitListener);\n\n        \r\n        \r\n\n        switch(context.getScenario()) {\n        case ENTITY_CREATION:\n\n            context.runGiven();\n            \r\n            factoryService.detachedEntity(BookDto.sample().toJdoBook()); \r\n            break;\n\n        case ENTITY_PERSISTING:\n\n            context.runGiven();\n            \r\n            setupBookForJdo();\n            break;\n\n        case ENTITY_LOADING:\n\n            context.runGiven();\n            \r\n            withBookDo(book->{\n                assertNotNull(book);\n            });\n            break;\n\n\n        case PROPERTY_UPDATE:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.changeProperty(()->book.setName(\"Book #2\"));\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ACTION_INVOCATION:\n\n            withBookDo(book->{\n\n                context.runGiven();\n\n                \r\n                context.executeAction(()->book.doubleThePrice());\n\n                repository.persistAndFlush(book);\n\n            });\n\n            break;\n        case ENTITY_REMOVAL:\n\n            withBookDo(book->{\n\n                context.runGiven();\n                \r\n                repository.removeAndFlush(book);\n\n            });\n\n            break;\n        default:\n            throw _Exceptions.unmatchedCase(context.getScenario());\n        }\n\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"24c0ecbf553147678ea9bbbe2f8ee1a899a4f4b4","commitMessage":"@@@ISIS-2794: fixes creation events triggered twice","date":"2021-07-31 21:58:44","modifiedFileCount":"7","status":"M","submitter":"Andi Huber"}]
