[{"authorTime":"2021-06-22 16:40:22","codes":[{"authorDate":"2021-06-22 16:40:22","commitOrder":1,"curCode":"    public void refineProgrammingModel(ProgrammingModel programmingModel) {\n        programmingModel.addVisitingValidatorSkipManagedBeans(spec->{\n\n            \r\n            final JdoPersistenceCapableFacet pcFacet = spec.getFacet(JdoPersistenceCapableFacet.class);\n            if(pcFacet==null || pcFacet.getIdentityType() == IdentityType.NONDURABLE) {\n                return;\n            }\n\n            spec.streamProperties(MixedIn.EXCLUDED)\n            \r\n            .filter(association->!association.containsNonFallbackFacet(JdoNotPersistentFacet.class))\n            .forEach(association->{\n                validateBigDecimalValueFacet(association);\n            });\n\n        });\n    }\n","date":"2021-06-22 16:40:22","endLine":122,"groupId":"1851","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"refineProgrammingModel","params":"(ProgrammingModelprogrammingModel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/7c/6aa6bfe724334afe104f78caace45e6a2cb460.src","preCode":"    public void refineProgrammingModel(ProgrammingModel programmingModel) {\n        programmingModel.addVisitingValidatorSkipManagedBeans(spec->{\n\n            \r\n            final JdoPersistenceCapableFacet pcFacet = spec.getFacet(JdoPersistenceCapableFacet.class);\n            if(pcFacet==null || pcFacet.getIdentityType() == IdentityType.NONDURABLE) {\n                return;\n            }\n\n            spec.streamProperties(MixedIn.EXCLUDED)\n            \r\n            .filter(association->!association.containsNonFallbackFacet(JdoNotPersistentFacet.class))\n            .forEach(association->{\n                validateBigDecimalValueFacet(association);\n            });\n\n        });\n    }\n","realPath":"persistence/jdo/metamodel/src/main/java/org/apache/isis/persistence/jdo/metamodel/facets/prop/column/BigDecimalInferredFromJdoColumnAnnotationFacetFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2021-06-22 16:40:22","commitOrder":1,"curCode":"    private static void validateBigDecimalValueFacet(ObjectAssociation association) {\n\n        association.lookupFacet(BigDecimalValueFacet.class)\n        .map(BigDecimalValueFacet::getSharedFacetRankingElseFail)\n        .ifPresent(facetRanking->facetRanking\n                .visitTopRankPairsSemanticDiffering(BigDecimalValueFacet.class, (a, b)->{\n\n                    ValidationFailure.raiseFormatted(\n                            association,\n                            \"%s: inconsistent BigDecimalValue semantics specified in %s and %s.\",\n                            association.getFeatureIdentifier().toString(),\n                            a.getClass().getSimpleName(),\n                            b.getClass().getSimpleName());\n                }));\n\n    }\n","date":"2021-06-22 16:40:22","endLine":139,"groupId":"12370","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateBigDecimalValueFacet","params":"(ObjectAssociationassociation)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/7c/6aa6bfe724334afe104f78caace45e6a2cb460.src","preCode":"    private static void validateBigDecimalValueFacet(ObjectAssociation association) {\n\n        association.lookupFacet(BigDecimalValueFacet.class)\n        .map(BigDecimalValueFacet::getSharedFacetRankingElseFail)\n        .ifPresent(facetRanking->facetRanking\n                .visitTopRankPairsSemanticDiffering(BigDecimalValueFacet.class, (a, b)->{\n\n                    ValidationFailure.raiseFormatted(\n                            association,\n                            \"%s: inconsistent BigDecimalValue semantics specified in %s and %s.\",\n                            association.getFeatureIdentifier().toString(),\n                            a.getClass().getSimpleName(),\n                            b.getClass().getSimpleName());\n                }));\n\n    }\n","realPath":"persistence/jdo/metamodel/src/main/java/org/apache/isis/persistence/jdo/metamodel/facets/prop/column/BigDecimalInferredFromJdoColumnAnnotationFacetFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"5afdd20c9af9e49b68c6967c150b1ec2a79e58e0","commitMessage":"@@@ISIS-2742: remove some utilities from 'Annotations'","date":"2021-06-22 16:40:22","modifiedFileCount":"16","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-09-15 21:26:12","codes":[{"authorDate":"2021-09-15 21:26:12","commitOrder":2,"curCode":"    public void refineProgrammingModel(final ProgrammingModel programmingModel) {\n        programmingModel.addVisitingValidatorSkipManagedBeans(spec->{\n\n            \r\n            final JdoPersistenceCapableFacet pcFacet = spec.getFacet(JdoPersistenceCapableFacet.class);\n            if(pcFacet==null || pcFacet.getIdentityType() == IdentityType.NONDURABLE) {\n                return;\n            }\n\n            spec.streamProperties(MixedIn.EXCLUDED)\n            \r\n            .filter(association->!association.containsNonFallbackFacet(JdoNotPersistentFacet.class))\n            .forEach(association->{\n                validateBigDecimalValueFacet(association);\n            });\n\n        });\n    }\n","date":"2021-09-15 21:26:12","endLine":88,"groupId":"10350","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"refineProgrammingModel","params":"(finalProgrammingModelprogrammingModel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/42/1f42ee814af071c6180fd1bb36f8d953bd53fa.src","preCode":"    public void refineProgrammingModel(ProgrammingModel programmingModel) {\n        programmingModel.addVisitingValidatorSkipManagedBeans(spec->{\n\n            \r\n            final JdoPersistenceCapableFacet pcFacet = spec.getFacet(JdoPersistenceCapableFacet.class);\n            if(pcFacet==null || pcFacet.getIdentityType() == IdentityType.NONDURABLE) {\n                return;\n            }\n\n            spec.streamProperties(MixedIn.EXCLUDED)\n            \r\n            .filter(association->!association.containsNonFallbackFacet(JdoNotPersistentFacet.class))\n            .forEach(association->{\n                validateBigDecimalValueFacet(association);\n            });\n\n        });\n    }\n","realPath":"persistence/jdo/metamodel/src/main/java/org/apache/isis/persistence/jdo/metamodel/facets/prop/column/BigDecimalInferredFromJdoColumnAnnotationFacetFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-09-15 21:26:12","commitOrder":2,"curCode":"    private static void validateBigDecimalValueFacet(final ObjectAssociation association) {\n\n        association.lookupFacet(MaxTotalDigitsFacet.class)\n        .map(MaxTotalDigitsFacet::getSharedFacetRankingElseFail)\n        .ifPresent(facetRanking->facetRanking\n                .visitTopRankPairsSemanticDiffering(MaxTotalDigitsFacet.class, (a, b)->{\n\n                    ValidationFailure.raiseFormatted(\n                            association,\n                            \"%s: inconsistent MaxTotalDigits semantics specified in %s and %s.\",\n                            association.getFeatureIdentifier().toString(),\n                            a.getClass().getSimpleName(),\n                            b.getClass().getSimpleName());\n                }));\n\n        association.lookupFacet(MaxFractionalDigitsFacet.class)\n        .map(MaxFractionalDigitsFacet::getSharedFacetRankingElseFail)\n        .ifPresent(facetRanking->facetRanking\n                .visitTopRankPairsSemanticDiffering(MaxFractionalDigitsFacet.class, (a, b)->{\n\n                    ValidationFailure.raiseFormatted(\n                            association,\n                            \"%s: inconsistent MaxFractionalDigits semantics specified in %s and %s.\",\n                            association.getFeatureIdentifier().toString(),\n                            a.getClass().getSimpleName(),\n                            b.getClass().getSimpleName());\n                }));\n\n    }\n","date":"2021-09-15 21:26:12","endLine":118,"groupId":"10350","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"validateBigDecimalValueFacet","params":"(finalObjectAssociationassociation)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/42/1f42ee814af071c6180fd1bb36f8d953bd53fa.src","preCode":"    private static void validateBigDecimalValueFacet(ObjectAssociation association) {\n\n        association.lookupFacet(BigDecimalValueFacet.class)\n        .map(BigDecimalValueFacet::getSharedFacetRankingElseFail)\n        .ifPresent(facetRanking->facetRanking\n                .visitTopRankPairsSemanticDiffering(BigDecimalValueFacet.class, (a, b)->{\n\n                    ValidationFailure.raiseFormatted(\n                            association,\n                            \"%s: inconsistent BigDecimalValue semantics specified in %s and %s.\",\n                            association.getFeatureIdentifier().toString(),\n                            a.getClass().getSimpleName(),\n                            b.getClass().getSimpleName());\n                }));\n\n    }\n","realPath":"persistence/jdo/metamodel/src/main/java/org/apache/isis/persistence/jdo/metamodel/facets/prop/column/BigDecimalInferredFromJdoColumnAnnotationFacetFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"211b0b36939fe0f0dcaf4780cbf7abc49f4c5697","commitMessage":"@@@ISIS-2871: UUID and BigDecimal ValueSemantics rewritten from scratch\n\nso can be reused stand-alone.  also supporting inheritance\n\nmore to come","date":"2021-09-15 21:26:12","modifiedFileCount":"66","status":"M","submitter":"Andi Huber"}]
