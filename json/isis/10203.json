[{"authorTime":"2020-01-10 21:26:54","codes":[{"authorDate":"2020-01-10 21:26:54","commitOrder":1,"curCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        authenticator.authenticate(ar, null);\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n    }\n","date":"2020-01-10 21:26:54","endLine":95,"groupId":"16598","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"vetoing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d0/93a8270106151491fcb5302951b4d3b5d7e6de.src","preCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        authenticator.authenticate(ar, null);\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_isVisibleInAnyRole.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2020-01-10 21:26:54","commitOrder":1,"curCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        AuthenticationSession isisAuthSession = authenticator.authenticate(ar, null);\n\n        assertThat(isisAuthSession, is(not(nullValue())));\n        assertThat(isisAuthSession.getUserName(), is(\"lonestarr\"));\n        assertThat(isisAuthSession.getValidationCode(), is(nullValue()));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeEmail\", String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"submit\");\n        assertThat(authorizor.isVisibleInAnyRole(submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"cancel\");\n        assertThat(authorizor.isVisibleInAnyRole(cancelOrderIdentifier), is(false));\n    }\n","date":"2020-01-10 21:26:54","endLine":113,"groupId":"14397","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"happyCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/c8/972fd9a906ae653af75cd178024acc48db3937.src","preCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        AuthenticationSession isisAuthSession = authenticator.authenticate(ar, null);\n\n        assertThat(isisAuthSession, is(not(nullValue())));\n        assertThat(isisAuthSession.getUserName(), is(\"lonestarr\"));\n        assertThat(isisAuthSession.getValidationCode(), is(nullValue()));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeEmail\", String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"submit\");\n        assertThat(authorizor.isVisibleInAnyRole(submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"cancel\");\n        assertThat(authorizor.isVisibleInAnyRole(cancelOrderIdentifier), is(false));\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_authenticate.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"c2e1e8de549803db9c68b93d75b7cbc076bf30fb","commitMessage":"@@@ISIS-2259: moves security modules up a level.  renames isis-security-api to isis-core-security\n","date":"2020-01-10 21:26:54","modifiedFileCount":"3","status":"B","submitter":"danhaywood"},{"authorTime":"2020-03-02 16:40:29","codes":[{"authorDate":"2020-03-02 16:40:29","commitOrder":2,"curCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        authenticator.authenticate(ar, \"test code\");\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n    }\n","date":"2020-03-02 16:40:29","endLine":90,"groupId":"16598","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"vetoing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d8/b86b491c688fbdf5b3fd64bbdc3954bd664890.src","preCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        authenticator.authenticate(ar, null);\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_isVisibleInAnyRole.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-03-02 16:40:29","commitOrder":2,"curCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        AuthenticationSession isisAuthSession = authenticator.authenticate(ar, \"test code\");\n\n        assertThat(isisAuthSession, is(not(nullValue())));\n        assertThat(isisAuthSession.getUserName(), is(\"lonestarr\"));\n        assertThat(isisAuthSession.getValidationCode(), is(\"test code\"));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeEmail\", String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"submit\");\n        assertThat(authorizor.isVisibleInAnyRole(submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"cancel\");\n        assertThat(authorizor.isVisibleInAnyRole(cancelOrderIdentifier), is(false));\n    }\n","date":"2020-03-02 16:40:29","endLine":113,"groupId":"4447","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"happyCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/68/713e88b59732f37eecd1b96ece3864e75e79af.src","preCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        AuthenticationSession isisAuthSession = authenticator.authenticate(ar, null);\n\n        assertThat(isisAuthSession, is(not(nullValue())));\n        assertThat(isisAuthSession.getUserName(), is(\"lonestarr\"));\n        assertThat(isisAuthSession.getValidationCode(), is(nullValue()));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeEmail\", String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"submit\");\n        assertThat(authorizor.isVisibleInAnyRole(submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"cancel\");\n        assertThat(authorizor.isVisibleInAnyRole(cancelOrderIdentifier), is(false));\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_authenticate.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"13986888a745e94491d6844f46c6c63e764531f0","commitMessage":"@@@ISIS-2296: fixing tests","date":"2020-03-02 16:40:29","modifiedFileCount":"2","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-04-14 23:26:49","codes":[{"authorDate":"2021-04-14 23:26:49","commitOrder":3,"curCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        Authentication authentication = authenticator.authenticate(ar, \"test code\");\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n    }\n","date":"2021-04-14 23:26:49","endLine":92,"groupId":"2075","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"vetoing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/f1/d6bd6554ada1a65dd01e913b1c76e4a434d266.src","preCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        authenticator.authenticate(ar, \"test code\");\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_isVisibleInAnyRole.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2021-04-14 23:26:49","commitOrder":3,"curCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        Authentication authentication = authenticator.authenticate(ar, \"test code\");\n\n        assertThat(authentication, is(not(nullValue())));\n        assertThat(authentication.getUserName(), is(\"lonestarr\"));\n        assertThat(authentication.getValidationCode(), is(\"test code\"));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeEmail\", String.class);\n        assertThat(authorizor.isVisible(authentication, changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"submit\");\n        assertThat(authorizor.isVisible(authentication, submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"cancel\");\n        assertThat(authorizor.isVisible(authentication, cancelOrderIdentifier), is(false));\n    }\n","date":"2021-04-14 23:26:49","endLine":117,"groupId":"2075","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"happyCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/96/522360ab9508ecf2aa46a3138b610e0224e512.src","preCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        AuthenticationSession isisAuthSession = authenticator.authenticate(ar, \"test code\");\n\n        assertThat(isisAuthSession, is(not(nullValue())));\n        assertThat(isisAuthSession.getUserName(), is(\"lonestarr\"));\n        assertThat(isisAuthSession.getValidationCode(), is(\"test code\"));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Customer\", \"changeEmail\", String.class);\n        assertThat(authorizor.isVisibleInAnyRole(changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"submit\");\n        assertThat(authorizor.isVisibleInAnyRole(submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\"com.mycompany.myapp.Order\", \"cancel\");\n        assertThat(authorizor.isVisibleInAnyRole(cancelOrderIdentifier), is(false));\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_authenticate.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"75633e1f8ce37deb39e3c2e2644357af15365d05","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-14 23:26:49","modifiedFileCount":"1999","status":"M","submitter":"J?rg Rade"},{"authorTime":"2021-06-10 18:42:21","codes":[{"authorDate":"2021-06-10 18:42:21","commitOrder":4,"curCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        val authentication = authenticator.authenticate(ar, \"test code\");\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n    }\n","date":"2021-06-10 18:42:21","endLine":91,"groupId":"10203","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"vetoing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/79/ea91461c603cfe7b20c22e3fe7e88e101e5c2c.src","preCode":"    public void vetoing() throws Exception {\n        \r\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"darkhelmet\", \"ludicrousspeed\");\n        Authentication authentication = authenticator.authenticate(ar, \"test code\");\n\n        \r\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_isVisibleInAnyRole.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2021-06-10 18:42:21","commitOrder":4,"curCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        val authentication = authenticator.authenticate(ar, \"test code\");\n\n        assertThat(authentication, is(not(nullValue())));\n        assertThat(authentication.getUser().getName(), is(\"lonestarr\"));\n        assertThat(authentication.getUser().getAuthenticationCode(), is(\"test code\"));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeEmail\", String.class);\n        assertThat(authorizor.isVisible(authentication, changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"submit\");\n        assertThat(authorizor.isVisible(authentication, submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"cancel\");\n        assertThat(authorizor.isVisible(authentication, cancelOrderIdentifier), is(false));\n    }\n","date":"2021-06-10 18:42:21","endLine":116,"groupId":"10203","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"happyCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/75/e76995ffadf723e9937765adab8533fc447480.src","preCode":"    public void happyCase() throws Exception {\n\n        Factory<SecurityManager> factory = new IniSecurityManagerFactory(\"classpath:shiro.ini\");\n        SecurityManager securityManager = factory.getInstance();\n        SecurityUtils.setSecurityManager(securityManager);\n\n\n        assertThat(authenticator.canAuthenticate(AuthenticationRequestPassword.class), is(true));\n\n        AuthenticationRequest ar = new AuthenticationRequestPassword(\"lonestarr\", \"vespa\");\n        Authentication authentication = authenticator.authenticate(ar, \"test code\");\n\n        assertThat(authentication, is(not(nullValue())));\n        assertThat(authentication.getUserName(), is(\"lonestarr\"));\n        assertThat(authentication.getValidationCode(), is(\"test code\"));\n\n        Identifier changeAddressIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeAddress\", String.class, String.class);\n        assertThat(authorizor.isVisible(authentication, changeAddressIdentifier), is(true));\n\n        Identifier changeEmailIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.customer(), \"changeEmail\", String.class);\n        assertThat(authorizor.isVisible(authentication, changeEmailIdentifier), is(true));\n\n        Identifier submitOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"submit\");\n        assertThat(authorizor.isVisible(authentication, submitOrderIdentifier), is(true));\n\n        Identifier cancelOrderIdentifier = Identifier.actionIdentifier(\n                TypeIdentifierTestFactory.order(), \"cancel\");\n        assertThat(authorizor.isVisible(authentication, cancelOrderIdentifier), is(false));\n    }\n","realPath":"security/shiro/src/test/java/org/apache/isis/security/shiro/ShiroAuthenticatorOrAuthorizorTest_authenticate.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"e93e59ddbffbc6337f62e90f1bdc17389cc4d24c","commitMessage":"@@@ISIS-2727: remove Authentication from 'security'\n\ninstead have UserMemento hold the authentication state\n\nalso adds some todos","date":"2021-06-10 18:42:21","modifiedFileCount":"63","status":"M","submitter":"Andi Huber"}]
