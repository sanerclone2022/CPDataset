[{"authorTime":"2021-05-05 03:07:57","codes":[{"authorDate":"2021-05-05 03:07:57","commitOrder":1,"curCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards() {\n        \n        \r\n        \n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n        \n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl\");\n        val concreteCollSpec = concreteColl.getSpecification();\n        \n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n        \n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n        \n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n        \n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl\");\n        val abstractCollSpec = abstractColl.getSpecification();\n        \n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n        \n    }\n","date":"2021-05-05 03:07:57","endLine":316,"groupId":"7788","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/bc/abb68f8e1abb6d61e27a4fc97553ff20ab817e.src","preCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards() {\n        \n        \r\n        \n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n        \n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl\");\n        val concreteCollSpec = concreteColl.getSpecification();\n        \n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n        \n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n        \n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n        \n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl\");\n        val abstractCollSpec = abstractColl.getSpecification();\n        \n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n        \n    }\n","realPath":"regressiontests/stable-domainmodel/src/test/java/org/apache/isis/testdomain/domainmodel/DomainModelTest_usingGoodDomain.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"B"},{"authorDate":"2021-05-05 03:07:57","commitOrder":1,"curCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards() {\n        \n        \r\n        \n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n        \n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl2\");\n        val concreteCollSpec = concreteColl.getSpecification();\n        \n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n        \n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl2\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n        \n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n        \n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl2\");\n        val abstractCollSpec = abstractColl.getSpecification();\n        \n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n        \n    }\n","date":"2021-05-05 03:07:57","endLine":352,"groupId":"15101","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/bc/abb68f8e1abb6d61e27a4fc97553ff20ab817e.src","preCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards() {\n        \n        \r\n        \n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n        \n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl2\");\n        val concreteCollSpec = concreteColl.getSpecification();\n        \n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n        \n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl2\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n        \n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n        \n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl2\");\n        val abstractCollSpec = abstractColl.getSpecification();\n        \n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n        \n    }\n","realPath":"regressiontests/stable-domainmodel/src/test/java/org/apache/isis/testdomain/domainmodel/DomainModelTest_usingGoodDomain.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"B"}],"commitId":"35298a360bb839d12eb18b4f28b6506b417c01a6","commitMessage":"@@@ISIS-2641: MM: fix abstract type detection\n\nalso adding tests","date":"2021-05-05 03:07:57","modifiedFileCount":"6","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-05-22 00:00:29","codes":[{"authorDate":"2021-05-22 00:00:29","commitOrder":2,"curCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards() {\n\n        \r\n\n        val vmSpec = specificationLoader.specForTypeElseFail(ProperElementTypeVm.class);\n\n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl\");\n        val concreteCollSpec = concreteColl.getSpecification();\n\n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n\n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n\n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n\n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl\");\n        val abstractCollSpec = abstractColl.getSpecification();\n\n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n\n    }\n","date":"2021-05-22 00:00:29","endLine":314,"groupId":"10103","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/09/424dc314cacbb0a3bf4e4c686fcab1f246990e.src","preCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingNoWildcards() {\n\n        \r\n\n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n\n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl\");\n        val concreteCollSpec = concreteColl.getSpecification();\n\n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n\n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n\n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n\n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl\");\n        val abstractCollSpec = abstractColl.getSpecification();\n\n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n\n    }\n","realPath":"regressiontests/stable-domainmodel/src/test/java/org/apache/isis/testdomain/domainmodel/DomainModelTest_usingGoodDomain.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"},{"authorDate":"2021-05-22 00:00:29","commitOrder":2,"curCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards() {\n\n        \r\n\n        val vmSpec = specificationLoader.specForTypeElseFail(ProperElementTypeVm.class);\n\n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl2\");\n        val concreteCollSpec = concreteColl.getSpecification();\n\n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n\n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl2\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n\n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n\n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl2\");\n        val abstractCollSpec = abstractColl.getSpecification();\n\n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n\n    }\n","date":"2021-05-22 00:00:29","endLine":349,"groupId":"10103","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/09/424dc314cacbb0a3bf4e4c686fcab1f246990e.src","preCode":"    void elementTypes_shouldBeIntrospected_whenDiscoveredViaGenerics_usingWildcards() {\n\n        \r\n\n        val vmSpec = specificationLoader.loadSpecification(ProperElementTypeVm.class,\n                IntrospectionState.FULLY_INTROSPECTED);\n\n        val concreteColl = vmSpec.getCollectionElseFail(\"concreteColl2\");\n        val concreteCollSpec = concreteColl.getSpecification();\n\n        assertEquals(ElementTypeConcrete.class, concreteCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.VIEW_MODEL, concreteCollSpec.getBeanSort());\n        assertHasAction(concreteCollSpec, \"abstractAction\");\n        assertHasAction(concreteCollSpec, \"interfaceAction\");\n        assertHasProperty(concreteCollSpec, \"abstractProp\");\n        assertHasProperty(concreteCollSpec, \"interfaceProp\");\n\n        val interfaceColl = vmSpec.getCollectionElseFail(\"interfaceColl2\");\n        val interfaceCollSpec = interfaceColl.getSpecification();\n\n        assertEquals(ElementTypeInterface.class, interfaceCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, interfaceCollSpec.getBeanSort());\n        assertHasAction(interfaceCollSpec, \"interfaceAction\");\n        assertHasProperty(interfaceCollSpec, \"interfaceProp\");\n\n        val abstractColl = vmSpec.getCollectionElseFail(\"abstractColl2\");\n        val abstractCollSpec = abstractColl.getSpecification();\n\n        assertEquals(ElementTypeAbstract.class, abstractCollSpec.getCorrespondingClass());\n        assertEquals(BeanSort.ABSTRACT, abstractCollSpec.getBeanSort());\n        assertHasAction(abstractCollSpec, \"abstractAction\");\n        assertHasProperty(abstractCollSpec, \"abstractProp\");\n\n    }\n","realPath":"regressiontests/stable-domainmodel/src/test/java/org/apache/isis/testdomain/domainmodel/DomainModelTest_usingGoodDomain.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"}],"commitId":"d0a586b44ba46905b7f2ec216203897fcecc04a6","commitMessage":"@@@ISIS-2253: just some housekeeping","date":"2021-05-22 00:00:29","modifiedFileCount":"1","status":"M","submitter":"Andi Huber"}]
