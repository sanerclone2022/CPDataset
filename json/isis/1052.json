[{"authorTime":"2021-07-23 23:25:16","codes":[{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJpa();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":251,"groupId":"7701","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a5/405219c2f8a28a06fca357696cb8913078426c.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJpa();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"B"},{"authorDate":"2021-07-23 23:25:16","commitOrder":1,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJdo();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","date":"2021-07-23 23:25:16","endLine":254,"groupId":"7701","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/77/dab9061d7bf4c79364e3978e5c1ef814d099f3.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJdo();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"}],"commitId":"9d274b298f6f14a63524851f7d2a609e44ab00db","commitMessage":"@@@ISIS-2573: publishing tests: enhanced step tracing\n\nidea is to record all essential execution steps/events.  so that at the\nend of the tests.  we can verify that the expected steps had taken place","date":"2021-07-23 23:25:16","modifiedFileCount":"9","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-07-24 04:04:33","codes":[{"authorDate":"2021-07-24 04:04:33","commitOrder":2,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","date":"2021-07-24 04:04:33","endLine":220,"groupId":"3246","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e3/06d8b41560c0003d25fc7395b7376aef30d0ce.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJpa();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2021-07-24 04:04:33","commitOrder":2,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(preCommitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","date":"2021-07-24 04:04:33","endLine":226,"groupId":"3246","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/df/2f20de5808bd2956f0a13713d6af66c8e873f5.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        \r\n        setupBookForJdo();\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDoTransactional(book->{\n\n            context.runGiven();\n\n            context.bind(preCommitListener);\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        context.unbind(preCommitListener);\n\n        \r\n        context.runVerify(VerificationStage.POST_COMMIT);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"7e730cbf8ddc2fd29f687facf50f11a099899325","commitMessage":"@@@ISIS-2573: remove TransactionService#nextTransaction()\n\nalso fixes most publishing tests","date":"2021-07-24 04:04:33","modifiedFileCount":"6","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-28 20:50:02","codes":[{"authorDate":"2021-07-24 04:04:33","commitOrder":3,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","date":"2021-07-24 04:04:33","endLine":220,"groupId":"3246","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/e3/06d8b41560c0003d25fc7395b7376aef30d0ce.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"N"},{"authorDate":"2021-07-28 20:50:02","commitOrder":3,"curCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","date":"2021-07-28 20:50:02","endLine":356,"groupId":"3246","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/23/f8fc486a73718416100913850c4e610da97641.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(preCommitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"M"}],"commitId":"1d69d8f347ce0b1fbecbf892b95777adedd24c84","commitMessage":"@@@Merge pull request #692 from apache/2826-lightw.prop.ch.tr\n\nISIS-2826: Lightweight JPA Property Change Publishing","date":"2021-07-28 20:50:02","modifiedFileCount":"36","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-07-31 15:25:36","codes":[{"authorDate":"2021-07-31 15:25:36","commitOrder":4,"curCode":"    protected void wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n    }\n","date":"2021-07-31 15:25:36","endLine":369,"groupId":"1052","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/42/1a3f33514c232b3c6db382d27d8650c3e53c16.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJpa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"},{"authorDate":"2021-07-31 15:25:36","commitOrder":4,"curCode":"    protected void wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n    }\n","date":"2021-07-31 15:25:36","endLine":370,"groupId":"1052","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"wrapperAsyncExecutionNoRules","params":"(finalPublishingTestContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/a0/42cb68c65c8526df8648da7efc4cd977688c10.src","preCode":"    protected boolean wrapperAsyncExecutionNoRules(\n            final PublishingTestContext context) throws InterruptedException, ExecutionException, TimeoutException {\n\n        context.bind(commitListener);\n\n        \r\n        val asyncControl = returningVoid().withSkipRules(); \r\n\n        \r\n\n        withBookDo(book->{\n\n            context.runGiven();\n\n            \r\n            wrapper.asyncWrap(book, asyncControl)\n            .setName(\"Book #2\");\n\n        });\n\n        asyncControl.getFuture().get(10, TimeUnit.SECONDS);\n\n        return true;\n    }\n","realPath":"regressiontests/stable/src/main/java/org/apache/isis/testdomain/publishing/PublishingTestFactoryJdo.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"}],"commitId":"e7d7c3d936ef537ebae412679c2008797c6161b2","commitMessage":"@@@ISIS-2794: rework tests to also test the tx rollback case","date":"2021-07-31 15:25:36","modifiedFileCount":"6","status":"M","submitter":"Andi Huber"}]
