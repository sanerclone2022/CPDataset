[{"authorTime":"2020-08-13 21:08:32","codes":[{"authorDate":"2020-08-13 18:16:43","commitOrder":9,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 18:16:43","endLine":84,"groupId":"1435","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9f/c6cadc4be7ef6eca25703ae759a62d7ea2b7c5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"},{"authorDate":"2020-08-13 21:08:32","commitOrder":9,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new DoubleOrFloatConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 21:08:32","endLine":84,"groupId":"1435","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/05/89b660ae5b86c905dc1253f0d827f4bbf74743.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new DoubleOrFloatConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"MB"}],"commitId":"897c6b87f8ff18e2cdc3ffdcd00cb6497e904040","commitMessage":"@@@ISIS-2340: Common UI: DoubleOrFloatConverter for text-based UI Component","date":"2020-08-13 21:08:32","modifiedFileCount":"2","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-08-13 21:34:00","codes":[{"authorDate":"2020-08-13 18:16:43","commitOrder":10,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 18:16:43","endLine":84,"groupId":"1435","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9f/c6cadc4be7ef6eca25703ae759a62d7ea2b7c5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2020-08-13 21:34:00","commitOrder":10,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 21:34:00","endLine":81,"groupId":"1435","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/0b/64556590cc72bca770f62187dd2b16b3d945d9.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new DoubleOrFloatConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"1bb8b68143a9b4b2ab2b3fa0d1f1434340747108","commitMessage":"@@@ISIS-2340: use one binding converter for all the java numbers","date":"2020-08-13 21:34:00","modifiedFileCount":"3","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-08-17 01:01:21","codes":[{"authorDate":"2020-08-13 18:16:43","commitOrder":11,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 18:16:43","endLine":84,"groupId":"1435","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9f/c6cadc4be7ef6eca25703ae759a62d7ea2b7c5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2020-08-17 01:01:21","commitOrder":11,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n            \n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n            \n            \r\n\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-17 01:01:21","endLine":91,"groupId":"11336","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/89/0e6f2d48b114fbf4a6fe3c6b6e9b1c9ea720f5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"65ca19ad1f92f2906473136a9373d39b3a184e6b","commitMessage":"@@@ISIS-2340: fx: bind validation feedback to UI comp. (initial)","date":"2020-08-17 01:01:21","modifiedFileCount":"3","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-08-17 17:48:52","codes":[{"authorDate":"2020-08-13 18:16:43","commitOrder":12,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 18:16:43","endLine":84,"groupId":"1435","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9f/c6cadc4be7ef6eca25703ae759a62d7ea2b7c5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2020-08-17 17:48:52","commitOrder":12,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n        \n        \r\n        \r\n        uiField.setTextFormatter(new TextFormatter<String>(change->{\n            val input = change.getText();\n            \n            val parsingError = converter.tryParse(_Strings.suffix(input, \"0\"));\n            if (parsingError.isPresent()) {\n                log.warn(\"Failed to parse UI input '{}': {}\", input, parsingError.get());\n                return null; \r\n            }\n            return change; \r\n        }));\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n            \n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n            \n            \r\n\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-17 17:48:52","endLine":108,"groupId":"11336","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/16/388ecb548b429bb4aee9fa2db55b97e00a9245.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n        \n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n            \n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n            \n            \r\n\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"c3fc4ed4e9b48805e0df714f989b8b4b6e57dd59","commitMessage":"@@@ISIS-2340: filter parsing failures during type conversion (wip)\n\neg. when UI Text component is bound to Number value.  we need to\nintercept invalid number formats.  but these are not processed by the\nvalidation mechanics.  since this one assumes types to be properly\nconverted from eg. String\n","date":"2020-08-17 17:48:52","modifiedFileCount":"7","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-09-15 21:26:12","codes":[{"authorDate":"2020-08-13 18:16:43","commitOrder":13,"curCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2020-08-13 18:16:43","endLine":84,"groupId":"1435","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"handle","params":"(ComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/9f/c6cadc4be7ef6eca25703ae759a62d7ea2b7c5.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2021-09-15 21:26:12","commitOrder":13,"curCode":"    public Node handle(final ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n\n        \r\n        \r\n        uiField.setTextFormatter(new TextFormatter<String>(change->{\n            val input = change.getText();\n\n            val parsingError = converter.tryParse(_Strings.suffix(input, \"0\"));\n            if (parsingError.isPresent()) {\n                log.warn(\"Failed to parse UI input '{}': {}\", input, parsingError.get());\n                return null; \r\n            }\n            return change; \r\n        }));\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n\n            \r\n\n        }\n\n        return uiComponent;\n    }\n","date":"2021-09-15 21:26:12","endLine":111,"groupId":"11336","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"handle","params":"(finalComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/eb/83fff2bc781885d0bb1bbfc92a8ff8e2a127ef.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n\n        \r\n        \r\n        uiField.setTextFormatter(new TextFormatter<String>(change->{\n            val input = change.getText();\n\n            val parsingError = converter.tryParse(_Strings.suffix(input, \"0\"));\n            if (parsingError.isPresent()) {\n                log.warn(\"Failed to parse UI input '{}': {}\", input, parsingError.get());\n                return null; \r\n            }\n            return change; \r\n        }));\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n\n            \r\n\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"211b0b36939fe0f0dcaf4780cbf7abc49f4c5697","commitMessage":"@@@ISIS-2871: UUID and BigDecimal ValueSemantics rewritten from scratch\n\nso can be reused stand-alone.  also supporting inheritance\n\nmore to come","date":"2021-09-15 21:26:12","modifiedFileCount":"66","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-09-15 21:26:12","codes":[{"authorDate":"2021-09-16 19:31:34","commitOrder":14,"curCode":"    public Node handle(final ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","date":"2021-09-16 19:31:34","endLine":84,"groupId":"10210","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"handle","params":"(finalComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/86/d3ac472c9390c0ce783329a0536559179b5b33.src","preCode":"    public Node handle(ComponentRequest request) {\n\n        val uiComponent = new TextField();\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = StringConverter.of(valueSpec);\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiComponent.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            \r\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiComponent.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            \r\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/text/TextFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-09-15 21:26:12","commitOrder":14,"curCode":"    public Node handle(final ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n\n        \r\n        \r\n        uiField.setTextFormatter(new TextFormatter<String>(change->{\n            val input = change.getText();\n\n            val parsingError = converter.tryParse(_Strings.suffix(input, \"0\"));\n            if (parsingError.isPresent()) {\n                log.warn(\"Failed to parse UI input '{}': {}\", input, parsingError.get());\n                return null; \r\n            }\n            return change; \r\n        }));\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n\n            \r\n\n        }\n\n        return uiComponent;\n    }\n","date":"2021-09-15 21:26:12","endLine":111,"groupId":"10210","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"handle","params":"(finalComponentRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/eb/83fff2bc781885d0bb1bbfc92a8ff8e2a127ef.src","preCode":"    public Node handle(final ComponentRequest request) {\n\n        val uiComponent = new VBox();\n        val uiField = _fx.add(uiComponent, new TextField());\n        val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);\n        val valueSpec = request.getFeatureTypeSpec();\n        val converter = new NumberConverterForStringComponent(valueSpec);\n\n        \r\n        \r\n        uiField.setTextFormatter(new TextFormatter<String>(change->{\n            val input = change.getText();\n\n            val parsingError = converter.tryParse(_Strings.suffix(input, \"0\"));\n            if (parsingError.isPresent()) {\n                log.warn(\"Failed to parse UI input '{}': {}\", input, parsingError.get());\n                return null; \r\n            }\n            return change; \r\n        }));\n\n        if(request.getManagedFeature() instanceof ManagedParameter) {\n\n            val managedParameter = (ManagedParameter)request.getManagedFeature();\n\n            BindingsFx.bindBidirectional(\n                    uiField.textProperty(),\n                    managedParameter.getValue(),\n                    converter);\n\n            BindingsFx.bindValidationFeeback(\n                    uiValidationFeedback.textProperty(),\n                    uiValidationFeedback.visibleProperty(),\n                    managedParameter.getValidationMessage());\n\n        } else if(request.getManagedFeature() instanceof ManagedProperty) {\n\n            val managedProperty = (ManagedProperty)request.getManagedFeature();\n\n            \r\n            BindingsFx.bind(\n                    uiField.textProperty(),\n                    managedProperty.getValue(),\n                    converter);\n\n            \r\n            uiField.editableProperty().set(false);\n\n            \r\n\n        }\n\n        return uiComponent;\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/components/number/NumberFieldFactory.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"11bbce22ac4a3cde0a1f8716d06b7bc52484028f","commitMessage":"@@@ISIS-2871: Spring managed value semantics for String","date":"2021-09-16 19:31:34","modifiedFileCount":"11","status":"M","submitter":"Andi Huber"}]
