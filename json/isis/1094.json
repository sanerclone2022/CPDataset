[{"authorTime":"2021-09-14 18:43:10","codes":[{"authorDate":"2021-09-14 18:43:10","commitOrder":1,"curCode":"    <T> ResponseDigest<T> digestUsingPost(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n        \n        val args = client.arguments() \n                .build();\n        \n        val response = request.post(args);\n        val digest = client.digest(response, entityType);\n\n        return digest;\n\n    }\n","date":"2021-09-14 18:43:10","endLine":131,"groupId":"16978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"digestUsingPost","params":"(StringactionName@Class<T>entityType@UnaryOperator<javax.ws.rs.client.Invocation.Builder>onRequestBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6a/bfc2a1aa036977587ebbd7d3ebcb96c429f3a4.src","preCode":"    <T> ResponseDigest<T> digestUsingPost(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n        \n        val args = client.arguments() \n                .build();\n        \n        val response = request.post(args);\n        val digest = client.digest(response, entityType);\n\n        return digest;\n\n    }\n","realPath":"regressiontests/incubating/src/test/java/org/apache/isis/testdomain/rest/CorsFilterTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2021-09-14 18:43:10","commitOrder":1,"curCode":"    <T> ResponseDigest<T> digestUsingGet(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n\n        val response = request.get();\n        val digest = client.digest(response, entityType);\n\n        return digest;\n    }\n","date":"2021-09-14 18:43:10","endLine":151,"groupId":"16978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"digestUsingGet","params":"(StringactionName@Class<T>entityType@UnaryOperator<javax.ws.rs.client.Invocation.Builder>onRequestBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6a/bfc2a1aa036977587ebbd7d3ebcb96c429f3a4.src","preCode":"    <T> ResponseDigest<T> digestUsingGet(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n\n        val response = request.get();\n        val digest = client.digest(response, entityType);\n\n        return digest;\n    }\n","realPath":"regressiontests/incubating/src/test/java/org/apache/isis/testdomain/rest/CorsFilterTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"e5960b42bbefc632f42249015aec93648335d42e","commitMessage":"@@@ISIS-2871: restore lost REST tests","date":"2021-09-14 18:43:10","modifiedFileCount":"0","status":"B","submitter":"Andi Huber"},{"authorTime":"2021-09-15 00:36:03","codes":[{"authorDate":"2021-09-15 00:36:03","commitOrder":2,"curCode":"    <T> ResponseDigest<T> digestUsingPost(\n            final String actionName,\n            final Class<T> entityType,\n            final UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply(\n                restService.newInvocationBuilder(client,\n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n\n        val args = client.arguments()\n                .build();\n\n        val response = request.post(args);\n        val digest = client.digest(response, entityType);\n\n        return digest;\n\n    }\n","date":"2021-09-15 00:36:03","endLine":131,"groupId":"1094","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"digestUsingPost","params":"(finalStringactionName@finalClass<T>entityType@finalUnaryOperator<javax.ws.rs.client.Invocation.Builder>onRequestBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/11/21cc3e17e55076064bcf53b64f401640b3fbbe.src","preCode":"    <T> ResponseDigest<T> digestUsingPost(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n        \n        val args = client.arguments() \n                .build();\n        \n        val response = request.post(args);\n        val digest = client.digest(response, entityType);\n\n        return digest;\n\n    }\n","realPath":"regressiontests/incubating/src/test/java/org/apache/isis/testdomain/rest/CorsFilterTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2021-09-15 00:36:03","commitOrder":2,"curCode":"    <T> ResponseDigest<T> digestUsingGet(\n            final String actionName,\n            final Class<T> entityType,\n            final UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply(\n                restService.newInvocationBuilder(client,\n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n\n        val response = request.get();\n        val digest = client.digest(response, entityType);\n\n        return digest;\n    }\n","date":"2021-09-15 00:36:03","endLine":151,"groupId":"1094","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"digestUsingGet","params":"(finalStringactionName@finalClass<T>entityType@finalUnaryOperator<javax.ws.rs.client.Invocation.Builder>onRequestBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/11/21cc3e17e55076064bcf53b64f401640b3fbbe.src","preCode":"    <T> ResponseDigest<T> digestUsingGet(\n            String actionName, \n            Class<T> entityType, \n            UnaryOperator<javax.ws.rs.client.Invocation.Builder> onRequestBuilder) {\n\n        assertTrue(restService.getPort()>0);\n\n        val useRequestDebugLogging = false;\n        val client = restService.newClient(useRequestDebugLogging, conversationFilters);\n\n        val request = onRequestBuilder.apply( \n                restService.newInvocationBuilder(client, \n                        String.format(\"services/testdomain.RoSpecSampler/actions/%s/invoke\", actionName)));\n\n        val response = request.get();\n        val digest = client.digest(response, entityType);\n\n        return digest;\n    }\n","realPath":"regressiontests/incubating/src/test/java/org/apache/isis/testdomain/rest/CorsFilterTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"efabec3fb0ad4ed374c66b5ca2090db15ce52def","commitMessage":"@@@ISIS-2871: AsciiDoc value edit fixes","date":"2021-09-15 00:36:03","modifiedFileCount":"40","status":"M","submitter":"Andi Huber"}]
