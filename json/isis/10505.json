[{"authorTime":"2020-01-10 21:59:03","codes":[{"authorDate":"2020-01-10 21:59:03","commitOrder":1,"curCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n        final RepresentationType representationType = RepresentationType.PROPERTY_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(propertyId);\n        if (objectMember == null || objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-01-10 21:59:03","endLine":173,"groupId":"13658","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/be/f50793ef027ae6f0e58d171586804abddd234d.src","preCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n        final RepresentationType representationType = RepresentationType.PROPERTY_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(propertyId);\n        if (objectMember == null || objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2020-01-10 21:59:03","commitOrder":1,"curCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        final RepresentationType representationType = RepresentationType.COLLECTION_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(collectionId);\n        if (objectMember == null || objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-01-10 21:59:03","endLine":198,"groupId":"5391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/be/f50793ef027ae6f0e58d171586804abddd234d.src","preCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        final RepresentationType representationType = RepresentationType.COLLECTION_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(collectionId);\n        if (objectMember == null || objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"}],"commitId":"2074ec107287622d1cca7941b5b93b35c79d063f","commitMessage":"@@@ISIS-2259: moves core/viewers up a level.\n","date":"2020-01-10 21:59:03","modifiedFileCount":"0","status":"B","submitter":"danhaywood"},{"authorTime":"2020-02-11 20:31:53","codes":[{"authorDate":"2020-02-11 20:31:53","commitOrder":2,"curCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n        final RepresentationType representationType = RepresentationType.PROPERTY_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-11 20:31:53","endLine":175,"groupId":"14298","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cf/8c818ecfcd55235de85c79ef436776adfe3379.src","preCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n        final RepresentationType representationType = RepresentationType.PROPERTY_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(propertyId);\n        if (objectMember == null || objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2020-02-11 20:31:53","commitOrder":2,"curCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        final RepresentationType representationType = RepresentationType.COLLECTION_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-11 20:31:53","endLine":202,"groupId":"14298","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cf/8c818ecfcd55235de85c79ef436776adfe3379.src","preCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        final RepresentationType representationType = RepresentationType.COLLECTION_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        final ObjectMember objectMember = parentSpec.getAssociation(collectionId);\n        if (objectMember == null || objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"3d9246cdd3b240a6262ceb6bf44ed6f6c2ef0fb8","commitMessage":"@@@ISIS-2275: improve interfaces ObjectAction-/ObjectAssociationContainer\n\nwrap return values with Optional where appropriate","date":"2020-02-11 20:31:53","modifiedFileCount":"23","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-02-12 18:07:40","codes":[{"authorDate":"2020-02-12 18:07:40","commitOrder":3,"curCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n\n        init(RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-12 18:07:40","endLine":175,"groupId":"14298","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cb/a64368cac0c0703239f0aa5e6373b2c60d5fda.src","preCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n        final RepresentationType representationType = RepresentationType.PROPERTY_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2020-02-12 18:07:40","commitOrder":3,"curCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        \n        init(RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-12 18:07:40","endLine":202,"groupId":"14298","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/cb/a64368cac0c0703239f0aa5e6373b2c60d5fda.src","preCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        final RepresentationType representationType = RepresentationType.COLLECTION_DESCRIPTION;\n        init(representationType, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        final ObjectSpecification parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"cdf947369e7ab18f0952ef10d5d1ad8a5770c783","commitMessage":"@@@ISIS-2275: further refactoring and fixes tests","date":"2020-02-12 18:07:40","modifiedFileCount":"7","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-02-12 19:17:22","codes":[{"authorDate":"2020-02-12 19:17:22","commitOrder":4,"curCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-12 19:17:22","endLine":179,"groupId":"3596","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/27/68dacf45585d8b4307fa2a74979581433aa58c.src","preCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n\n        init(RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2020-02-12 19:17:22","commitOrder":4,"curCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        \n        val resourceContext = createResourceContext(\n                RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2020-02-12 19:17:22","endLine":207,"groupId":"3596","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/27/68dacf45585d8b4307fa2a74979581433aa58c.src","preCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        \n        init(RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(getResourceContext(), null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"1755bee10e5cd020723d718f8f983ce2ef3cd899","commitMessage":"@@@ISIS-2275: let ResourceAbstract no longer be a holder of ResourceContext\n\ndecouples the ResourceContext from the resource","date":"2020-02-12 19:17:22","modifiedFileCount":"9","status":"M","submitter":"Andi Huber"},{"authorTime":"2021-04-14 23:26:49","codes":[{"authorDate":"2021-04-14 23:26:49","commitOrder":5,"curCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2021-04-14 23:26:49","endLine":180,"groupId":"3596","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/38/e08341a084393876e9a724b31b1a46d32e8eb1.src","preCode":"    public Response typeProperty(@PathParam(\"domainType\") final String domainType, @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToManyAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2021-04-14 23:26:49","commitOrder":5,"curCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        \n        val resourceContext = createResourceContext(\n                RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","date":"2021-04-14 23:26:49","endLine":208,"groupId":"3596","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/38/e08341a084393876e9a724b31b1a46d32e8eb1.src","preCode":"    public Response typeCollection(@PathParam(\"domainType\") final String domainType, @PathParam(\"collectionId\") final String collectionId) {\n        \n        val resourceContext = createResourceContext(\n                RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType));\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        \n        if (objectMember.isOneToOneAssociation()) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"75633e1f8ce37deb39e3c2e2644357af15365d05","commitMessage":"@@@Merge branch 'master' of https://github.com/apache/isis into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-14 23:26:49","modifiedFileCount":"1999","status":"M","submitter":"J?rg Rade"},{"authorTime":"2021-08-22 01:17:55","codes":[{"authorDate":"2021-08-22 01:17:55","commitOrder":6,"curCode":"    public Response typeProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n            throw _EndpointLogging.error(log, \"GET /domain-types/{}/properties/{}\", domainType, propertyId,\n                    RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->\n                    _EndpointLogging.error(log, \"GET /domain-types/{}/properties/{}\", domainType, propertyId,\n                        RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)));\n\n        if (objectMember.isOneToManyAssociation()) {\n            throw _EndpointLogging.error(log, \"GET /domain-types/{}/properties/{}\", domainType, propertyId,\n                    RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n        return _EndpointLogging.response(log, \"GET /domain-types/{}/properties/{}\", domainType, propertyId,\n                Responses.ofOk(renderer, Caching.ONE_DAY).build());\n    }\n","date":"2021-08-22 01:17:55","endLine":206,"groupId":"10505","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"typeProperty","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"propertyId\")finalStringpropertyId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/3b/dd812bb841c81f83d23bc678f926bd49de0de3.src","preCode":"    public Response typeProperty(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"propertyId\") final String propertyId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.PROPERTY_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND); \r\n        }\n\n        val objectMember = parentSpec.getAssociation(propertyId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)); \r\n\n        if (objectMember.isOneToManyAssociation()) {\n          \r\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToOneAssociation property = (OneToOneAssociation) objectMember;\n\n        final PropertyDescriptionReprRenderer renderer = new PropertyDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndProperty(parentSpec, property)).includesSelf();\n\n      \r\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-08-22 01:17:55","commitOrder":6,"curCode":"    public Response typeCollection(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"collectionId\") final String collectionId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n            throw _EndpointLogging.error(log, \"GET /domain-types/{}/collections/{}\", domainType, collectionId,\n                    RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->\n                    _EndpointLogging.error(log, \"GET /domain-types/{}/collections/{}\", domainType, collectionId,\n                            RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)));\n\n        if (objectMember.isOneToOneAssociation()) {\n            throw _EndpointLogging.error(log, \"GET /domain-types/{}/collections/{}\", domainType, collectionId,\n                    RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND));\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n        return _EndpointLogging.response(log, \"GET /domain-types/{}/collections/{}\", domainType, collectionId,\n                Responses.ofOk(renderer, Caching.ONE_DAY).build());\n    }\n","date":"2021-08-22 01:17:55","endLine":243,"groupId":"10505","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"typeCollection","params":"(@PathParam(\"domainType\")finalStringdomainType@@PathParam(\"collectionId\")finalStringcollectionId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/3b/dd812bb841c81f83d23bc678f926bd49de0de3.src","preCode":"    public Response typeCollection(\n            @PathParam(\"domainType\") final String domainType,\n            @PathParam(\"collectionId\") final String collectionId) {\n\n        val resourceContext = createResourceContext(\n                RepresentationType.COLLECTION_DESCRIPTION, Where.ANYWHERE, RepresentationService.Intent.NOT_APPLICABLE);\n\n        val parentSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null);\n        if (parentSpec == null) {\n          \r\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n\n        val objectMember = parentSpec.getAssociation(collectionId)\n                .orElseThrow(()->RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)); \r\n\n        if (objectMember.isOneToOneAssociation()) {\n          \r\n            throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);\n        }\n        final OneToManyAssociation collection = (OneToManyAssociation) objectMember;\n\n        final CollectionDescriptionReprRenderer renderer = new CollectionDescriptionReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n        renderer.with(new ParentSpecAndCollection(parentSpec, collection)).includesSelf();\n\n      \r\n        return Responses.ofOk(renderer, Caching.ONE_DAY).build();\n    }\n","realPath":"viewers/restfulobjects/viewer/src/main/java/org/apache/isis/viewer/restfulobjects/viewer/resources/DomainTypeResourceServerside.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"8ee96f4def2599a822dae4b3f651f59988ea112e","commitMessage":"@@@ISIS-2853: debug logging for DomainTypeResourceServerside","date":"2021-08-22 01:17:55","modifiedFileCount":"1","status":"M","submitter":"andi-huber"}]
