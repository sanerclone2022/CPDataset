[{"authorTime":"2021-04-21 23:42:54","codes":[{"authorDate":"2021-04-21 23:42:54","commitOrder":1,"curCode":"    void sampleInventoryShouldBeSetUp() {\n\n        val inventories = repository.allInstances(JdoInventory.class);\n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(1, inventory.getProducts().size());\n\n        val product = inventory.getProducts().iterator().next();\n        assertEquals(\"Sample Book\", product.getName());\n\n    }\n","date":"2021-04-21 23:42:54","endLine":80,"groupId":"11153","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"sampleInventoryShouldBeSetUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5d/2f12b51f49292e779d2213bc2a2590c8ca623b.src","preCode":"    void sampleInventoryShouldBeSetUp() {\n\n        val inventories = repository.allInstances(JdoInventory.class);\n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(1, inventory.getProducts().size());\n\n        val product = inventory.getProducts().iterator().next();\n        assertEquals(\"Sample Book\", product.getName());\n\n    }\n","realPath":"regressiontests/stable-persistence-jdo/src/test/java/org/apache/isis/testdomain/persistence/jdo/JdoBootstrappingTest_usingFixtures.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2021-04-21 23:42:54","commitOrder":1,"curCode":"    void sampleInventory_shouldBeSetUpWith3Books() {\n\n        setUp3Books(repositoryService);\n\n        \r\n        \n        val inventories = repositoryService.allInstances(JpaInventory.class);\n\n        \r\n        \n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(3, inventory.getProducts().size());\n\n        assertInventoryHasBooks(inventory.getProducts(), 1, 2, 3);\n    }\n","date":"2021-04-21 23:42:54","endLine":88,"groupId":"11153","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sampleInventory_shouldBeSetUpWith3Books","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/de/b7b13c702f171bdab2ce86327016937d05e2a4.src","preCode":"    void sampleInventory_shouldBeSetUpWith3Books() {\n\n        setUp3Books(repositoryService);\n\n        \r\n        \n        val inventories = repositoryService.allInstances(JpaInventory.class);\n\n        \r\n        \n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(3, inventory.getProducts().size());\n\n        assertInventoryHasBooks(inventory.getProducts(), 1, 2, 3);\n    }\n","realPath":"regressiontests/stable-persistence-jpa/src/test/java/org/apache/isis/testdomain/persistence/jpa/JpaQueryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"0348bc49be1ca70a98f195ecaa09e1372df645ec","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into ISIS-2505_Catch_Up_With_Demo_Examples\n","date":"2021-04-21 23:42:54","modifiedFileCount":"188","status":"B","submitter":"J?rg Rade"},{"authorTime":"2021-07-07 06:44:32","codes":[{"authorDate":"2021-04-21 23:42:54","commitOrder":2,"curCode":"    void sampleInventoryShouldBeSetUp() {\n\n        val inventories = repository.allInstances(JdoInventory.class);\n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(1, inventory.getProducts().size());\n\n        val product = inventory.getProducts().iterator().next();\n        assertEquals(\"Sample Book\", product.getName());\n\n    }\n","date":"2021-04-21 23:42:54","endLine":80,"groupId":"1012","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"sampleInventoryShouldBeSetUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5d/2f12b51f49292e779d2213bc2a2590c8ca623b.src","preCode":"    void sampleInventoryShouldBeSetUp() {\n\n        val inventories = repository.allInstances(JdoInventory.class);\n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(1, inventory.getProducts().size());\n\n        val product = inventory.getProducts().iterator().next();\n        assertEquals(\"Sample Book\", product.getName());\n\n    }\n","realPath":"regressiontests/stable-persistence-jdo/src/test/java/org/apache/isis/testdomain/persistence/jdo/JdoBootstrappingTest_usingFixtures.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2021-07-07 06:44:32","commitOrder":2,"curCode":"    void sampleInventory_shouldBeSetUpWith3Books() {\n\n        final boolean inInteraction = interactionService.isInInteraction();\n        Assertions.assertThat(inInteraction).isTrue();\n        setUp3Books(repositoryService);\n\n        \r\n\n        val inventories = repositoryService.allInstances(JpaInventory.class);\n\n        \r\n\n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(3, inventory.getProducts().size());\n\n        assertInventoryHasBooks(inventory.getProducts(), 1, 2, 3);\n    }\n","date":"2021-07-07 06:44:32","endLine":95,"groupId":"1012","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"sampleInventory_shouldBeSetUpWith3Books","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/d1/5935cd0f42d02b1dc90cbb35a19785b6d586b4.src","preCode":"    void sampleInventory_shouldBeSetUpWith3Books() {\n\n        setUp3Books(repositoryService);\n\n        \r\n        \n        val inventories = repositoryService.allInstances(JpaInventory.class);\n\n        \r\n        \n        assertEquals(1, inventories.size());\n\n        val inventory = inventories.get(0);\n        assertNotNull(inventory);\n        assertNotNull(inventory.getProducts());\n        assertEquals(3, inventory.getProducts().size());\n\n        assertInventoryHasBooks(inventory.getProducts(), 1, 2, 3);\n    }\n","realPath":"regressiontests/stable-persistence-jpa/src/test/java/org/apache/isis/testdomain/persistence/jpa/JpaQueryTest.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"46cb701cdc2b5d8a4cab9b9e4be699dcd22f6574","commitMessage":"@@@Merge pull request #657 from apache/ISIS-2789\n\nIsis 2789 : implement EntityChangeTracker (auditing) for JPa","date":"2021-07-07 06:44:32","modifiedFileCount":"23","status":"M","submitter":"Dan Haywood"}]
