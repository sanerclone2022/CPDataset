[{"authorTime":"2020-08-27 21:35:10","codes":[{"authorDate":"2020-08-27 21:35:10","commitOrder":1,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","date":"2020-08-27 21:35:10","endLine":104,"groupId":"10175","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5f/7c04e1ad5d2be9f182e3e0d9ec59440de7870a.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/main/UiActionHandlerFx.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2020-08-27 21:35:10","commitOrder":1,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done\");\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","date":"2020-08-27 21:35:10","endLine":71,"groupId":"14236","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6d/d2972506f7d07a3fa73a76c78c9738492474a7.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done\");\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","realPath":"incubator/viewers/vaadin/ui/src/main/java/org/apache/isis/incubator/viewer/vaadin/ui/pages/main/UiActionHandlerVaa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"}],"commitId":"0cfb182d155a1925bbd08995ad24822fc554dc01","commitMessage":"@@@ISIS-2340: vaa: work on action dialog parameter binding\n\nbring vaa up to speed with fx","date":"2020-08-27 21:35:10","modifiedFileCount":"14","status":"B","submitter":"Andi Huber"},{"authorTime":"2020-08-28 13:36:46","codes":[{"authorDate":"2020-08-27 21:35:10","commitOrder":2,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","date":"2020-08-27 21:35:10","endLine":104,"groupId":"10175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5f/7c04e1ad5d2be9f182e3e0d9ec59440de7870a.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/main/UiActionHandlerFx.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2020-08-28 13:36:46","commitOrder":2,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done {}\", params);\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","date":"2020-08-28 13:36:46","endLine":71,"groupId":"14236","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/39/1930af9e7ad14c5e079fd7dca6f9862f7270d5.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done\");\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","realPath":"incubator/viewers/vaadin/ui/src/main/java/org/apache/isis/incubator/viewer/vaadin/ui/pages/main/UiActionHandlerVaa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"8848eea18e5b87ce903fe7b32b07044f73f22d9d","commitMessage":"@@@ISIS-2340: vaa: fix action dialog params not bound to backend","date":"2020-08-28 13:36:46","modifiedFileCount":"2","status":"M","submitter":"Andi Huber"},{"authorTime":"2020-08-28 14:09:19","codes":[{"authorDate":"2020-08-27 21:35:10","commitOrder":3,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","date":"2020-08-27 21:35:10","endLine":104,"groupId":"10213","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/5f/7c04e1ad5d2be9f182e3e0d9ec59440de7870a.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val pendingArgs = managedAction.startParameterNegotiation();\n            \n            Dialog<ParameterNegotiationModel> dialog = new Dialog<>();\n            dialog.setTitle(\"<Title>\");\n            dialog.setHeaderText(\"<HeaderText>\");\n           \n            dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n            val grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n            dialog.getDialogPane().setContent(grid);\n            \n            pendingArgs.getParamModels().forEach(paramModel->{\n                \n                val paramNr = paramModel.getParamNr(); \r\n                \n                val request = ComponentRequest.of(paramModel);\n                \n                val labelAndPosition = uiComponentFactory.labelFor(request);\n                val uiField = uiComponentFactory.parameterFor(request);\n                \n                grid.add(labelAndPosition.getUiLabel(), 0, paramNr);\n                grid.add(uiField, 1, paramNr);\n                \n            });\n            \n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == ButtonType.OK) {\n                    return pendingArgs;\n                }\n                return null;\n            });\n            \n            dialog.showAndWait().ifPresent(params->{\n                log.info(\"param negotiation done\");\n                invoke(managedAction, params.getParamValues()); \r\n            });\n            \n        } \n\n    }\n","realPath":"incubator/viewers/javafx/ui/src/main/java/org/apache/isis/incubator/viewer/javafx/ui/main/UiActionHandlerFx.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2020-08-28 14:09:19","commitOrder":3,"curCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done\");\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","date":"2020-08-28 14:09:19","endLine":71,"groupId":"10213","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"handleActionLinkClicked","params":"(ManagedActionmanagedAction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-isis-10-0.7/blobInfo/CC_OUT/blobs/6d/d2972506f7d07a3fa73a76c78c9738492474a7.src","preCode":"    public void handleActionLinkClicked(ManagedAction managedAction) {\n\n        log.info(\"about to build an action prompt for {}\", managedAction.getIdentifier());\n        \n        final int paramCount = managedAction.getAction().getParameterCount();\n        \n        if(paramCount==0) {\n            invoke(managedAction, Can.empty());     \n        } else {\n            \r\n            \n            val actionDialog = ActionDialog.forManagedAction(\n                    uiComponentFactory, \n                    managedAction,\n                    params->{\n                        log.info(\"param negotiation done {}\", params);\n                        invoke(managedAction, params);\n                        return true; \r\n                    });\n            actionDialog.open();\n\n            \n            return;\n        }\n\n    }\n","realPath":"incubator/viewers/vaadin/ui/src/main/java/org/apache/isis/incubator/viewer/vaadin/ui/pages/main/UiActionHandlerVaa.java","repoName":"isis","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"d652b3d51d0b21ba927545c6bec80d2eb9b6ec59","commitMessage":"@@@ISIS-2340: vaa: fix unidirectional binding","date":"2020-08-28 14:09:19","modifiedFileCount":"2","status":"M","submitter":"Andi Huber"}]
