[{"authorTime":"2020-08-19 11:36:30","codes":[{"authorDate":"2020-08-19 11:36:30","commitOrder":3,"curCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name())\n                || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","date":"2020-08-19 11:36:30","endLine":332,"groupId":"2794","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildAckCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/3b/a49451c7fa7e3f7e6510b0d20fa222dd933a17.src","preCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name())\n                || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"B"},{"authorDate":"2020-08-19 11:36:30","commitOrder":3,"curCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if(taskExecutionContext.getTaskType().equals(TaskType.SQL.name()) || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())){\n            ackCommand.setExecutePath(null);\n        }else{\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","date":"2020-08-19 11:36:30","endLine":198,"groupId":"527","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildAckCommand","params":"(TaskExecutionContexttaskExecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/2d/c9bb2ce9f7d96aab37d5ed473632e251d60b93.src","preCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if(taskExecutionContext.getTaskType().equals(TaskType.SQL.name()) || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())){\n            ackCommand.setExecutePath(null);\n        }else{\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/processor/TaskExecuteProcessor.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"MB"}],"commitId":"a4ee351a3af1b05bafab48699f846e2b3ac226eb","commitMessage":"@@@delay execution of tasks and improve some designs (#3427)\n\n","date":"2020-08-19 11:36:30","modifiedFileCount":"25","status":"M","submitter":"vanilla111"},{"authorTime":"2020-09-07 10:39:40","codes":[{"authorDate":"2020-08-19 11:36:30","commitOrder":4,"curCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name())\n                || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","date":"2020-08-19 11:36:30","endLine":332,"groupId":"2794","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildAckCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/3b/a49451c7fa7e3f7e6510b0d20fa222dd933a17.src","preCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name())\n                || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"N"},{"authorDate":"2020-09-07 10:39:40","commitOrder":4,"curCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(LogUtils.getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if(taskExecutionContext.getTaskType().equals(TaskType.SQL.name()) || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())){\n            ackCommand.setExecutePath(null);\n        }else{\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","date":"2020-09-07 10:39:40","endLine":172,"groupId":"527","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildAckCommand","params":"(TaskExecutionContexttaskExecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/37/17ce37ae51a28357c22a67d37e85b871aba55e.src","preCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if(taskExecutionContext.getTaskType().equals(TaskType.SQL.name()) || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())){\n            ackCommand.setExecutePath(null);\n        }else{\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/processor/TaskExecuteProcessor.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"68bc58892b32a2f59d272cba46a130f920879497","commitMessage":"@@@[Improvement][server] Refactor code for getTaskLogPath to reduce NPE log during UT (#3629)\n\n* init\n\n* update\n\n* update\n\n* update\n\n* fix\n\n* fix\n\n* enable test\n\n* fix\n\n* fix","date":"2020-09-07 10:39:40","modifiedFileCount":"5","status":"M","submitter":"Hsu Pu"},{"authorTime":"2021-05-12 18:44:30","codes":[{"authorDate":"2021-05-12 18:44:30","commitOrder":5,"curCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","date":"2021-05-12 18:44:30","endLine":314,"groupId":"1039","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"buildAckCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/6f/d4f34b2fc12afcc94b2a6a552644c38cb3ae80.src","preCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name())\n                || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2021-05-12 18:44:30","commitOrder":5,"curCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(LogUtils.getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","date":"2021-05-12 18:44:30","endLine":212,"groupId":"3277","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildAckCommand","params":"(TaskExecutionContexttaskExecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/04/7dc6d9ed2b198dfe1986a452f62c00d541ae41.src","preCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(LogUtils.getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if (taskExecutionContext.getTaskType().equals(TaskType.SQL.name()) || taskExecutionContext.getTaskType().equals(TaskType.PROCEDURE.name())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/processor/TaskExecuteProcessor.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"a3e5dfc146e2ca72e75ee5b270241cea5bd7a478","commitMessage":"@@@Merge pull request #5390 from apache/json_split\n\n[Feature-4417] Process definition json split","date":"2021-05-12 18:44:30","modifiedFileCount":"113","status":"M","submitter":"Kirs"},{"authorTime":"2021-09-06 16:57:02","codes":[{"authorDate":"2021-05-12 18:44:30","commitOrder":6,"curCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","date":"2021-05-12 18:44:30","endLine":314,"groupId":"1089","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"buildAckCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/6f/d4f34b2fc12afcc94b2a6a552644c38cb3ae80.src","preCode":"    private TaskExecuteAckCommand buildAckCommand() {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        ackCommand.setLogPath(taskExecutionContext.getLogPath());\n        ackCommand.setHost(taskExecutionContext.getHost());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"},{"authorDate":"2021-09-06 16:57:02","commitOrder":6,"curCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(LogUtils.getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        ackCommand.setProcessInstanceId(taskExecutionContext.getProcessInstanceId());\n\n        return ackCommand;\n    }\n","date":"2021-09-06 16:57:02","endLine":215,"groupId":"1089","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildAckCommand","params":"(TaskExecutionContexttaskExecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/66/2a003f8b8ece9db1873e7921719a5b6cfdf0ba.src","preCode":"    private TaskExecuteAckCommand buildAckCommand(TaskExecutionContext taskExecutionContext) {\n        TaskExecuteAckCommand ackCommand = new TaskExecuteAckCommand();\n        ackCommand.setTaskInstanceId(taskExecutionContext.getTaskInstanceId());\n        ackCommand.setStatus(taskExecutionContext.getCurrentExecutionStatus().getCode());\n        ackCommand.setLogPath(LogUtils.getTaskLogPath(taskExecutionContext));\n        ackCommand.setHost(taskExecutionContext.getHost());\n        ackCommand.setStartTime(taskExecutionContext.getStartTime());\n        if (TaskType.SQL.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType()) || TaskType.PROCEDURE.getDesc().equalsIgnoreCase(taskExecutionContext.getTaskType())) {\n            ackCommand.setExecutePath(null);\n        } else {\n            ackCommand.setExecutePath(taskExecutionContext.getExecutePath());\n        }\n        taskExecutionContext.setLogPath(ackCommand.getLogPath());\n        return ackCommand;\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/processor/TaskExecuteProcessor.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"e34c65d5a676ad4ff9b8eca5c5446d578b0b39b3","commitMessage":"@@@[Feature-4355][Master-Worker-API] improvements of master and scheduler module (#6095)\n\n* [Feature-4355][Master-Worker-API] improvements of master and scheduler module (#6085)\n\n* master refactor:\n   1. spi for task submit and other actions(pause.  kill)\n   2. remove threads for process instance and task instance.\n   3. add events for process instance and task instance\n\n* ut npe\n\n* add try catch\n\n* code style\n\n* fix critical bugs\n\n* fix critical bugs\n\n* fix critical bugs\n\n* fix critical bugs","date":"2021-09-06 16:57:02","modifiedFileCount":"41","status":"M","submitter":"OS"}]
