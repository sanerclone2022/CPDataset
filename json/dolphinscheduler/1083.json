[{"authorTime":"2020-04-10 12:06:03","codes":[{"authorDate":"2020-04-10 12:06:03","commitOrder":1,"curCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONObject.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","date":"2020-04-10 12:06:03","endLine":235,"groupId":"2026","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setDataxTaskRelation","params":"(DataxTaskExecutionContextdataxTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/50/c851c4832e9ee824496c2e3a9ab8257d094cb4.src","preCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONObject.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"},{"authorDate":"2020-04-10 12:06:03","commitOrder":1,"curCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONObject.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n        TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n        DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n        DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n        if (dataSource != null){\n            sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n            sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n            sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","date":"2020-04-10 12:06:03","endLine":263,"groupId":"1560","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setSqoopTaskRelation","params":"(SqoopTaskExecutionContextsqoopTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/50/c851c4832e9ee824496c2e3a9ab8257d094cb4.src","preCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONObject.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n        TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n        DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n        DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n        if (dataSource != null){\n            sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n            sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n            sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"}],"commitId":"4c90f04bb22c67475b7ccdebb62414a02a28c7eb","commitMessage":"@@@Merge pull request #2380 from qiaozhanwei/dev\n\nrefactor-worker merge to dev","date":"2020-04-10 12:06:03","modifiedFileCount":"156","status":"B","submitter":"Tboy"},{"authorTime":"2020-06-11 11:45:00","codes":[{"authorDate":"2020-04-10 12:06:03","commitOrder":2,"curCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONObject.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","date":"2020-04-10 12:06:03","endLine":235,"groupId":"2026","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setDataxTaskRelation","params":"(DataxTaskExecutionContextdataxTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/50/c851c4832e9ee824496c2e3a9ab8257d094cb4.src","preCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONObject.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"},{"authorDate":"2020-06-11 11:45:00","commitOrder":2,"curCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONObject.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null){\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null){\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","date":"2020-06-11 11:45:00","endLine":289,"groupId":"1560","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setSqoopTaskRelation","params":"(SqoopTaskExecutionContextsqoopTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/da/2363fc817922597ce365fa15bc1f0849773883.src","preCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONObject.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n        TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n        DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n        DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n        if (dataSource != null){\n            sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n            sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n            sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"a7fd0a523c0901ce9a831078abf94c9873e4ee09","commitMessage":"@@@Merge pull request #2943 from Eights-Li/dev-sqoop-optimization\n\nSqoop task optimization","date":"2020-06-11 11:45:00","modifiedFileCount":"9","status":"M","submitter":"Rubik-W"},{"authorTime":"2020-06-13 19:47:34","codes":[{"authorDate":"2020-06-13 19:47:34","commitOrder":3,"curCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONUtils.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","date":"2020-06-13 19:47:34","endLine":257,"groupId":"2026","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setDataxTaskRelation","params":"(DataxTaskExecutionContextdataxTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/d6/3b9252ba037122e272499e9aaef1e25601a12c.src","preCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONObject.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n\n        if (dataSource != null){\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null){\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2020-06-13 19:47:34","commitOrder":3,"curCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONUtils.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null){\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null){\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","date":"2020-06-13 19:47:34","endLine":288,"groupId":"1560","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setSqoopTaskRelation","params":"(SqoopTaskExecutionContextsqoopTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/d6/3b9252ba037122e272499e9aaef1e25601a12c.src","preCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONObject.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null){\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null){\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"}],"commitId":"11c4c583286d913c17eb8efff029d93d89f98b25","commitMessage":"@@@Merge pull request #2960 from simon824/dev\n\nUsing Jackson instead of Fastjson","date":"2020-06-13 19:47:34","modifiedFileCount":"136","status":"M","submitter":"gabry.wu"},{"authorTime":"2020-06-13 19:47:34","codes":[{"authorDate":"2020-12-11 15:35:40","commitOrder":4,"curCode":"    protected void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONUtils.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dbSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dbTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n        if (dbSource != null) {\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dbSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dbSource.getConnectionParams());\n        }\n\n        if (dbTarget != null) {\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dbTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dbTarget.getConnectionParams());\n        }\n    }\n","date":"2020-12-11 15:35:40","endLine":299,"groupId":"2026","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setDataxTaskRelation","params":"(DataxTaskExecutionContextdataxTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/89/d3e97b8ea28682ab2188f869d0ba9849fdcbba.src","preCode":"    private void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONUtils.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dataSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dataTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n        if (dataSource != null) {\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n        }\n\n        if (dataTarget != null) {\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"},{"authorDate":"2020-06-13 19:47:34","commitOrder":4,"curCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONUtils.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null){\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null){\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","date":"2020-06-13 19:47:34","endLine":288,"groupId":"1560","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setSqoopTaskRelation","params":"(SqoopTaskExecutionContextsqoopTaskExecutionContext@TaskNodetaskNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/d6/3b9252ba037122e272499e9aaef1e25601a12c.src","preCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONUtils.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null){\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null){\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"N"}],"commitId":"b3120a74d2656f7ad2054ba8245262551063b549","commitMessage":"@@@[Feature-4138][Master] dispatch workgroup error add sleep time (#4139)\n\n* When there are tasks with assignment failure and the number of tasks in the current task queue is less than 10.  sleep for 1 second\n\n* When there are tasks with assignment failure and the number of tasks in the current task queue is less than 10.  sleep for 1 second\n\n* fix code smell & code style\n\n* fix code smell & code style\n\nCo-authored-by: zhanglong <zhanglong@ysstech.com>","date":"2020-12-11 15:35:40","modifiedFileCount":"2","status":"M","submitter":"BoYiZhang"},{"authorTime":"2021-05-12 18:44:30","codes":[{"authorDate":"2021-05-12 18:44:30","commitOrder":5,"curCode":"    protected void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskInstance taskInstance) {\n        DataxParameters dataxParameters = JSONUtils.parseObject(taskInstance.getTaskParams(), DataxParameters.class);\n\n        DataSource dbSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dbTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n        if (dbSource != null) {\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dbSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dbSource.getConnectionParams());\n        }\n\n        if (dbTarget != null) {\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dbTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dbTarget.getConnectionParams());\n        }\n    }\n","date":"2021-05-12 18:44:30","endLine":290,"groupId":"1083","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setDataxTaskRelation","params":"(DataxTaskExecutionContextdataxTaskExecutionContext@TaskInstancetaskInstance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/61/bc6547314719dc85e9343b908befdaf0bb5aaa.src","preCode":"    protected void setDataxTaskRelation(DataxTaskExecutionContext dataxTaskExecutionContext, TaskNode taskNode) {\n        DataxParameters dataxParameters = JSONUtils.parseObject(taskNode.getParams(), DataxParameters.class);\n\n        DataSource dbSource = processService.findDataSourceById(dataxParameters.getDataSource());\n        DataSource dbTarget = processService.findDataSourceById(dataxParameters.getDataTarget());\n\n        if (dbSource != null) {\n            dataxTaskExecutionContext.setDataSourceId(dataxParameters.getDataSource());\n            dataxTaskExecutionContext.setSourcetype(dbSource.getType().getCode());\n            dataxTaskExecutionContext.setSourceConnectionParams(dbSource.getConnectionParams());\n        }\n\n        if (dbTarget != null) {\n            dataxTaskExecutionContext.setDataTargetId(dataxParameters.getDataTarget());\n            dataxTaskExecutionContext.setTargetType(dbTarget.getType().getCode());\n            dataxTaskExecutionContext.setTargetConnectionParams(dbTarget.getConnectionParams());\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2021-05-12 18:44:30","commitOrder":5,"curCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskInstance taskInstance) {\n        SqoopParameters sqoopParameters = JSONUtils.parseObject(taskInstance.getTaskParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null) {\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null) {\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","date":"2021-05-12 18:44:30","endLine":321,"groupId":"1083","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setSqoopTaskRelation","params":"(SqoopTaskExecutionContextsqoopTaskExecutionContext@TaskInstancetaskInstance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/61/bc6547314719dc85e9343b908befdaf0bb5aaa.src","preCode":"    private void setSqoopTaskRelation(SqoopTaskExecutionContext sqoopTaskExecutionContext, TaskNode taskNode) {\n        SqoopParameters sqoopParameters = JSONUtils.parseObject(taskNode.getParams(), SqoopParameters.class);\n\n        \r\n        if (sqoopParameters.getJobType().equals(SqoopJobType.TEMPLATE.getDescp())) {\n            SourceMysqlParameter sourceMysqlParameter = JSONUtils.parseObject(sqoopParameters.getSourceParams(), SourceMysqlParameter.class);\n            TargetMysqlParameter targetMysqlParameter = JSONUtils.parseObject(sqoopParameters.getTargetParams(), TargetMysqlParameter.class);\n\n            DataSource dataSource = processService.findDataSourceById(sourceMysqlParameter.getSrcDatasource());\n            DataSource dataTarget = processService.findDataSourceById(targetMysqlParameter.getTargetDatasource());\n\n            if (dataSource != null) {\n                sqoopTaskExecutionContext.setDataSourceId(dataSource.getId());\n                sqoopTaskExecutionContext.setSourcetype(dataSource.getType().getCode());\n                sqoopTaskExecutionContext.setSourceConnectionParams(dataSource.getConnectionParams());\n            }\n\n            if (dataTarget != null) {\n                sqoopTaskExecutionContext.setDataTargetId(dataTarget.getId());\n                sqoopTaskExecutionContext.setTargetType(dataTarget.getType().getCode());\n                sqoopTaskExecutionContext.setTargetConnectionParams(dataTarget.getConnectionParams());\n            }\n        }\n    }\n","realPath":"dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/consumer/TaskPriorityQueueConsumer.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"}],"commitId":"a3e5dfc146e2ca72e75ee5b270241cea5bd7a478","commitMessage":"@@@Merge pull request #5390 from apache/json_split\n\n[Feature-4417] Process definition json split","date":"2021-05-12 18:44:30","modifiedFileCount":"113","status":"M","submitter":"Kirs"}]
