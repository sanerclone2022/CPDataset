[{"authorTime":"2020-05-06 16:33:45","codes":[{"authorDate":"2020-05-06 16:33:45","commitOrder":2,"curCode":"    public void testQueryProcessDefinitionAllByProjectId() throws Exception{\n        int projectId = 1;\n        Map<String,Object> result = new HashMap<>();\n        putMsg(result,Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryProcessDefinitionAllByProjectId(projectId)).thenReturn(result);\n        Result response = processDefinitionController.queryProcessDefinitionAllByProjectId(user,projectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","date":"2020-05-06 16:33:45","endLine":305,"groupId":"2047","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryProcessDefinitionAllByProjectId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/8c/0d04c6c68af0cab742c89c77ecbe7ec7ee4de9.src","preCode":"    public void testQueryProcessDefinitionAllByProjectId() throws Exception{\n        int projectId = 1;\n        Map<String,Object> result = new HashMap<>();\n        putMsg(result,Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryProcessDefinitionAllByProjectId(projectId)).thenReturn(result);\n        Result response = processDefinitionController.queryProcessDefinitionAllByProjectId(user,projectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"B"},{"authorDate":"2020-05-06 16:33:45","commitOrder":2,"curCode":"    public void testViewTree() throws Exception{\n        String projectName = \"test\";\n        int processId = 1;\n        int limit = 2;\n        Map<String,Object> result = new HashMap<>();\n        putMsg(result,Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId,limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user,projectName,processId,limit);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","date":"2020-05-06 16:33:45","endLine":319,"groupId":"907","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/8c/0d04c6c68af0cab742c89c77ecbe7ec7ee4de9.src","preCode":"    public void testViewTree() throws Exception{\n        String projectName = \"test\";\n        int processId = 1;\n        int limit = 2;\n        Map<String,Object> result = new HashMap<>();\n        putMsg(result,Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId,limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user,projectName,processId,limit);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"MB"}],"commitId":"b08ba3461ea2e4611e12e9616bc1d087d72272f5","commitMessage":"@@@ process batch export and import #2501 (#2560)\n\n* Increase dataX environment variable.  sslTrust default value (#2555)\n\n* add LoginTest license\n\n* Delete useless packages\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* e2e add project and workflow case\n\n* Update worker_group_id to worker_group in init.sql\n\n* Update worker_group_id to worker_group in init.sql\n\n* Update worker_group_id to worker_group\n\n* Increase dataX environment variable.  sslTrust default value\n\nCo-authored-by: chenxingchun <438044805@qq.com>\n\n* no valid worker group?master can kill task directly (#2541)\n\n* dispatch task fail will set task status failed\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?no worker condition .  master will while ture wait for worker startup\n2?worker response task status sync wait for result\n\n* 1?task status statistics and process status statistics bug fix (#2357)\n2?worker group bug fix\n\n* 1?task status statistics and process status statistics bug fix (#2357)\n2?worker group bug fix\n\n* 1?task status statistics and process status statistics bug fix (#2357)\n2?worker group bug fix\n\n* 1?task status statistics and process status statistics bug fix (#2357)\n2?worker group bug fix\n\n* send mail error.  #2466 bug fix\n\n* send mail error.  #2466 bug fix\n\n* send mail error.  #2466 bug fix\n\n* send mail error.  #2466 bug fix\n\n* #2486 bug fix\n\n* host and workergroup compatible\n\n* EnterpriseWeChatUtils modify\n\n* EnterpriseWeChatUtils modify\n\n* EnterpriseWeChatUtils modify\n\n* #2499 bug fix\n\n* add comment\n\n* revert comment\n\n* revert comment\n\n* #2499 buf fix\n\n* #2499 bug fix\n\n* #2499 bug fix\n\n* #2499 bug fix\n\n* #2499 bug fix\n\n* #2499 bug fix\n\n* #2499 bug fix\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\n* no valid worker group?master can kill task directly\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* add batch import and export process definition\n\n* fix unit test bug\n\n* add unit test\n\n* add unit test 2\n\n* fix duplicated code problem\n\n* fix duplicated code problem 2\n\n* fix duplicated code problem 3\n\n* fix duplicated code problem 4\n\n* fix the vulnerability bug\n\n* fix the vulnerability bug\n\n* fix the code smells\n\n* fix the code smells 1\n\n* fix the code smells 2\n\n* fix the code smells 3\n\nCo-authored-by: xingchun-chen <55787491+xingchun-chen@users.noreply.github.com>\nCo-authored-by: chenxingchun <438044805@qq.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@outlook.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\nCo-authored-by: sunchaohe <sunzhaohe@linklogis.com>","date":"2020-05-06 16:33:45","modifiedFileCount":"6","status":"M","submitter":"zixi0825"},{"authorTime":"2021-06-22 01:47:24","codes":[{"authorDate":"2021-06-22 01:47:24","commitOrder":3,"curCode":"    public void testQueryProcessDefinitionAllByProjectId() throws Exception {\n        int projectId = 1;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryProcessDefinitionAllByProjectId(projectId)).thenReturn(result);\n        Result response = processDefinitionController.queryProcessDefinitionAllByProjectId(user, projectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-06-22 01:47:24","endLine":334,"groupId":"2047","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryProcessDefinitionAllByProjectId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/40/955cab6ab1c393bfa640df2537d4d01553ccbe.src","preCode":"    public void testQueryProcessDefinitionAllByProjectId() throws Exception {\n        int projectId = 1;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryProcessDefinitionAllByProjectId(projectId)).thenReturn(result);\n        Result response = processDefinitionController.queryProcessDefinitionAllByProjectId(user, projectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(), response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2021-06-22 01:47:24","commitOrder":3,"curCode":"    public void testViewTree() throws Exception {\n        String projectName = \"test\";\n        int processId = 1;\n        int limit = 2;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId, limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user, projectName, processId, limit);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-06-22 01:47:24","endLine":348,"groupId":"907","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/40/955cab6ab1c393bfa640df2537d4d01553ccbe.src","preCode":"    public void testViewTree() throws Exception {\n        String projectName = \"test\";\n        int processId = 1;\n        int limit = 2;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId, limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user, projectName, processId, limit);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(), response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":337,"status":"M"}],"commitId":"e628e4e8fdc72f0362449a78870493789450b284","commitMessage":"@@@[Improvement][API] Simplify the Check of Result by introducing several new methods. (#5666)\n\n","date":"2021-06-22 01:47:24","modifiedFileCount":"31","status":"M","submitter":"kyoty"},{"authorTime":"2021-09-08 13:26:00","codes":[{"authorDate":"2021-09-08 13:26:00","commitOrder":4,"curCode":"    public void testQueryProcessDefinitionAllByProjectId() {\n        long projectCode = 1L;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryAllProcessDefinitionByProjectCode(user, projectCode)).thenReturn(result);\n        Result response = processDefinitionController.queryAllProcessDefinitionByProjectCode(user, projectCode);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-09-08 13:26:00","endLine":332,"groupId":"10441","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testQueryProcessDefinitionAllByProjectId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/47/37c2f8f8627ae24c41181891340ca657196956.src","preCode":"    public void testQueryProcessDefinitionAllByProjectId() throws Exception {\n        int projectId = 1;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.queryProcessDefinitionAllByProjectId(projectId)).thenReturn(result);\n        Result response = processDefinitionController.queryProcessDefinitionAllByProjectId(user, projectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2021-09-08 13:26:00","commitOrder":4,"curCode":"    public void testViewTree() throws Exception {\n        long projectCode = 1L;\n        int processId = 1;\n        int limit = 2;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId, limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user, projectCode, processId, limit);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-09-08 13:26:00","endLine":346,"groupId":"10441","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/47/37c2f8f8627ae24c41181891340ca657196956.src","preCode":"    public void testViewTree() throws Exception {\n        String projectName = \"test\";\n        int processId = 1;\n        int limit = 2;\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.viewTree(processId, limit)).thenReturn(result);\n        Result response = processDefinitionController.viewTree(user, projectName, processId, limit);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"M"}],"commitId":"1f838e61026fab1db479754b64c9b15690b1a80b","commitMessage":"@@@Merge pull request #6124 from apache/json_split_two\n\n[Feature][JsonSplit-api] api module controller design","date":"2021-09-08 13:26:00","modifiedFileCount":"129","status":"M","submitter":"David"}]
