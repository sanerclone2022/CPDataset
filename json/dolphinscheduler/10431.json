[{"authorTime":"2020-12-01 08:58:55","codes":[{"authorDate":"2020-09-07 11:03:51","commitOrder":5,"curCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SHELL\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(null);\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n    }\n","date":"2020-09-07 11:03:51","endLine":745,"groupId":"2282","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/33/032f54e4d64790afe58f192916a9dd2f6ed982.src","preCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SHELL\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(null);\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":707,"status":"NB"},{"authorDate":"2020-12-01 08:58:55","commitOrder":5,"curCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SUB_PROCESS\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskJson(\"{\\n\"\n                + \"  \\\"conditionResult\\\": {\\n\"\n                + \"    \\\"failedNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ],\\n\"\n                + \"    \\\"successNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ]\\n\"\n                + \"  },\\n\"\n                + \"  \\\"delayTime\\\": \\\"0\\\",\\n\"\n                + \"  \\\"dependence\\\": {},\\n\"\n                + \"  \\\"description\\\": \\\"\\\",\\n\"\n                + \"  \\\"id\\\": \\\"1\\\",\\n\"\n                + \"  \\\"maxRetryTimes\\\": \\\"0\\\",\\n\"\n                + \"  \\\"name\\\": \\\"test_task_instance\\\",\\n\"\n                + \"  \\\"params\\\": {\\n\"\n                + \"    \\\"processDefinitionId\\\": \\\"222\\\",\\n\"\n                + \"    \\\"resourceList\\\": []\\n\"\n                + \"  },\\n\"\n                + \"  \\\"preTasks\\\": [],\\n\"\n                + \"  \\\"retryInterval\\\": \\\"1\\\",\\n\"\n                + \"  \\\"runFlag\\\": \\\"NORMAL\\\",\\n\"\n                + \"  \\\"taskInstancePriority\\\": \\\"MEDIUM\\\",\\n\"\n                + \"  \\\"timeout\\\": {\\n\"\n                + \"    \\\"enable\\\": false,\\n\"\n                + \"    \\\"interval\\\": null,\\n\"\n                + \"    \\\"strategy\\\": \\\"\\\"\\n\"\n                + \"  },\\n\"\n                + \"  \\\"type\\\": \\\"SUB_PROCESS\\\",\\n\"\n                + \"  \\\"workerGroup\\\": \\\"default\\\"\\n\"\n                + \"}\");\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","date":"2020-12-01 08:58:55","endLine":813,"groupId":"84","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubProcessViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/e1/97e56e1f6642783b7b58341d5e5a8d08b42b4f.src","preCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SUB_PROCESS\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskJson(\"{\\n\"\n                + \"  \\\"conditionResult\\\": {\\n\"\n                + \"    \\\"failedNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ],\\n\"\n                + \"    \\\"successNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ]\\n\"\n                + \"  },\\n\"\n                + \"  \\\"delayTime\\\": \\\"0\\\",\\n\"\n                + \"  \\\"dependence\\\": {},\\n\"\n                + \"  \\\"description\\\": \\\"\\\",\\n\"\n                + \"  \\\"id\\\": \\\"1\\\",\\n\"\n                + \"  \\\"maxRetryTimes\\\": \\\"0\\\",\\n\"\n                + \"  \\\"name\\\": \\\"test_task_instance\\\",\\n\"\n                + \"  \\\"params\\\": {\\n\"\n                + \"    \\\"processDefinitionId\\\": \\\"222\\\",\\n\"\n                + \"    \\\"resourceList\\\": []\\n\"\n                + \"  },\\n\"\n                + \"  \\\"preTasks\\\": [],\\n\"\n                + \"  \\\"retryInterval\\\": \\\"1\\\",\\n\"\n                + \"  \\\"runFlag\\\": \\\"NORMAL\\\",\\n\"\n                + \"  \\\"taskInstancePriority\\\": \\\"MEDIUM\\\",\\n\"\n                + \"  \\\"timeout\\\": {\\n\"\n                + \"    \\\"enable\\\": false,\\n\"\n                + \"    \\\"interval\\\": null,\\n\"\n                + \"    \\\"strategy\\\": \\\"\\\"\\n\"\n                + \"  },\\n\"\n                + \"  \\\"type\\\": \\\"SUB_PROCESS\\\",\\n\"\n                + \"  \\\"workerGroup\\\": \\\"default\\\"\\n\"\n                + \"}\");\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"B"}],"commitId":"3e411d075fffa1efd58484a1a29c54f7bfab9983","commitMessage":"@@@[Improvement][Code style] FIX SPELL WAITTING TO WAITING .  etc. (#4118)\n\n* FIX SPELL\n\n* FIX SPELL AND  Optimizing code conventions\n\n* add ut  cannot construct process instance.  return null;\n\n* add ut testExportProcessMetaData\n\n* add ut testExportProcessMetaData\n\n* add ut testImportProcessSchedule\n\n* add ut MasterExecThreadTest\n\n* add ut MasterExecThreadTest\n\n* add ut testSubProcessViewTree\n\n* add ut testComplementWithStartNodeList\n\n* add ut testRecurseFindSubProcessId\n\n* add ut testRecurseFindSubProcessId\n\n* add ut testRecurseFindSubProcessId","date":"2020-12-01 08:58:55","modifiedFileCount":"9","status":"M","submitter":"felix.wang"},{"authorTime":"2021-05-12 18:44:30","codes":[{"authorDate":"2021-05-12 18:44:30","commitOrder":6,"curCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SHELL.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","date":"2021-05-12 18:44:30","endLine":794,"groupId":"2439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/8e/e5b9aedf6a3c6d15ecd4a831353b9429d3fe09.src","preCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SHELL\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(null);\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"M"},{"authorDate":"2021-05-12 18:44:30","commitOrder":6,"curCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SUB_PROCESS.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskParams(\"\\\"processDefinitionId\\\": \\\"222\\\",\\n\");\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","date":"2021-05-12 18:44:30","endLine":825,"groupId":"2439","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubProcessViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/8e/e5b9aedf6a3c6d15ecd4a831353b9429d3fe09.src","preCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(\"SUB_PROCESS\");\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskJson(\"{\\n\"\n                + \"  \\\"conditionResult\\\": {\\n\"\n                + \"    \\\"failedNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ],\\n\"\n                + \"    \\\"successNode\\\": [\\n\"\n                + \"      \\\"\\\"\\n\"\n                + \"    ]\\n\"\n                + \"  },\\n\"\n                + \"  \\\"delayTime\\\": \\\"0\\\",\\n\"\n                + \"  \\\"dependence\\\": {},\\n\"\n                + \"  \\\"description\\\": \\\"\\\",\\n\"\n                + \"  \\\"id\\\": \\\"1\\\",\\n\"\n                + \"  \\\"maxRetryTimes\\\": \\\"0\\\",\\n\"\n                + \"  \\\"name\\\": \\\"test_task_instance\\\",\\n\"\n                + \"  \\\"params\\\": {\\n\"\n                + \"    \\\"processDefinitionId\\\": \\\"222\\\",\\n\"\n                + \"    \\\"resourceList\\\": []\\n\"\n                + \"  },\\n\"\n                + \"  \\\"preTasks\\\": [],\\n\"\n                + \"  \\\"retryInterval\\\": \\\"1\\\",\\n\"\n                + \"  \\\"runFlag\\\": \\\"NORMAL\\\",\\n\"\n                + \"  \\\"taskInstancePriority\\\": \\\"MEDIUM\\\",\\n\"\n                + \"  \\\"timeout\\\": {\\n\"\n                + \"    \\\"enable\\\": false,\\n\"\n                + \"    \\\"interval\\\": null,\\n\"\n                + \"    \\\"strategy\\\": \\\"\\\"\\n\"\n                + \"  },\\n\"\n                + \"  \\\"type\\\": \\\"SUB_PROCESS\\\",\\n\"\n                + \"  \\\"workerGroup\\\": \\\"default\\\"\\n\"\n                + \"}\");\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processInstanceService.queryByProcessDefineId(46, 10)).thenReturn(processInstanceList);\n        Mockito.when(taskInstanceMapper.queryByInstanceIdAndName(processInstance.getId(), \"shell-1\")).thenReturn(taskInstance);\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":797,"status":"M"}],"commitId":"a3e5dfc146e2ca72e75ee5b270241cea5bd7a478","commitMessage":"@@@Merge pull request #5390 from apache/json_split\n\n[Feature-4417] Process definition json split","date":"2021-05-12 18:44:30","modifiedFileCount":"113","status":"M","submitter":"Kirs"},{"authorTime":"2021-07-29 11:36:10","codes":[{"authorDate":"2021-07-29 11:36:10","commitOrder":7,"curCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SHELL.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","date":"2021-07-29 11:36:10","endLine":812,"groupId":"2439","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/fc/0b42a0727e2616744566b27526cec1eef01930.src","preCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SHELL.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":775,"status":"M"},{"authorDate":"2021-07-29 11:36:10","commitOrder":7,"curCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SUB_PROCESS.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskParams(\"\\\"processDefinitionId\\\": \\\"222\\\",\\n\");\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","date":"2021-07-29 11:36:10","endLine":843,"groupId":"2439","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubProcessViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/fc/0b42a0727e2616744566b27526cec1eef01930.src","preCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SUB_PROCESS.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskParams(\"\\\"processDefinitionId\\\": \\\"222\\\",\\n\");\n        Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":815,"status":"M"}],"commitId":"72d68041e3fccffdfd74d1be3c7129791b24ce2e","commitMessage":"@@@[Improvement][Api Module] refactor DataSourceParam and DependentParam.  remove spring annotation (#5832)\n\n* fix: refactor api utils class.  remove spring annotation.\n\n* fix: Optimization comments\n\nCo-authored-by: wen-hemin <wenhemin@apache.com>","date":"2021-07-29 11:36:10","modifiedFileCount":"3","status":"M","submitter":"wen-hemin"},{"authorTime":"2021-09-08 13:26:00","codes":[{"authorDate":"2021-09-08 13:26:00","commitOrder":8,"curCode":"    public void testViewTree() {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        \r\n        Mockito.when(processDefineMapper.queryByCode(46L)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n    }\n","date":"2021-09-08 13:26:00","endLine":590,"groupId":"10431","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/b4/ab9ce21614a026672856885c5ad06681564006.src","preCode":"    public void testViewTree() throws Exception {\n        \r\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(null);\n        Map<String, Object> processDefinitionNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST, processDefinitionNullRes.get(Constants.STATUS));\n\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SHELL.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n\n        \r\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNullRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNullRes.get(Constants.STATUS));\n\n        \r\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"M"},{"authorDate":"2021-09-08 13:26:00","commitOrder":8,"curCode":"    public void testSubProcessViewTree() {\n        ProcessDefinition processDefinition = getProcessDefinition();\n        Mockito.when(processDefineMapper.queryByCode(46L)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n    }\n","date":"2021-09-08 13:26:00","endLine":599,"groupId":"10431","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubProcessViewTree","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/b4/ab9ce21614a026672856885c5ad06681564006.src","preCode":"    public void testSubProcessViewTree() throws Exception {\n\n        ProcessDefinition processDefinition = getProcessDefinition();\n        processDefinition.setProcessDefinitionJson(SHELL_JSON);\n        List<ProcessInstance> processInstanceList = new ArrayList<>();\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setId(1);\n        processInstance.setName(\"test_instance\");\n        processInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        processInstance.setHost(\"192.168.xx.xx\");\n        processInstance.setStartTime(new Date());\n        processInstance.setEndTime(new Date());\n        processInstanceList.add(processInstance);\n\n        TaskInstance taskInstance = new TaskInstance();\n        taskInstance.setStartTime(new Date());\n        taskInstance.setEndTime(new Date());\n        taskInstance.setTaskType(TaskType.SUB_PROCESS.getDesc());\n        taskInstance.setId(1);\n        taskInstance.setName(\"test_task_instance\");\n        taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION);\n        taskInstance.setHost(\"192.168.xx.xx\");\n        taskInstance.setTaskParams(\"\\\"processDefinitionId\\\": \\\"222\\\",\\n\");\n        Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(processDefinition);\n        Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>());\n        Map<String, Object> taskNotNuLLRes = processDefinitionService.viewTree(46, 10);\n        Assert.assertEquals(Status.SUCCESS, taskNotNuLLRes.get(Constants.STATUS));\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":593,"status":"M"}],"commitId":"1f838e61026fab1db479754b64c9b15690b1a80b","commitMessage":"@@@Merge pull request #6124 from apache/json_split_two\n\n[Feature][JsonSplit-api] api module controller design","date":"2021-09-08 13:26:00","modifiedFileCount":"129","status":"M","submitter":"David"}]
