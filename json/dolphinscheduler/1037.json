[{"authorTime":"2020-04-10 12:06:03","codes":[{"authorDate":"2020-04-10 12:06:03","commitOrder":1,"curCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":\" + serverConfig.getListenPort()));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","date":"2020-04-10 12:06:03","endLine":85,"groupId":"2486","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/59/55f46056b6bb26e548a677efd66592bac760af.src","preCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":\" + serverConfig.getListenPort()));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2020-04-10 12:06:03","commitOrder":1,"curCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":4444\"));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","date":"2020-04-10 12:06:03","endLine":103,"groupId":"2486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteWithException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/59/55f46056b6bb26e548a677efd66592bac760af.src","preCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":4444\"));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"4c90f04bb22c67475b7ccdebb62414a02a28c7eb","commitMessage":"@@@Merge pull request #2380 from qiaozhanwei/dev\n\nrefactor-worker merge to dev","date":"2020-04-10 12:06:03","modifiedFileCount":"156","status":"B","submitter":"Tboy"},{"authorTime":"2020-07-02 19:16:37","codes":[{"authorDate":"2020-07-02 19:16:37","commitOrder":2,"curCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getHost() + \":\" + serverConfig.getListenPort()));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","date":"2020-07-02 19:16:37","endLine":85,"groupId":"2486","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/a1/c6b71437d1c246b802419fc87a60b06f3a50fc.src","preCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":\" + serverConfig.getListenPort()));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2020-07-02 19:16:37","commitOrder":2,"curCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getHost() + \":4444\"));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","date":"2020-07-02 19:16:37","endLine":103,"groupId":"2486","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteWithException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/a1/c6b71437d1c246b802419fc87a60b06f3a50fc.src","preCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(OSUtils.getHost() + \":4444\"));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"d1282fdd96147ca345f2a60d4e5c3554820f6fc9","commitMessage":"@@@In the case of multiple network cards.  a valid host is returned (#2924)\n\n* In the case of multiple network cards.  a valid host is returned\n\n* In the case of multiple network cards.  a valid host is returned\n\n* In the case of multiple network cards.  a valid host is returned\n\n* In the case of multiple network cards.  a valid host is returned\n\n* fix LOCAL_ADDRESS not assigned  value\n\n* fix LOCAL_ADDRESS not assigned  value\n\n* fix LOCAL_ADDRESS not assigned  value\n\n* fix lock error\n\n* fix lock error\n\n* end\n\n* end\n\n* end\n\n* end\n\n* code smell\n\n* code smell\n\n* code smell\n\n* code smell\n\n* code smell\n\n* code smell\n\n* code smell\n\n* lowering\n\n* messy\n\n* small change\n\n* compile error\n\nCo-authored-by: dailidong <dailidong66@gmail.com>\nCo-authored-by: gabry.wu <gabrywu@apache.org>","date":"2020-07-02 19:16:37","modifiedFileCount":"15","status":"M","submitter":"CalvinKirs"},{"authorTime":"2021-02-14 21:33:45","codes":[{"authorDate":"2021-02-14 21:33:45","commitOrder":3,"curCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getAddr(serverConfig.getListenPort())));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","date":"2021-02-14 21:33:45","endLine":86,"groupId":"1037","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/f8/e6e65521145ae22d17223e8c79176b3ea315e1.src","preCode":"    public void testExecute() throws ExecuteException{\n        final NettyServerConfig serverConfig = new NettyServerConfig();\n        serverConfig.setListenPort(30000);\n        NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(serverConfig);\n        nettyRemotingServer.registerProcessor(org.apache.dolphinscheduler.remote.command.CommandType.TASK_EXECUTE_REQUEST, new TaskExecuteProcessor());\n        nettyRemotingServer.start();\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getHost() + \":\" + serverConfig.getListenPort()));\n        Boolean execute = nettyExecutorManager.execute(executionContext);\n        Assert.assertTrue(execute);\n        nettyRemotingServer.close();\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2021-02-14 21:33:45","commitOrder":3,"curCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getAddr(4444)));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","date":"2021-02-14 21:33:45","endLine":104,"groupId":"1037","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteWithException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/f8/e6e65521145ae22d17223e8c79176b3ea315e1.src","preCode":"    public void testExecuteWithException() throws ExecuteException{\n        TaskInstance taskInstance = Mockito.mock(TaskInstance.class);\n        ProcessDefinition processDefinition = Mockito.mock(ProcessDefinition.class);\n        ProcessInstance processInstance = new ProcessInstance();\n        processInstance.setCommandType(CommandType.COMPLEMENT_DATA);\n        taskInstance.setProcessInstance(processInstance);\n        TaskExecutionContext context = TaskExecutionContextBuilder.get()\n                .buildTaskInstanceRelatedInfo(taskInstance)\n                .buildProcessInstanceRelatedInfo(processInstance)\n                .buildProcessDefinitionRelatedInfo(processDefinition)\n                .create();\n        ExecutionContext executionContext = new ExecutionContext(context.toCommand(), ExecutorType.WORKER);\n        executionContext.setHost(Host.of(NetUtils.getHost() + \":4444\"));\n        nettyExecutorManager.execute(executionContext);\n\n    }\n","realPath":"dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/master/dispatch/executor/NettyExecutorManagerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"53598fdd18a31797d8c6ac796a9c49e537d6e4e9","commitMessage":"@@@[Fix-3298][K8s] Fix task log disappear after recreating or upgrading helm release (#4755)\n\n* [Improvement][K8s] Alter column host varchar(15) to varchar(135) for long host\n\n* [Improvement][K8s] Improve getHost and getAddr in NetUtils\n\n* [Improvement][K8s] Replace getHost with getAddr","date":"2021-02-14 21:33:45","modifiedFileCount":"14","status":"M","submitter":"Shiwen Cheng"}]
