[{"authorTime":"2020-03-18 23:26:07","codes":[{"authorDate":"2020-02-25 14:19:26","commitOrder":3,"curCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","date":"2020-02-25 14:19:26","endLine":79,"groupId":"1641","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/7f/2888384eadf7c06c5351576ec2b185035b8c1b.src","preCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"NB"},{"authorDate":"2020-03-18 23:26:07","commitOrder":3,"curCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","date":"2020-03-18 23:26:07","endLine":117,"groupId":"2715","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/27/0e0c469685d41c3733c7ee5ca785e79d58362e.src","preCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"880e995654e148511ff94dcf439ef0d591fa5796","commitMessage":"@@@add repace time when run history job and batch complement job . not current time (#2196)\n\n* add release notes in 1.2.1 (#1654)\n\n* fix Monitor bug (#1656)\n\n* fix Monitor bug\n\n* fix zk monitor bug\n\n* fix api url (#1673)\n\n* get root path from zookeeper config\n\n* Fixed DAG zoom in and zoom out nodes separated from arrows #1679 (#1685)\n\n* fix api url\n\n* Fixed DAG zoom in and zoom out nodes separated from arrows #1679\n\n* check license and update (#1725)\n\n* Fixed tasks_queue and tasks_kill did not exist in zookeeper #1696 (#1734)\n\nCo-authored-by: elonlo <gamelifedong@gmail.com>\n\n* upgrade jackson from 2.9.8 to 2.10.1 (#1767)\n\n* add out put log when master/worker server start (#1769)\n\n* merge hadoop.properties into common.properties\n\n* merge hadoop. zookeeper.properties into common.properties\nremove combined.properties/master.properties/worker.properties\n\n* change db user/pwd to test/test\n\n* rename .dolphinscheduler_en.sh to dolphinscheduler_env.sh\nremove some unused in install.sh\n\n* add out put log when master/worker server start...\n\n* add start log when servers start\n\n* add check download resource permission in order to fix issues 1770 (#1788)\n\n* merge dev branch front-end code (#1786)\n\n* fix #1775 bug?delete process definition when process instance is running (#1790)\n\n* fix #1775 bug?delete process definition when process instance is running\n\n* revert CONTRIBUTING.md\n\n* fix udfs assignment and task instance page jump #1789 (#1791)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* update method checkDownloadPermission in order to fix issues 1770 (#1794)\n\n* add check download resource permission in order to fix issues 1770\n\n* update method checkDownloadPermission in order to fix issues 1770\n\n* update method listUnauthorizedResource in order to fix issues 1770\n\n* update method listUnauthorizedResource in order to fix issues 1770 (#1797)\n\n* if login user is admin. it will has permission to query all udf function (#1799)\n\n* Fixed space and icon display issues before and after the input box (#1798)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* Fixed space and icon display issues before and after the input box\n\n* add license\n\n* add license\n\n* donot submit task to queue if sub process (#1793)\n\n* dockerfile modify (#1800)\n\n* fix #1775 bug?delete process definition when process instance is running\n\n* revert CONTRIBUTING.md\n\n* dockerfile modify\n\n* dockerfile modify\n\n* dockerfile modify\n\n* Fix data echo.  style and popup cannot be closed (#1801)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* Fixed space and icon display issues before and after the input box\n\n* add license\n\n* add license\n\n* Fix data echo.  style and popup cannot be closed\n\n* Fix page number loading issue and dag not getting value(#1810) (#1815)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* Fixed space and icon display issues before and after the input box\n\n* add license\n\n* add license\n\n* Fix data echo.  style and popup cannot be closed\n\n* Fix page number loading issue and dag not getting value\n\n* [Fix issue #1770]check udf and data source in order to fix issue 1770 (#1817)\n\n* if login user is admin. it will has permission to query all udf function\n\n* check udf and data source in order to fix issue 1770\n\n* check udf and data source in order to fix issue 1770\n\n* check udf and data source in order to fix issue 1770\n\n* check udf and data source in order to fix issue 1770\n\n* check udf and data source in order to fix issue 1770\n\n* revert common.properties\n\n* update the test method name\n\n* remove useless code and import in unit test\n\n* refactor has permission and check permission\n\n* #1813 remove \"_001\" after the master/server register path in zookeepe (#1824)\n\n* donot submit task to queue if sub process\n\n* [feature] #1813 remove \"_001\" after the master/server register path in zookeeper (#1820)\n\n* change master/worker register path.\n\n* remove \"_\" from register path.\n\n* remove install.sh server.servlet.context-path replace (#1823)\n\n* fix #1775 bug?delete process definition when process instance is running\n\n* revert CONTRIBUTING.md\n\n* dockerfile modify\n\n* dockerfile modify\n\n* dockerfile modify\n\n* remove install.sh server.servlet.context-path replace\n\n* Fix DAG add dependent project value exception # 1816 and keep requesting task interface (#1827)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* Fixed space and icon display issues before and after the input box\n\n* add license\n\n* add license\n\n* Fix data echo.  style and popup cannot be closed\n\n* Fix page number loading issue and dag not getting value\n\n* Fix DAG add dependent project value exception # 1816 and keep requesting task interface\n\n* rpm package add UI (#1846)\n\n* [fix #1828] when the executor of process instance is not the owner of udf resouce.  the path of the read resource file is incorrect (#1847)\n\n* fix issue 1828:get the udf resource path error when create udf function\n\n* update grantResources\n\n* first verify whether udf resource is bound by udf function\n\n* update grantResources\n\n* update testListAuthorizedUdfFunc\n\n* update getUserInfo in order to run success\n\n* add LoggerServer RPC PORT modified. #1848 (#1849)\n\n* fix #1775 bug?delete process definition when process instance is running\n\n* revert CONTRIBUTING.md\n\n* dockerfile modify\n\n* dockerfile modify\n\n* dockerfile modify\n\n* remove install.sh server.servlet.context-path replace\n\n* add LoggerServer RPC PORT modified. #1848\n\n* LoggerService Logger RPC PORT get Error modify . #1848 (#1857)\n\n* fix #1775 bug?delete process definition when process instance is running\n\n* revert CONTRIBUTING.md\n\n* dockerfile modify\n\n* dockerfile modify\n\n* dockerfile modify\n\n* remove install.sh server.servlet.context-path replace\n\n* add LoggerServer RPC PORT modified. #1848\n\n* LoggerService Logger RPC PORT get Error modify . #1848\n\n* Fix UDF function list delete data without refresh and page data display widened #1851 (#1852)\n\n* merge dev branch front-end code\n\n* fix udfs assignment\n\n* Fix task instance page jump\n\n* fix udfs assignment and task instance page jump #1789\n\n* Fixed space and icon display issues before and after the input box\n\n* add license\n\n* add license\n\n* Fix data echo.  style and popup cannot be closed\n\n* Fix page number loading issue and dag not getting value\n\n* Fix DAG add dependent project value exception # 1816 and keep requesting task interface\n\n* Fix UDF function list delete data without refresh and page data display widened\n\n* [Fix #1828]check whether has permission to download udf file or delete udf function (#1858)\n\n* fix issue 1828:get the udf resource path error when create udf function\n\n* update grantResources\n\n* first verify whether udf resource is bound by udf function\n\n* update grantResources\n\n* update testListAuthorizedUdfFunc\n\n* update getUserInfo in order to run success\n\n* check whether has permission to download udf file or delete udf file\n\n* update listAuthorizedResourceById in ResourceMapper.xml\n\n* add log.  don't swallow exception info (#1877)\n\n* Added hints in Resource Center (#1891)\n\n* update jackson version from 2.9.8 to 2.10.1 (#1892)\n\n* update release notes and modify the plugin of rat (#1899)\n\n* modify how to build (#1902)\n\n* update release notes and modify the plugin of rat\n\n* modify how to build\n\n* [maven-release-plugin] prepare release 1.2.1\n\n* [maven-release-plugin] prepare for next development iteration\n\n* get authorized udf resources need exclude all created by self (#1905)\n\n* get authorized udf resources need exclude all created by self\n\n* reset pom version to 1.2.1-SNAPSHOT\n\n* Update ReleaseNotes.md\n\nadd detail info\n\n* Update ReleaseNotes.md\n\n* update notice year form 2019 to 2019-2020 (#1907)\n\n* [maven-release-plugin] prepare release 1.2.1\n\n* [maven-release-plugin] prepare for next development iteration\n\n* ???????????????shell?sql????[YYYYmmddd...]??????????????????\n\nCo-authored-by: lgcareer <18610854716@163.com>\nCo-authored-by: bao liang <29528966+lenboo@users.noreply.github.com>\nCo-authored-by: break60 <790061044@qq.com>\nCo-authored-by: Tboy <guo.jiwei@immomo.com>\nCo-authored-by: elonlo <gamelifedong@gmail.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@outlook.com>\nCo-authored-by: zhangchunyang <18910529250@163.com>\nCo-authored-by: dailidong <dailidong66@gmail.com>\nCo-authored-by: ?? <lixun@guyudeMacBook-Pro.local>","date":"2020-03-18 23:26:07","modifiedFileCount":"4","status":"M","submitter":"ruson"},{"authorTime":"2020-03-18 23:26:07","codes":[{"authorDate":"2020-06-30 15:23:35","commitOrder":4,"curCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","date":"2020-06-30 15:23:35","endLine":78,"groupId":"1641","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/2d/09f5c439527b4df96300aae0b92cb2f7e8d73a.src","preCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-03-18 23:26:07","commitOrder":4,"curCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","date":"2020-03-18 23:26:07","endLine":117,"groupId":"2715","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/27/0e0c469685d41c3733c7ee5ca785e79d58362e.src","preCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"ab6e4310b42ba6772b71334bc5360e470e933d7c","commitMessage":"@@@branch dev merge from dev-1.3.0 (#3087)\n\n* add DolphinScheduler slack channel\n\n* Update README.md\n\nCo-Authored-By: Jiajie Zhong <zhongjiajie955@hotmail.com>\n\n* modify soft_version 1.2.2 to 1.3.0\n\n* Repair worklist cannot be deleted\n\n* update schema version (#2657)\n\n* change schema version from 1.2.2 to 1.3.0\n\n* change version value of table t_ds_version from 2.0.0 to 1.3.0\n\n* fix bug: sub worker flow in complement data would run start date (#2581) (#2656)\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* Fix conditions node save exception\n\n* add unique key for t_ds_process_definition\n\n* add unique key for t_ds_process_definition\n\n* script variable has \"processDefinitionId\" is error #2664 (#2666)\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* update filename\n\n* Update dolphinscheduler_ddl.sql\n\n* Delete dolphinscheduler_ddl.sql\n\n* Delete dolphinscheduler_ddl.sql\n\n* add unique key for t_ds_process_definition\n\nadd unique key for t_ds_process_definition\n\n* add unique key for t_ds_process_definition\n\nadd unique key for t_ds_process_definition\n\n* Modify the alert log file\n?\n\n* blank in eamil and left font align #2648 (#2673)\n\n* script variable has \"processDefinitionId\" is error #2664\n\n* blank in eamil and left font align  #2648\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* fix zookeeper health check and merge volumes into logs volume (#2674)\n\n* fix zookeeper health check and merge volumes into logs volume\n\n1. Fix zookeeper health check\n2. Merge volumes into logs volume\n3. Modify `dockerfile/hooks/build` script\n\n* Modify ci_e2e and docker image registry\n\n* Modify ci_e2e\n\n* Modify ci_e2e\n\n* Modify ci_e2e and move ./dockerfile/hooks/check to ./docker/docker-swarm/\n\n* migrate docker composer and move dockerfile dir to docker/build\n\n* ut docker\n\n* alter dockerfile to docker/build dir\n\n* delete docker-compose old\n\n* delete dockerfile zk\n\n* delete dockerfile zk\n\n* delete dockerfile zk\n\n* [bug fix] some bugs from 1.2.0 to 1.3.0 (#2676)\n\n* fix bug: some bugs about worker group from 1.2.0 to 1.3.0\n\n* fix bug: scheduler from 1.2.0 to 1.3.0 do not work\n\n* fix bug: scheduler from 1.2.0 to 1.3.0 do not work\n\n* fix ut bug\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* add worker group config (#2681)\n\n* update README about DolphinScheduler\n\n* Update issue templates\n\n* update\n\n* regularize api pom xml\nupdate rpc maven compile to 1.8\n\n* regularize api pom xml\n\n* change commons.lang3.StringUtils to common.utils.StringUtils\n\n* update pom.xml\n\n* update\n\n* correct equals method\n\n* jasper-runtime is needed when api server start\n\n* jasper-runtime jar is needed when api server start\n\n* combine logback config of master/worker/alert/api server to one logback.xml\n\n* remove tomcat runtime jar\n\n* add UT\n\n* add license\n\n* remove jasper-runtime jar.  not need anymore\n\n* sovle jar conflict? remove servlet-api 2.5 jar\n\n* remove servlet 2.5\n\n* add embedded database h2 and update embedded zookeeper\n\n* delete logs\n\n* add license\n\n* change log level to INFO\n\n* simplify and optimize config\n\n* add development state\n\n* simplify common config\n\n* add worker group config\n\n* add worker group config\n\nCo-authored-by: lidongdai <escheduler@outlook.com>\nCo-authored-by: dailidong <dolphinschedule@gmail.com>\n\n* delete log files while deleting process instances #2463 (#2693)\n\n* script variable has \"processDefinitionId\" is error #2664\n\n* blank in eamil and left font align  #2648\n\n* delete log files while deleting process instances #2463\n\n* delete log files while deleting process instances #2463\n\n* delete log files while deleting process instances #2463\n\n* delete log files while deleting process instances #2463\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* Update dolphinscheduler_ddl.sql\n\n* Using docker/docker-swarm/docker-compose.yml to run pg and zk in ci_ut.yml (#2692)\n\n* Using docker/docker-swarm/docker-compose.yml to run pg and zk in ci_ut.yml\n\n1. add initdb volume for pg service in docker-compose.yml\n2. modify ci_ut.yml\n\n* add sudo in ci_ut.yml\n\n* Query the metadata of indexes is not correct in postgresql/dolphinscheduler_ddl.sql\n\n1. replace information_schema.STATISTICS to pg_stat_all_indexes\n2. modify ProcessDefinitionMapperTest.java\n\n* Remove inner zk and pg\n\n* add inner pg\n\n* conditions The task node adds a background color to distinguish successful and failed connections\n\n* add LoggerServerTest UT (#2713)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* add UT (#2717)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* fix worker group config no effect (#2719)\n\n* Conditional judgment adds text\n\n* fix\n\n* fix #2449:It's should successful to cancel authorize a resource of a user if all the online process definitions created by this user didn't use this resource. (#2725)\n\n* Underline the list of workflow operations\n\n* Modify HDFS/S3 path (#2736)\n\n* Modify HDFS/S3 path\n?\n\n* Modify HDFS/S3 path\n?\n\n* Update common.properties\n\nCo-authored-by: chenxingchun <438044805@qq.com>\nCo-authored-by: dailidong <dailidong66@gmail.com>\n\n* Modify ip configuration\n\n* set worker group  (#2743)\n\n* simple config\n\n* fix worker group config no effect\n\n* fix #2598::allow to update resource suffix. but if it is authorized to other users. it is not allowed (#2732)\n\n* fix #2598:allow to update resource suffix. but if it is authorized to other users. it is not allowed.\n\n* add RESOURCE_IS_AUTHORIZED status\n\n* verify whether the suffix is empty\n\n* remove extra variables\n\n* fix code smell\n\n* Update known-dependencies.txt\n\n* update worker group config (#2746)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* Update datasource.properties\n\n* remove codehaus janino jar (#2742)\n\nthe license about janino maybe not compatiable with Apache v2\n\n* [bug fix] fix bug:2634:Process shows success. when the task of the process is killed in the terminal (#2731)\n\n* fix bug: some bugs about worker group from 1.2.0 to 1.3.0\n\n* fix bug: scheduler from 1.2.0 to 1.3.0 do not work\n\n* fix bug: scheduler from 1.2.0 to 1.3.0 do not work\n\n* fix ut bug\n\n* fix bug: Process shows success. when the task of the process is killed in the termina\n\n* fix bug #2634: Process shows success. when the task of the process is killed in the terminal\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* Update known-dependencies.txt (#2748)\n\n* fix getWorkers bug on RunConfig (#2747)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* datasource config\n\n* Update datasource.properties\n\n* fix RunConfig bug\n\n* master select worker filter high load worker #2704 (#2733)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* Fix rename check parameter\n\n* fix\n\n* fix 2598:change getId to getUserId (#2757)\n\n* fix #2598:allow to update resource suffix. but if it is authorized to other users. it is not allowed.\n\n* add RESOURCE_IS_AUTHORIZED status\n\n* verify whether the suffix is empty\n\n* remove extra variables\n\n* fix code smell\n\n* change getId to getUserId\n\n* Fix MySQL autoDeserialize bug (#2728)\n\n* Fix MySQL autoDeserialize bug\n\n* add MySQLDataSourceTest\n\n* Fix workflow definition history node data cannot be opened\n\n* fix\n\n* delete normalize\n\n* update e2e chrome version (#2775)\n\nCo-authored-by: chenxingchun <438044805@qq.com>\n\n* Modify the background color of conditions task node connection\n\n* [BUF FIX]fix: the master would be blocked when worker group not exists (#2764)\n\n* feature: add number configuration for master dispatch tasks\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix ut\n\n* fix ut\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* [BUG FIX] fix bug: dependent task failed when conditions task exists (#2768)\n\n* fix bug 2464: change dependent task for process.\n\n* remove unused code\n\n* add ut\n\n* add ut\n\n* update comments\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* Hourly dependency configuration? 'currentHour' and 'last24Hours' (#2696)\n\n* [feature] Add hourly dependency scenarios\n\n* [Feature] #2680\n\nadd DependentUtilsTest UT\n\nCo-authored-by: changqun.xu <changqun.xu@17zuoye.com>\nCo-authored-by: xuchangqun <changqun.x@gmail.com>\n\n* fix sql task bug #2739 (#2741)\n\n* Solve the failure to execute non-query sql\n\n* fix sql task bug\n\nCo-authored-by: sunchaohe <sunzhaohe@linklogis.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@outlook.com>\nCo-authored-by: lgcareer <18610854716@163.com>\n\n* Worker group adds check\n\n* fix\n\n* Worker group adds check (#2787)\n\n* Worker group adds check\n\n* fix\n\n* add not worker log and remove worker invalid property (#2784)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* add not worker log and remove worker invalid property\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* Modify the ambari-plugin readme for packing RPM packages and add a description of the replication plug-in directory (#2786)\n\n* fixed #2788  resolve the bug #2788  (#2789)\n\n* Modify the ambari-plugin readme for packing RPM packages and add a description of the replication plug-in directory\n\n* fixed #2788\n\n* [BUG FIX] fix bug:cannot pause work flow when task state is \"submit success\" (#2783)\n\n* feature: add number configuration for master dispatch tasks\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix ut\n\n* fix ut\n\n* fix bug(2781): cannot pause work flow when task state is \"submit success\"\n\n* fix code smell\n\n* add mysql other param blank judge\n\n* test\n\n* update comments\n\n* update comments\n\n* add ut\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* fix bug:#2735 (#2770)\n\n1. store process id in zk.\n2. resolve host and port through zk path.\n3. modify ui key.\n\n* Modify startup parameter worker group value\n\n* Fix [Bug] process definition json worker group convert #2794 (#2795)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* add not worker log and remove worker invalid property\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* [BUG FIX]fix bug: Restart the worker service again.  the previously submitted successful tasks are not executed bug (#2800)\n\n* feature: add number configuration for master dispatch tasks\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix ut\n\n* fix ut\n\n* fix bug(2781): cannot pause work flow when task state is \"submit success\"\n\n* fix code smell\n\n* add mysql other param blank judge\n\n* test\n\n* update comments\n\n* update comments\n\n* add ut\n\n* fix bug: Restart the worker service again.  the previously submitted successful tasks are not executed\n\n* update comments\n\n* add sleep\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* delete unnecessary configuration items (#2803)\n\n* rename worker_group_id to worker_group and set the value of worker_group_name (#2801)\n\n* process definition json worker group convert #2794 (#2809)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* add not worker log and remove worker invalid property\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* compatible old version host not port delete log file (#2811)\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\n\n* add LoggerServerTest UT\nadd RemoveTaskLogRequestCommandTest UT\nadd RemoveTaskLogResponseCommandTest\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* master select worker filter high load worker #2704\n\n* add not worker log and remove worker invalid property\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* process definition json worker group convert #2794\n\n* compatible old version host not port delete log file\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\n\n* Added instructions for ambari to add and remove Dolphin Schdumer components on nodes (#2806)\n\n* delete unnecessary configuration items\n\n* Added instructions for ambari to add and remove Dolphin Schdumer components on nodes\n\n* Added instructions for ambari to add and remove Dolphin Schdumer components on nodes\n\n* fix oracle connect failure (#2812)\n\n* use method getJdbcUrl of parent\n\n* Remove the incorrect print message\n\n* Modify process group workerGroup value display and filter child node duplicate values\n\n* Repair process definition bulk delete function\n\n* when init workflow.  the tenantId linked by the tenantId of user\n\n* dag download does not refresh.  modify the task instance operation width value\n\n* fix\n\n* [bug fix]fix bug: After the master is fault-tolerant.  it cannot resume operation  (#2813)\n\n* feature: add number configuration for master dispatch tasks\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix ut\n\n* fix ut\n\n* fix bug(2781): cannot pause work flow when task state is \"submit success\"\n\n* fix code smell\n\n* add mysql other param blank judge\n\n* test\n\n* update comments\n\n* update comments\n\n* add ut\n\n* fix bug: Restart the worker service again.  the previously submitted successful tasks are not executed\n\n* update comments\n\n* add sleep\n\n* add null point check\n\n* fix bug:After the master is fault-tolerant.  it cannot resume operation\n\n* fix bug: do not failover the host is 'NULL' process\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* When update the data source. the host and port show error (#2821)\n\n* When update the data source. the host and port show error\n\n* update DataSourceServiceTest\n\n* update DataSourceServiceTest\n\n* update DataSourceServiceTest\n\n* Fix ORACLE service name value display\n\n* Add tips for download workflow\n\n* fix\n\n* [bug fix] fix: The workflow is fault-tolerant and 2 task instances are generated (#2833)\n\n* feature: add number configuration for master dispatch tasks\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix bug(#2762) the master would be blocked when worker group not exists\n\n* fix ut\n\n* fix ut\n\n* fix bug(2781): cannot pause work flow when task state is \"submit success\"\n\n* fix code smell\n\n* add mysql other param blank judge\n\n* test\n\n* update comments\n\n* update comments\n\n* add ut\n\n* fix bug: Restart the worker service again.  the previously submitted successful tasks are not executed\n\n* update comments\n\n* add sleep\n\n* add null point check\n\n* fix bug:After the master is fault-tolerant.  it cannot resume operation\n\n* fix bug: do not failover the host is 'NULL' process\n\n* fix bug:worker failover error.\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* add maven Xmx to 5g\n\n* fix bug: send task result to master until success. (#2839)\n\n* fix bug: send task result to master until success.\n\n* fix bug: send task result to master until success.\n\n* add sleep\n\n* set null if send result failed\n\n* set null if send result failed\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* Fix errors when running on win10 (#2842)\n\n1. DS cant run bat script\n2. DS cant run python script\n3. DS cant run datax script\n\n* Fix abnormal display of regular worker parameters\n\n* add source license full text into source license (#2840)\n\n* add source license full text into source license\n\n* exclude ScriptRunner.java on rat check\n\n* fix table not exist when init db metadata (#2838)\n\n* fix table not exist when init db metadata\n\n* fix db init error\n\n* fix ds-1.3.0 init db\n\n* init db modify process instance json\n\nCo-authored-by: eights <yelli.hl@foxmail.com>\n\n* change notice copyright date from 2019 to 2019-2020 (#2847)\n\n* add source license full text into source license\n\n* exclude ScriptRunner.java on rat check\n\n* change notice copyright date from 2019 to 2019-2020\n\n* fix [BUG] TaskExecutionContextCacheManagerImpl Do not execute removeByTaskInstanceId #2745 (#2754)\n\n* mr resource display and create user username length cannot be less than 3\n\n* fix\n\n* fix\n\n* fix\n\n* fix table T_DS_ALERT (#2854)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* datasource config\n\n* Update datasource.properties\n\n* fix RunConfig bug\n\n* remove param monitor server state\n\n* fix table T_DS_ALERT\n\n* fix\n\n* fix\n\n* modify t_ds_task_instance app_link change sql (#2861)\n\n* change max length of user name to 39 (#2856)\n\n* fix bug: send task result to master until success.\n\n* fix bug: send task result to master until success.\n\n* add sleep\n\n* set null if send result failed\n\n* set null if send result failed\n\n* change max length of username to 39\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* copy resources need get top directory first (#2866)\n\n* copy resources need get top directory first\n\n* copy resources need get top directory first\n\n* fix #2860:copy files and create empty directory (#2876)\n\n* copy resources need get top directory first\n\n* copy resources need get top directory first\n\n* fix #2860:copy files and create empty directory\n\n* Fix bug:If user didn't set the value of tenant. release process definition fail (#2885)\n\n* copy resources need get top directory first\n\n* copy resources need get top directory first\n\n* fix #2860:copy files and create empty directory\n\n* Fix bug:If user didn't set the value of tenant. release process definition online fail\n\n* merge method updateuser if and fix bug#2892\n\nfix [BUG] When editing user information.  clear the phone number.  the database table t_ds_user.phone is not cleared #2892\n\n* fix bug: sqoop mysql import params error (#2896)\n\n* fix bug: sqoop mysql import params error\n\n* fix bug: sqoop mysql import params error\n\n* Fixed selection of tenant value and defalut changed to lower case\n\n* update how to build and remove docs link (#2906)\n\n* Fix tasks not execute in sub-process when rerun scheduled process. #2903 (#2908)\n\n* fix create table sql exception (#2912)\n\nfix create table sql exception\n\n* fix #2910 master server will show exception for some time when it restart (#2913)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* datasource config\n\n* Update datasource.properties\n\n* fix RunConfig bug\n\n* remove param monitor server state\n\n* fix table T_DS_ALERT\n\n* update h2 database\n\n* fix #2910 master server will show exception for some time when it restart\n\n* Fixbug datax task (#2909)\n\n* fix:  local param bug\n\n* fix: UT bug\n\nCo-authored-by: Rubik-W <whm_777@163.com>\n\n* [license] add license and notice (#2916)\n\n* fix bug: send task result to master until success.\n\n* fix bug: send task result to master until success.\n\n* add sleep\n\n* set null if send result failed\n\n* set null if send result failed\n\n* change max length of username to 39\n\n* test for gc\n\n* change version to 1.3.0\n\n* check and add some license files\n\n* check and add some license files\n\n* revert\n\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\n\n* fix oom when no master is active in dev-1.3.0 (#2918)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* datasource config\n\n* Update datasource.properties\n\n* fix RunConfig bug\n\n* remove param monitor server state\n\n* fix table T_DS_ALERT\n\n* update h2 database\n\n* fix #2910 master server will show exception for some time when it restart\n\n* fix oom when no master is active\n\n* fix worker oom when master server restart\n\n* fix oom\n\n* fix\n\n* add UT\n\n* fix worker group config no effect\n\n* Python.  sql.  sqoop. datax task node editor adds zoom function #2929 (#2933)\n\n* Python.  sql.  sqoop task node editor adds zoom function\n\n* fix\n\n* change 1.3.0 to 1.3.0-snapshot\n\n* add janino-3.0.12.jar\n\n* delete duplicate codes\n\n* add commons-compiler-3.0.12.jar\n\n* change delete status according to delete action result\n\n* Delete the pom files animation.scss.  _normalize.scss and _animation.scss under the common folder\n\n* Change email to default (#2981)\n\n* add mybatis-3 notice in the top-level notice (#3003)\n\n* fix download resource file that under the directory error (#3007)\n\n* add mybatis-3 notice in the top-level notice\n\n* fix download resource file that under the directory error\n\n* Fix unfiltered jar files in resource directory and UDF upload resource parameters (#3008)\n\n* Change email to default\n\n* Fix unfiltered jar files in resource directory and UDF upload resource parameters\n\n* fix singe resource manager will NPE (#3013)\n\n* fix worker group config no effect\n\n* remove codehaus janino jar\nthe license about janino maybe not compatiable with Apache v2\n\n* Merge remote-tracking branch 'upstream/dev-1.3.0' into dev-1.3.0\n\n# Conflicts:\n#\tdolphinscheduler-server/src/main/resources/config/install_config.conf\n\n* datasource config\n\n* Update datasource.properties\n\n* fix RunConfig bug\n\n* remove param monitor server state\n\n* fix table T_DS_ALERT\n\n* update h2 database\n\n* fix #2910 master server will show exception for some time when it restart\n\n* fix oom when no master is active\n\n* fix worker oom when master server restart\n\n* fix oom\n\n* fix\n\n* add UT\n\n* fix worker group config no effect\n\n* fix singe resource manager will NPE\n\n* Update HadoopUtilsTest.java\n\n* merge from dev-1.3.0\n\n* update ut\n\n* remove duplicate code\n\n* remove exception ut\n\n* remove exception ut\n\n* remove exception ut\n\n* remove exception ut\n\n* remove exception ut\n\n* [bugfix] remove Conflicting configuration sudo and user (#3038)\n\nCo-authored-by: zhangchunyang1024 <zhangchunyang0123@gamil.com>\n\n* [bugfix] 1. fix alert.json includes repeated tag 'DOLPHIN_ALERT' 2. metainfo.xml The version number of the RPM package is no longer specified in the metainfo.xml (#3032)\n\nCo-authored-by: zhangchunyang1024 <zhangchunyang0123@gamil.com>\n\n* [feature] readme.md adds instructions for changing environment variables (#3031)\n\nCo-authored-by: zhangchunyang1024 <zhangchunyang0123@gamil.com>\n\n* merge from dev\n\n* Change favicon.ico icon introduction method and package compilation to increase version number (#3030)\n\nCo-authored-by: Jiajie Zhong <zhongjiajie955@hotmail.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@outlook.com>\nCo-authored-by: chenxingchun <438044805@qq.com>\nCo-authored-by: break60 <790061044@qq.com>\nCo-authored-by: lgcareer <18610854716@163.com>\nCo-authored-by: bao liang <29528966+lenboo@users.noreply.github.com>\nCo-authored-by: baoliang <baoliang@analysys.com.cn>\nCo-authored-by: Simon <3656562@qq.com>\nCo-authored-by: xingchun-chen <55787491+xingchun-chen@users.noreply.github.com>\nCo-authored-by: ??? <zhangshiming@cvte.com>\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>\nCo-authored-by: liwenhe1993 <liwenhe@apache.org>\nCo-authored-by: xiaochun.liu <xiaochun.liu@centurygame.com>\nCo-authored-by: lidongdai <escheduler@outlook.com>\nCo-authored-by: dailidong <dolphinschedule@gmail.com>\nCo-authored-by: Tboy <guo.jiwei@immomo.com>\nCo-authored-by: xuchangqun <58328021+xuchangqun@users.noreply.github.com>\nCo-authored-by: changqun.xu <changqun.xu@17zuoye.com>\nCo-authored-by: xuchangqun <changqun.x@gmail.com>\nCo-authored-by: zixi0825 <649790970@qq.com>\nCo-authored-by: sunchaohe <sunzhaohe@linklogis.com>\nCo-authored-by: zhangchunyang <zhangchunyang0123@gmail.com>\nCo-authored-by: tlhhup <137273278@qq.com>\nCo-authored-by: yelli.hl@foxmail.com <amarantine@my.com>\nCo-authored-by: eights <yelli.hl@foxmail.com>\nCo-authored-by: yaoyao <42244568+1445103710@users.noreply.github.com>\nCo-authored-by: ?? <62982788+597365581@users.noreply.github.com>\nCo-authored-by: gabry.wu <gabrywu@apache.org>\nCo-authored-by: t1mon <178317391@qq.com>\nCo-authored-by: Rubik-W <39549317+Rubik-W@users.noreply.github.com>\nCo-authored-by: Rubik-W <whm_777@163.com>\nCo-authored-by: zhangchunyang1024 <zhangchunyang0123@gamil.com>","date":"2020-06-30 15:23:35","modifiedFileCount":"76","status":"M","submitter":"dailidong"},{"authorTime":"2020-03-18 23:26:07","codes":[{"authorDate":"2020-06-30 16:36:56","commitOrder":5,"curCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","date":"2020-06-30 16:36:56","endLine":78,"groupId":"1641","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/aa/e14a63ec7950cd15c180148598a2d14f2a54e3.src","preCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-03-18 23:26:07","commitOrder":5,"curCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","date":"2020-03-18 23:26:07","endLine":117,"groupId":"2715","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/27/0e0c469685d41c3733c7ee5ca785e79d58362e.src","preCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"5bac559d22ee940e51477f73b62eb563b021631a","commitMessage":"@@@Revert \"branch dev merge from dev-1.3.0 (#3087)\" (#3094)\n\nThis reverts commit ab6e4310b42ba6772b71334bc5360e470e933d7c.\n\nCo-authored-by: dailidong <dailidong66@gmail.com>","date":"2020-06-30 16:36:56","modifiedFileCount":"76","status":"M","submitter":"bao liang"},{"authorTime":"2020-03-18 23:26:07","codes":[{"authorDate":"2020-06-30 16:50:17","commitOrder":6,"curCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","date":"2020-06-30 16:50:17","endLine":78,"groupId":"1641","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/2d/09f5c439527b4df96300aae0b92cb2f7e8d73a.src","preCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-03-18 23:26:07","commitOrder":6,"curCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","date":"2020-03-18 23:26:07","endLine":117,"groupId":"2715","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/27/0e0c469685d41c3733c7ee5ca785e79d58362e.src","preCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"2d0fe8a8c68d915de0852da53198ebeb1cc48ae6","commitMessage":"@@@Merge pull request #3095 from apache/dev-merge\n\nbranch dev merge from dev-1.3.0","date":"2020-06-30 16:50:17","modifiedFileCount":"76","status":"M","submitter":"bao liang"},{"authorTime":"2020-09-02 15:59:47","codes":[{"authorDate":"2020-09-02 15:59:47","commitOrder":7,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n        }\n\n        return parameterString;\n    }\n","date":"2020-09-02 15:59:47","endLine":82,"groupId":"1641","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/39/ec04afcfde59d9149558e9c7c75c97b3fa0e15.src","preCode":"  public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n      return parameterString;\n    }\n\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n      } catch (ParseException e) {\n        logger.error(\"parse {} exception\", cronTimeStr, e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n    }\n\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-09-02 15:59:47","commitOrder":7,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n        }\n        return parameterString;\n    }\n","date":"2020-09-02 15:59:47","endLine":116,"groupId":"1641","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/39/ec04afcfde59d9149558e9c7c75c97b3fa0e15.src","preCode":"  public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n    if (StringUtils.isEmpty(parameterString)) {\n      return parameterString;\n    }\n    \r\n    String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n    Date cronTime = null;\n\n    if (StringUtils.isNotEmpty(cronTimeStr)) {\n      try {\n        cronTime = DateUtils.parseDate(cronTimeStr, new String[]{Constants.PARAMETER_FORMAT_TIME});\n\n      } catch (ParseException e) {\n        logger.error(String.format(\"parse %s exception\", cronTimeStr), e);\n      }\n    } else {\n      cronTime = new Date();\n    }\n\n    \r\n    parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n    \r\n    if (cronTime != null) {\n      parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n    }\n    return parameterString;\n  }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"ac4ed94061e91563268c3bc588c554182d22d277","commitMessage":"@@@[Improvement][common] Add UnsupportedOperationException for utils construct (#3381)\n\n* [Improvement][common] Add UnsupportedOperationException for utils construct\n\n* Fix checkstyle","date":"2020-09-02 15:59:47","modifiedFileCount":"25","status":"M","submitter":"Yichao Yang"},{"authorTime":"2020-12-01 14:34:03","codes":[{"authorDate":"2020-12-01 14:34:03","commitOrder":8,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n\n        return parameterString;\n    }\n","date":"2020-12-01 14:34:03","endLine":88,"groupId":"1508","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/12/27b4e04ea4d840ca971d02a27b2735e2568c14.src","preCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n        }\n\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-12-01 14:34:03","commitOrder":8,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-01 14:34:03","endLine":121,"groupId":"1641","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/12/27b4e04ea4d840ca971d02a27b2735e2568c14.src","preCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            parameterString = TimePlaceholderUtils.replacePlaceholders(parameterString, cronTime, true);\n\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"3ceb612467ee3eef452599794c8b45d738dba5d3","commitMessage":"@@@[FIX#4033] $[] conflicts with mysql keywords (#4111)\n\n* [FIX#4033] $[] conflicts with mysql keywords\nWe currently only use this symbol for dates.  so I filtered out the number type.\nthis close #4033\n\n* test\n\n* fix error","date":"2020-12-01 14:34:03","modifiedFileCount":"5","status":"M","submitter":"Kirs"},{"authorTime":"2020-12-15 10:30:36","codes":[{"authorDate":"2020-12-01 14:34:03","commitOrder":9,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n\n        return parameterString;\n    }\n","date":"2020-12-01 14:34:03","endLine":88,"groupId":"1508","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/12/27b4e04ea4d840ca971d02a27b2735e2568c14.src","preCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2020-12-15 10:30:36","commitOrder":9,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-15 10:30:36","endLine":123,"groupId":"1157","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/b6/362c05e2e247a6a8500e70419390b7966cc2d7.src","preCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"8919e3838f7caf3f1254389b2faed8a6a90dadae","commitMessage":"@@@[FIX-#3177]Task time parameter parsing error (#4224)\n\n* [FIX-#3177]Task time parameter parsing error\n\nrerun schedule time error\n\nthis closes #3177\n\n* [FIX-#3177]Task time parameter parsing error\n\nrerun schedule time error\n\nthis closes #3177","date":"2020-12-15 10:30:36","modifiedFileCount":"2","status":"M","submitter":"Kirs"},{"authorTime":"2020-12-15 10:30:36","codes":[{"authorDate":"2020-12-15 16:24:31","commitOrder":10,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        Date cronTime;\n        if (parameterMap != null && !parameterMap.isEmpty()) {\n            \r\n            String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n            \r\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        } else {\n            cronTime = new Date();\n        }\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-15 16:24:31","endLine":82,"groupId":"0","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/2a/08734aab9e7fe94b26e181be4a189df0fe43da.src","preCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString) || parameterMap == null) {\n            return parameterString;\n        }\n\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n\n        Date cronTime;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-12-15 10:30:36","commitOrder":10,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-15 10:30:36","endLine":123,"groupId":"1157","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/b6/362c05e2e247a6a8500e70419390b7966cc2d7.src","preCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"d7b393620552be1216feded973333718c4440efa","commitMessage":"@@@[FIX-3177]Task time parameter parsing error (#4228)\n\n* [FIX-3177]Task time parameter parsing error\nwhen system.datetime !=null $[datetime] = system.datetime\nelse $[datetime] = current time\n\n* remove unused import","date":"2020-12-15 16:24:31","modifiedFileCount":"2","status":"M","submitter":"Kirs"},{"authorTime":"2020-12-15 10:30:36","codes":[{"authorDate":"2020-12-21 15:54:40","commitOrder":11,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        Date cronTime;\n        if (parameterMap != null && !parameterMap.isEmpty()) {\n            \r\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n        if (parameterMap != null && null != parameterMap.get(Constants.PARAMETER_DATETIME)) {\n            \r\n            String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-21 15:54:40","endLine":84,"groupId":"1156","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/03/4217ef8215e5de90ca25dd4c70db53fcea11ab.src","preCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        Date cronTime;\n        if (parameterMap != null && !parameterMap.isEmpty()) {\n            \r\n            String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n            \r\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        } else {\n            cronTime = new Date();\n        }\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-12-15 10:30:36","commitOrder":11,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-15 10:30:36","endLine":123,"groupId":"1157","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/b6/362c05e2e247a6a8500e70419390b7966cc2d7.src","preCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"55447348ed654f2a3d4f77efdf15212dc57eaa36","commitMessage":"@@@Merge pull request #4237 from CalvinKirs/fix_date_convert_null\n\n[FIX-3177]Task time parameter parsing error","date":"2020-12-21 15:54:40","modifiedFileCount":"3","status":"M","submitter":"xingchun-chen"},{"authorTime":"2021-09-11 11:27:42","codes":[{"authorDate":"2020-12-21 15:54:40","commitOrder":12,"curCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        Date cronTime;\n        if (parameterMap != null && !parameterMap.isEmpty()) {\n            \r\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n        if (parameterMap != null && null != parameterMap.get(Constants.PARAMETER_DATETIME)) {\n            \r\n            String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2020-12-21 15:54:40","endLine":84,"groupId":"10232","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"convertParameterPlaceholders","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/03/4217ef8215e5de90ca25dd4c70db53fcea11ab.src","preCode":"    public static String convertParameterPlaceholders(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        Date cronTime;\n        if (parameterMap != null && !parameterMap.isEmpty()) {\n            \r\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n        if (parameterMap != null && null != parameterMap.get(Constants.PARAMETER_DATETIME)) {\n            \r\n            String cronTimeStr = parameterMap.get(Constants.PARAMETER_DATETIME);\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n        } else {\n            cronTime = new Date();\n        }\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-09-11 11:27:42","commitOrder":12,"curCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (!StringUtils.isEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","date":"2021-09-11 11:27:42","endLine":121,"groupId":"10232","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"convertParameterPlaceholders2","params":"(StringparameterString@Map<String@String>parameterMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/8a/a6f80379e517f8ae7f8f106581e8ab03bf20d5.src","preCode":"    public static String convertParameterPlaceholders2(String parameterString, Map<String, String> parameterMap) {\n        if (StringUtils.isEmpty(parameterString)) {\n            return parameterString;\n        }\n        \r\n        String cronTimeStr = parameterMap.get(Constants.PARAMETER_SHECDULE_TIME);\n        Date cronTime = null;\n\n        if (StringUtils.isNotEmpty(cronTimeStr)) {\n            cronTime = DateUtils.parse(cronTimeStr, Constants.PARAMETER_FORMAT_TIME);\n\n        } else {\n            cronTime = new Date();\n        }\n\n        \r\n        if (!parameterMap.isEmpty()) {\n            parameterString = PlaceholderUtils.replacePlaceholders(parameterString, parameterMap, true);\n        }\n\n        \r\n        if (cronTime != null) {\n            return dateTemplateParse(parameterString, cronTime);\n        }\n        return parameterString;\n    }\n","realPath":"dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ParameterUtils.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"ea2a9dbcb2ca3f4be2da6a4f300e988640e72219","commitMessage":"@@@Clean up third-party files that are not mentioned in LICENSE (#6165)\n\n","date":"2021-09-11 11:27:42","modifiedFileCount":"100","status":"M","submitter":"kezhenxu94"}]
