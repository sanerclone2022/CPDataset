[{"authorTime":"2019-12-30 17:24:34","codes":[{"authorDate":"2019-12-30 17:24:34","commitOrder":1,"curCode":"    public void testCreateTenant(){\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result = tenantService.createTenant(getLoginUser(), \"%!1111\", tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n        } catch (Exception e) {\n          logger.error(\"create tenant error\",e);\n          Assert.assertTrue(false);\n        }\n    }\n","date":"2019-12-30 17:24:34","endLine":92,"groupId":"2492","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/31/c8c0222d9a0c3cf6d2f2f73c4f2ff2fd1a2030.src","preCode":"    public void testCreateTenant(){\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result = tenantService.createTenant(getLoginUser(), \"%!1111\", tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n        } catch (Exception e) {\n          logger.error(\"create tenant error\",e);\n          Assert.assertTrue(false);\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2019-12-30 17:24:34","commitOrder":1,"curCode":"    public void testUpdateTenant(){\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result = tenantService.updateTenant(getLoginUser(), 912222, tenantCode, tenantName, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST,result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, \"TenantServiceTest001\", 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\",e);\n            Assert.assertTrue(false);\n        }\n\n    }\n","date":"2019-12-30 17:24:34","endLine":126,"groupId":"1554","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/31/c8c0222d9a0c3cf6d2f2f73c4f2ff2fd1a2030.src","preCode":"    public void testUpdateTenant(){\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result = tenantService.updateTenant(getLoginUser(), 912222, tenantCode, tenantName, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST,result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, \"TenantServiceTest001\", 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\",e);\n            Assert.assertTrue(false);\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"}],"commitId":"503be5f4007cc05bdcab268eb6f63c5cd72344fb","commitMessage":"@@@add service UT (#1637)\n\n* User update  not check params\n\n* user phone update when noteEmpty\n\n* modify saveWorkerGroup may NPE\n\n* add some service UT\n\n* add  service ut include\n","date":"2019-12-30 17:24:34","modifiedFileCount":"3","status":"B","submitter":"samz406"},{"authorTime":"2020-08-25 09:56:41","codes":[{"authorDate":"2020-08-25 09:56:41","commitOrder":2,"curCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.createTenant(getLoginUser(), \"%!1111\", tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","date":"2020-08-25 09:56:41","endLine":104,"groupId":"2492","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/5d/cf59cf74cdb5875f5c84b81db313341b1aa15c.src","preCode":"    public void testCreateTenant(){\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result = tenantService.createTenant(getLoginUser(), \"%!1111\", tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n            \n        } catch (Exception e) {\n          logger.error(\"create tenant error\",e);\n          Assert.assertTrue(false);\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-08-25 09:56:41","commitOrder":2,"curCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, tenantName, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, \"TenantServiceTest001\", 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","date":"2020-08-25 09:56:41","endLine":141,"groupId":"1554","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/5d/cf59cf74cdb5875f5c84b81db313341b1aa15c.src","preCode":"    public void testUpdateTenant(){\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result = tenantService.updateTenant(getLoginUser(), 912222, tenantCode, tenantName, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST,result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, \"TenantServiceTest001\", 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS,result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\",e);\n            Assert.assertTrue(false);\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"c003cd133d80d996120c2dc8eeba863a1b63020e","commitMessage":"@@@[Improvement-3369][api] Introduce tenant service interface for clear code (#3420)\n\n* [Improvement][api] Introduce tenant service interface for clear code\n\n* Checkstyle\n\n* Checkstyle","date":"2020-08-25 09:56:41","modifiedFileCount":"3","status":"M","submitter":"Yichao Yang"},{"authorTime":"2020-10-30 12:18:00","codes":[{"authorDate":"2020-10-30 12:18:00","commitOrder":3,"curCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","date":"2020-10-30 12:18:00","endLine":102,"groupId":"2492","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/86/b2079f2654762ae3d9f43654fc91e8ee22428a.src","preCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.createTenant(getLoginUser(), \"%!1111\", tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, tenantName, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-10-30 12:18:00","commitOrder":3,"curCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","date":"2020-10-30 12:18:00","endLine":139,"groupId":"1978","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/86/b2079f2654762ae3d9f43654fc91e8ee22428a.src","preCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, tenantName, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, \"TenantServiceTest001\", 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"c7b5956c5af37683344c91777626087e0b5c072a","commitMessage":"@@@[Feature-3941][ui] Remove tenant name  (#3949)\n\n* FeatureUI-3941: Removed Tenant\n\n* FeatureUI-3941: Removed tenantName in the suggested pages\n\n* FeatureUI-3941: Updated the suggested files\n\n* FeatureUI-3941: Updated the TenantController\n\n* FeatureUI-3941: Updated the TenantController and the pom.xml\n\n* FeatureUI-3941: Updated the TenantControllerTest","date":"2020-10-30 12:18:00","modifiedFileCount":"14","status":"M","submitter":"IamMujuziMoses"},{"authorTime":"2020-10-30 12:18:00","codes":[{"authorDate":"2021-01-05 09:32:19","commitOrder":4,"curCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_OS_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","date":"2021-01-05 09:32:19","endLine":102,"groupId":"2492","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/53/10eabc1c7f50eba9e7f28b688d1b52de29da62.src","preCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-10-30 12:18:00","commitOrder":4,"curCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","date":"2020-10-30 12:18:00","endLine":139,"groupId":"1978","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/86/b2079f2654762ae3d9f43654fc91e8ee22428a.src","preCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"9c226435e377e055c64c4c5586a2fcd426ca61af","commitMessage":"@@@[Feature-4318][API] Rename tenant code (#4320)\n\nRename tenant code\nRename tenant code (English version)\nRname tenant name in ui label\nRname TENANT_CODE_EXIST to OS_TENANT_CODE_EXIST\nRname enum  TENANT_CODE_* to OS_TENANT_CODE_*","date":"2021-01-05 09:32:19","modifiedFileCount":"5","status":"M","submitter":"guohaozhang"},{"authorTime":"2020-10-30 12:18:00","codes":[{"authorDate":"2021-03-18 22:49:12","commitOrder":5,"curCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.existTenant(tenantCode)).thenReturn(true);\n        try {\n            \r\n            Map<String, Object> result =\n                tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_OS_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.OS_TENANT_CODE_EXIST, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","date":"2021-03-18 22:49:12","endLine":104,"groupId":"1976","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/ee/85d260cc7a8393650f2226f9a44b5ec2794ad6.src","preCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.queryByTenantCode(tenantCode)).thenReturn(getList());\n        try {\n            \r\n            Map<String, Object> result =\n                tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_OS_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-10-30 12:18:00","commitOrder":5,"curCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","date":"2020-10-30 12:18:00","endLine":139,"groupId":"1978","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/86/b2079f2654762ae3d9f43654fc91e8ee22428a.src","preCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"086e71644163a0bb44e4bd1c5f7f16abc383ab1a","commitMessage":"@@@[Improvement][Dao] SQL optimization - check exist #5069 (#5070)\n\n","date":"2021-03-18 22:49:12","modifiedFileCount":"24","status":"M","submitter":"wenjun"},{"authorTime":"2020-10-30 12:18:00","codes":[{"authorDate":"2021-04-01 20:50:14","commitOrder":6,"curCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.existTenant(tenantCode)).thenReturn(true);\n        try {\n            \r\n            Map<String, Object> result =\n                tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.CHECK_OS_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.OS_TENANT_CODE_EXIST, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","date":"2021-04-01 20:50:14","endLine":104,"groupId":"10422","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/88/89fa6b07be8da7ea4b81ff999c1233c78bdc2e.src","preCode":"    public void testCreateTenant() {\n\n        User loginUser = getLoginUser();\n        Mockito.when(tenantMapper.existTenant(tenantCode)).thenReturn(true);\n        try {\n            \r\n            Map<String, Object> result =\n                tenantService.createTenant(getLoginUser(), \"%!1111\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.VERIFY_OS_TENANT_CODE_ERROR, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, tenantCode, 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.OS_TENANT_CODE_EXIST, result.get(Constants.STATUS));\n\n            \r\n            result = tenantService.createTenant(loginUser, \"test\", 1, \"TenantServiceTest\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n\n        } catch (Exception e) {\n            logger.error(\"create tenant error\", e);\n            Assert.fail();\n        }\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-10-30 12:18:00","commitOrder":6,"curCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","date":"2020-10-30 12:18:00","endLine":139,"groupId":"10422","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateTenant","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/86/b2079f2654762ae3d9f43654fc91e8ee22428a.src","preCode":"    public void testUpdateTenant() {\n\n        Mockito.when(tenantMapper.queryById(1)).thenReturn(getTenant());\n        try {\n            \r\n            Map<String, Object> result =\n                    tenantService.updateTenant(getLoginUser(), 912222, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            \r\n            Assert.assertEquals(Status.TENANT_NOT_EXIST, result.get(Constants.STATUS));\n            result = tenantService.updateTenant(getLoginUser(), 1, tenantCode, 1, \"desc\");\n            logger.info(result.toString());\n            Assert.assertEquals(Status.SUCCESS, result.get(Constants.STATUS));\n        } catch (Exception e) {\n            logger.error(\"update tenant error\", e);\n            Assert.fail();\n        }\n\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/TenantServiceTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"5d7dc1cb2aff2147b09b13ed002cbe54f3478a2c","commitMessage":"@@@[Improvement][API]optimize tenant code validation (#5093)\n\n* optimize tenant code validation\n\n* fix code style and test err\n\n* fix test error.  and remove duplicate tenant code validate","date":"2021-04-01 20:50:14","modifiedFileCount":"5","status":"M","submitter":"Hayden Zhou"}]
