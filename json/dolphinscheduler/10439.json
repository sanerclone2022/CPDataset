[{"authorTime":"2020-08-13 15:37:46","codes":[{"authorDate":"2020-08-13 15:37:46","commitOrder":1,"curCode":"    public void testBatchCopyProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user,projectName,id,targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectName,id,targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","date":"2020-08-13 15:37:46","endLine":197,"groupId":"3190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBatchCopyProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/ab/0a3ce1f7cfc41046c2be518a8cbd6593da4640.src","preCode":"    public void testBatchCopyProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user,projectName,id,targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectName,id,targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"},{"authorDate":"2020-08-13 15:37:46","commitOrder":1,"curCode":"    public void testBatchMoveProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user,projectName,id,targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectName,id,targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","date":"2020-08-13 15:37:46","endLine":213,"groupId":"3190","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBatchMoveProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/ab/0a3ce1f7cfc41046c2be518a8cbd6593da4640.src","preCode":"    public void testBatchMoveProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user,projectName,id,targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectName,id,targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(),response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"46ab86d6dff94827bd265965f0c70b4f9c979868","commitMessage":"@@@batch copy or move process #2753 (#2884)\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process sovle code smell\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* batch copy or move process\n\n* Roll back the package.json file\n\n* rerun test\n\n* revert blank\n\n* resolve conflicts\n\n* resolve conflicts\n\n* resolve ut error\n\n* resolve sonar error\n\nCo-authored-by: sunchaohe <sunzhaohe@linklogis.com>\nCo-authored-by: dailidong <dailidong66@gmail.com>","date":"2020-08-13 15:37:46","modifiedFileCount":"28","status":"B","submitter":"zixi0825"},{"authorTime":"2021-06-22 01:47:24","codes":[{"authorDate":"2021-06-22 01:47:24","commitOrder":2,"curCode":"    public void testBatchCopyProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-06-22 01:47:24","endLine":207,"groupId":"3190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBatchCopyProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/40/955cab6ab1c393bfa640df2537d4d01553ccbe.src","preCode":"    public void testBatchCopyProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(), response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2021-06-22 01:47:24","commitOrder":2,"curCode":"    public void testBatchMoveProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-06-22 01:47:24","endLine":223,"groupId":"3190","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBatchMoveProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/40/955cab6ab1c393bfa640df2537d4d01553ccbe.src","preCode":"    public void testBatchMoveProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertEquals(Status.SUCCESS.getCode(), response.getCode().intValue());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"e628e4e8fdc72f0362449a78870493789450b284","commitMessage":"@@@[Improvement][API] Simplify the Check of Result by introducing several new methods. (#5666)\n\n","date":"2021-06-22 01:47:24","modifiedFileCount":"31","status":"M","submitter":"kyoty"},{"authorTime":"2021-09-08 13:26:00","codes":[{"authorDate":"2021-09-08 13:26:00","commitOrder":3,"curCode":"    public void testBatchCopyProcessDefinition() {\n        long projectCode = 1L;\n        long targetProjectCode = 2L;\n        String code = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user, projectCode, code, targetProjectCode)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectCode, code, targetProjectCode);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-09-08 13:26:00","endLine":217,"groupId":"10439","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testBatchCopyProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/47/37c2f8f8627ae24c41181891340ca657196956.src","preCode":"    public void testBatchCopyProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchCopyProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.copyProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"},{"authorDate":"2021-09-08 13:26:00","commitOrder":3,"curCode":"    public void testBatchMoveProcessDefinition() {\n        long projectCode = 1L;\n        long targetProjectCode = 2L;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user, projectCode, id, targetProjectCode)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectCode, id, targetProjectCode);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","date":"2021-09-08 13:26:00","endLine":232,"groupId":"10439","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testBatchMoveProcessDefinition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dolphinscheduler-10-0.7/blobInfo/CC_OUT/blobs/47/37c2f8f8627ae24c41181891340ca657196956.src","preCode":"    public void testBatchMoveProcessDefinition() throws Exception {\n\n        String projectName = \"test\";\n        int targetProjectId = 2;\n        String id = \"1\";\n\n        Map<String, Object> result = new HashMap<>();\n        putMsg(result, Status.SUCCESS);\n\n        Mockito.when(processDefinitionService.batchMoveProcessDefinition(user, projectName, id, targetProjectId)).thenReturn(result);\n        Result response = processDefinitionController.moveProcessDefinition(user, projectName, id, targetProjectId);\n\n        Assert.assertTrue(response != null && response.isSuccess());\n    }\n","realPath":"dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProcessDefinitionControllerTest.java","repoName":"dolphinscheduler","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"}],"commitId":"1f838e61026fab1db479754b64c9b15690b1a80b","commitMessage":"@@@Merge pull request #6124 from apache/json_split_two\n\n[Feature][JsonSplit-api] api module controller design","date":"2021-09-08 13:26:00","modifiedFileCount":"129","status":"M","submitter":"David"}]
