[{"authorTime":"2019-01-02 00:58:31","codes":[{"authorDate":"2019-01-02 00:58:31","commitOrder":1,"curCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(infoTable);\n        menuMgr.addMenuListener(new IMenuListener() {\n            @Override\n            public void menuAboutToShow(IMenuManager manager)\n            {\n                IAction copyAction = new Action(WorkbenchMessages.Workbench_copy) {\n                    @Override\n                    public void run()\n                    {\n                        copySelectionToClipboard();\n                    }\n                };\n                copyAction.setEnabled(infoTable.getSelectionCount() > 0);\n                copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n                IAction selectAllAction = new Action(WorkbenchMessages.Workbench_selectAll) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.selectAll();\n                    }\n                };\n                selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n                IAction clearLogAction = new Action(WorkbenchMessages.Workbench_revert) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.removeAll();\n                    }\n                };\n\n                manager.add(copyAction);\n                manager.add(selectAllAction);\n                manager.add(clearLogAction);\n                \r\n            }\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        infoTable.setMenu(menu);\n    }\n","date":"2019-01-02 00:58:39","endLine":191,"groupId":"4196","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createContextMenu","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/63/0bd8b43ceb2fb1501a736ac8b67589b2adc390.src","preCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(infoTable);\n        menuMgr.addMenuListener(new IMenuListener() {\n            @Override\n            public void menuAboutToShow(IMenuManager manager)\n            {\n                IAction copyAction = new Action(WorkbenchMessages.Workbench_copy) {\n                    @Override\n                    public void run()\n                    {\n                        copySelectionToClipboard();\n                    }\n                };\n                copyAction.setEnabled(infoTable.getSelectionCount() > 0);\n                copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n                IAction selectAllAction = new Action(WorkbenchMessages.Workbench_selectAll) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.selectAll();\n                    }\n                };\n                selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n                IAction clearLogAction = new Action(WorkbenchMessages.Workbench_revert) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.removeAll();\n                    }\n                };\n\n                manager.add(copyAction);\n                manager.add(selectAllAction);\n                manager.add(clearLogAction);\n                \r\n            }\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        infoTable.setMenu(menu);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/controls/ObjectCompilerLogViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2019-01-02 00:58:31","commitOrder":1,"curCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(logTable);\n        menuMgr.addMenuListener(manager -> {\n            IAction editorAction = new Action(\"Open in SQL console\", DBeaverIcons.getImageDescriptor(UIIcon.SQL_CONSOLE)) {\n                @Override\n                public void run()\n                {\n                    openSelectionInEditor();\n                }\n            };\n            IAction copyAction = new Action(SQLEditorMessages.controls_querylog_action_copy) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(false);\n                }\n            };\n            copyAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n            IAction copyAllAction = new Action(SQLEditorMessages.controls_querylog_action_copy_all_fields) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(true);\n                }\n            };\n            copyAllAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAllAction.setActionDefinitionId(IActionConstants.CMD_COPY_SPECIAL);\n\n            IAction selectAllAction = new Action(SQLEditorMessages.controls_querylog_action_select_all) {\n                @Override\n                public void run()\n                {\n                    selectAll();\n                }\n            };\n            selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n            IAction clearLogAction = new Action(SQLEditorMessages.controls_querylog_action_clear_log) {\n                @Override\n                public void run()\n                {\n                    clearLog();\n                }\n            };\n\n            boolean hasStatements = false;\n            for (TableItem item : logTable.getSelection()) {\n                if (((QMMetaEvent)item.getData()).getObject() instanceof QMMStatementExecuteInfo) {\n                    hasStatements = true;\n                    break;\n                }\n            }\n            if (hasStatements) {\n                manager.add(editorAction);\n                manager.add(new Separator());\n            }\n            manager.add(copyAction);\n            manager.add(copyAllAction);\n            manager.add(selectAllAction);\n            manager.add(clearLogAction);\n            manager.add(ActionUtils.makeCommandContribution(site, IWorkbenchCommandConstants.FILE_REFRESH));\n            \r\n\n            manager.add(new Separator());\n            createFiltersMenu(manager);\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        logTable.setMenu(menu);\n        site.registerContextMenu(menuMgr, this);\n    }\n","date":"2019-01-02 00:58:39","endLine":832,"groupId":"15428","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createContextMenu","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3f/9d66da6cd9cfcf010318372184f6428c129806.src","preCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(logTable);\n        menuMgr.addMenuListener(manager -> {\n            IAction editorAction = new Action(\"Open in SQL console\", DBeaverIcons.getImageDescriptor(UIIcon.SQL_CONSOLE)) {\n                @Override\n                public void run()\n                {\n                    openSelectionInEditor();\n                }\n            };\n            IAction copyAction = new Action(SQLEditorMessages.controls_querylog_action_copy) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(false);\n                }\n            };\n            copyAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n            IAction copyAllAction = new Action(SQLEditorMessages.controls_querylog_action_copy_all_fields) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(true);\n                }\n            };\n            copyAllAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAllAction.setActionDefinitionId(IActionConstants.CMD_COPY_SPECIAL);\n\n            IAction selectAllAction = new Action(SQLEditorMessages.controls_querylog_action_select_all) {\n                @Override\n                public void run()\n                {\n                    selectAll();\n                }\n            };\n            selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n            IAction clearLogAction = new Action(SQLEditorMessages.controls_querylog_action_clear_log) {\n                @Override\n                public void run()\n                {\n                    clearLog();\n                }\n            };\n\n            boolean hasStatements = false;\n            for (TableItem item : logTable.getSelection()) {\n                if (((QMMetaEvent)item.getData()).getObject() instanceof QMMStatementExecuteInfo) {\n                    hasStatements = true;\n                    break;\n                }\n            }\n            if (hasStatements) {\n                manager.add(editorAction);\n                manager.add(new Separator());\n            }\n            manager.add(copyAction);\n            manager.add(copyAllAction);\n            manager.add(selectAllAction);\n            manager.add(clearLogAction);\n            manager.add(ActionUtils.makeCommandContribution(site, IWorkbenchCommandConstants.FILE_REFRESH));\n            \r\n\n            manager.add(new Separator());\n            createFiltersMenu(manager);\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        logTable.setMenu(menu);\n        site.registerContextMenu(menuMgr, this);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/controls/querylog/QueryLogViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"B"}],"commitId":"122d96ca0daff453e6ccce656329afb1f05ecf01","commitMessage":"@@@#10 SQL Editor extraction: move to ui.editors.sql\n\n\nFormer-commit-id: a135dc627bed016455958463f27af6623e19fdce","date":"2019-01-02 00:58:39","modifiedFileCount":"22","status":"B","submitter":"serge-rider"},{"authorTime":"2019-01-02 00:58:31","codes":[{"authorDate":"2019-02-09 04:56:42","commitOrder":2,"curCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(infoTable);\n        menuMgr.addMenuListener(manager -> {\n            IAction copyAction = new Action(WorkbenchMessages.Workbench_copy) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard();\n                }\n            };\n            copyAction.setEnabled(infoTable.getSelectionCount() > 0);\n            copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n            IAction selectAllAction = new Action(WorkbenchMessages.Workbench_selectAll) {\n                @Override\n                public void run()\n                {\n                    infoTable.selectAll();\n                }\n            };\n            selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n            IAction clearLogAction = new Action(WorkbenchMessages.Workbench_revert) {\n                @Override\n                public void run()\n                {\n                    infoTable.removeAll();\n                }\n            };\n\n            manager.add(copyAction);\n            manager.add(selectAllAction);\n            manager.add(clearLogAction);\n            \r\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        infoTable.setMenu(menu);\n        infoTable.addDisposeListener(e -> menuMgr.dispose());\n    }\n","date":"2019-02-09 04:56:42","endLine":188,"groupId":"10701","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createContextMenu","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3e/eea475dfc9041d849b77906f015c40fa9a4e23.src","preCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(infoTable);\n        menuMgr.addMenuListener(new IMenuListener() {\n            @Override\n            public void menuAboutToShow(IMenuManager manager)\n            {\n                IAction copyAction = new Action(WorkbenchMessages.Workbench_copy) {\n                    @Override\n                    public void run()\n                    {\n                        copySelectionToClipboard();\n                    }\n                };\n                copyAction.setEnabled(infoTable.getSelectionCount() > 0);\n                copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n                IAction selectAllAction = new Action(WorkbenchMessages.Workbench_selectAll) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.selectAll();\n                    }\n                };\n                selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n                IAction clearLogAction = new Action(WorkbenchMessages.Workbench_revert) {\n                    @Override\n                    public void run()\n                    {\n                        infoTable.removeAll();\n                    }\n                };\n\n                manager.add(copyAction);\n                manager.add(selectAllAction);\n                manager.add(clearLogAction);\n                \r\n            }\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        infoTable.setMenu(menu);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/controls/ObjectCompilerLogViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-01-02 00:58:31","commitOrder":2,"curCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(logTable);\n        menuMgr.addMenuListener(manager -> {\n            IAction editorAction = new Action(\"Open in SQL console\", DBeaverIcons.getImageDescriptor(UIIcon.SQL_CONSOLE)) {\n                @Override\n                public void run()\n                {\n                    openSelectionInEditor();\n                }\n            };\n            IAction copyAction = new Action(SQLEditorMessages.controls_querylog_action_copy) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(false);\n                }\n            };\n            copyAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n            IAction copyAllAction = new Action(SQLEditorMessages.controls_querylog_action_copy_all_fields) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(true);\n                }\n            };\n            copyAllAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAllAction.setActionDefinitionId(IActionConstants.CMD_COPY_SPECIAL);\n\n            IAction selectAllAction = new Action(SQLEditorMessages.controls_querylog_action_select_all) {\n                @Override\n                public void run()\n                {\n                    selectAll();\n                }\n            };\n            selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n            IAction clearLogAction = new Action(SQLEditorMessages.controls_querylog_action_clear_log) {\n                @Override\n                public void run()\n                {\n                    clearLog();\n                }\n            };\n\n            boolean hasStatements = false;\n            for (TableItem item : logTable.getSelection()) {\n                if (((QMMetaEvent)item.getData()).getObject() instanceof QMMStatementExecuteInfo) {\n                    hasStatements = true;\n                    break;\n                }\n            }\n            if (hasStatements) {\n                manager.add(editorAction);\n                manager.add(new Separator());\n            }\n            manager.add(copyAction);\n            manager.add(copyAllAction);\n            manager.add(selectAllAction);\n            manager.add(clearLogAction);\n            manager.add(ActionUtils.makeCommandContribution(site, IWorkbenchCommandConstants.FILE_REFRESH));\n            \r\n\n            manager.add(new Separator());\n            createFiltersMenu(manager);\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        logTable.setMenu(menu);\n        site.registerContextMenu(menuMgr, this);\n    }\n","date":"2019-01-02 00:58:39","endLine":832,"groupId":"10701","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createContextMenu","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3f/9d66da6cd9cfcf010318372184f6428c129806.src","preCode":"    private void createContextMenu()\n    {\n        MenuManager menuMgr = new MenuManager();\n        Menu menu = menuMgr.createContextMenu(logTable);\n        menuMgr.addMenuListener(manager -> {\n            IAction editorAction = new Action(\"Open in SQL console\", DBeaverIcons.getImageDescriptor(UIIcon.SQL_CONSOLE)) {\n                @Override\n                public void run()\n                {\n                    openSelectionInEditor();\n                }\n            };\n            IAction copyAction = new Action(SQLEditorMessages.controls_querylog_action_copy) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(false);\n                }\n            };\n            copyAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);\n\n            IAction copyAllAction = new Action(SQLEditorMessages.controls_querylog_action_copy_all_fields) {\n                @Override\n                public void run()\n                {\n                    copySelectionToClipboard(true);\n                }\n            };\n            copyAllAction.setEnabled(logTable.getSelectionCount() > 0);\n            copyAllAction.setActionDefinitionId(IActionConstants.CMD_COPY_SPECIAL);\n\n            IAction selectAllAction = new Action(SQLEditorMessages.controls_querylog_action_select_all) {\n                @Override\n                public void run()\n                {\n                    selectAll();\n                }\n            };\n            selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);\n\n            IAction clearLogAction = new Action(SQLEditorMessages.controls_querylog_action_clear_log) {\n                @Override\n                public void run()\n                {\n                    clearLog();\n                }\n            };\n\n            boolean hasStatements = false;\n            for (TableItem item : logTable.getSelection()) {\n                if (((QMMetaEvent)item.getData()).getObject() instanceof QMMStatementExecuteInfo) {\n                    hasStatements = true;\n                    break;\n                }\n            }\n            if (hasStatements) {\n                manager.add(editorAction);\n                manager.add(new Separator());\n            }\n            manager.add(copyAction);\n            manager.add(copyAllAction);\n            manager.add(selectAllAction);\n            manager.add(clearLogAction);\n            manager.add(ActionUtils.makeCommandContribution(site, IWorkbenchCommandConstants.FILE_REFRESH));\n            \r\n\n            manager.add(new Separator());\n            createFiltersMenu(manager);\n        });\n        menuMgr.setRemoveAllWhenShown(true);\n        logTable.setMenu(menu);\n        site.registerContextMenu(menuMgr, this);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/controls/querylog/QueryLogViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"N"}],"commitId":"fa1dd08e22813d30df8c4270a097550a33e01535","commitMessage":"@@@UI fixes: menu managers dispose\n\n\nFormer-commit-id: 7e27df4cebc1a0ab47a912444eb3c9a7b8014c9d","date":"2019-02-09 04:56:42","modifiedFileCount":"13","status":"M","submitter":"serge-rider"}]
