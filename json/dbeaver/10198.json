[{"authorTime":"2018-05-13 05:33:14","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":3,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2017-03-19 19:41:06","endLine":594,"groupId":"1804","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"NB"},{"authorDate":"2018-05-13 05:33:14","commitOrder":3,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2018-05-13 05:33:14","endLine":420,"groupId":"15476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/dd/67cafbf71644a8e9ceeae4a33735a4bbd47fc8.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"B"}],"commitId":"5d9b5f074f29d355d4d90d658d4d1ebfb2b9896f","commitMessage":"@@@#3322 Async server output reading\n\n\nFormer-commit-id: 54122f0e93156f2c412585c71e48664ab31fb96c","date":"2018-05-13 05:33:14","modifiedFileCount":"6","status":"M","submitter":"serge-rider"},{"authorTime":"2018-10-13 20:06:58","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":4,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2017-03-19 19:41:06","endLine":594,"groupId":"1804","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"N"},{"authorDate":"2018-10-13 20:06:58","commitOrder":4,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2018-10-13 20:06:58","endLine":407,"groupId":"15476","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/85/7bc3c2d97e39d4ea5566276574e175189e5ffc.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"}],"commitId":"51c8ddf4ec4daa621c3feff34d120e934633a6ac","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 17f886546eced0902561199e308934e6d98952a0","date":"2018-10-13 20:06:58","modifiedFileCount":"410","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-04-05 02:17:59","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":5,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2017-03-19 19:41:06","endLine":594,"groupId":"1804","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"N"},{"authorDate":"2019-04-05 02:17:59","commitOrder":5,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-04-05 02:17:59","endLine":389,"groupId":"15476","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/0b53d453691b427c67160dce9433e615e887a9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"}],"commitId":"7a72928c1b9296d2a8b420c156535bcac6dfafe9","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 267a18d637bacb39dcd1f330babdea4054141ada","date":"2019-04-05 02:17:59","modifiedFileCount":"36","status":"M","submitter":"serge-rider"},{"authorTime":"2019-04-05 02:17:59","codes":[{"authorDate":"2019-05-02 06:07:31","commitOrder":6,"curCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return true;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-05-02 06:07:31","endLine":633,"groupId":"1804","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0e/a187b74dd4f1828069fb036a459099643143ae.src","preCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":610,"status":"M"},{"authorDate":"2019-04-05 02:17:59","commitOrder":6,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-04-05 02:17:59","endLine":389,"groupId":"15476","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/0b53d453691b427c67160dce9433e615e887a9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"16057e26a757d880dc57e6788af497a9a57ffedc","commitMessage":"@@@#5832 Lat/lon coordinates flipping fix (make it implicit)\n\n\nFormer-commit-id: e5b4f3f3238a03e5833ef2f3c0b30a1d4d0c8d28","date":"2019-05-02 06:07:31","modifiedFileCount":"7","status":"M","submitter":"serge-rider"},{"authorTime":"2019-04-05 02:17:59","codes":[{"authorDate":"2019-06-02 23:48:00","commitOrder":7,"curCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return true;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-06-02 23:48:00","endLine":621,"groupId":"1804","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6c/f3a28821183373b54ee3f738717647f3dc93ca.src","preCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return true;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"},{"authorDate":"2019-04-05 02:17:59","commitOrder":7,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-04-05 02:17:59","endLine":389,"groupId":"15476","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/0b53d453691b427c67160dce9433e615e887a9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"da5bfe6226064eb16f36b1991269a4dccc8cfde0","commitMessage":"@@@Execution plans load/save refactoring\n\n\nFormer-commit-id: 89bc76c2415b983b83940477033964cc7cef615a","date":"2019-06-02 23:48:00","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2019-04-05 02:17:59","codes":[{"authorDate":"2019-06-03 02:04:38","commitOrder":8,"curCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return false;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-06-03 02:04:38","endLine":621,"groupId":"1804","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/22/e4578ff4a450e27415305b16eaf3ac07aec274.src","preCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return true;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"},{"authorDate":"2019-04-05 02:17:59","commitOrder":8,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-04-05 02:17:59","endLine":389,"groupId":"15476","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/0b53d453691b427c67160dce9433e615e887a9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"d402d90a142d4ddd480abf40d0b4a94cdb4d075c","commitMessage":"@@@#6030 MySQL: gis coords invert fix\n\n\nFormer-commit-id: e1bc341cd0dc446c39fc53320b38798a7563dae1","date":"2019-06-03 02:04:38","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2019-04-05 02:17:59","codes":[{"authorDate":"2019-07-26 23:07:19","commitOrder":9,"curCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return false;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.SRID_4326;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-07-26 23:07:19","endLine":621,"groupId":"1804","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6f/9f599ebce0ba9f002c4b6215ea913c3d48812a.src","preCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return false;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.DEFAULT_SRID;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"},{"authorDate":"2019-04-05 02:17:59","commitOrder":9,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-04-05 02:17:59","endLine":389,"groupId":"15476","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/0b53d453691b427c67160dce9433e615e887a9.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"2d7c3faa6ab64639f8f96b15a828874cecaff809","commitMessage":"@@@#6190 GIS viewer: Simple (flat surface) projection support. Projections detection fixed.\n\n\nFormer-commit-id: a70e9510fd7e6d321b153585a1044802f53b61a5","date":"2019-07-26 23:07:19","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-05-25 16:29:40","codes":[{"authorDate":"2019-07-26 23:07:19","commitOrder":10,"curCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return false;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.SRID_4326;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2019-07-26 23:07:19","endLine":621,"groupId":"10198","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6f/9f599ebce0ba9f002c4b6215ea913c3d48812a.src","preCode":"    public <T> T getAdapter(Class<T> adapter) {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new MySQLStructureAssistant(this));\n        } else if (adapter == SQLHelpProvider.class) {\n            if (helpProvider == null) {\n                helpProvider = new MySQLHelpProvider(this);\n            }\n            return adapter.cast(helpProvider);\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new MySQLSessionManager(this));\n        } else if (adapter == SpatialDataProvider.class) {\n            return adapter.cast(new SpatialDataProvider() {\n                @Override\n                public boolean isFlipCoordinates() {\n                    return false;\n                }\n                @Override\n                public int getDefaultSRID() {\n                    return GisConstants.SRID_4326;\n                }\n            });\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new MySQLPlanAnalyser(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"N"},{"authorDate":"2021-05-25 16:29:40","commitOrder":10,"curCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        } else if (getServerType().supportsAlterUserChangePassword() && adapter == DBAUserChangePassword.class) {\n            return adapter.cast(new PostgresUserChangePassword(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","date":"2021-05-25 16:29:40","endLine":485,"groupId":"10198","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getAdapter","params":"(Class<T>adapter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/eb/c01c374a336efb0b7f5763118e3d55eb4334f4.src","preCode":"    public <T> T getAdapter(Class<T> adapter)\n    {\n        if (adapter == DBSStructureAssistant.class) {\n            return adapter.cast(new PostgreStructureAssistant(this));\n        } else if (adapter == DBCServerOutputReader.class) {\n            return adapter.cast(new AsyncServerOutputReader());\n        } else if (adapter == DBAServerSessionManager.class) {\n            return adapter.cast(new PostgreSessionManager(this));\n        } else if (adapter == DBCQueryPlanner.class) {\n            return adapter.cast(new PostgreQueryPlaner(this));\n        }\n        return super.getAdapter(adapter);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"M"}],"commitId":"5f00179a73a2f15242c3759049edd5f6be68775b","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n","date":"2021-05-25 16:29:40","modifiedFileCount":"15","status":"M","submitter":"Serge Rider"}]
