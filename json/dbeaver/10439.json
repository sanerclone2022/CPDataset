[{"authorTime":"2019-03-15 05:34:36","codes":[{"authorDate":"2020-04-28 23:26:35","commitOrder":4,"curCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            hostText.setText(CommonUtils.notEmpty(connectionInfo.getHostName()));\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            dbText.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","date":"2020-04-28 23:26:35","endLine":174,"groupId":"16365","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9b/c1f07168a33f38f691a192ce7e3ff6818f130a.src","preCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            hostText.setText(CommonUtils.notEmpty(connectionInfo.getHostName()));\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            dbText.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.db2.ui/src/org/jkiss/dbeaver/ext/db2/ui/views/DB2ConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2019-03-15 05:34:36","commitOrder":4,"curCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            if (CommonUtils.isEmpty(connectionInfo.getHostName())) {\n                hostText.setText(SnowflakeConstants.DEFAULT_HOST_PREFIX);\n            } else {\n                hostText.setText(connectionInfo.getHostName());\n            }\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            String databaseName = connectionInfo.getDatabaseName();\n            if (CommonUtils.isEmpty(databaseName)) {\n                databaseName = SnowflakeConstants.DEFAULT_DB_NAME;\n            }\n            dbText.setText(databaseName);\n        }\n        if (warehouseText != null) {\n            warehouseText.setText(CommonUtils.notEmpty(connectionInfo.getServerName()));\n        }\n        if (schemaText != null) {\n            schemaText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_SCHEMA)));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (roleText != null) {\n            roleText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_ROLE)));\n        }\n        if (authTypeCombo != null) {\n            authTypeCombo.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR)));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","date":"2019-03-15 05:34:36","endLine":250,"groupId":"9672","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/00/517a30dd4c3deeda09f88b1b493f6f307979a9.src","preCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            if (CommonUtils.isEmpty(connectionInfo.getHostName())) {\n                hostText.setText(SnowflakeConstants.DEFAULT_HOST_PREFIX);\n            } else {\n                hostText.setText(connectionInfo.getHostName());\n            }\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            String databaseName = connectionInfo.getDatabaseName();\n            if (CommonUtils.isEmpty(databaseName)) {\n                databaseName = SnowflakeConstants.DEFAULT_DB_NAME;\n            }\n            dbText.setText(databaseName);\n        }\n        if (warehouseText != null) {\n            warehouseText.setText(CommonUtils.notEmpty(connectionInfo.getServerName()));\n        }\n        if (schemaText != null) {\n            schemaText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_SCHEMA)));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (roleText != null) {\n            roleText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_ROLE)));\n        }\n        if (authTypeCombo != null) {\n            authTypeCombo.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR)));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"NB"}],"commitId":"3e6f2e86d95052d424b0ff5e3342b0a8d23f38fc","commitMessage":"@@@Merge pull request #8573 from dbeaver/ref#8562\n\n#8562 part of plugin ext.db2 moved in ext.db2.ui\n\nFormer-commit-id: 0ff5509d8baa03bd60ca816ba691baf0c1e892d2","date":"2020-04-28 23:26:35","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-03-15 05:34:36","codes":[{"authorDate":"2020-05-09 23:16:32","commitOrder":5,"curCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            hostText.setText(CommonUtils.notEmpty(connectionInfo.getHostName()));\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            dbText.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));\n        }\n    }\n","date":"2020-05-09 23:16:32","endLine":149,"groupId":"10439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/49/3e3810ecf47c89ab610a42058968de38bf0c0f.src","preCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            hostText.setText(CommonUtils.notEmpty(connectionInfo.getHostName()));\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            dbText.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.db2.ui/src/org/jkiss/dbeaver/ext/db2/ui/views/DB2ConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2019-03-15 05:34:36","commitOrder":5,"curCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            if (CommonUtils.isEmpty(connectionInfo.getHostName())) {\n                hostText.setText(SnowflakeConstants.DEFAULT_HOST_PREFIX);\n            } else {\n                hostText.setText(connectionInfo.getHostName());\n            }\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            String databaseName = connectionInfo.getDatabaseName();\n            if (CommonUtils.isEmpty(databaseName)) {\n                databaseName = SnowflakeConstants.DEFAULT_DB_NAME;\n            }\n            dbText.setText(databaseName);\n        }\n        if (warehouseText != null) {\n            warehouseText.setText(CommonUtils.notEmpty(connectionInfo.getServerName()));\n        }\n        if (schemaText != null) {\n            schemaText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_SCHEMA)));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (roleText != null) {\n            roleText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_ROLE)));\n        }\n        if (authTypeCombo != null) {\n            authTypeCombo.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR)));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","date":"2019-03-15 05:34:36","endLine":250,"groupId":"10439","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/00/517a30dd4c3deeda09f88b1b493f6f307979a9.src","preCode":"    public void loadSettings()\n    {\n        super.loadSettings();\n\n        \r\n        DBPConnectionConfiguration connectionInfo = site.getActiveDataSource().getConnectionConfiguration();\n        if (hostText != null) {\n            if (CommonUtils.isEmpty(connectionInfo.getHostName())) {\n                hostText.setText(SnowflakeConstants.DEFAULT_HOST_PREFIX);\n            } else {\n                hostText.setText(connectionInfo.getHostName());\n            }\n        }\n        if (portText != null) {\n            if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n                portText.setText(String.valueOf(connectionInfo.getHostPort()));\n            } else if (site.getDriver().getDefaultPort() != null) {\n                portText.setText(site.getDriver().getDefaultPort());\n            } else {\n                portText.setText(\"\"); \r\n            }\n        }\n        if (dbText != null) {\n            String databaseName = connectionInfo.getDatabaseName();\n            if (CommonUtils.isEmpty(databaseName)) {\n                databaseName = SnowflakeConstants.DEFAULT_DB_NAME;\n            }\n            dbText.setText(databaseName);\n        }\n        if (warehouseText != null) {\n            warehouseText.setText(CommonUtils.notEmpty(connectionInfo.getServerName()));\n        }\n        if (schemaText != null) {\n            schemaText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_SCHEMA)));\n        }\n        if (usernameText != null) {\n            usernameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));\n        }\n        if (roleText != null) {\n            roleText.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_ROLE)));\n        }\n        if (authTypeCombo != null) {\n            authTypeCombo.setText(CommonUtils.notEmpty(connectionInfo.getProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR)));\n        }\n        if (passwordText != null) {\n            passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"N"}],"commitId":"fdfc76c1763faf18965773239b5d9a5f73d8643f","commitMessage":"@@@DB2 con page refactoring (use auth page)\n\n\nFormer-commit-id: a89fdc3e03efea3803839a158e9c3a46c254633e","date":"2020-05-09 23:16:32","modifiedFileCount":"1","status":"M","submitter":"serge-rider"}]
