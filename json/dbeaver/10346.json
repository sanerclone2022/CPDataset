[{"authorTime":"2017-02-03 15:42:57","codes":[{"authorDate":"2017-04-22 17:35:04","commitOrder":2,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2017-04-22 17:35:04","endLine":211,"groupId":"1948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/06/91b08a59ae001d5c90c242e884304d3be42063.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"},{"authorDate":"2017-02-03 15:42:57","commitOrder":2,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2017-02-03 15:42:57","endLine":101,"groupId":"1420","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/79529f1e73757365de4853cf28c2fa73f6b244.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/model/SQLiteMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"NB"}],"commitId":"420802c090887528d5d2aa5bc26613d68b63489c","commitMessage":"@@@ #1596 HSQLDB triggers support\n\n\nFormer-commit-id: 7074e1107fe948f79db16ca6fb5a1f698fc32144","date":"2017-04-22 17:35:04","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-07-23 15:41:36","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":3,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-07-23 15:41:36","endLine":218,"groupId":"1948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d5/2a28dffdadba3aa9d936914412723e082e9997.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2018-07-23 15:41:36","commitOrder":3,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-07-23 15:41:36","endLine":105,"groupId":"1420","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4d/e3576b6e74c14f9be9234827cd9faf5c830d28.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container.getDataSource(), \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/model/SQLiteMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"f5dacff54df650fa052fcc6e82dac15c414085c3","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: f856da844bdb094ac789a5c775045caea0c36124","date":"2018-07-23 15:41:36","modifiedFileCount":"524","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2019-07-02 19:55:19","commitOrder":4,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2019-07-02 19:55:19","endLine":218,"groupId":"1948","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/14/042dd0cf8ab0a25f4f4ecd9df307f7f82816d0.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2019-07-02 19:55:19","commitOrder":4,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2019-07-02 19:55:19","endLine":109,"groupId":"1420","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d8/353e93ddb759fe51bdfe0377170381e90c22ee.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTable table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/model/SQLiteMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"35c8a5c86f34a9accca540a7ad7f1e5420630e9b","commitMessage":"@@@Generic model refactoring (split tables and views)\n\n\nFormer-commit-id: f967aa59fa19129394816550531b85ccb2ea7b73","date":"2019-07-02 19:55:19","modifiedFileCount":"53","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2021-06-22 02:29:23","codes":[{"authorDate":"2021-06-22 02:29:23","commitOrder":5,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-06-22 02:29:23","endLine":246,"groupId":"10346","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/18/efd5ac2d081e1e8bd0d5e377dad4510cc14f55.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"},{"authorDate":"2021-06-22 02:29:23","commitOrder":5,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTableTrigger(table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-06-22 02:29:23","endLine":131,"groupId":"10346","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/5f074a4a8b279bbf453fc8380563a0c1b4a652.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT name FROM sqlite_master WHERE type='trigger' AND tbl_name=?\")) {\n                dbStat.setString(1, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        result.add(new GenericTrigger(container, table, name, null));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/model/SQLiteMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"2518e4a91e5c228d6bef4abbf3b21f772004d581","commitMessage":"@@@Merge pull request #12885 from dbeaver/genericTriggersCache#11013\n\n#11013 add support of trigger cache for generic triggers","date":"2021-06-22 02:29:23","modifiedFileCount":"19","status":"M","submitter":"Serge Rider"}]
