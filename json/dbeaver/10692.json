[{"authorTime":"2019-01-02 00:58:31","codes":[{"authorDate":"2019-01-02 00:58:31","commitOrder":1,"curCode":"    public int findOpeningPeer(int start, int openingPeer, int closingPeer) {\n        assert (start < _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n            token = previousToken(offset, UNBOUND);\n            offset = getPosition();\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n            if (isSameToken(token, closingPeer)) {\n                depth++;\n            } else if (isSameToken(token, openingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                if (offset == -1) {\n                    return 0;\n                }\n                return offset;\n            }\n        }\n\n    }\n","date":"2019-01-02 00:58:39","endLine":450,"groupId":"5870","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findOpeningPeer","params":"(intstart@intopeningPeer@intclosingPeer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/8e2154e6246e02690177fc59769f8b08d5e885.src","preCode":"    public int findOpeningPeer(int start, int openingPeer, int closingPeer) {\n        assert (start < _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n            token = previousToken(offset, UNBOUND);\n            offset = getPosition();\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n            if (isSameToken(token, closingPeer)) {\n                depth++;\n            } else if (isSameToken(token, openingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                if (offset == -1) {\n                    return 0;\n                }\n                return offset;\n            }\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/indent/SQLHeuristicScanner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"B"},{"authorDate":"2019-01-02 00:58:31","commitOrder":1,"curCode":"    public int findClosingPeer(int start, int openingPeer, int closingPeer) {\n        assert (start <= _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n\n            token = nextToken(offset, _document.getLength());\n            offset = getPosition();\n\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n\n            if (isSameToken(token, openingPeer)) {\n                depth++;\n            } else if (isSameToken(token, closingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                return offset;\n            }\n        }\n    }\n","date":"2019-01-02 00:58:39","endLine":490,"groupId":"5870","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findClosingPeer","params":"(intstart@intopeningPeer@intclosingPeer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/8e2154e6246e02690177fc59769f8b08d5e885.src","preCode":"    public int findClosingPeer(int start, int openingPeer, int closingPeer) {\n        assert (start <= _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n\n            token = nextToken(offset, _document.getLength());\n            offset = getPosition();\n\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n\n            if (isSameToken(token, openingPeer)) {\n                depth++;\n            } else if (isSameToken(token, closingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                return offset;\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/indent/SQLHeuristicScanner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":464,"status":"B"}],"commitId":"122d96ca0daff453e6ccce656329afb1f05ecf01","commitMessage":"@@@#10 SQL Editor extraction: move to ui.editors.sql\n\n\nFormer-commit-id: a135dc627bed016455958463f27af6623e19fdce","date":"2019-01-02 00:58:39","modifiedFileCount":"22","status":"B","submitter":"serge-rider"},{"authorTime":"2019-04-10 15:02:26","codes":[{"authorDate":"2019-04-10 15:02:26","commitOrder":2,"curCode":"    public int findOpeningPeer(int start, int openingPeer, int closingPeer) {\n        assert (start < document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n            token = previousToken(offset, UNBOUND);\n            offset = getPosition();\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n            if (isSameToken(token, closingPeer)) {\n                depth++;\n            } else if (isSameToken(token, openingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                if (offset == -1) {\n                    return 0;\n                }\n                return offset;\n            }\n        }\n\n    }\n","date":"2019-04-10 15:02:26","endLine":455,"groupId":"10692","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findOpeningPeer","params":"(intstart@intopeningPeer@intclosingPeer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ac/cc069b88a8e26ca58d554acb97370a199fd51e.src","preCode":"    public int findOpeningPeer(int start, int openingPeer, int closingPeer) {\n        assert (start < _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n            token = previousToken(offset, UNBOUND);\n            offset = getPosition();\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n            if (isSameToken(token, closingPeer)) {\n                depth++;\n            } else if (isSameToken(token, openingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                if (offset == -1) {\n                    return 0;\n                }\n                return offset;\n            }\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/indent/SQLHeuristicScanner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"},{"authorDate":"2019-04-10 15:02:26","commitOrder":2,"curCode":"    public int findClosingPeer(int start, int openingPeer, int closingPeer) {\n        assert (start <= document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n\n            token = nextToken(offset, document.getLength());\n            offset = getPosition();\n\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n\n            if (isSameToken(token, openingPeer)) {\n                depth++;\n            } else if (isSameToken(token, closingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                return offset;\n            }\n        }\n    }\n","date":"2019-04-10 15:02:26","endLine":495,"groupId":"10692","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findClosingPeer","params":"(intstart@intopeningPeer@intclosingPeer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ac/cc069b88a8e26ca58d554acb97370a199fd51e.src","preCode":"    public int findClosingPeer(int start, int openingPeer, int closingPeer) {\n        assert (start <= _document.getLength());\n\n        int depth = 1;\n        start += 1;\n        int token;\n        int offset = start;\n        while (true) {\n\n            token = nextToken(offset, _document.getLength());\n            offset = getPosition();\n\n            if (token == SQLIndentSymbols.TokenEOF) {\n                return NOT_FOUND;\n            }\n\n            if (isSameToken(token, openingPeer)) {\n                depth++;\n            } else if (isSameToken(token, closingPeer)) {\n                depth--;\n            }\n\n            if (depth == 0) {\n                return offset;\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/indent/SQLHeuristicScanner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"}],"commitId":"1ad16861394c58236b94e9d02f3fe5e22269ffb6","commitMessage":"@@@#5683 SQL indenter fix\n\n\nFormer-commit-id: 0485b43cd794785566e6d379e89e3d9d794d37d7","date":"2019-04-10 15:02:26","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"}]
