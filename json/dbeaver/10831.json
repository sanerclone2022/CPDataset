[{"authorTime":"2020-03-20 17:53:08","codes":[{"authorDate":"2021-02-14 03:32:27","commitOrder":2,"curCode":"    public DatabaseTasksTree(Composite composite, boolean selector) {\n        ColorRegistry colorRegistry = UIUtils.getActiveWorkbenchWindow().getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();\n        colorError = colorRegistry.get(\"org.jkiss.dbeaver.txn.color.reverted.background\");\n        colorErrorForeground = UIUtils.getContrastColor(colorError);\n        \n        taskViewer = DialogUtils.createFilteredTree(composite,\n            SWT.MULTI | SWT.FULL_SELECTION | (selector ? SWT.BORDER | SWT.CHECK : SWT.NONE),\n            new NamedObjectPatternFilter(), TaskUIViewMessages.db_tasks_tree_text_tasks_type);\n        Tree taskTree = taskViewer.getTree();\n        taskTree.setHeaderVisible(true);\n        taskTree.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        taskColumnController = new ViewerColumnController(TaskUIViewMessages.db_tasks_tree_column_controller_tasks, taskViewer);\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_name, SWT.LEFT, true, true, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBPProject) {\n                    return ((DBPProject) element).getName();\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getName();\n                } else {\n                    return element.toString();\n                }\n            }\n\n            @Override\n            protected DBPImage getCellImage(Object element) {\n                if (element instanceof DBPProject) {\n                    return DBIcon.PROJECT;\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getIcon();\n                } else if (element instanceof TaskCategoryNode) {\n                    return ((TaskCategoryNode) element).category.getIcon();\n                } else if (element instanceof TaskTypeNode) {\n                    return ((TaskTypeNode) element).type.getIcon();\n                }\n                return null;\n            }\n\n            @Override\n            public String getToolTipText(Object element) {\n                if (element instanceof DBTTask) {\n                    String description = ((DBTTask) element).getDescription();\n                    if (CommonUtils.isEmpty(description)) {\n                        description = ((DBTTask) element).getName();\n                    }\n                    return description;\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_created, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_create_time, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return dateFormat.format(((DBTTask) element).getCreateTime());\n                } else {\n                    return null;\n                }\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_start_time, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null || lastRun.getStartTime() == null) {\n                        return \"N/A\";\n                    } else {\n                        return dateFormat.format(lastRun.getStartTime());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_duration, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_run_duration, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        return RuntimeUtils.formatExecutionTime(lastRun.getRunDuration());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_result, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_last_result, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        if (lastRun.isRunSuccess()) {\n                            return TaskUIViewMessages.db_tasks_tree_column_cell_text_success;\n                        } else {\n                            return CommonUtils.notEmpty(lastRun.getErrorMessage());\n                        }\n                    }\n                }\n                return null;\n            }\n        });\n        DBTScheduler scheduler = TaskRegistry.getInstance().getActiveSchedulerInstance();\n        if (scheduler != null) {\n            taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_next_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_next_run, SWT.LEFT, true, false, new TaskLabelProvider() {\n                @Override\n                protected String getCellText(Object element) {\n                    if (element instanceof DBTTask) {\n                        DBTTaskScheduleInfo scheduledTask = scheduler.getScheduledTaskInfo((DBTTask) element);\n                        if (scheduledTask == null) {\n                            return \"\";\n                        } else {\n                            return scheduledTask.getNextRunInfo();\n                        }\n                    }\n                    return null;\n                }\n            });\n        }\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_description, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_description, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return CommonUtils.notEmpty(((DBTTask) element).getDescription());\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_type, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_type, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_category, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_category, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getCategory().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_project, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_project, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getProject().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.createColumns(true);\n\n        taskViewer.setContentProvider(new TreeListContentProvider());\n    }\n","date":"2021-02-14 03:32:27","endLine":231,"groupId":"16732","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"DatabaseTasksTree","params":"(Compositecomposite@booleanselector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/ddaec6e0f41377969cb8b7a258c6cae911fd9f.src","preCode":"    public DatabaseTasksTree(Composite composite, boolean selector) {\n        ColorRegistry colorRegistry = UIUtils.getActiveWorkbenchWindow().getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();\n        colorError = colorRegistry.get(\"org.jkiss.dbeaver.txn.color.reverted.background\");\n        colorErrorForeground = UIUtils.getContrastColor(colorError);\n        \n        taskViewer = DialogUtils.createFilteredTree(composite,\n            SWT.MULTI | SWT.FULL_SELECTION | (selector ? SWT.BORDER | SWT.CHECK : SWT.NONE),\n            new NamedObjectPatternFilter(), TaskUIViewMessages.db_tasks_tree_text_tasks_type);\n        Tree taskTree = taskViewer.getTree();\n        taskTree.setHeaderVisible(true);\n        taskTree.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        taskColumnController = new ViewerColumnController(TaskUIViewMessages.db_tasks_tree_column_controller_tasks, taskViewer);\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_name, SWT.LEFT, true, true, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBPProject) {\n                    return ((DBPProject) element).getName();\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getName();\n                } else {\n                    return element.toString();\n                }\n            }\n\n            @Override\n            protected DBPImage getCellImage(Object element) {\n                if (element instanceof DBPProject) {\n                    return DBIcon.PROJECT;\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getIcon();\n                } else if (element instanceof TaskCategoryNode) {\n                    return ((TaskCategoryNode) element).category.getIcon();\n                } else if (element instanceof TaskTypeNode) {\n                    return ((TaskTypeNode) element).type.getIcon();\n                }\n                return null;\n            }\n\n            @Override\n            public String getToolTipText(Object element) {\n                if (element instanceof DBTTask) {\n                    String description = ((DBTTask) element).getDescription();\n                    if (CommonUtils.isEmpty(description)) {\n                        description = ((DBTTask) element).getName();\n                    }\n                    return description;\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_created, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_create_time, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return dateFormat.format(((DBTTask) element).getCreateTime());\n                } else {\n                    return null;\n                }\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_start_time, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null || lastRun.getStartTime() == null) {\n                        return \"N/A\";\n                    } else {\n                        return dateFormat.format(lastRun.getStartTime());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_duration, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_run_duration, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        return RuntimeUtils.formatExecutionTime(lastRun.getRunDuration());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_result, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_last_result, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        if (lastRun.isRunSuccess()) {\n                            return TaskUIViewMessages.db_tasks_tree_column_cell_text_success;\n                        } else {\n                            return CommonUtils.notEmpty(lastRun.getErrorMessage());\n                        }\n                    }\n                }\n                return null;\n            }\n        });\n        DBTScheduler scheduler = TaskRegistry.getInstance().getActiveSchedulerInstance();\n        if (scheduler != null) {\n            taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_next_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_next_run, SWT.LEFT, true, false, new TaskLabelProvider() {\n                @Override\n                protected String getCellText(Object element) {\n                    if (element instanceof DBTTask) {\n                        DBTTaskScheduleInfo scheduledTask = scheduler.getScheduledTaskInfo((DBTTask) element);\n                        if (scheduledTask == null) {\n                            return \"\";\n                        } else {\n                            return scheduledTask.getNextRunInfo();\n                        }\n                    }\n                    return null;\n                }\n            });\n        }\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_description, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_description, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return CommonUtils.notEmpty(((DBTTask) element).getDescription());\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_type, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_type, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_category, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_category, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getCategory().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_project, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_project, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getProject().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.createColumns(true);\n\n        taskViewer.setContentProvider(new TreeListContentProvider());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.tasks.ui.view/src/org/jkiss/dbeaver/tasks/ui/view/DatabaseTasksTree.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2020-03-20 17:53:08","commitOrder":2,"curCode":"        public String getText(Object element) {\n            if (element instanceof DataSourceProviderDescriptor) {\n                return ((DataSourceProviderDescriptor) element).getName();\n            } else if (element instanceof DriverCategory) {\n                return ((DriverCategory) element).name;\n            } else if (element instanceof DriverDescriptor) {\n                return ((DriverDescriptor) element).getName();\n            } else {\n                return element.toString();\n            }\n        }\n","date":"2020-03-20 17:53:08","endLine":371,"groupId":"5308","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getText","params":"(Objectelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ff/a07ddd5a0b2f6faea93453eacee499c385f8bf.src","preCode":"        public String getText(Object element) {\n            if (element instanceof DataSourceProviderDescriptor) {\n                return ((DataSourceProviderDescriptor) element).getName();\n            } else if (element instanceof DriverCategory) {\n                return ((DriverCategory) element).name;\n            } else if (element instanceof DriverDescriptor) {\n                return ((DriverDescriptor) element).getName();\n            } else {\n                return element.toString();\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/driver/DriverTreeViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"NB"}],"commitId":"f10e55b8ead542067eae1d7c25adffbd2bd0c2d7","commitMessage":"@@@Tasks view plugin extraction\n\n\nFormer-commit-id: 2260d73a07f7fa9b379035102f18ffed4b19147b","date":"2021-02-14 03:32:27","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2020-03-20 17:53:08","codes":[{"authorDate":"2021-08-23 16:10:05","commitOrder":3,"curCode":"    public DatabaseTasksTree(Composite composite, boolean selector) {\n        ColorRegistry colorRegistry = UIUtils.getActiveWorkbenchWindow().getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();\n        colorError = colorRegistry.get(\"org.jkiss.dbeaver.txn.color.reverted.background\");\n        colorErrorForeground = UIUtils.getContrastColor(colorError);\n        \n        taskViewer = DialogUtils.createFilteredTree(composite,\n            SWT.MULTI | SWT.FULL_SELECTION | (selector ? SWT.BORDER | SWT.CHECK : SWT.NONE),\n            new NamedObjectPatternFilter(), TaskUIViewMessages.db_tasks_tree_text_tasks_type);\n        Tree taskTree = taskViewer.getTree();\n        taskTree.setHeaderVisible(true);\n        taskTree.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        taskColumnController = new ViewerColumnController(TaskUIViewMessages.db_tasks_tree_column_controller_tasks, taskViewer);\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_name, SWT.LEFT, true, true, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBPProject) {\n                    return ((DBPProject) element).getName();\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getName();\n                } else if (element instanceof DBTTaskFolder) {\n                    return ((DBTTaskFolder) element).getName();\n                } else {\n                    return element.toString();\n                }\n            }\n\n            @Override\n            protected DBPImage getCellImage(Object element) {\n                if (element instanceof DBPProject) {\n                    return DBIcon.PROJECT;\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getIcon();\n                } else if (element instanceof TaskCategoryNode) {\n                    return ((TaskCategoryNode) element).category.getIcon();\n                } else if (element instanceof TaskTypeNode) {\n                    return ((TaskTypeNode) element).type.getIcon();\n                } else if (element instanceof DBTTaskFolder) {\n                    return DBIcon.TREE_FOLDER;\n                }\n                return null;\n            }\n\n            @Override\n            public String getToolTipText(Object element) {\n                if (element instanceof DBTTask) {\n                    String description = ((DBTTask) element).getDescription();\n                    if (CommonUtils.isEmpty(description)) {\n                        description = ((DBTTask) element).getName();\n                    }\n                    return description;\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_created, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_create_time, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return dateFormat.format(((DBTTask) element).getCreateTime());\n                } else {\n                    return null;\n                }\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_start_time, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null || lastRun.getStartTime() == null) {\n                        return \"N/A\";\n                    } else {\n                        return dateFormat.format(lastRun.getStartTime());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_duration, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_run_duration, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        return RuntimeUtils.formatExecutionTime(lastRun.getRunDuration());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_result, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_last_result, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        if (lastRun.isRunSuccess()) {\n                            return TaskUIViewMessages.db_tasks_tree_column_cell_text_success;\n                        } else {\n                            return CommonUtils.notEmpty(lastRun.getErrorMessage());\n                        }\n                    }\n                }\n                return null;\n            }\n        });\n        DBTScheduler scheduler = TaskRegistry.getInstance().getActiveSchedulerInstance();\n        if (scheduler != null) {\n            taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_next_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_next_run, SWT.LEFT, true, false, new TaskLabelProvider() {\n                @Override\n                protected String getCellText(Object element) {\n                    if (element instanceof DBTTask) {\n                        DBTTaskScheduleInfo scheduledTask = scheduler.getScheduledTaskInfo((DBTTask) element);\n                        if (scheduledTask == null) {\n                            return \"\";\n                        } else {\n                            return scheduledTask.getNextRunInfo();\n                        }\n                    }\n                    return null;\n                }\n            });\n        }\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_description, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_description, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return CommonUtils.notEmpty(((DBTTask) element).getDescription());\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_type, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_type, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_category, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_category, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getCategory().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_project, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_project, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getProject().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.createColumns(true);\n\n        taskViewer.setContentProvider(new TreeListContentProvider());\n    }\n","date":"2021-08-23 16:10:05","endLine":241,"groupId":"10831","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"DatabaseTasksTree","params":"(Compositecomposite@booleanselector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/28/c2d9260ad1339a6512c08d7e4a2843792e175d.src","preCode":"    public DatabaseTasksTree(Composite composite, boolean selector) {\n        ColorRegistry colorRegistry = UIUtils.getActiveWorkbenchWindow().getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();\n        colorError = colorRegistry.get(\"org.jkiss.dbeaver.txn.color.reverted.background\");\n        colorErrorForeground = UIUtils.getContrastColor(colorError);\n        \n        taskViewer = DialogUtils.createFilteredTree(composite,\n            SWT.MULTI | SWT.FULL_SELECTION | (selector ? SWT.BORDER | SWT.CHECK : SWT.NONE),\n            new NamedObjectPatternFilter(), TaskUIViewMessages.db_tasks_tree_text_tasks_type);\n        Tree taskTree = taskViewer.getTree();\n        taskTree.setHeaderVisible(true);\n        taskTree.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        taskColumnController = new ViewerColumnController(TaskUIViewMessages.db_tasks_tree_column_controller_tasks, taskViewer);\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_name, SWT.LEFT, true, true, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBPProject) {\n                    return ((DBPProject) element).getName();\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getName();\n                } else {\n                    return element.toString();\n                }\n            }\n\n            @Override\n            protected DBPImage getCellImage(Object element) {\n                if (element instanceof DBPProject) {\n                    return DBIcon.PROJECT;\n                } else if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getIcon();\n                } else if (element instanceof TaskCategoryNode) {\n                    return ((TaskCategoryNode) element).category.getIcon();\n                } else if (element instanceof TaskTypeNode) {\n                    return ((TaskTypeNode) element).type.getIcon();\n                }\n                return null;\n            }\n\n            @Override\n            public String getToolTipText(Object element) {\n                if (element instanceof DBTTask) {\n                    String description = ((DBTTask) element).getDescription();\n                    if (CommonUtils.isEmpty(description)) {\n                        description = ((DBTTask) element).getName();\n                    }\n                    return description;\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_created, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_create_time, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return dateFormat.format(((DBTTask) element).getCreateTime());\n                } else {\n                    return null;\n                }\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_start_time, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null || lastRun.getStartTime() == null) {\n                        return \"N/A\";\n                    } else {\n                        return dateFormat.format(lastRun.getStartTime());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_duration, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_run_duration, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        return RuntimeUtils.formatExecutionTime(lastRun.getRunDuration());\n                    }\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_last_result, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_last_result, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    DBTTaskRun lastRun = ((DBTTask) element).getLastRun();\n                    if (lastRun == null) {\n                        return \"N/A\";\n                    } else {\n                        if (lastRun.isRunSuccess()) {\n                            return TaskUIViewMessages.db_tasks_tree_column_cell_text_success;\n                        } else {\n                            return CommonUtils.notEmpty(lastRun.getErrorMessage());\n                        }\n                    }\n                }\n                return null;\n            }\n        });\n        DBTScheduler scheduler = TaskRegistry.getInstance().getActiveSchedulerInstance();\n        if (scheduler != null) {\n            taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_next_run, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_next_run, SWT.LEFT, true, false, new TaskLabelProvider() {\n                @Override\n                protected String getCellText(Object element) {\n                    if (element instanceof DBTTask) {\n                        DBTTaskScheduleInfo scheduledTask = scheduler.getScheduledTaskInfo((DBTTask) element);\n                        if (scheduledTask == null) {\n                            return \"\";\n                        } else {\n                            return scheduledTask.getNextRunInfo();\n                        }\n                    }\n                    return null;\n                }\n            });\n        }\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_description, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_description, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return CommonUtils.notEmpty(((DBTTask) element).getDescription());\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_type, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_task_type, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_category, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_category, SWT.LEFT, false, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getType().getCategory().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.addColumn(TaskUIViewMessages.db_tasks_tree_column_controller_add_name_project, TaskUIViewMessages.db_tasks_tree_column_controller_add_descr_project, SWT.LEFT, true, false, new TaskLabelProvider() {\n            @Override\n            protected String getCellText(Object element) {\n                if (element instanceof DBTTask) {\n                    return ((DBTTask) element).getProject().getName();\n                }\n                return null;\n            }\n        });\n        taskColumnController.createColumns(true);\n\n        taskViewer.setContentProvider(new TreeListContentProvider());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.tasks.ui.view/src/org/jkiss/dbeaver/tasks/ui/view/DatabaseTasksTree.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-03-20 17:53:08","commitOrder":3,"curCode":"        public String getText(Object element) {\n            if (element instanceof DataSourceProviderDescriptor) {\n                return ((DataSourceProviderDescriptor) element).getName();\n            } else if (element instanceof DriverCategory) {\n                return ((DriverCategory) element).name;\n            } else if (element instanceof DriverDescriptor) {\n                return ((DriverDescriptor) element).getName();\n            } else {\n                return element.toString();\n            }\n        }\n","date":"2020-03-20 17:53:08","endLine":371,"groupId":"10831","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getText","params":"(Objectelement)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ff/a07ddd5a0b2f6faea93453eacee499c385f8bf.src","preCode":"        public String getText(Object element) {\n            if (element instanceof DataSourceProviderDescriptor) {\n                return ((DataSourceProviderDescriptor) element).getName();\n            } else if (element instanceof DriverCategory) {\n                return ((DriverCategory) element).name;\n            } else if (element instanceof DriverDescriptor) {\n                return ((DriverDescriptor) element).getName();\n            } else {\n                return element.toString();\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/driver/DriverTreeViewer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"N"}],"commitId":"845c46f8e268dfb2cdc60d2c276d66df44943297","commitMessage":"@@@Merge pull request #13288 from dbeaver/taskFolder#1040\n\ndbeaver/dbeaver-ee#1040 task folders implementation","date":"2021-08-23 16:10:05","modifiedFileCount":"17","status":"M","submitter":"Serge Rider"}]
