[{"authorTime":"2020-05-08 15:29:21","codes":[{"authorDate":"2019-08-07 17:27:13","commitOrder":2,"curCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<MySQLSession>(this, parent, new MySQLSessionManager((MySQLDataSource) executionContext.getDataSource())) {\n            private boolean hideSleeping;\n\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager)\n            {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n\n                contributionManager.add(ActionUtils.makeActionContribution(\n                    new Action(\"Hide sleeping\", Action.AS_CHECK_BOX) {\n                        {\n                            setToolTipText(\"Show only active connections\");\n                            setChecked(hideSleeping);\n                        }\n                        @Override\n                        public void run() {\n                            hideSleeping = isChecked();\n                            refreshPart(MySQLSessionEditor.this, true);\n                        }\n                    }, true));\n\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session)\n            {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n\n            @Override\n            public Map<String, Object> getSessionOptions() {\n                if (hideSleeping) {\n                    return Collections.singletonMap(MySQLSessionManager.OPTION_HIDE_SLEEPING, true);\n                }\n                return super.getSessionOptions();\n            }\n\n            @Override\n            protected void loadSettings(IDialogSettings settings) {\n                hideSleeping = CommonUtils.toBoolean(settings.get(\"hideSleeping\"));\n                super.loadSettings(settings);\n            }\n\n            @Override\n            protected void saveSettings(IDialogSettings settings) {\n                super.saveSettings(settings);\n                settings.put(\"hideSleeping\", hideSleeping);\n            }\n        };\n    }\n","date":"2019-08-07 17:27:14","endLine":120,"groupId":"9363","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSessionViewer","params":"(DBCExecutionContextexecutionContext@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a3/f9e9e7096f0b137dc54b812227cd337a97ee5c.src","preCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<MySQLSession>(this, parent, new MySQLSessionManager((MySQLDataSource) executionContext.getDataSource())) {\n            private boolean hideSleeping;\n\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager)\n            {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n\n                contributionManager.add(ActionUtils.makeActionContribution(\n                    new Action(\"Hide sleeping\", Action.AS_CHECK_BOX) {\n                        {\n                            setToolTipText(\"Show only active connections\");\n                            setChecked(hideSleeping);\n                        }\n                        @Override\n                        public void run() {\n                            hideSleeping = isChecked();\n                            refreshPart(MySQLSessionEditor.this, true);\n                        }\n                    }, true));\n\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session)\n            {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n\n            @Override\n            public Map<String, Object> getSessionOptions() {\n                if (hideSleeping) {\n                    return Collections.singletonMap(MySQLSessionManager.OPTION_HIDE_SLEEPING, true);\n                }\n                return super.getSessionOptions();\n            }\n\n            @Override\n            protected void loadSettings(IDialogSettings settings) {\n                hideSleeping = CommonUtils.toBoolean(settings.get(\"hideSleeping\"));\n                super.loadSettings(settings);\n            }\n\n            @Override\n            protected void saveSettings(IDialogSettings settings) {\n                super.saveSettings(settings);\n                settings.put(\"hideSleeping\", hideSleeping);\n            }\n        };\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/ui/editors/MySQLSessionEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"NB"},{"authorDate":"2020-05-08 15:29:21","commitOrder":2,"curCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<ExasolServerSession>(this, parent, new ExasolServerSessionManager((ExasolDataSource) executionContext.getDataSource())) {\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager) {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session) {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n        };\n    }\n","date":"2020-05-08 15:29:21","endLine":77,"groupId":"12841","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSessionViewer","params":"(DBCExecutionContextexecutionContext@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7a/85d8533d37d0d06193832773d5bdd72fa0d0f5.src","preCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<ExasolServerSession>(this, parent, new ExasolServerSessionManager((ExasolDataSource) executionContext.getDataSource())) {\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager) {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session) {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n        };\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol.ui/src/org/jkiss/dbeaver/ext/exasol/ui/editors/ExasolServerSessionEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"97273a53a928efc1a296145af828d4c70a124aa0","commitMessage":"@@@Merge pull request #8650 from dbeaver/exasol2#8638\n\n#8638 Editors from ext.exasol to ext.exasol.ui moved\n\nFormer-commit-id: 53f0b55af014956f24e45a5bab57e1fda85d93b8","date":"2020-05-08 15:29:21","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-05-08 15:29:21","codes":[{"authorDate":"2021-05-08 23:01:57","commitOrder":3,"curCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<MySQLSession>(this, parent, new MySQLSessionManager((MySQLDataSource) executionContext.getDataSource())) {\n            private boolean hideSleeping;\n\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager)\n            {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n\n                contributionManager.add(ActionUtils.makeActionContribution(\n                    new Action(\"Hide sleeping\", Action.AS_CHECK_BOX) {\n                        {\n                            setToolTipText(\"Show only active connections\");\n                            setImageDescriptor(DBeaverIcons.getImageDescriptor(UIIcon.HIDE_ALL_DETAILS));\n                            setChecked(hideSleeping);\n                        }\n                        @Override\n                        public void run() {\n                            hideSleeping = isChecked();\n                            refreshPart(MySQLSessionEditor.this, true);\n                        }\n                    }, true));\n\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session)\n            {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n\n            @Override\n            public Map<String, Object> getSessionOptions() {\n                if (hideSleeping) {\n                    return Collections.singletonMap(MySQLSessionManager.OPTION_HIDE_SLEEPING, true);\n                }\n                return super.getSessionOptions();\n            }\n\n            @Override\n            protected void loadSettings(IDialogSettings settings) {\n                hideSleeping = CommonUtils.toBoolean(settings.get(\"hideSleeping\"));\n                super.loadSettings(settings);\n            }\n\n            @Override\n            protected void saveSettings(IDialogSettings settings) {\n                super.saveSettings(settings);\n                settings.put(\"hideSleeping\", hideSleeping);\n            }\n        };\n    }\n","date":"2021-05-08 23:01:57","endLine":121,"groupId":"10757","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createSessionViewer","params":"(DBCExecutionContextexecutionContext@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c0/0938dccbdf76c3cf3220462754c164b8a596dd.src","preCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<MySQLSession>(this, parent, new MySQLSessionManager((MySQLDataSource) executionContext.getDataSource())) {\n            private boolean hideSleeping;\n\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager)\n            {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n\n                contributionManager.add(ActionUtils.makeActionContribution(\n                    new Action(\"Hide sleeping\", Action.AS_CHECK_BOX) {\n                        {\n                            setToolTipText(\"Show only active connections\");\n                            setChecked(hideSleeping);\n                        }\n                        @Override\n                        public void run() {\n                            hideSleeping = isChecked();\n                            refreshPart(MySQLSessionEditor.this, true);\n                        }\n                    }, true));\n\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session)\n            {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n\n            @Override\n            public Map<String, Object> getSessionOptions() {\n                if (hideSleeping) {\n                    return Collections.singletonMap(MySQLSessionManager.OPTION_HIDE_SLEEPING, true);\n                }\n                return super.getSessionOptions();\n            }\n\n            @Override\n            protected void loadSettings(IDialogSettings settings) {\n                hideSleeping = CommonUtils.toBoolean(settings.get(\"hideSleeping\"));\n                super.loadSettings(settings);\n            }\n\n            @Override\n            protected void saveSettings(IDialogSettings settings) {\n                super.saveSettings(settings);\n                settings.put(\"hideSleeping\", hideSleeping);\n            }\n        };\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/ui/editors/MySQLSessionEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-05-08 15:29:21","commitOrder":3,"curCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<ExasolServerSession>(this, parent, new ExasolServerSessionManager((ExasolDataSource) executionContext.getDataSource())) {\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager) {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session) {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n        };\n    }\n","date":"2020-05-08 15:29:21","endLine":77,"groupId":"10757","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSessionViewer","params":"(DBCExecutionContextexecutionContext@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7a/85d8533d37d0d06193832773d5bdd72fa0d0f5.src","preCode":"    protected SessionManagerViewer createSessionViewer(DBCExecutionContext executionContext, Composite parent) {\n        return new SessionManagerViewer<ExasolServerSession>(this, parent, new ExasolServerSessionManager((ExasolDataSource) executionContext.getDataSource())) {\n            @Override\n            protected void contributeToToolbar(DBAServerSessionManager sessionManager, IContributionManager contributionManager) {\n                contributionManager.add(killSessionAction);\n                contributionManager.add(terminateQueryAction);\n                contributionManager.add(new Separator());\n            }\n\n            @Override\n            protected void onSessionSelect(DBAServerSession session) {\n                super.onSessionSelect(session);\n                killSessionAction.setEnabled(session != null);\n                terminateQueryAction.setEnabled(session != null && !CommonUtils.isEmpty(session.getActiveQuery()));\n            }\n        };\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol.ui/src/org/jkiss/dbeaver/ext/exasol/ui/editors/ExasolServerSessionEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"2ea9007e44ecefc87573a789d3f6f10299837b50","commitMessage":"@@@dbeaver/dbeaver#11314 Session manager - show and run session read SQL query\n\n\nFormer-commit-id: fe19e9e2de1eecdee0dd43fc350aee5276c19f20","date":"2021-05-08 23:01:57","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"}]
