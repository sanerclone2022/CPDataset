[{"authorTime":"2019-01-13 06:00:05","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":3,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"NB"},{"authorDate":"2019-01-13 06:00:05","commitOrder":3,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (windowsAuthenticationButton != null) {\n            connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                    String.valueOf(windowsAuthenticationButton.getSelection()));\n        }\n        if (adpAuthenticationButton != null) {\n            if (adpAuthenticationButton.getSelection()) {\n                connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION, SQLServerConstants.AUTH_ACTIVE_DIRECTORY_PASSWORD);\n            } else {\n                connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION);\n            }\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-01-13 06:00:05","endLine":278,"groupId":"2072","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/24/ca510c8fde73b2a96a64a1c3316d09638cfa65.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (windowsAuthenticationButton != null) {\n            connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                    String.valueOf(windowsAuthenticationButton.getSelection()));\n        }\n        if (adpAuthenticationButton != null) {\n            if (adpAuthenticationButton.getSelection()) {\n                connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION, SQLServerConstants.AUTH_ACTIVE_DIRECTORY_PASSWORD);\n            } else {\n                connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION);\n            }\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"}],"commitId":"d20abfa5363e40914c48b15ab0514eaa0454d843","commitMessage":"@@@SQL Server: split model/UI bundles\n\n\nFormer-commit-id: 547e6e37f4de655784b6f49b31b27bec4b97fb78","date":"2019-01-13 06:00:05","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2019-01-13 06:48:39","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":4,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2019-01-13 06:48:39","commitOrder":4,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n        if (windowsAuthenticationButton != null) {\n            connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                    String.valueOf(windowsAuthenticationButton.getSelection()));\n        }\n        if (adpAuthenticationButton != null) {\n            if (adpAuthenticationButton.getSelection()) {\n                connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION, SQLServerConstants.AUTH_ACTIVE_DIRECTORY_PASSWORD);\n            } else {\n                connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION);\n            }\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-01-13 06:48:39","endLine":338,"groupId":"4563","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9a/77793eac4fae9fb7882c7f552e93c1a2ed45d1.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (windowsAuthenticationButton != null) {\n            connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                    String.valueOf(windowsAuthenticationButton.getSelection()));\n        }\n        if (adpAuthenticationButton != null) {\n            if (adpAuthenticationButton.getSelection()) {\n                connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION, SQLServerConstants.AUTH_ACTIVE_DIRECTORY_PASSWORD);\n            } else {\n                connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION);\n            }\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"}],"commitId":"c067e3fdb359ac1f169c1d48cd92ba467d9c1a0d","commitMessage":"@@@#4990 SQL Server: auth schema UI\n\n\nFormer-commit-id: 2589f735e7c313e136f68e1ac98830dae7d203e3","date":"2019-01-13 06:48:39","modifiedFileCount":"4","status":"M","submitter":"serge-rider"},{"authorTime":"2019-01-13 15:48:53","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":5,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2019-01-13 15:48:53","commitOrder":5,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-01-13 15:48:53","endLine":330,"groupId":"4563","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/64/4d044526781c1a13a6e769978743a0e9011251.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n        if (windowsAuthenticationButton != null) {\n            connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                    String.valueOf(windowsAuthenticationButton.getSelection()));\n        }\n        if (adpAuthenticationButton != null) {\n            if (adpAuthenticationButton.getSelection()) {\n                connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION, SQLServerConstants.AUTH_ACTIVE_DIRECTORY_PASSWORD);\n            } else {\n                connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_AUTHENTICATION);\n            }\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"5a6089ebfa7a85bf15c7f2b28d23d88ccb4e4418","commitMessage":"@@@#4990 SQL Server: auth schemas impl\n\n\nFormer-commit-id: 0420bb989cab70d60ee900230f841938a3b4082f","date":"2019-01-13 15:48:53","modifiedFileCount":"6","status":"M","submitter":"serge-rider"},{"authorTime":"2019-01-13 16:20:03","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":6,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2019-01-13 16:20:03","commitOrder":6,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (trustServerCertificate != null) {\n            connectionInfo.setProperty(SQLServerConstants.PROP_TRUST_SERVER_CERTIFICATE,\n                String.valueOf(trustServerCertificate.getSelection()));\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-01-13 16:20:03","endLine":336,"groupId":"4563","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0e/6e2d3f15636f0dc6c0e0967c054e5f7e15eb21.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"e2977af2a286f58a0e71d1c46b8fd732616b520d","commitMessage":"@@@#4990 SQL Server: auth schemas + extra options\n\n\nFormer-commit-id: 91031c8f1db7912dcae5c7d7588047625cdd5461","date":"2019-01-13 16:20:03","modifiedFileCount":"5","status":"M","submitter":"serge-rider"},{"authorTime":"2019-01-16 04:06:57","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":7,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2019-01-16 04:06:57","commitOrder":7,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            SQLServerAuthentication authSchema = authSchemas[authCombo.getSelectionIndex()];\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchema.name());\n\n            if (SQLServerConstants.PROVIDER_GENERIC.equals(getSite().getDriver().getProviderId())) {\n                if (authSchema == SQLServerAuthentication.WINDOWS_INTEGRATED) {\n                    connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                        String.valueOf(true));\n                } else {\n                    connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY);\n                }\n            }\n        }\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (trustServerCertificate != null) {\n            connectionInfo.setProperty(SQLServerConstants.PROP_TRUST_SERVER_CERTIFICATE,\n                String.valueOf(trustServerCertificate.getSelection()));\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-01-16 04:06:57","endLine":347,"groupId":"5444","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/50/5122fea1298a446ed78177ec7ef06d6169fbc9.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchemas[authCombo.getSelectionIndex()].name());\n        }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (trustServerCertificate != null) {\n            connectionInfo.setProperty(SQLServerConstants.PROP_TRUST_SERVER_CERTIFICATE,\n                String.valueOf(trustServerCertificate.getSelection()));\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"358b9533e9517bce2f5d8475897052d4eee692e0","commitMessage":"@@@#5011 SQL Server: generic driver + integrated security fix\n\n\nFormer-commit-id: d0f7023a27447232541637f6f069a0bcc4ef9c38","date":"2019-01-16 04:06:57","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2020-09-30 16:49:32","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":8,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"10464","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-09-30 16:49:32","commitOrder":8,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            SQLServerAuthentication authSchema = authSchemas[authCombo.getSelectionIndex()];\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchema.name());\n\n            if (SQLServerConstants.PROVIDER_GENERIC.equals(getSite().getDriver().getProviderId())) {\n                if (authSchema == SQLServerAuthentication.WINDOWS_INTEGRATED) {\n                    connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                        String.valueOf(true));\n                } else {\n                    connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY);\n                }\n            }\n        }\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2020-09-30 16:49:32","endLine":343,"groupId":"10464","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/21/6133352702ffe82f636c25e76d2bdd3938ff0e.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (userNameText != null) {\n            connectionInfo.setUserName(userNameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (authCombo != null) {\n            SQLServerAuthentication authSchema = authSchemas[authCombo.getSelectionIndex()];\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_AUTHENTICATION,\n                authSchema.name());\n\n            if (SQLServerConstants.PROVIDER_GENERIC.equals(getSite().getDriver().getProviderId())) {\n                if (authSchema == SQLServerAuthentication.WINDOWS_INTEGRATED) {\n                    connectionInfo.getProperties().put(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY,\n                        String.valueOf(true));\n                } else {\n                    connectionInfo.getProperties().remove(SQLServerConstants.PROP_CONNECTION_INTEGRATED_SECURITY);\n                }\n            }\n        }\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        if (trustServerCertificate != null) {\n            connectionInfo.setProperty(SQLServerConstants.PROP_TRUST_SERVER_CERTIFICATE,\n                String.valueOf(trustServerCertificate.getSelection()));\n        }\n        if (showAllSchemas != null) {\n            connectionInfo.setProviderProperty(SQLServerConstants.PROP_SHOW_ALL_SCHEMAS,\n                String.valueOf(showAllSchemas.getSelection()));\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/SQLServerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"69f3232e27b29a4a8a05d16083e89a6ed27cf6e5","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 7bb27880a86c7ad0b671eae898b9328e8ef44436","date":"2020-09-30 16:49:32","modifiedFileCount":"7","status":"M","submitter":"Serge Rider"}]
