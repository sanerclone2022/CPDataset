[{"authorTime":"2019-12-28 20:29:04","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":2,"curCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":79,"groupId":"13708","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ResultSetPanelDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/6dfa850b9c8f9a00422740fde15c5d477262d2.src","preCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/ResultSetPanelDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"},{"authorDate":"2019-12-28 20:29:04","commitOrder":2,"curCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n    }\n","date":"2019-12-28 20:29:04","endLine":46,"groupId":"10821","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"SQLDialectDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/78a4eb4443ae1fb1e55724a8b629f7a9f4d842.src","preCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/registry/SQLDialectDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"f61119e07b7b883be43d3451f2fc152848e5dc50","commitMessage":"@@@#7494 Text parser base model. SQL dialect registry\n\n\nFormer-commit-id: a7d096ee67889a09aa7fcc5824bec6144ae966ac","date":"2019-12-28 20:29:04","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-30 23:30:33","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":3,"curCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":79,"groupId":"13708","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ResultSetPanelDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/6dfa850b9c8f9a00422740fde15c5d477262d2.src","preCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/ResultSetPanelDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2019-12-30 23:30:33","commitOrder":3,"curCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n    }\n","date":"2019-12-30 23:30:33","endLine":61,"groupId":"13708","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"SQLDialectDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/14/f491d39bf2c520eba883772dc1babe9f30e0b7.src","preCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/registry/SQLDialectDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"8b705f93e0c2878469542fe7aae34abe23eeda18","commitMessage":"@@@#6528 Dialects definitions + pref page\n\n\nFormer-commit-id: 74862597ff8d1b3a853cc23af11def22b2380adf","date":"2019-12-30 23:30:33","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-31 02:25:32","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":4,"curCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":79,"groupId":"13708","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ResultSetPanelDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/6dfa850b9c8f9a00422740fde15c5d477262d2.src","preCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/ResultSetPanelDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2019-12-31 02:25:32","commitOrder":4,"curCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n\n        for (IConfigurationElement propElement : config.getChildren(\"property\")) {\n            String propName = propElement.getAttribute(\"name\");\n            String propValue = propElement.getAttribute(\"value\");\n            if (propName == null || CommonUtils.isEmpty(propValue)) {\n                continue;\n            }\n            switch (propName) {\n                case \"keywords\":\n                    this.keywords = loadList(propValue);\n                    break;\n                case \"ddlKeywords\":\n                    this.ddlKeywords = loadList(propValue);\n                    break;\n                case \"dmlKeywords\":\n                    this.dmlKeywords = loadList(propValue);\n                    break;\n                case \"execKeywords\":\n                    this.execKeywords = loadList(propValue);\n                    break;\n                case \"txnKeywords\":\n                    this.txnKeywords = loadList(propValue);\n                    break;\n                case \"types\":\n                    this.types = loadList(propValue);\n                    break;\n                case \"functions\":\n                    this.functions = loadList(propValue);\n                    break;\n                default:\n                    if (properties == null) {\n                        properties = new LinkedHashMap<>();\n                    }\n                    this.properties.put(propName, propValue);\n                    break;\n            }\n        }\n\n    }\n","date":"2019-12-31 02:25:32","endLine":107,"groupId":"13708","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"SQLDialectDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/604122472fa9465a278c3202aa3db6bee6b6e8.src","preCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/registry/SQLDialectDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"ecf7d55d0420dea83d81a88134f582a675d303fa","commitMessage":"@@@#6528 Dialects definitions + pref page\n\n\nFormer-commit-id: c43ced4be54bc8a03352395000d5255fe3270f4b","date":"2019-12-31 02:25:32","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-31 02:25:32","codes":[{"authorDate":"2020-02-15 01:16:56","commitOrder":5,"curCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n\n            String expr = supports.getAttribute(\"if\");\n            if (!CommonUtils.isEmpty(expr)) {\n                try {\n                    supportedExpressions.add(parseExpression(expr));\n                } catch (DBException e) {\n                    log.debug(e);\n                }\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","date":"2020-02-15 01:16:56","endLine":94,"groupId":"13708","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"ResultSetPanelDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/80/b7ffa17652ad3695854ba9b655f46bee54bd92.src","preCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/ResultSetPanelDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-12-31 02:25:32","commitOrder":5,"curCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n\n        for (IConfigurationElement propElement : config.getChildren(\"property\")) {\n            String propName = propElement.getAttribute(\"name\");\n            String propValue = propElement.getAttribute(\"value\");\n            if (propName == null || CommonUtils.isEmpty(propValue)) {\n                continue;\n            }\n            switch (propName) {\n                case \"keywords\":\n                    this.keywords = loadList(propValue);\n                    break;\n                case \"ddlKeywords\":\n                    this.ddlKeywords = loadList(propValue);\n                    break;\n                case \"dmlKeywords\":\n                    this.dmlKeywords = loadList(propValue);\n                    break;\n                case \"execKeywords\":\n                    this.execKeywords = loadList(propValue);\n                    break;\n                case \"txnKeywords\":\n                    this.txnKeywords = loadList(propValue);\n                    break;\n                case \"types\":\n                    this.types = loadList(propValue);\n                    break;\n                case \"functions\":\n                    this.functions = loadList(propValue);\n                    break;\n                default:\n                    if (properties == null) {\n                        properties = new LinkedHashMap<>();\n                    }\n                    this.properties.put(propName, propValue);\n                    break;\n            }\n        }\n\n    }\n","date":"2019-12-31 02:25:32","endLine":107,"groupId":"13708","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"SQLDialectDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/604122472fa9465a278c3202aa3db6bee6b6e8.src","preCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n\n        for (IConfigurationElement propElement : config.getChildren(\"property\")) {\n            String propName = propElement.getAttribute(\"name\");\n            String propValue = propElement.getAttribute(\"value\");\n            if (propName == null || CommonUtils.isEmpty(propValue)) {\n                continue;\n            }\n            switch (propName) {\n                case \"keywords\":\n                    this.keywords = loadList(propValue);\n                    break;\n                case \"ddlKeywords\":\n                    this.ddlKeywords = loadList(propValue);\n                    break;\n                case \"dmlKeywords\":\n                    this.dmlKeywords = loadList(propValue);\n                    break;\n                case \"execKeywords\":\n                    this.execKeywords = loadList(propValue);\n                    break;\n                case \"txnKeywords\":\n                    this.txnKeywords = loadList(propValue);\n                    break;\n                case \"types\":\n                    this.types = loadList(propValue);\n                    break;\n                case \"functions\":\n                    this.functions = loadList(propValue);\n                    break;\n                default:\n                    if (properties == null) {\n                        properties = new LinkedHashMap<>();\n                    }\n                    this.properties.put(propName, propValue);\n                    break;\n            }\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/registry/SQLDialectDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"050918f9752a4e703686ed4d9a3058f7ec1f5b16","commitMessage":"@@@dbeaver-corp/dbeaver-ee#239 RSV: disable grouping panel for databases which not support group by\n\n\nFormer-commit-id: 02e0bee3e1df9c5fc541ce424fe0e0b32afe6c18","date":"2020-02-15 01:16:56","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-02-02 20:37:43","codes":[{"authorDate":"2020-02-15 01:16:56","commitOrder":6,"curCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n\n            String expr = supports.getAttribute(\"if\");\n            if (!CommonUtils.isEmpty(expr)) {\n                try {\n                    supportedExpressions.add(parseExpression(expr));\n                } catch (DBException e) {\n                    log.debug(e);\n                }\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","date":"2020-02-15 01:16:56","endLine":94,"groupId":"10365","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"ResultSetPanelDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/80/b7ffa17652ad3695854ba9b655f46bee54bd92.src","preCode":"    public ResultSetPanelDescriptor(IConfigurationElement config) {\n        super(config);\n\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n        this.showByDefault = CommonUtils.toBoolean(config.getAttribute(\"default\"));\n\n        for (IConfigurationElement supports : config.getChildren(TAG_SUPPORTS)) {\n            String type = supports.getAttribute(\"type\");\n            if (!CommonUtils.isEmpty(type)) {\n                supportedPresentationTypes.add(IResultSetPresentation.PresentationType.valueOf(type.toUpperCase(Locale.ENGLISH)));\n            }\n            String id = supports.getAttribute(\"id\");\n            if (!CommonUtils.isEmpty(id)) {\n                supportedPresentations.add(id);\n            }\n\n            String expr = supports.getAttribute(\"if\");\n            if (!CommonUtils.isEmpty(expr)) {\n                try {\n                    supportedExpressions.add(parseExpression(expr));\n                } catch (DBException e) {\n                    log.debug(e);\n                }\n            }\n        }\n\n        for (IConfigurationElement dsElement : config.getChildren(\"datasource\")) {\n            String dsId = dsElement.getAttribute(\"id\");\n            if (dsId != null) {\n                supportedDataSources.add(dsId);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/panel/ResultSetPanelDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2021-02-02 20:37:43","commitOrder":6,"curCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n\n        for (IConfigurationElement propElement : config.getChildren(\"property\")) {\n            String propName = propElement.getAttribute(\"name\");\n            String propValue = propElement.getAttribute(\"value\");\n            if (propName == null || CommonUtils.isEmpty(propValue)) {\n                continue;\n            }\n            switch (propName) {\n                case \"keywords\":\n                    this.keywords = loadList(propValue);\n                    break;\n                case \"ddlKeywords\":\n                    this.ddlKeywords = loadList(propValue);\n                    break;\n                case \"dmlKeywords\":\n                    this.dmlKeywords = loadList(propValue);\n                    break;\n                case \"execKeywords\":\n                    this.execKeywords = loadList(propValue);\n                    break;\n                case \"txnKeywords\":\n                    this.txnKeywords = loadList(propValue);\n                    break;\n                case \"types\":\n                    this.types = loadList(propValue);\n                    break;\n                case \"functions\":\n                    this.functions = loadList(propValue);\n                    break;\n                case \"insertMethods\":\n                    insertMethodNames = loadList(propValue);\n                    break;\n                default:\n                    if (properties == null) {\n                        properties = new LinkedHashMap<>();\n                    }\n                    this.properties.put(propName, propValue);\n                    break;\n            }\n        }\n    }\n","date":"2021-02-02 20:37:43","endLine":118,"groupId":"10365","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"SQLDialectDescriptor","params":"(IConfigurationElementconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/26/995d9781663aa5b55a9c617f24171f33b6bd18.src","preCode":"    SQLDialectDescriptor(IConfigurationElement config) {\n        super(config);\n        this.id = config.getAttribute(\"id\");\n        this.label = config.getAttribute(\"label\");\n        this.description = config.getAttribute(\"description\");\n        this.implClass = new ObjectType(config.getAttribute(\"class\"));\n        this.icon = iconToImage(config.getAttribute(\"icon\"));\n\n        this.isAbstract = CommonUtils.getBoolean(config.getAttribute(\"abstract\"));\n        this.isHidden = CommonUtils.getBoolean(config.getAttribute(\"hidden\"));\n\n        for (IConfigurationElement propElement : config.getChildren(\"property\")) {\n            String propName = propElement.getAttribute(\"name\");\n            String propValue = propElement.getAttribute(\"value\");\n            if (propName == null || CommonUtils.isEmpty(propValue)) {\n                continue;\n            }\n            switch (propName) {\n                case \"keywords\":\n                    this.keywords = loadList(propValue);\n                    break;\n                case \"ddlKeywords\":\n                    this.ddlKeywords = loadList(propValue);\n                    break;\n                case \"dmlKeywords\":\n                    this.dmlKeywords = loadList(propValue);\n                    break;\n                case \"execKeywords\":\n                    this.execKeywords = loadList(propValue);\n                    break;\n                case \"txnKeywords\":\n                    this.txnKeywords = loadList(propValue);\n                    break;\n                case \"types\":\n                    this.types = loadList(propValue);\n                    break;\n                case \"functions\":\n                    this.functions = loadList(propValue);\n                    break;\n                default:\n                    if (properties == null) {\n                        properties = new LinkedHashMap<>();\n                    }\n                    this.properties.put(propName, propValue);\n                    break;\n            }\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/registry/SQLDialectDescriptor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"9e2607b8d7281e3157ee858f3344d9cf42e25f90","commitMessage":"@@@#11192 Lazy insert methods init\n\n\nFormer-commit-id: 1ea16fb4575e3edbdfcbeb5285e43ffaa5d5c537","date":"2021-02-02 20:37:43","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"}]
