[{"authorTime":"2017-01-11 05:25:07","codes":[{"authorDate":"2017-01-11 05:45:51","commitOrder":6,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","date":"2017-01-11 05:45:51","endLine":154,"groupId":"6521","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d0/5b00872963966b666862eefcc3e8d993e9d14d.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2017-01-11 05:25:07","commitOrder":6,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        if (databaseSwitchInProgress) {\n            final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2017-01-11 05:25:07","endLine":366,"groupId":"5846","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bb/cc96a7acb0a24e4ca35035db83acf33b689020.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        if (databaseSwitchInProgress) {\n            final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"NB"}],"commitId":"e4f60395fc7c377f5abdaefed7f8bff474b5353f","commitMessage":"@@@Generic driver: provide client info\n\n\nFormer-commit-id: b0e65bc8cffa8c2c961f048306a19bf3f2166680","date":"2017-01-11 05:45:51","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-02-25 19:43:23","codes":[{"authorDate":"2017-01-11 05:45:51","commitOrder":7,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","date":"2017-01-11 05:45:51","endLine":154,"groupId":"6521","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d0/5b00872963966b666862eefcc3e8d993e9d14d.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2017-02-25 19:43:23","commitOrder":7,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n        if (activeDatabaseName != null && !CommonUtils.equalObjects(activeDatabaseName, conConfig.getDatabaseName())) {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2017-02-25 19:43:23","endLine":361,"groupId":"5846","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/68/67717f3ce2eb769cd4ae574b3ea84206a01d0a.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        if (databaseSwitchInProgress) {\n            final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"1387848f9cec2832ba5ce6398bfd8ee7fed3b435","commitMessage":"@@@ #1346 PG database switch fix (database name in isolated connections)\n\n\nFormer-commit-id: dad9a5bf5052825265b3cac0afbd02a5dab27ae2","date":"2017-02-25 19:43:23","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-11-07 01:35:05","codes":[{"authorDate":"2017-11-07 01:35:05","commitOrder":8,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","date":"2017-11-07 01:35:05","endLine":157,"groupId":"6521","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d3/8aab574fc800b11d5c3d30d84b90e7f978fef3.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2017-11-07 01:35:05","commitOrder":8,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n        if (activeDatabaseName != null && !CommonUtils.equalObjects(activeDatabaseName, conConfig.getDatabaseName())) {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        if (!getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2017-11-07 01:35:05","endLine":379,"groupId":"5846","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/89/cfcf75e8b8427a2d3db413837695d9daaec882.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n        if (activeDatabaseName != null && !CommonUtils.equalObjects(activeDatabaseName, conConfig.getDatabaseName())) {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"}],"commitId":"4bbcc7273907cfd9a8223c362f0e19a01ea16dae","commitMessage":"@@@#2480 Disable client app identification option\n\n\nFormer-commit-id: 2d09ad868f4d575ee0ec19d1e560af3ecba1105f","date":"2017-11-07 01:35:05","modifiedFileCount":"8","status":"M","submitter":"serge-rider"},{"authorTime":"2018-07-23 15:41:36","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":9,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, remoteInstance, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","date":"2018-07-23 15:41:36","endLine":155,"groupId":"6521","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@JDBCRemoteInstanceremoteInstance@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/845699a0e4ec557454b9e116697a6060a8c2f0.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2018-07-23 15:41:36","commitOrder":9,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        Connection pgConnection;\n        if (remoteInstance != null) {\n            log.debug(\"Initiate connection to PostgreSQL database [\" + remoteInstance.getName() + \"@\" + conConfig.getHostName() + \"]\");\n        }\n        if (remoteInstance instanceof PostgreDatabase &&\n            remoteInstance.getName() != null &&\n            !CommonUtils.equalObjects(remoteInstance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(remoteInstance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n        }\n\n        if (!getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2018-07-23 15:41:36","endLine":363,"groupId":"5846","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@JDBCRemoteInstanceremoteInstance@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b9/e6abbd4875bb6ff68763b816af209bc3be1cb2.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @NotNull String purpose) throws DBCException {\n        Connection pgConnection;\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n        if (activeDatabaseName != null && !CommonUtils.equalObjects(activeDatabaseName, conConfig.getDatabaseName())) {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(activeDatabaseName);\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, purpose);\n        }\n\n        if (!getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"M"}],"commitId":"f5dacff54df650fa052fcc6e82dac15c414085c3","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: f856da844bdb094ac789a5c775045caea0c36124","date":"2018-07-23 15:41:36","modifiedFileCount":"524","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2018-10-13 20:06:58","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":10,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, remoteInstance, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","date":"2018-07-23 15:41:36","endLine":155,"groupId":"6521","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@JDBCRemoteInstanceremoteInstance@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/845699a0e4ec557454b9e116697a6060a8c2f0.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, remoteInstance, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2018-10-13 20:06:58","commitOrder":10,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        Connection pgConnection;\n        if (remoteInstance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + remoteInstance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (remoteInstance instanceof PostgreDatabase &&\n            remoteInstance.getName() != null &&\n            !CommonUtils.equalObjects(remoteInstance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(remoteInstance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2018-10-13 20:06:58","endLine":374,"groupId":"11870","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@JDBCRemoteInstanceremoteInstance@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/85/7bc3c2d97e39d4ea5566276574e175189e5ffc.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        Connection pgConnection;\n        if (remoteInstance != null) {\n            log.debug(\"Initiate connection to PostgreSQL database [\" + remoteInstance.getName() + \"@\" + conConfig.getHostName() + \"]\");\n        }\n        if (remoteInstance instanceof PostgreDatabase &&\n            remoteInstance.getName() != null &&\n            !CommonUtils.equalObjects(remoteInstance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(remoteInstance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n        }\n\n        if (!getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(\"ApplicationName\", DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"M"}],"commitId":"51c8ddf4ec4daa621c3feff34d120e934633a6ac","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 17f886546eced0902561199e308934e6d98952a0","date":"2018-10-13 20:06:58","modifiedFileCount":"410","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-10-30 17:24:08","codes":[{"authorDate":"2019-10-30 17:24:08","commitOrder":11,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, context, purpose);\n\n        if (isPopulateClientAppName() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            populateClientAppName(context, purpose, jdbcConnection);\n        }\n\n        return jdbcConnection;\n    }\n","date":"2019-10-30 17:24:08","endLine":131,"groupId":"3314","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/063b6609f075695d95c294550823d80d7a9b55.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, remoteInstance, purpose);\n\n        if (populateClientAppName && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            \r\n            try {\n                final ResultSet ciList = jdbcConnection.getMetaData().getClientInfoProperties();\n                if (ciList != null) {\n                    try {\n                        while (ciList.next()) {\n                            final String name = JDBCUtils.safeGetString(ciList, \"NAME\");\n                            final int maxLength = JDBCUtils.safeGetInt(ciList, \"MAX_LEN\");\n                            if (\"ApplicationName\".equals(name)) {\n                                String appName = DBUtils.getClientApplicationName(getContainer(), purpose);\n                                if (maxLength > 0) {\n                                    appName = CommonUtils.truncateString(appName, maxLength <= 0 ? 48 : maxLength);\n                                }\n                                jdbcConnection.setClientInfo(\"ApplicationName\", appName);\n                                break;\n                            }\n                        }\n                    } finally {\n                        ciList.close();\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2019-10-30 17:24:08","commitOrder":11,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        JDBCRemoteInstance instance = context == null ? null : context.getOwnerInstance();\n        Connection pgConnection;\n        if (instance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + instance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (instance instanceof PostgreDatabase &&\n            instance.getName() != null &&\n            !CommonUtils.equalObjects(instance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(instance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, context, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, context, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), context, purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2019-10-30 17:24:08","endLine":380,"groupId":"290","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/d09676141ea81670b813e9df79ab8764df15ad.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, JDBCRemoteInstance remoteInstance, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        Connection pgConnection;\n        if (remoteInstance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + remoteInstance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (remoteInstance instanceof PostgreDatabase &&\n            remoteInstance.getName() != null &&\n            !CommonUtils.equalObjects(remoteInstance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(remoteInstance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, remoteInstance, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"M"}],"commitId":"bff07064f7432bdb17429a95578c28a24eb08506","commitMessage":"@@@#6715 Extra variables in custom client app name (context.name and context.id)\n\n\nFormer-commit-id: c875f30f6f603b5bf51e8a75d9c398856b077827","date":"2019-10-30 17:24:08","modifiedFileCount":"21","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-03-27 18:16:53","codes":[{"authorDate":"2019-10-30 17:24:08","commitOrder":12,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, context, purpose);\n\n        if (isPopulateClientAppName() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            populateClientAppName(context, purpose, jdbcConnection);\n        }\n\n        return jdbcConnection;\n    }\n","date":"2019-10-30 17:24:08","endLine":131,"groupId":"3314","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/063b6609f075695d95c294550823d80d7a9b55.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, context, purpose);\n\n        if (isPopulateClientAppName() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            populateClientAppName(context, purpose, jdbcConnection);\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2020-03-27 18:16:53","commitOrder":12,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        JDBCRemoteInstance instance = context == null ? null : context.getOwnerInstance();\n        Connection pgConnection;\n        if (instance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + instance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (instance instanceof PostgreDatabase &&\n            instance.getName() != null &&\n            !CommonUtils.equalObjects(instance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                if (CommonUtils.isEmpty(conConfig.getUrl()) || !CommonUtils.isEmpty(conConfig.getHostName())) {\n                    conConfig.setDatabaseName(instance.getName());\n                    conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n                } else {\n                    \r\n                }\n\n                pgConnection = super.openConnection(monitor, context, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, context, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), context, purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2020-03-27 18:16:53","endLine":336,"groupId":"3314","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f6/7df65d8ee4bb7e7d3d719d926f711b5b790f6b.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        JDBCRemoteInstance instance = context == null ? null : context.getOwnerInstance();\n        Connection pgConnection;\n        if (instance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + instance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (instance instanceof PostgreDatabase &&\n            instance.getName() != null &&\n            !CommonUtils.equalObjects(instance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                conConfig.setDatabaseName(instance.getName());\n                conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n\n                pgConnection = super.openConnection(monitor, context, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, context, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), context, purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"a97a07288b1a48f4d7cac949d322291076ecbf2c","commitMessage":"@@@#501 PostgreSQL connection ini fix\n\n\nFormer-commit-id: cad890ec08913aaf4b3000fd95b11af8187486c5","date":"2020-03-27 18:16:53","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-09-29 04:01:54","codes":[{"authorDate":"2019-10-30 17:24:08","commitOrder":13,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, context, purpose);\n\n        if (isPopulateClientAppName() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            populateClientAppName(context, purpose, jdbcConnection);\n        }\n\n        return jdbcConnection;\n    }\n","date":"2019-10-30 17:24:08","endLine":131,"groupId":"101129","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/063b6609f075695d95c294550823d80d7a9b55.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        Connection jdbcConnection = super.openConnection(monitor, context, purpose);\n\n        if (isPopulateClientAppName() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            populateClientAppName(context, purpose, jdbcConnection);\n        }\n\n        return jdbcConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2020-09-29 04:01:54","commitOrder":13,"curCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        JDBCRemoteInstance instance = context == null ? null : context.getOwnerInstance();\n        Connection pgConnection;\n        if (instance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + instance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (instance instanceof PostgreDatabase &&\n            instance.getName() != null &&\n            !CommonUtils.equalObjects(instance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                if (CommonUtils.isEmpty(conConfig.getUrl()) || !CommonUtils.isEmpty(conConfig.getHostName())) {\n                    conConfig.setDatabaseName(instance.getName());\n                    conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n                } \r\n                    \r\n                \r\n\n                pgConnection = super.openConnection(monitor, context, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, context, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), context, purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","date":"2020-09-29 04:01:54","endLine":355,"groupId":"101129","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"openConnection","params":"(@NotNullDBRProgressMonitormonitor@@NullableJDBCExecutionContextcontext@@NotNullStringpurpose)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9f/3d271b37720191d1ba56aefc61de1290a8a603.src","preCode":"    protected Connection openConnection(@NotNull DBRProgressMonitor monitor, @Nullable JDBCExecutionContext context, @NotNull String purpose) throws DBCException {\n        final DBPConnectionConfiguration conConfig = getContainer().getActualConnectionConfiguration();\n\n        JDBCRemoteInstance instance = context == null ? null : context.getOwnerInstance();\n        Connection pgConnection;\n        if (instance != null) {\n            log.debug(\"Initiate connection to \" + getServerType().getServerTypeName() + \" database [\" + instance.getName() + \"@\" + conConfig.getHostName() + \"] for \" + purpose);\n        }\n        if (instance instanceof PostgreDatabase &&\n            instance.getName() != null &&\n            !CommonUtils.equalObjects(instance.getName(), conConfig.getDatabaseName()))\n        {\n            \r\n            final DBPConnectionConfiguration originalConfig = new DBPConnectionConfiguration(conConfig);\n            try {\n                \r\n                if (CommonUtils.isEmpty(conConfig.getUrl()) || !CommonUtils.isEmpty(conConfig.getHostName())) {\n                    conConfig.setDatabaseName(instance.getName());\n                    conConfig.setUrl(getContainer().getDriver().getDataSourceProvider().getConnectionURL(getContainer().getDriver(), conConfig));\n                } else {\n                    \r\n                }\n\n                pgConnection = super.openConnection(monitor, context, purpose);\n            }\n            finally {\n                conConfig.setDatabaseName(originalConfig.getDatabaseName());\n                conConfig.setUrl(originalConfig.getUrl());\n            }\n        } else {\n            pgConnection = super.openConnection(monitor, context, purpose);\n        }\n\n        if (getServerType().supportsClientInfo() && !getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CLIENT_NAME_DISABLE)) {\n            \r\n            try {\n                pgConnection.setClientInfo(JDBCConstants.APPLICATION_NAME_CLIENT_PROPERTY, DBUtils.getClientApplicationName(getContainer(), context, purpose));\n            } catch (Throwable e) {\n                \r\n                log.debug(e);\n            }\n        }\n\n        return pgConnection;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"9e05345739be5d54e31e19a6c2a9b3ac0d884038","commitMessage":"@@@Merge pull request #9873 from dbeaver/pg-role#9518\n\n#9518 add role choosing to pg\n\nFormer-commit-id: 99cfa9e162f117c8bfacaba173723a9475aa11c5","date":"2020-09-29 04:01:54","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"}]
