[{"authorTime":"2017-01-13 06:00:44","codes":[{"authorDate":"2017-01-13 06:00:44","commitOrder":5,"curCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","date":"2017-01-13 06:00:44","endLine":115,"groupId":"13683","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPDriverdriver@DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/54/250cc9a444f4e2bd9b6e154144ba3e32ee23c6.src","preCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/ExasolDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"MB"},{"authorDate":"2017-01-13 06:00:44","commitOrder":5,"curCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","date":"2017-01-13 06:00:44","endLine":786,"groupId":"13683","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/29/478ac8219c5d12a5d175e5da65141373baf691.src","preCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/ExasolDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"B"}],"commitId":"30cf88af03e43ce189d6af77772710bb6504dae6","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 5d7cb22043593be41e72f35c1192d60a6adda800","date":"2017-01-13 06:00:44","modifiedFileCount":"13","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-05-10 01:44:00","codes":[{"authorDate":"2017-05-10 01:44:00","commitOrder":6,"curCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","date":"2017-05-10 01:44:00","endLine":110,"groupId":"13683","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPDriverdriver@DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5a/268f07ccf3007e8f1bdd683623f98c1c83527a.src","preCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/ExasolDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2017-05-10 01:44:00","commitOrder":6,"curCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","date":"2017-05-10 01:44:00","endLine":764,"groupId":"13683","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9a/5964cf63038fcad6ef633651cab1cee894ea22.src","preCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (backupHostList != null && backupHostList != \"\")\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/ExasolDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":720,"status":"M"}],"commitId":"076d027be8d024448b6b502e2f43707aa55092c8","commitMessage":"@@@Exasol code style\n\n\nFormer-commit-id: 74da1d1481d9b36c0e5ebb19b505897b4fd74db6","date":"2017-05-10 01:44:00","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-01-05 21:14:01","codes":[{"authorDate":"2017-05-10 01:44:00","commitOrder":7,"curCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","date":"2017-05-10 01:44:00","endLine":110,"groupId":"101054","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPDriverdriver@DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5a/268f07ccf3007e8f1bdd683623f98c1c83527a.src","preCode":"    public String getConnectionURL(DBPDriver driver, DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/ExasolDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2019-01-05 21:14:01","commitOrder":7,"curCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            if (! addMetaProps.isEmpty())\n            \tclientName = clientName + \"-Meta\";\n            \n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        \r\n        if (! addMetaProps.isEmpty()) {\n        \tSet<Entry<Object, Object>> entries = addMetaProps.entrySet();\n        \t\n            for (Entry<Object, Object> entry : entries) {\n            \turl.append(\";\").append(entry.getKey()).append(\"=\").append(entry.getValue());\n            }\t\t\n        }\n\n        return url.toString();\n    }\n","date":"2019-01-05 21:14:01","endLine":974,"groupId":"101054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getConnectionURL","params":"(DBPConnectionConfigurationconnectionInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3d/18a5d1177ece19e7926aff17159593ae017017.src","preCode":"    public String getConnectionURL(DBPConnectionConfiguration connectionInfo) {\n        \r\n        String port = \":8563\";\n        if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {\n            port = \":\" + connectionInfo.getHostPort();\n        }\n        Map<String, String> properties = connectionInfo.getProperties();\n\n        StringBuilder url = new StringBuilder(128);\n        url.append(\"jdbc:exa:\").append(connectionInfo.getHostName()).append(port);\n\n        \r\n        String backupHostList = connectionInfo.getProviderProperty(ExasolConstants.DRV_BACKUP_HOST_LIST);\n\n        if (!CommonUtils.isEmpty(backupHostList))\n            url.append(\",\").append(backupHostList).append(port);\n\n        if (!url.toString().toUpperCase().contains(\"CLIENTNAME\")) {\n            \r\n            String clientName = Platform.getProduct().getName();\n\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_NAME);\n            if (propClientName != null)\n                clientName = propClientName.toString();\n            url.append(\";clientname=\").append(clientName);\n        }\n        \n        if (!url.toString().toUpperCase().contains(\"CLIENTVERSION\"))\n        {\n        \tString clientVersion=Platform.getProduct().getDefiningBundle().getVersion().toString();\n            Object propClientName = properties.get(ExasolConstants.DRV_CLIENT_VERSION);\n            if (propClientName != null)\n            \tclientVersion = propClientName.toString();\n            url.append(\";clientversion=\").append(clientVersion);\n        }\n        Object querytimeout = properties.get(ExasolConstants.DRV_QUERYTIMEOUT);\n        if (querytimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_QUERYTIMEOUT).append(\"=\").append(querytimeout);\n\n        Object connecttimeout = properties.get(ExasolConstants.DRV_CONNECT_TIMEOUT);\n        if (connecttimeout != null)\n            url.append(\";\").append(ExasolConstants.DRV_CONNECT_TIMEOUT).append(\"=\").append(connecttimeout);\n\n        return url.toString();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/ExasolDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":918,"status":"M"}],"commitId":"53a256b0083790f745567d007134d501869f2369","commitMessage":"@@@Merge pull request #4922 from Sargul/devel\n\nExasol V6.1 update part 1\n\nFormer-commit-id: 3b04f5eb137b4346d65111cbada26d4bbdf2c531","date":"2019-01-05 21:14:01","modifiedFileCount":"22","status":"M","submitter":"Charly"}]
