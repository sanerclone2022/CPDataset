[{"authorTime":"2020-09-23 15:33:54","codes":[{"authorDate":"2020-01-13 04:05:09","commitOrder":15,"curCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, MySQLTrigger trigger, boolean create) {\n        if (trigger.isPersisted()) {\n            actions.add(\n                new SQLDatabasePersistAction(\"Drop trigger\",\n                    \"DROP TRIGGER IF EXISTS \" + trigger.getFullyQualifiedName(DBPEvaluationContext.DDL))\n            );\n        }\n        MySQLCatalog curCatalog = ((MySQLExecutionContext)executionContext).getDefaultCatalog();\n        if (curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(trigger.getCatalog()), false)); \r\n        }\n\n        actions.add(new SQLDatabasePersistAction(\"Create trigger\", trigger.getBody(), true)); \r\n\n        if (curCatalog != null && curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(curCatalog), false)); \r\n        }\n    }\n","date":"2020-01-13 04:05:09","endLine":76,"groupId":"1841","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createOrReplaceTriggerQuery","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actions@MySQLTriggertrigger@booleancreate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ce/26c4f41e28db76cb23616c53424d356bb474b6.src","preCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, MySQLTrigger trigger, boolean create) {\n        if (trigger.isPersisted()) {\n            actions.add(\n                new SQLDatabasePersistAction(\"Drop trigger\",\n                    \"DROP TRIGGER IF EXISTS \" + trigger.getFullyQualifiedName(DBPEvaluationContext.DDL))\n            );\n        }\n        MySQLCatalog curCatalog = ((MySQLExecutionContext)executionContext).getDefaultCatalog();\n        if (curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(trigger.getCatalog()), false)); \r\n        }\n\n        actions.add(new SQLDatabasePersistAction(\"Create trigger\", trigger.getBody(), true)); \r\n\n        if (curCatalog != null && curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(curCatalog), false)); \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/edit/MySQLTriggerManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"NB"},{"authorDate":"2020-09-23 15:33:54","commitOrder":15,"curCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, PostgreTrigger trigger, boolean create) {\n        if (!create)\n            return;\n\n        try {\n            actions.add(new SQLDatabasePersistAction(\n                    \"Create trigger\",\n                    \"CREATE TRIGGER \" + DBUtils.getQuotedIdentifier(trigger)\n                            + \"\\n    AFTER INSERT\"\n                            + \"\\n    ON \" + trigger.getTable().getFullyQualifiedName(DBPEvaluationContext.DDL)\n                            + \"\\n    FOR EACH ROW\"\n                            + \"\\n        EXECUTE PROCEDURE \" + trigger.getFunction(monitor).getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\",\n                    true\n            ));\n        } catch (DBException e) {\n            log.error(e);\n        }\n    }\n","date":"2020-09-23 15:33:54","endLine":95,"groupId":"13078","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrReplaceTriggerQuery","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actions@PostgreTriggertrigger@booleancreate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/76/54ffb4315a40da19504597d18246485bac5faa.src","preCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, PostgreTrigger trigger, boolean create) {\n        if (!create)\n            return;\n\n        try {\n            actions.add(new SQLDatabasePersistAction(\n                    \"Create trigger\",\n                    \"CREATE TRIGGER \" + DBUtils.getQuotedIdentifier(trigger)\n                            + \"\\n    AFTER INSERT\"\n                            + \"\\n    ON \" + trigger.getTable().getFullyQualifiedName(DBPEvaluationContext.DDL)\n                            + \"\\n    FOR EACH ROW\"\n                            + \"\\n        EXECUTE PROCEDURE \" + trigger.getFunction(monitor).getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\",\n                    true\n            ));\n        } catch (DBException e) {\n            log.error(e);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/edit/PostgreTriggerManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"adb6156aef7e3867d38843c14f0dd0648da18e46","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 9dda56beff2ce2e556cadb8ed7989f6013fe696b","date":"2020-09-23 15:33:54","modifiedFileCount":"12","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-11-12 00:28:44","codes":[{"authorDate":"2020-01-13 04:05:09","commitOrder":16,"curCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, MySQLTrigger trigger, boolean create) {\n        if (trigger.isPersisted()) {\n            actions.add(\n                new SQLDatabasePersistAction(\"Drop trigger\",\n                    \"DROP TRIGGER IF EXISTS \" + trigger.getFullyQualifiedName(DBPEvaluationContext.DDL))\n            );\n        }\n        MySQLCatalog curCatalog = ((MySQLExecutionContext)executionContext).getDefaultCatalog();\n        if (curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(trigger.getCatalog()), false)); \r\n        }\n\n        actions.add(new SQLDatabasePersistAction(\"Create trigger\", trigger.getBody(), true)); \r\n\n        if (curCatalog != null && curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(curCatalog), false)); \r\n        }\n    }\n","date":"2020-01-13 04:05:09","endLine":76,"groupId":"10270","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createOrReplaceTriggerQuery","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actions@MySQLTriggertrigger@booleancreate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ce/26c4f41e28db76cb23616c53424d356bb474b6.src","preCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, MySQLTrigger trigger, boolean create) {\n        if (trigger.isPersisted()) {\n            actions.add(\n                new SQLDatabasePersistAction(\"Drop trigger\",\n                    \"DROP TRIGGER IF EXISTS \" + trigger.getFullyQualifiedName(DBPEvaluationContext.DDL))\n            );\n        }\n        MySQLCatalog curCatalog = ((MySQLExecutionContext)executionContext).getDefaultCatalog();\n        if (curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(trigger.getCatalog()), false)); \r\n        }\n\n        actions.add(new SQLDatabasePersistAction(\"Create trigger\", trigger.getBody(), true)); \r\n\n        if (curCatalog != null && curCatalog != trigger.getCatalog()) {\n            actions.add(new SQLDatabasePersistAction(\"Set current schema \", \"USE \" + DBUtils.getQuotedIdentifier(curCatalog), false)); \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/edit/MySQLTriggerManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2020-11-12 00:28:44","commitOrder":16,"curCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, PostgreTrigger trigger, boolean create) {\n        if (trigger.isPersisted()) {\n            actions.add(new SQLDatabasePersistAction(\n                \"Drop trigger\",\n                \"DROP TRIGGER IF EXISTS \" + DBUtils.getQuotedIdentifier(trigger) + \" ON \" + trigger.getTable().getFullyQualifiedName(DBPEvaluationContext.DDL)\n            ));\n        }\n\n        actions.add(new SQLDatabasePersistAction(\"Create trigger\", trigger.getBody()));\n    }\n","date":"2020-11-12 00:28:44","endLine":95,"groupId":"10270","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrReplaceTriggerQuery","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actions@PostgreTriggertrigger@booleancreate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/cd/8a1dc2142bb2dab4a15efa822b812e5e9bc731.src","preCode":"    protected void createOrReplaceTriggerQuery(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actions, PostgreTrigger trigger, boolean create) {\n        if (!create)\n            return;\n\n        try {\n            actions.add(new SQLDatabasePersistAction(\n                    \"Create trigger\",\n                    \"CREATE TRIGGER \" + DBUtils.getQuotedIdentifier(trigger)\n                            + \"\\n    AFTER INSERT\"\n                            + \"\\n    ON \" + trigger.getTable().getFullyQualifiedName(DBPEvaluationContext.DDL)\n                            + \"\\n    FOR EACH ROW\"\n                            + \"\\n        EXECUTE PROCEDURE \" + trigger.getFunction(monitor).getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\",\n                    true\n            ));\n        } catch (DBException e) {\n            log.error(e);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/edit/PostgreTriggerManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"dd2e9f80f711531f8324904b10babd71fc7e3419","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: d147c3f0fb155fd90e317204e668b26546145725","date":"2020-11-12 00:28:44","modifiedFileCount":"9","status":"M","submitter":"Serge Rider"}]
