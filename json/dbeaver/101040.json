[{"authorTime":"2018-10-13 20:06:58","codes":[{"authorDate":"2019-09-22 14:58:33","commitOrder":5,"curCode":"    public DBPErrorAssistant.ErrorPosition getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = -1;\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return pos;\n            }\n        }\n        return null;\n    }\n","date":"2019-09-22 14:58:33","endLine":248,"groupId":"14786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/69/e2f271f527462ef496ca3b292febc992919cfc.src","preCode":"    public DBPErrorAssistant.ErrorPosition getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = -1;\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return pos;\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"},{"authorDate":"2018-10-13 20:06:58","commitOrder":5,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        Throwable rootCause = GeneralUtils.getRootCause(error);\n        if (rootCause != null && PostgreConstants.PSQL_EXCEPTION_CLASS_NAME.equals(rootCause.getClass().getName())) {\n            try {\n                Object serverErrorMessage = BeanUtils.readObjectProperty(rootCause, \"serverErrorMessage\");\n                if (serverErrorMessage != null) {\n                    Object position = BeanUtils.readObjectProperty(serverErrorMessage, \"position\");\n                    if (position instanceof Number) {\n                        ErrorPosition pos = new ErrorPosition();\n                        pos.position = ((Number) position).intValue();\n                        return new ErrorPosition[] {pos};\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] {pos};\n            }\n        }\n        return null;\n    }\n","date":"2018-10-13 20:06:58","endLine":567,"groupId":"14786","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/85/7bc3c2d97e39d4ea5566276574e175189e5ffc.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        Throwable rootCause = GeneralUtils.getRootCause(error);\n        if (rootCause != null && PostgreConstants.PSQL_EXCEPTION_CLASS_NAME.equals(rootCause.getClass().getName())) {\n            try {\n                Object serverErrorMessage = BeanUtils.readObjectProperty(rootCause, \"serverErrorMessage\");\n                if (serverErrorMessage != null) {\n                    Object position = BeanUtils.readObjectProperty(serverErrorMessage, \"position\");\n                    if (position instanceof Number) {\n                        ErrorPosition pos = new ErrorPosition();\n                        pos.position = ((Number) position).intValue();\n                        return new ErrorPosition[] {pos};\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] {pos};\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"NB"}],"commitId":"051002627b20fa9c370fe62d00e3aaf3d4376a6e","commitMessage":"@@@Merge pull request #6780 from kai-morich/hana01\n\nadded HANA plugin features:\n\nFormer-commit-id: 74726f27ff1aff071718176b51d45c992dfad465","date":"2019-09-22 14:58:33","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-02-15 23:06:13","codes":[{"authorDate":"2019-09-22 14:58:33","commitOrder":6,"curCode":"    public DBPErrorAssistant.ErrorPosition getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = -1;\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return pos;\n            }\n        }\n        return null;\n    }\n","date":"2019-09-22 14:58:33","endLine":248,"groupId":"101040","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/69/e2f271f527462ef496ca3b292febc992919cfc.src","preCode":"    public DBPErrorAssistant.ErrorPosition getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = -1;\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return pos;\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"N"},{"authorDate":"2021-02-15 23:06:13","commitOrder":6,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        Throwable rootCause = GeneralUtils.getRootCause(error);\n        if (rootCause != null && PostgreConstants.PSQL_EXCEPTION_CLASS_NAME.equals(rootCause.getClass().getName())) {\n            try {\n                Object serverErrorMessage = BeanUtils.readObjectProperty(rootCause, \"serverErrorMessage\");\n                if (serverErrorMessage != null) {\n                    Object position = BeanUtils.readObjectProperty(serverErrorMessage, \"position\");\n                    if (position instanceof Number) {\n                        ErrorPosition pos = new ErrorPosition();\n                        pos.position = ((Number) position).intValue() - 1;\n                        return new ErrorPosition[] {pos};\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] {pos};\n            }\n        }\n        return null;\n    }\n","date":"2021-02-15 23:06:13","endLine":685,"groupId":"101040","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/61/70260b5c00fa6a77c538adc680f016d0edc908.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        Throwable rootCause = GeneralUtils.getRootCause(error);\n        if (rootCause != null && PostgreConstants.PSQL_EXCEPTION_CLASS_NAME.equals(rootCause.getClass().getName())) {\n            try {\n                Object serverErrorMessage = BeanUtils.readObjectProperty(rootCause, \"serverErrorMessage\");\n                if (serverErrorMessage != null) {\n                    Object position = BeanUtils.readObjectProperty(serverErrorMessage, \"position\");\n                    if (position instanceof Number) {\n                        ErrorPosition pos = new ErrorPosition();\n                        pos.position = ((Number) position).intValue();\n                        return new ErrorPosition[] {pos};\n                    }\n                }\n            } catch (Throwable e) {\n                \r\n            }\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] {pos};\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":658,"status":"M"}],"commitId":"90569e2b1ce5b31e533e71fd0bce0a5dce88f152","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: d95021a9cf6ed82b3ee384c643c04a0d8fab5165","date":"2021-02-15 23:06:13","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"}]
