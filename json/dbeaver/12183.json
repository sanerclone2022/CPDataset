[{"authorTime":"2019-07-26 18:15:29","codes":[{"authorDate":"2019-03-26 01:31:38","commitOrder":9,"curCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-03-26 01:31:38","endLine":69,"groupId":"2318","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"MySQLTableBase","params":"(DBRProgressMonitormonitor@MySQLCatalogcatalog@DBSEntitysource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/40/106cf54eb3845383d43cdb858588eb42f4012e.src","preCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"NB"},{"authorDate":"2019-07-26 18:15:29","commitOrder":9,"curCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.partitionKey = source.partitionKey;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-07-26 18:15:29","endLine":111,"groupId":"11991","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"PostgreTableBase","params":"(DBRProgressMonitormonitor@PostgreTableContainercontainer@PostgreTableBasesource@booleanpersisted)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/d461f9d595a078bc34406af8408ff966da7213.src","preCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.partitionKey = source.partitionKey;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"e93bb01cb58b3e7c49dc3cd224f6af6ce447a32e","commitMessage":"@@@#6218 Table list DDL generation redesign (check FK links.  split table DDL if possible)\n\n\nFormer-commit-id: 731ae8ceadc1dfebcf786d8e025d3eb983e6fe9e","date":"2019-07-26 18:15:29","modifiedFileCount":"22","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-30 16:07:44","codes":[{"authorDate":"2019-03-26 01:31:38","commitOrder":10,"curCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-03-26 01:31:38","endLine":69,"groupId":"2318","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"MySQLTableBase","params":"(DBRProgressMonitormonitor@MySQLCatalogcatalog@DBSEntitysource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/40/106cf54eb3845383d43cdb858588eb42f4012e.src","preCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"},{"authorDate":"2019-07-30 16:07:44","commitOrder":10,"curCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.partitionKey = source.partitionKey;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n        this.persistence = source.persistence;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-07-30 16:07:44","endLine":115,"groupId":"9812","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"PostgreTableBase","params":"(DBRProgressMonitormonitor@PostgreTableContainercontainer@PostgreTableBasesource@booleanpersisted)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5e/a7e32632723d6bb73b3ec7d2afd05924cc0860.src","preCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.partitionKey = source.partitionKey;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"816f1293c1d1d969e5d8c1ef89d38d1245b3b83d","commitMessage":"@@@#6377 PG: table create/copy fix (persistence property)\n\n\nFormer-commit-id: db8ef19c8452b9709ad138fe888544bba5f16098","date":"2019-07-30 16:07:44","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-08-09 20:23:34","codes":[{"authorDate":"2019-03-26 01:31:38","commitOrder":11,"curCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-03-26 01:31:38","endLine":69,"groupId":"12183","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"MySQLTableBase","params":"(DBRProgressMonitormonitor@MySQLCatalogcatalog@DBSEntitysource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/40/106cf54eb3845383d43cdb858588eb42f4012e.src","preCode":"    protected MySQLTableBase(DBRProgressMonitor monitor, MySQLCatalog catalog, DBSEntity source) throws DBException {\n        super(catalog, source, false);\n\n        DBSObjectCache<MySQLTableBase, MySQLTableColumn> colCache = getContainer().getTableCache().getChildrenCache(this);\n        \r\n        for (DBSEntityAttribute srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            MySQLTableColumn column = new MySQLTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"},{"authorDate":"2019-08-09 20:23:34","commitOrder":11,"curCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n        this.persistence = source.persistence;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","date":"2019-08-09 20:23:34","endLine":110,"groupId":"12183","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"PostgreTableBase","params":"(DBRProgressMonitormonitor@PostgreTableContainercontainer@PostgreTableBasesource@booleanpersisted)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8f/76cb70794c82396462c2900fcacb261cac8948.src","preCode":"    public PostgreTableBase(DBRProgressMonitor monitor, PostgreTableContainer container, PostgreTableBase source, boolean persisted) throws DBException {\n        super(container, source, persisted);\n        this.ownerId = source.ownerId;\n        this.description = source.description;\n        this.isPartition = source.isPartition;\n        this.partitionKey = source.partitionKey;\n        this.acl = source.acl;\n        this.relOptions = source.relOptions;\n        this.persistence = source.persistence;\n\n        DBSObjectCache<PostgreTableBase, PostgreTableColumn> colCache = getSchema().getTableCache().getChildrenCache(this);\n        \r\n        for (PostgreTableColumn srcColumn : CommonUtils.safeCollection(source.getAttributes(monitor))) {\n            if (DBUtils.isHiddenObject(srcColumn)) {\n                continue;\n            }\n            PostgreTableColumn column = new PostgreTableColumn(monitor, this, srcColumn);\n            colCache.cacheObject(column);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"980fcd257891cb6c5f0f0c4f1f504e84be33164a","commitMessage":"@@@#6203 PG partitions: move part management to PostgreTable. New partition create fix\n\n\nFormer-commit-id: f9c6bcde823d30f84fb2b0c3e02b62b57c0eaed9","date":"2019-08-09 20:23:34","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"}]
