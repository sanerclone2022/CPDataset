[{"authorTime":"2020-02-07 05:09:38","codes":[{"authorDate":"2020-02-07 05:09:38","commitOrder":1,"curCode":"    public static void fillOpenWithMenu(ResultSetViewer viewer, IContributionManager openWithMenu) {\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.getAppFileExtension() != null) {\n                    appProcessors.add(processor);\n                }\n            }\n        }\n\n        appProcessors.sort(Comparator.comparingInt(DataTransferProcessorDescriptor::getOrder));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                viewer.getSite(),\n                processor.getId(),\n                ResultSetHandlerOpenWith.CMD_OPEN_WITH,\n                CommandContributionItem.STYLE_RADIO\n            );\n            params.label = processor.getAppName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerOpenWith.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            openWithMenu.add(new CommandContributionItem(params));\n        }\n    }\n","date":"2020-02-07 05:09:38","endLine":320,"groupId":"4998","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fillOpenWithMenu","params":"(ResultSetViewerviewer@IContributionManageropenWithMenu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/de/01743ffe97bf792024027064e49446c960508d.src","preCode":"    public static void fillOpenWithMenu(ResultSetViewer viewer, IContributionManager openWithMenu) {\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.getAppFileExtension() != null) {\n                    appProcessors.add(processor);\n                }\n            }\n        }\n\n        appProcessors.sort(Comparator.comparingInt(DataTransferProcessorDescriptor::getOrder));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                viewer.getSite(),\n                processor.getId(),\n                ResultSetHandlerOpenWith.CMD_OPEN_WITH,\n                CommandContributionItem.STYLE_RADIO\n            );\n            params.label = processor.getAppName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerOpenWith.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            openWithMenu.add(new CommandContributionItem(params));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/handler/ResultSetHandlerOpenWith.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"},{"authorDate":"2020-02-07 05:09:38","commitOrder":1,"curCode":"    public static void fillCopyAsMenu(ResultSetViewer viewer, IContributionManager copyAsMenu) {\n\n        IWorkbenchPartSite site = viewer.getSite();\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_SPECIAL));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_COLUMN_NAMES));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerMain.CMD_COPY_ROW_NAMES));\n        \r\n        copyAsMenu.add(new Separator());\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.isBinaryFormat()) {\n                    continue;\n                }\n                appProcessors.add(processor);\n            }\n        }\n\n        appProcessors.sort(Comparator.comparing(DataTransferProcessorDescriptor::getName));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                site,\n                processor.getId(),\n                ResultSetHandlerCopyAs.CMD_COPY_AS,\n                CommandContributionItem.STYLE_PUSH\n            );\n            params.label = processor.getName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerCopyAs.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            copyAsMenu.add(new CommandContributionItem(params));\n        }\n    }\n","date":"2020-02-07 05:09:38","endLine":272,"groupId":"4360","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fillCopyAsMenu","params":"(ResultSetViewerviewer@IContributionManagercopyAsMenu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/65/f37cf9e7d4b274b256786fc5a0efebff99c91b.src","preCode":"    public static void fillCopyAsMenu(ResultSetViewer viewer, IContributionManager copyAsMenu) {\n\n        IWorkbenchPartSite site = viewer.getSite();\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_SPECIAL));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_COLUMN_NAMES));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerMain.CMD_COPY_ROW_NAMES));\n        \r\n        copyAsMenu.add(new Separator());\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.isBinaryFormat()) {\n                    continue;\n                }\n                appProcessors.add(processor);\n            }\n        }\n\n        appProcessors.sort(Comparator.comparing(DataTransferProcessorDescriptor::getName));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                site,\n                processor.getId(),\n                ResultSetHandlerCopyAs.CMD_COPY_AS,\n                CommandContributionItem.STYLE_PUSH\n            );\n            params.label = processor.getName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerCopyAs.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            copyAsMenu.add(new CommandContributionItem(params));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/handler/ResultSetHandlerCopyAs.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"B"}],"commitId":"c282a0aa621f4b2d6d045ebb49386f32398f9580","commitMessage":"@@@RSV refactoring (extract nested classes)\n\n\nFormer-commit-id: f6d83ab47904d7db23e3700c1154a1aa10063696","date":"2020-02-07 05:09:38","modifiedFileCount":"12","status":"B","submitter":"serge-rider"},{"authorTime":"2021-04-09 00:26:19","codes":[{"authorDate":"2020-02-07 05:09:38","commitOrder":2,"curCode":"    public static void fillOpenWithMenu(ResultSetViewer viewer, IContributionManager openWithMenu) {\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.getAppFileExtension() != null) {\n                    appProcessors.add(processor);\n                }\n            }\n        }\n\n        appProcessors.sort(Comparator.comparingInt(DataTransferProcessorDescriptor::getOrder));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                viewer.getSite(),\n                processor.getId(),\n                ResultSetHandlerOpenWith.CMD_OPEN_WITH,\n                CommandContributionItem.STYLE_RADIO\n            );\n            params.label = processor.getAppName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerOpenWith.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            openWithMenu.add(new CommandContributionItem(params));\n        }\n    }\n","date":"2020-02-07 05:09:38","endLine":320,"groupId":"10420","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fillOpenWithMenu","params":"(ResultSetViewerviewer@IContributionManageropenWithMenu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/de/01743ffe97bf792024027064e49446c960508d.src","preCode":"    public static void fillOpenWithMenu(ResultSetViewer viewer, IContributionManager openWithMenu) {\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.getAppFileExtension() != null) {\n                    appProcessors.add(processor);\n                }\n            }\n        }\n\n        appProcessors.sort(Comparator.comparingInt(DataTransferProcessorDescriptor::getOrder));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                viewer.getSite(),\n                processor.getId(),\n                ResultSetHandlerOpenWith.CMD_OPEN_WITH,\n                CommandContributionItem.STYLE_RADIO\n            );\n            params.label = processor.getAppName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerOpenWith.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            openWithMenu.add(new CommandContributionItem(params));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/handler/ResultSetHandlerOpenWith.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"N"},{"authorDate":"2021-04-09 00:26:19","commitOrder":2,"curCode":"    public static void fillCopyAsMenu(ResultSetViewer viewer, IContributionManager copyAsMenu) {\n\n        IWorkbenchPartSite site = viewer.getSite();\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_SPECIAL));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_COLUMN_NAMES));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerMain.CMD_COPY_ROW_NAMES));\n        \r\n        copyAsMenu.add(new Separator());\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.isBinaryFormat()) {\n                    continue;\n                }\n                appProcessors.add(processor);\n            }\n        }\n\n        appProcessors.sort(Comparator.comparing(DataTransferProcessorDescriptor::getName));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                site,\n                processor.getId(),\n                ResultSetHandlerCopyAs.CMD_COPY_AS,\n                CommandContributionItem.STYLE_PUSH\n            );\n            params.label = processor.getName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerCopyAs.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            copyAsMenu.add(new CommandContributionItem(params));\n        }\n\n        copyAsMenu.add(new Separator());\n\n        copyAsMenu.add(new Action(ResultSetMessages.dialog_copy_as_configuration_name) {\n            @Override\n            public void run() {\n                new CopyAsConfigurationDialog(viewer).open();\n            }\n        });\n    }\n","date":"2021-04-09 00:26:19","endLine":306,"groupId":"10420","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fillCopyAsMenu","params":"(ResultSetViewerviewer@IContributionManagercopyAsMenu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d0/a92697f804e7aebad9f8bb709fd135bbdc3e36.src","preCode":"    public static void fillCopyAsMenu(ResultSetViewer viewer, IContributionManager copyAsMenu) {\n\n        IWorkbenchPartSite site = viewer.getSite();\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_SPECIAL));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerCopySpecial.CMD_COPY_COLUMN_NAMES));\n        copyAsMenu.add(ActionUtils.makeCommandContribution(site, ResultSetHandlerMain.CMD_COPY_ROW_NAMES));\n        \r\n        copyAsMenu.add(new Separator());\n\n        ResultSetDataContainerOptions options = new ResultSetDataContainerOptions();\n        ResultSetDataContainer dataContainer = new ResultSetDataContainer(viewer, options);\n\n        List<DataTransferProcessorDescriptor> appProcessors = new ArrayList<>();\n\n        for (final DataTransferNodeDescriptor consumerNode : DataTransferRegistry.getInstance().getAvailableConsumers(Collections.singleton(dataContainer))) {\n            for (DataTransferProcessorDescriptor processor : consumerNode.getProcessors()) {\n                if (processor.isBinaryFormat()) {\n                    continue;\n                }\n                appProcessors.add(processor);\n            }\n        }\n\n        appProcessors.sort(Comparator.comparing(DataTransferProcessorDescriptor::getName));\n\n        for (DataTransferProcessorDescriptor processor : appProcessors) {\n            CommandContributionItemParameter params = new CommandContributionItemParameter(\n                site,\n                processor.getId(),\n                ResultSetHandlerCopyAs.CMD_COPY_AS,\n                CommandContributionItem.STYLE_PUSH\n            );\n            params.label = processor.getName();\n            if (processor.getIcon() != null) {\n                params.icon = DBeaverIcons.getImageDescriptor(processor.getIcon());\n            }\n            Map<String, Object> parameters = new HashMap<>();\n            parameters.put(ResultSetHandlerCopyAs.PARAM_PROCESSOR_ID, processor.getFullId());\n            params.parameters = parameters;\n            copyAsMenu.add(new CommandContributionItem(params));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/handler/ResultSetHandlerCopyAs.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"1e1f46a021373bee6c210a658725c7b615cc89c2","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 3cf886b64155ddd1df1b72ce668bff4fb7fcf2c0","date":"2021-04-09 00:26:19","modifiedFileCount":"15","status":"M","submitter":"Serge Rider"}]
