[{"authorTime":"2019-12-22 03:28:45","codes":[{"authorDate":"2019-12-19 03:41:09","commitOrder":3,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2019-12-19 03:41:09","endLine":265,"groupId":"14010","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8d/3ff3b190f13d576766edf9c338a4f866ac59e1.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/tasks/MySQLExportSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"NB"},{"authorDate":"2019-12-22 03:28:45","commitOrder":3,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2019-12-22 03:28:45","endLine":258,"groupId":"5890","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f8/ba96424b2ff9291414e1c56250f39ef7cdd04e.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/tasks/PostgreDatabaseBackupSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"B"}],"commitId":"060fdab33fc1616fc0ff4b402b2f907c5060695d","commitMessage":"@@@#7444 PG restore + script execute tasks\n\n\nFormer-commit-id: de68125fb5527d45fc69365a262cb5811914a5bd","date":"2019-12-22 03:28:45","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-22 03:28:45","codes":[{"authorDate":"2020-02-02 00:10:04","commitOrder":4,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.method\", method.name());\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2020-02-02 00:10:04","endLine":291,"groupId":"14010","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a9/f094c247317055f0827206b2d99b890e637a0d.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/tasks/MySQLExportSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"},{"authorDate":"2019-12-22 03:28:45","commitOrder":4,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2019-12-22 03:28:45","endLine":258,"groupId":"5890","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f8/ba96424b2ff9291414e1c56250f39ef7cdd04e.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/tasks/PostgreDatabaseBackupSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"N"}],"commitId":"8b0ad546d75fa8bb511412fb304c86dbb6505bda","commitMessage":"@@@#7789 MySQL: dump method option save/load\n\n\nFormer-commit-id: a08298c7f79349d0067b73f530f1836420490fc1","date":"2020-02-02 00:10:04","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-22 03:28:45","codes":[{"authorDate":"2020-10-22 19:25:31","commitOrder":5,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.method\", method.name());\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n        store.setValue(MySQLNativeCredentialsSettings.PREFERENCE_NAME, overrideCredentials);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2020-10-22 19:25:31","endLine":305,"groupId":"10156","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/96/fde4667f25ee2ec744fa59e181a029e4fce0bd.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n        store.setValue(\"MySQL.export.method\", method.name());\n        store.setValue(\"MySQL.export.noCreateStatements\", noCreateStatements);\n        store.setValue(\"MySQL.export.addDropStatements\", addDropStatements);\n        store.setValue(\"MySQL.export.disableKeys\", disableKeys);\n        store.setValue(\"MySQL.export.extendedInserts\", extendedInserts);\n        store.setValue(\"MySQL.export.dumpEvents\", dumpEvents);\n        store.setValue(\"MySQL.export.comments\", comments);\n        store.setValue(\"MySQL.export.removeDefiner\", removeDefiner);\n        store.setValue(\"MySQL.export.binariesInHex\", binariesInHex);\n        store.setValue(\"MySQL.export.noData\", noData);\n        store.setValue(\"MySQL.export.showViews\", showViews);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (MySQLDatabaseExportInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"catalog\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (MySQLTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/tasks/MySQLExportSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"},{"authorDate":"2019-12-22 03:28:45","commitOrder":5,"curCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","date":"2019-12-22 03:28:45","endLine":258,"groupId":"10156","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBRRunnableContextrunnableContext@DBPPreferenceStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f8/ba96424b2ff9291414e1c56250f39ef7cdd04e.src","preCode":"    public void saveSettings(DBRRunnableContext runnableContext, DBPPreferenceStore store) {\n        super.saveSettings(runnableContext, store);\n\n        store.setValue(\"pg.export.compression\", compression);\n        store.setValue(\"pg.export.encoding\", encoding);\n        store.setValue(\"pg.export.showViews\", showViews);\n        store.setValue(\"pg.export.useInserts\", useInserts);\n        store.setValue(\"pg.export.noPrivileges\", noPrivileges);\n        store.setValue(\"pg.export.noOwner\", noOwner);\n\n        if (store instanceof DBPPreferenceMap && !CommonUtils.isEmpty(exportObjects)) {\n            \r\n            List<Map<String, Object>> objectList = new ArrayList<>();\n            for (PostgreDatabaseBackupInfo object : exportObjects) {\n                Map<String, Object> objInfo = new LinkedHashMap<>();\n                objInfo.put(\"database\", DBUtils.getObjectFullId(object.getDatabase()));\n                if (!CommonUtils.isEmpty(object.getSchemas())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreSchema schema : object.getSchemas()) {\n                        tableList.add(schema.getName());\n                    }\n                    objInfo.put(\"schemas\", tableList);\n                }\n                if (!CommonUtils.isEmpty(object.getTables())) {\n                    List<String> tableList = new ArrayList<>();\n                    for (PostgreTableBase table : object.getTables()) {\n                        tableList.add(table.getName());\n                    }\n                    objInfo.put(\"tables\", tableList);\n                }\n                objectList.add(objInfo);\n            }\n\n            ((DBPPreferenceMap) store).getPropertyMap().put(\"exportObjects\", objectList);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/tasks/PostgreDatabaseBackupSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"N"}],"commitId":"b31bdc70aaf45a9204c8eb640c774c17d914646e","commitMessage":"@@@Merge pull request #10124 from dbeaver/mysql-credentials#9983\n\n#9983 Checkbox to override credentials stored in system\n\nFormer-commit-id: 5d20717e94fe1e5d127cb7c2bb39d024270a2568","date":"2020-10-22 19:25:31","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"}]
