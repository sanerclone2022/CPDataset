[{"authorTime":"2019-01-05 21:14:01","codes":[{"authorDate":"2019-01-05 21:14:01","commitOrder":5,"curCode":"\tprotected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options)\n\t{\n\t\tExasolRole obj = command.getObject();\n\t\t\n\t\tif (command.getProperties().containsKey(\"description\"))\n\t\t{\n\t\t\t\n\t\t\tactionList.add(Comment(obj));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"priority\"))\n\t\t{\n\t\t\tString script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n\t\t\tactionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t}\n\n\t\t\n\t}\n","date":"2019-01-05 21:14:01","endLine":139,"groupId":"17161","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/1e/95140f40c86a5b70b01066461da9fbb23cdb5e.src","preCode":"\tprotected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options)\n\t{\n\t\tExasolRole obj = command.getObject();\n\t\t\n\t\tif (command.getProperties().containsKey(\"description\"))\n\t\t{\n\t\t\t\n\t\t\tactionList.add(Comment(obj));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"priority\"))\n\t\t{\n\t\t\tString script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n\t\t\tactionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t}\n\n\t\t\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolRoleManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2019-01-05 21:14:01","commitOrder":5,"curCode":"\tprotected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options)\n\t{\n\t\tExasolUser obj = command.getObject();\n\t\t\n\t\tif (command.getProperties().containsKey(\"description\"))\n\t\t{\n\t\t\t\n\t\t\tactionList.add(Comment(obj));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"priority\"))\n\t\t{\n\t\t\tString script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n\t\t\tactionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"dn\")) \n\t\t{\n\t\t\tString script =  String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"kerberosPrincipal\"))\n\t\t{\n\t\t\tString script =  String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"password\")) {\n\t\t\t\n\t\t\tStringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n\t\t\tscript.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n\t\t\tExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n\t\t\tif (! ds.hasAlterUserPrivilege()  ) {\n\t\t\t\tString oldPassword = new UITask<String>() {\n\t\t\t\t\t@Override\n\t\t\t\t\tprotected String runTask()\n\t\t\t\t\t{\n\t\t\t\t\t\tExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\t\t\t\t\t\t\n\t\t                if (dialog.open() != IDialogConstants.OK_ID)\n\t\t                {\n\t\t                    throw new IllegalStateException(\"Password has to be provided\");\n\t\t                }\n\t\t                \n\t\t                return dialog.getPassword();\n\t\t\t\t\t}\n\t\t\t\t}.execute();\n\t\t\t\t\n\t\t\t\tif (CommonUtils.isEmpty(oldPassword))\n\t\t\t\t{\n\t\t            throw new IllegalStateException(\"Old password can not be empty\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tscript.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n\t\t\t}\n\t\t\t\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n\t\t}\n\t}\n","date":"2019-01-05 21:14:01","endLine":195,"groupId":"17161","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fe/a3c6a030ee23b709efd9a34dfd1c7c2de6b791.src","preCode":"\tprotected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options)\n\t{\n\t\tExasolUser obj = command.getObject();\n\t\t\n\t\tif (command.getProperties().containsKey(\"description\"))\n\t\t{\n\t\t\t\n\t\t\tactionList.add(Comment(obj));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"priority\"))\n\t\t{\n\t\t\tString script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n\t\t\tactionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"dn\")) \n\t\t{\n\t\t\tString script =  String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"kerberosPrincipal\"))\n\t\t{\n\t\t\tString script =  String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (command.getProperties().containsKey(\"password\")) {\n\t\t\t\n\t\t\tStringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n\t\t\tscript.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n\t\t\tExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n\t\t\tif (! ds.hasAlterUserPrivilege()  ) {\n\t\t\t\tString oldPassword = new UITask<String>() {\n\t\t\t\t\t@Override\n\t\t\t\t\tprotected String runTask()\n\t\t\t\t\t{\n\t\t\t\t\t\tExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\t\t\t\t\t\t\n\t\t                if (dialog.open() != IDialogConstants.OK_ID)\n\t\t                {\n\t\t                    throw new IllegalStateException(\"Password has to be provided\");\n\t\t                }\n\t\t                \n\t\t                return dialog.getPassword();\n\t\t\t\t\t}\n\t\t\t\t}.execute();\n\t\t\t\t\n\t\t\t\tif (CommonUtils.isEmpty(oldPassword))\n\t\t\t\t{\n\t\t            throw new IllegalStateException(\"Old password can not be empty\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tscript.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n\t\t\t}\n\t\t\t\n\t\t\tactionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n\t\t}\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolUserManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"MB"}],"commitId":"53a256b0083790f745567d007134d501869f2369","commitMessage":"@@@Merge pull request #4922 from Sargul/devel\n\nExasol V6.1 update part 1\n\nFormer-commit-id: 3b04f5eb137b4346d65111cbada26d4bbdf2c531","date":"2019-01-05 21:14:01","modifiedFileCount":"22","status":"M","submitter":"Charly"},{"authorTime":"2020-01-13 04:05:09","codes":[{"authorDate":"2020-01-13 04:05:09","commitOrder":6,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n\n    }\n","date":"2020-01-13 04:05:09","endLine":130,"groupId":"17161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7e/5f440bd5c146479dfdbb59959314f0929056e9.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolRoleManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2020-01-13 04:05:09","commitOrder":6,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","date":"2020-01-13 04:05:09","endLine":185,"groupId":"17161","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/54/3a6fce94e9ca303e8e3672cbaa9bafd60a19f0.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolUserManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"ea43e170ae31b314627af8f5035dc13373eefe5f","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: b8a88ef308f898dd3c5f78540f0e556e77b18cad","date":"2020-01-13 04:05:09","modifiedFileCount":"136","status":"M","submitter":"serge-rider"},{"authorTime":"2020-03-29 23:20:31","codes":[{"authorDate":"2020-03-29 23:20:31","commitOrder":7,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n        ExasolPriority priority = obj.getPriority();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \tString script = \"\";\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) { \n        \t\tscript = String.format(\"ALTER ROLE %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \telse if (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n        \t\tscript = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t\t} \n        }\n\n\n    }\n","date":"2020-03-29 23:20:31","endLine":140,"groupId":"9392","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/81/f102ee9a5b19d7d44821ae07cdcf0b6a94e5ae.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolRoleManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-03-29 23:20:31","commitOrder":7,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \t\n        \tExasolPriority priority = obj.getPriority();\n        \t\n        \tif (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"ALTER USER  %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","date":"2020-03-29 23:20:31","endLine":196,"groupId":"17161","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7f/1821b325cd7e34476f3a69e6a69cfdc4381264.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n            String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(obj.getPriority()), DBUtils.getQuotedIdentifier(obj));\n            actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolUserManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"6bbd33ca1f75eb83281d418b71626094fde67629","commitMessage":"@@@Merge pull request #8292 from Sargul/devel\n\nSupport for Consumer Groups and HASHTYPE data type in Exasol V7.0\n\nFormer-commit-id: 34c121a81a95dd5fc20d42971476054be5070695","date":"2020-03-29 23:20:31","modifiedFileCount":"15","status":"M","submitter":"Charly"},{"authorTime":"2020-05-12 14:20:05","codes":[{"authorDate":"2020-03-29 23:20:31","commitOrder":8,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n        ExasolPriority priority = obj.getPriority();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \tString script = \"\";\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) { \n        \t\tscript = String.format(\"ALTER ROLE %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \telse if (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n        \t\tscript = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t\t} \n        }\n\n\n    }\n","date":"2020-03-29 23:20:31","endLine":140,"groupId":"9392","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/81/f102ee9a5b19d7d44821ae07cdcf0b6a94e5ae.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n        ExasolPriority priority = obj.getPriority();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \tString script = \"\";\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) { \n        \t\tscript = String.format(\"ALTER ROLE %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \telse if (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n        \t\tscript = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t\t} \n        }\n\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolRoleManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"},{"authorDate":"2020-05-12 14:20:05","commitOrder":8,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \t\n        \tExasolPriority priority = obj.getPriority();\n        \t\n        \tif (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"ALTER USER  %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","date":"2020-05-12 14:20:05","endLine":179,"groupId":"17161","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/50/adcfff60f784be1213e670f1bc01065b85417c.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \t\n        \tExasolPriority priority = obj.getPriority();\n        \t\n        \tif (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"ALTER USER  %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolUserManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"fa8926babf733362989ac648f8206ad5fc2ddc54","commitMessage":"@@@Merge pull request #8672 from dbeaver/exasol3#8638\n\n#8638\n\nFormer-commit-id: db552fcbc75d1b3d9a11ed38d9d162d0edbb8711","date":"2020-05-12 14:20:05","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-05-13 04:26:45","codes":[{"authorDate":"2020-03-29 23:20:31","commitOrder":9,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n        ExasolPriority priority = obj.getPriority();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \tString script = \"\";\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) { \n        \t\tscript = String.format(\"ALTER ROLE %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \telse if (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n        \t\tscript = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t\t} \n        }\n\n\n    }\n","date":"2020-03-29 23:20:31","endLine":140,"groupId":"101118","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/81/f102ee9a5b19d7d44821ae07cdcf0b6a94e5ae.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolRole obj = command.getObject();\n        ExasolPriority priority = obj.getPriority();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \tString script = \"\";\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) { \n        \t\tscript = String.format(\"ALTER ROLE %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \telse if (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n        \t\tscript = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n\t\t\t} \n        }\n\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolRoleManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"N"},{"authorDate":"2020-05-13 04:26:45","commitOrder":9,"curCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \t\n        \tExasolPriority priority = obj.getPriority();\n        \t\n        \tif (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"ALTER USER  %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","date":"2020-05-13 04:26:45","endLine":179,"groupId":"101118","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"addObjectModifyActions","params":"(DBRProgressMonitormonitor@DBCExecutionContextexecutionContext@List<DBEPersistAction>actionList@ObjectChangeCommandcommand@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d0/2b55129fd1ec54d4a0fd088dc31492567a9892.src","preCode":"    protected void addObjectModifyActions(DBRProgressMonitor monitor, DBCExecutionContext executionContext, List<DBEPersistAction> actionList,\n                                          ObjectChangeCommand command, Map<String, Object> options) {\n        ExasolUser obj = command.getObject();\n\n        if (command.getProperties().containsKey(\"description\")) {\n\n            actionList.add(Comment(obj));\n        }\n\n        if (command.getProperties().containsKey(\"priority\")) {\n        \t\n        \tExasolPriority priority = obj.getPriority();\n        \t\n        \tif (ExasolConstants.PRIORITY_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"GRANT PRIORITY GROUP %s to %s\", DBUtils.getQuotedIdentifier(priority), DBUtils.getQuotedIdentifier(obj));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        \tif (ExasolConstants.CONSUMER_GROUP_CLASS.equals(priority.getClass().getName())) {\n                String script = String.format(\"ALTER USER  %s SET CONSUMER_GROUP = %s\", DBUtils.getQuotedIdentifier(obj), DBUtils.getQuotedIdentifier(priority));\n                actionList.add(new SQLDatabasePersistAction(ExasolMessages.manager_assign_priority_group, script));\n        \t}\n        }\n\n        if (command.getProperties().containsKey(\"dn\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED AT LDAP AS '%s'\", obj.getDn());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"kerberosPrincipal\")) {\n            String script = String.format(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED BY KERBEROS PRINCIPAL '%s'\", obj.getKerberosPrincipal());\n            actionList.add(new SQLDatabasePersistAction(\"alter user\", script));\n            return;\n        }\n\n        if (command.getProperties().containsKey(\"password\")) {\n\n            StringBuilder script = new StringBuilder(\"ALTER USER \" + DBUtils.getQuotedIdentifier(obj) + \" IDENTIFIED \");\n            script.append(\" BY \\\"\" + obj.getPassword() + \"\\\" \");\n            ExasolDataSource ds = (ExasolDataSource) obj.getDataSource();\n            if (!ds.hasAlterUserPrivilege()) {\n                String oldPassword = new UITask<String>() {\n                    @Override\n                    protected String runTask() {\n                        ExasolUserQueryPassword dialog = new ExasolUserQueryPassword(UIUtils.getActiveWorkbenchShell());\n\n                        if (dialog.open() != IDialogConstants.OK_ID) {\n                            throw new IllegalStateException(\"Password has to be provided\");\n                        }\n\n                        return dialog.getPassword();\n                    }\n                }.execute();\n\n                if (CommonUtils.isEmpty(oldPassword)) {\n                    throw new IllegalStateException(\"Old password can not be empty\");\n                }\n\n                script.append(\" REPLACE \\\"\" + oldPassword + \"\\\"\");\n            }\n\n            actionList.add(new SQLDatabasePersistAction(\"Modify User\", script.toString()));\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/manager/ExasolUserManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"3d2b271addf9db569a4a8b359f03e0bfe8c3badc","commitMessage":"@@@Merge pull request #8680 from dbeaver/exasol4#8638\n\n#8638 ui-part of ext.exasol extradition \n\nFormer-commit-id: 55b3e1fd9fd137f2c0bedb47aca4163024ea32ab","date":"2020-05-13 04:26:45","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"}]
