[{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":1,"curCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                out.write(imagePath);\n            }\n        }\n    }\n","date":"2018-08-15 00:53:44","endLine":164,"groupId":"5664","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6a/73a51148014f11c437624369f34a1bf6e5d68e.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                out.write(imagePath);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterXML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2018-08-15 00:53:44","commitOrder":1,"curCode":"    private void writeImageCell(File file) throws DBException\n    {\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        }\n        else {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = ((BufferedImage) image).getWidth();\n                int height = ((BufferedImage) image).getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale = 1;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE /(float)width;\n                    }\n                    else {\n                        scale = IMAGE_FRAME_SIZE /(float)height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            }\n            else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","date":"2018-08-15 00:53:44","endLine":198,"groupId":"5664","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e7/05db00497c8d4c6eb3da81c8661b580c2ad0f2.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        }\n        else {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = ((BufferedImage) image).getWidth();\n                int height = ((BufferedImage) image).getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale = 1;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE /(float)width;\n                    }\n                    else {\n                        scale = IMAGE_FRAME_SIZE /(float)height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            }\n            else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterHTML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"aa14dc53c5c488a5ae30d1a1ef21f3c0f0ddea31","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 82f7a4fe56fccb9cb54aecddfd86d69cd795214f","date":"2018-08-15 00:53:44","modifiedFileCount":"162","status":"B","submitter":"serge@jkiss.org"},{"authorTime":"2019-04-09 21:32:05","codes":[{"authorDate":"2019-04-09 21:32:05","commitOrder":2,"curCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                getWriter().write(imagePath);\n            }\n        }\n    }\n","date":"2019-04-09 21:32:05","endLine":163,"groupId":"5664","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/55/5729c5827958e8e934af8b50fb916bb1c86d1d.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                out.write(imagePath);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterXML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2019-04-09 21:32:05","commitOrder":2,"curCode":"    private void writeImageCell(File file) throws DBException\n    {\n        PrintWriter out = getWriter();\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        }\n        else {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = ((BufferedImage) image).getWidth();\n                int height = ((BufferedImage) image).getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale = 1;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE /(float)width;\n                    }\n                    else {\n                        scale = IMAGE_FRAME_SIZE /(float)height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            }\n            else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","date":"2019-04-09 21:32:05","endLine":201,"groupId":"5664","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/45/582e4946dac910e9b2784258fcb8b841f4a16d.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        }\n        else {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = ((BufferedImage) image).getWidth();\n                int height = ((BufferedImage) image).getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale = 1;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE /(float)width;\n                    }\n                    else {\n                        scale = IMAGE_FRAME_SIZE /(float)height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            }\n            else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterHTML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"d14f82cbf44fd6a5a56f8c6741caf2bcedd52944","commitMessage":"@@@#1646 Export to multiple files impl\n\n\nFormer-commit-id: 9c3ff3991914d5f132efddbfce790867ea971583","date":"2019-04-09 21:32:05","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-02-23 02:15:06","codes":[{"authorDate":"2019-04-09 21:32:05","commitOrder":3,"curCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                getWriter().write(imagePath);\n            }\n        }\n    }\n","date":"2019-04-09 21:32:05","endLine":163,"groupId":"10677","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/55/5729c5827958e8e934af8b50fb916bb1c86d1d.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        if (file != null && file.exists()) {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n                getWriter().write(imagePath);\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterXML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"},{"authorDate":"2020-02-23 02:15:06","commitOrder":3,"curCode":"    private void writeImageCell(File file) throws DBException {\n        PrintWriter out = getWriter();\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        } else {\n            BufferedImage image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = image.getWidth();\n                int height = image.getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE / (float) width;\n                    } else {\n                        scale = IMAGE_FRAME_SIZE / (float) height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            } else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","date":"2020-02-23 02:15:06","endLine":215,"groupId":"10677","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeImageCell","params":"(Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a3/9b059a90299533ed7a93c693a8bcda5e7a64cd.src","preCode":"    private void writeImageCell(File file) throws DBException\n    {\n        PrintWriter out = getWriter();\n        out.write(\"<td>\");\n        if (file == null || !file.exists()) {\n            out.write(\"&nbsp;\");\n        }\n        else {\n            Image image = null;\n            try {\n                image = ImageIO.read(file);\n            } catch (IOException e) {\n                throw new DBException(\"Can't read an exported image \" + image, e);\n            }\n\n            if (image != null) {\n                String imagePath = file.getAbsolutePath();\n                imagePath = \"files/\" + imagePath.substring(imagePath.lastIndexOf(File.separator));\n\n                int width = ((BufferedImage) image).getWidth();\n                int height = ((BufferedImage) image).getHeight();\n                int rwidth = width;\n                int rheight = height;\n\n                if (width > IMAGE_FRAME_SIZE || height > IMAGE_FRAME_SIZE) {\n                    float scale = 1;\n                    if (width > height) {\n                        scale = IMAGE_FRAME_SIZE /(float)width;\n                    }\n                    else {\n                        scale = IMAGE_FRAME_SIZE /(float)height;\n                    }\n                    rwidth = (int) (rwidth * scale);\n                    rheight = (int) (rheight * scale);\n                }\n                out.write(\"<a href=\\\"\" + imagePath + \"\\\">\");\n                out.write(\"<img src=\\\"\" + imagePath + \"\\\" width=\\\"\" + rwidth + \"\\\" height=\\\"\" + rheight + \"\\\" />\");\n                out.write(\"</a>\");\n            }\n            else {\n                out.write(\"&nbsp;\");\n            }\n        }\n        out.write(\"</td>\");\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterHTML.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"ca6698e000159f722d11e001130bbd8c19992210","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 4e115003cefdc7e5990d3f71cbecd22b5e5b40a1","date":"2020-02-23 02:15:06","modifiedFileCount":"27","status":"M","submitter":"serge-rider"}]
