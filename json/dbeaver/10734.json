[{"authorTime":"2018-02-24 03:49:02","codes":[{"authorDate":"2018-02-24 03:49:02","commitOrder":3,"curCode":"    public Collection<GenericTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table instanceof VerticaTable && ((VerticaTable) table).isFlexTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2018-02-24 03:49:02","endLine":76,"groupId":"11062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFlexTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/23/5800748e824c0c3910d46926875fe49e389fbc.src","preCode":"    public Collection<GenericTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table instanceof VerticaTable && ((VerticaTable) table).isFlexTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.vertica/src/org/jkiss/dbeaver/ext/vertica/model/VerticaSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2018-02-24 03:49:02","commitOrder":3,"curCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2018-02-24 03:49:02","endLine":128,"groupId":"4771","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPhysicalTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/26/dbbdb0f9564b7323456a66d5bbab6e81329963.src","preCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericObjectContainer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"MB"}],"commitId":"41aa6ac01b2476d1b380547c34addc03bb72d5e6","commitMessage":"@@@Vertica flex tables. Generic tables model refactoring.\n\n\nFormer-commit-id: c94f6ad60bf8e2d3d3ec9c5b52c2734ff4e87c20","date":"2018-02-24 03:49:02","modifiedFileCount":"5","status":"M","submitter":"serge-rider"},{"authorTime":"2018-02-24 03:49:02","codes":[{"authorDate":"2018-10-13 20:06:58","commitOrder":4,"curCode":"    public Collection<GenericTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2018-10-13 20:06:58","endLine":122,"groupId":"5673","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFlexTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b8/7802a417703d7ca42f852f11393d7f73951e7f.src","preCode":"    public Collection<GenericTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table instanceof VerticaTable && ((VerticaTable) table).isFlexTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.vertica/src/org/jkiss/dbeaver/ext/vertica/model/VerticaSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2018-02-24 03:49:02","commitOrder":4,"curCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2018-02-24 03:49:02","endLine":128,"groupId":"4771","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPhysicalTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/26/dbbdb0f9564b7323456a66d5bbab6e81329963.src","preCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericObjectContainer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"}],"commitId":"51c8ddf4ec4daa621c3feff34d120e934633a6ac","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 17f886546eced0902561199e308934e6d98952a0","date":"2018-10-13 20:06:58","modifiedFileCount":"410","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2019-07-02 19:55:19","commitOrder":5,"curCode":"    public Collection<VerticaTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<VerticaTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add((VerticaTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2019-07-02 19:55:19","endLine":123,"groupId":"786","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getFlexTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/53/d109fce8f391462de5c0a6c6b13ebf3f7b5e34.src","preCode":"    public Collection<GenericTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.vertica/src/org/jkiss/dbeaver/ext/vertica/model/VerticaSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2019-07-02 19:55:19","commitOrder":5,"curCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add((GenericTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2019-07-02 19:55:19","endLine":130,"groupId":"786","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPhysicalTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ce/374755ecef9de9e07cbbacfe6f19995dd1f7c8.src","preCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTable> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTable table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add(table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericObjectContainer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"35c8a5c86f34a9accca540a7ad7f1e5420630e9b","commitMessage":"@@@Generic model refactoring (split tables and views)\n\n\nFormer-commit-id: f967aa59fa19129394816550531b85ccb2ea7b73","date":"2019-07-02 19:55:19","modifiedFileCount":"53","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2020-08-08 15:57:12","codes":[{"authorDate":"2020-08-08 15:57:12","commitOrder":6,"curCode":"    public List<VerticaTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<VerticaTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add((VerticaTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2020-08-08 15:57:12","endLine":126,"groupId":"786","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getFlexTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/49/58028e9f56f4ae1948fee46204ad893879adeb.src","preCode":"    public Collection<VerticaTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<VerticaTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add((VerticaTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.vertica/src/org/jkiss/dbeaver/ext/vertica/model/VerticaSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2020-08-08 15:57:12","commitOrder":6,"curCode":"    public List<? extends GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add((GenericTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2020-08-08 15:57:12","endLine":122,"groupId":"786","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getPhysicalTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4c/58c43a7382d23827aad0acc4ddeef7483a766d.src","preCode":"    public Collection<GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        Collection<GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add((GenericTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericObjectContainer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"4519a5ac8edd85180a28007d13168d6e6693a326","commitMessage":"@@@#9478 Target table type detect fix\n\n\nFormer-commit-id: 95ff09b94b605832db5ad340b829db8c77c90f7d","date":"2020-08-08 15:57:12","modifiedFileCount":"5","status":"M","submitter":"serge-rider"},{"authorTime":"2020-08-08 15:57:12","codes":[{"authorDate":"2021-06-25 00:33:14","commitOrder":7,"curCode":"    public List<VerticaFlexTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<VerticaFlexTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table instanceof VerticaFlexTable) {\n                    filtered.add((VerticaFlexTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2021-06-25 00:33:14","endLine":130,"groupId":"10734","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getFlexTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/51/4bdaeb0412225e6abffc7e6eee9fd1a14bb9a9.src","preCode":"    public List<VerticaTable> getFlexTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<VerticaTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table instanceof VerticaTable && flexTablNames.contains(table.getName())) {\n                    filtered.add((VerticaTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.vertica/src/org/jkiss/dbeaver/ext/vertica/model/VerticaSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2020-08-08 15:57:12","commitOrder":7,"curCode":"    public List<? extends GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add((GenericTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","date":"2020-08-08 15:57:12","endLine":122,"groupId":"10734","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getPhysicalTables","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4c/58c43a7382d23827aad0acc4ddeef7483a766d.src","preCode":"    public List<? extends GenericTable> getPhysicalTables(DBRProgressMonitor monitor) throws DBException {\n        List<? extends GenericTableBase> tables = getTables(monitor);\n        if (tables != null) {\n            List<GenericTable> filtered = new ArrayList<>();\n            for (GenericTableBase table : tables) {\n                if (table.isPhysicalTable()) {\n                    filtered.add((GenericTable) table);\n                }\n            }\n            return filtered;\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericObjectContainer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"}],"commitId":"5046f3fd473c5fef9e6462088c1d5bc3327e97f3","commitMessage":"@@@Merge pull request #12963 from dbeaver/verticaFlexTables#12477\n\n#12477 flex table reading and creating changed","date":"2021-06-25 00:33:14","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"}]
