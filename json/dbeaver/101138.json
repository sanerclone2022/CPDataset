[{"authorTime":"2015-07-01 22:08:05","codes":[{"authorDate":"2015-07-01 22:08:05","commitOrder":1,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        final JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","date":"2015-07-01 22:08:05","endLine":128,"groupId":"3898","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/66fa4926e2f1c4df6afb8d50f0e5131ba3dd7c.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        final JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2015-07-01 22:08:05","commitOrder":1,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","date":"2015-07-01 22:08:05","endLine":166,"groupId":"170","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/66fa4926e2f1c4df6afb8d50f0e5131ba3dd7c.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"90ac579a64c970ba65c348aefb5b6d42d6063cc7","commitMessage":"@@@Plugins directories renamed (ext)\n\nFormer-commit-id: 88615645e80b32fba90eb0a74130657937e5c811","date":"2015-07-01 22:08:05","modifiedFileCount":"0","status":"B","submitter":"jurgen"},{"authorTime":"2015-10-03 06:58:22","codes":[{"authorDate":"2015-10-03 06:58:22","commitOrder":2,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2015-10-03 06:58:22","endLine":124,"groupId":"3898","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/44/c51d5bc32df3ada96f10a73393def0ad9e82d7.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        final JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2015-10-03 06:58:22","commitOrder":2,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2015-10-03 06:58:22","endLine":158,"groupId":"170","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/44/c51d5bc32df3ada96f10a73393def0ad9e82d7.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask);\n        try {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n        finally {\n            dbResult.close();\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"7d8e925311844771cefc37311309cb62b064a6ec","commitMessage":"@@@Java 1.7 -> fix auto-close\n\nFormer-commit-id: 6d25c7bb871b38b224ca2771a7148a371cf306bf","date":"2015-10-03 06:58:22","modifiedFileCount":"78","status":"M","submitter":"jurgen"},{"authorTime":"2018-05-05 18:34:34","codes":[{"authorDate":"2018-05-05 18:34:34","commitOrder":3,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? dataSource.getAllObjectsPattern() : catalog.getName(),\n            schema == null ? dataSource.getAllObjectsPattern() : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-05 18:34:34","endLine":123,"groupId":"3898","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/8132093e6b03bbc6311011217d148fa13b8dd2.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-05-05 18:34:34","commitOrder":3,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? dataSource.getAllObjectsPattern() : catalog.getName(),\n            schema == null ? dataSource.getAllObjectsPattern() : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-05 18:34:34","endLine":157,"groupId":"170","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/8132093e6b03bbc6311011217d148fa13b8dd2.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"1545129c6a90931c2886bcd39e05f07394caae8f","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 6528d7d0cf33f5d063bb2991f113f0e19c8e782a","date":"2018-05-05 18:34:34","modifiedFileCount":"99","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2018-05-11 01:33:03","codes":[{"authorDate":"2018-05-11 01:33:03","commitOrder":4,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-11 01:33:03","endLine":123,"groupId":"3898","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5f/ca06ec944c93c955f3cb80ff53e265c6ad2de6.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? dataSource.getAllObjectsPattern() : catalog.getName(),\n            schema == null ? dataSource.getAllObjectsPattern() : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-05-11 01:33:03","commitOrder":4,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-11 01:33:03","endLine":157,"groupId":"170","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5f/ca06ec944c93c955f3cb80ff53e265c6ad2de6.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? dataSource.getAllObjectsPattern() : catalog.getName(),\n            schema == null ? dataSource.getAllObjectsPattern() : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"bf7d16983cba3869de65dac1f8988c32e62126ce","commitMessage":"@@@#3421 Generic driver auto-complete fix\n\n\nFormer-commit-id: dff60f7c69938c0d696abc0ad563dca981e2766d","date":"2018-05-11 01:33:03","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2018-11-02 05:32:47","codes":[{"authorDate":"2018-05-11 01:33:03","commitOrder":5,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-11 01:33:03","endLine":123,"groupId":"3898","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5f/ca06ec944c93c955f3cb80ff53e265c6ad2de6.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"},{"authorDate":"2018-11-02 05:32:47","commitOrder":5,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                \r\n                procName = GenericUtils.normalizeProcedureName(procName);\n\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName,\n                    uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-11-02 05:32:47","endLine":161,"groupId":"170","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e3/6ca4205244156340528f0fa0e77e1e61d3d74e.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName, uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"4fd90f447731f078e3b93f93add22e5091f42dbf","commitMessage":"@@@#4350 SQL Server procedures naming fix (native driver)\n\n\nFormer-commit-id: 578ee772709664f980a7b4d24313fc419aa9b766","date":"2018-11-02 05:32:47","modifiedFileCount":"4","status":"M","submitter":"serge-rider"},{"authorTime":"2018-11-13 04:08:36","codes":[{"authorDate":"2018-05-11 01:33:03","commitOrder":6,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-11 01:33:03","endLine":123,"groupId":"3898","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5f/ca06ec944c93c955f3cb80ff53e265c6ad2de6.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"},{"authorDate":"2018-11-13 04:08:36","commitOrder":6,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : JDBCUtils.escapeWildCards(session, catalog.getName()),\n            schema == null ? null : JDBCUtils.escapeWildCards(session, schema.getName()),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                \r\n                procName = GenericUtils.normalizeProcedureName(procName);\n\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName,\n                    uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-11-13 04:08:36","endLine":162,"groupId":"170","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/be/c07093a95e85b64bee36be77d6074d7328630f.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                \r\n                procName = GenericUtils.normalizeProcedureName(procName);\n\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName,\n                    uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"d1b88a70c1aabdc30f5f8e7dcdf0383b4e7f5b51","commitMessage":"@@@#4587 Escape search masks in DatabaseMetaData calls\n\n\nFormer-commit-id: c82e2039ea7b9789d972a83fb8a6535bdcefa665","date":"2018-11-13 04:08:36","modifiedFileCount":"11","status":"M","submitter":"serge-rider"},{"authorTime":"2018-11-13 22:45:14","codes":[{"authorDate":"2018-05-11 01:33:03","commitOrder":7,"curCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-05-11 01:33:03","endLine":123,"groupId":"101138","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"findTablesByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringtableNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5f/ca06ec944c93c955f3cb80ff53e265c6ad2de6.src","preCode":"    private void findTablesByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String tableNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject tableObject = getDataSource().getMetaObject(GenericConstants.OBJECT_TABLE);\n        final DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getTables(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : schema.getName(),\n            tableNameMask,\n            null)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_SCHEM);\n                String tableName = GenericUtils.safeGetStringTrimmed(tableObject, dbResult, JDBCConstants.TABLE_NAME);\n                if (CommonUtils.isEmpty(tableName)) {\n                    continue;\n                }\n                objects.add(new TableReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    tableName,\n                    GenericUtils.safeGetString(tableObject, dbResult, JDBCConstants.REMARKS)));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"},{"authorDate":"2018-11-13 22:45:14","commitOrder":7,"curCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : catalog.getName(),\n            schema == null ? null : JDBCUtils.escapeWildCards(session, schema.getName()),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                \r\n                procName = GenericUtils.normalizeProcedureName(procName);\n\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName,\n                    uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","date":"2018-11-13 22:45:14","endLine":162,"groupId":"101138","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"findProceduresByMask","params":"(JDBCSessionsession@GenericCatalogcatalog@GenericSchemaschema@StringprocNameMask@intmaxResults@List<DBSObjectReference>objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b5/8cc5088f9cfbccf9c1753b786e9dc81eacea6f.src","preCode":"    private void findProceduresByMask(JDBCSession session, GenericCatalog catalog, GenericSchema schema, String procNameMask, int maxResults, List<DBSObjectReference> objects)\n        throws SQLException, DBException\n    {\n        final GenericMetaObject procObject = getDataSource().getMetaObject(GenericConstants.OBJECT_PROCEDURE);\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCResultSet dbResult = session.getMetaData().getProcedures(\n            catalog == null ? null : JDBCUtils.escapeWildCards(session, catalog.getName()),\n            schema == null ? null : JDBCUtils.escapeWildCards(session, schema.getName()),\n            procNameMask)) {\n            while (dbResult.next()) {\n                if (monitor.isCanceled()) {\n                    break;\n                }\n                String catalogName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_CAT);\n                String schemaName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_SCHEM);\n                String procName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.PROCEDURE_NAME);\n                String uniqueName = GenericUtils.safeGetStringTrimmed(procObject, dbResult, JDBCConstants.SPECIFIC_NAME);\n                if (CommonUtils.isEmpty(procName)) {\n                    continue;\n                }\n                if (CommonUtils.isEmpty(uniqueName)) {\n                    uniqueName = procName;\n                }\n                \r\n                procName = GenericUtils.normalizeProcedureName(procName);\n\n                objects.add(new ProcedureReference(\n                    findContainer(session.getProgressMonitor(), catalog, schema, catalogName, schemaName),\n                    catalogName,\n                    procName,\n                    uniqueName));\n                if (objects.size() >= maxResults) {\n                    break;\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"1c0ff2465f596ddc6adacd42cf11049662fa86f4","commitMessage":"@@@#4587 Do not use mask escape for params which are not supposed to use patterns\n\n\nFormer-commit-id: 52e23624b6144939864dc94b5da6017a266e7889","date":"2018-11-13 22:45:14","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"}]
