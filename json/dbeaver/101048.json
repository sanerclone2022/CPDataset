[{"authorTime":"2020-02-13 21:32:49","codes":[{"authorDate":"2020-03-09 02:54:32","commitOrder":6,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-03-09 02:54:32","endLine":144,"groupId":"6309","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/c395b502d698104d8c4d24fd93f09572e5b0a4.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/DatabaseNativeAuthModelConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2020-02-13 21:32:49","commitOrder":6,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-02-13 21:32:49","endLine":231,"groupId":"3724","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/a6d11c9fac75d5ae10e2ee9ca198851e4c2b65.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageAbstract.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"NB"}],"commitId":"c72093d775f9075bcfa9a112c1dcc3c13d1b8101","commitMessage":"@@@#8128 Initial model + MySQL connection page redesign\n\n\nFormer-commit-id: 8ede44e5a8ecdf54346fb3afde75fff82051341f","date":"2020-03-09 02:54:32","modifiedFileCount":"18","status":"M","submitter":"serge-rider"},{"authorTime":"2020-02-13 21:32:49","codes":[{"authorDate":"2020-03-10 04:07:44","commitOrder":7,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-03-10 04:07:44","endLine":144,"groupId":"6309","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f0/67c387acf9e0555c06e2b0b7a3c96033fbca9a.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/DatabaseNativeAuthModelConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-02-13 21:32:49","commitOrder":7,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-02-13 21:32:49","endLine":231,"groupId":"3724","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/a6d11c9fac75d5ae10e2ee9ca198851e4c2b65.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageAbstract.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"56664f85f388c01f40fbcff52226a1c95a5063a4","commitMessage":"@@@#8128 PG connection page adoption. UI utils.\n\n\nFormer-commit-id: 53818541caae21f5bcfbf6b780a264d39b0aa98e","date":"2020-03-10 04:07:44","modifiedFileCount":"7","status":"M","submitter":"serge-rider"},{"authorTime":"2020-02-13 21:32:49","codes":[{"authorDate":"2020-03-18 05:01:23","commitOrder":8,"curCode":"    protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) {\n        Label passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password);\n        passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n\n        Composite passPH = UIUtils.createComposite(parent, 2);\n        passPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n        createPasswordText(passPH, null);\n        passwordText.addModifyListener(e -> propertyChangeListener.run());\n\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(passPH, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-03-18 05:01:23","endLine":148,"groupId":"4249","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@RunnablepropertyChangeListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fa/e51084bdc4bbaedaf70040cd46b6f80b417171.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/DatabaseNativeAuthModelConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-02-13 21:32:49","commitOrder":8,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-02-13 21:32:49","endLine":231,"groupId":"3724","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/a6d11c9fac75d5ae10e2ee9ca198851e4c2b65.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageAbstract.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"942827796a941bc1ec188ded9cfc478eac0ae965","commitMessage":"@@@#8128 Unified authentication UI\n\n\nFormer-commit-id: 589072347d73d2bde647231a7209e7a919090eb9","date":"2020-03-18 05:01:23","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2020-02-13 21:32:49","codes":[{"authorDate":"2021-01-12 19:15:19","commitOrder":9,"curCode":"    protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) {\n        Label passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password);\n        passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n\n        Composite passPH = UIUtils.createComposite(parent, 2);\n        passPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n        createPasswordText(passPH, null);\n        passwordText.addModifyListener(e -> propertyChangeListener.run());\n\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(passPH, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        savePasswordCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                passwordText.setEnabled(savePasswordCheck.getSelection());\n            }\n        });\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2021-01-12 19:15:19","endLine":161,"groupId":"11687","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@RunnablepropertyChangeListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/26/98511a621e5f9a8382799af510637188d60a5a.src","preCode":"    protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) {\n        Label passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password);\n        passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n\n        Composite passPH = UIUtils.createComposite(parent, 2);\n        passPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n        createPasswordText(passPH, null);\n        passwordText.addModifyListener(e -> propertyChangeListener.run());\n\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(passPH, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/DatabaseNativeAuthModelConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2020-02-13 21:32:49","commitOrder":9,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-02-13 21:32:49","endLine":231,"groupId":"3724","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/a6d11c9fac75d5ae10e2ee9ca198851e4c2b65.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageAbstract.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"856b54ce08b13de1742b764ca6bbfdda45a13813","commitMessage":"@@@#10936 Disable password when save password disabled\n\n\nFormer-commit-id: c25a2fd5d6fda48c5a9655a1d0eaec8323de74dc","date":"2021-01-12 19:15:19","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-02-13 21:32:49","codes":[{"authorDate":"2021-05-20 01:32:56","commitOrder":10,"curCode":"    protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) {\n        passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password);\n        passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n\n        passPlaceholder = UIUtils.createComposite(parent, 2);\n        passPlaceholder.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n        createPasswordText(passPlaceholder, null);\n        passwordText.addModifyListener(e -> propertyChangeListener.run());\n\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(passPlaceholder, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        savePasswordCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                passwordText.setEnabled(savePasswordCheck.getSelection());\n            }\n        });\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2021-05-20 01:32:56","endLine":166,"groupId":"101048","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@RunnablepropertyChangeListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/69/b151c1b988ec988360b380260fa4610ff0961d.src","preCode":"    protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) {\n        Label passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password);\n        passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n\n        Composite passPH = UIUtils.createComposite(parent, 2);\n        passPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n        createPasswordText(passPH, null);\n        passwordText.addModifyListener(e -> propertyChangeListener.run());\n\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(passPH, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        panel.setLayoutData(gd);\n\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        savePasswordCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                passwordText.setEnabled(savePasswordCheck.getSelection());\n            }\n        });\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(UIConnectionMessages.dialog_connection_auth_label_show_password);\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/DatabaseNativeAuthModelConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2020-02-13 21:32:49","commitOrder":10,"curCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","date":"2020-02-13 21:32:49","endLine":231,"groupId":"101048","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createPasswordControls","params":"(Compositeparent@inthSpan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6b/a6d11c9fac75d5ae10e2ee9ca198851e4c2b65.src","preCode":"    protected void createPasswordControls(Composite parent, int hSpan) {\n        \r\n        UIServiceSecurity serviceSecurity = DBWorkbench.getService(UIServiceSecurity.class);\n        boolean supportsPasswordView = serviceSecurity != null;\n\n        Composite panel = UIUtils.createComposite(parent, supportsPasswordView ? 2 : 1);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        if (hSpan > 1) {\n            gd.horizontalSpan = hSpan;\n        }\n        panel.setLayoutData(gd);\n\n        DataSourceDescriptor dataSource = (DataSourceDescriptor)getSite().getActiveDataSource();\n        savePasswordCheck = UIUtils.createCheckbox(panel,\n            UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally,\n            dataSource == null || dataSource.isSavePassword());\n        savePasswordCheck.setToolTipText(UIConnectionMessages.dialog_connection_wizard_final_checkbox_save_password_locally);\n        \r\n\n        if (supportsPasswordView) {\n            userManagementToolbar = new ToolBar(panel, SWT.HORIZONTAL);\n            ToolItem showPasswordLabel = new ToolItem(userManagementToolbar, SWT.NONE);\n            showPasswordLabel.setToolTipText(\"Show password on screen\");\n            showPasswordLabel.setImage(DBeaverIcons.getImage(UIIcon.SHOW_ALL_DETAILS));\n            showPasswordLabel.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    showPasswordText(serviceSecurity);\n                }\n            });\n        }\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.connection/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageAbstract.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"d7f95ff1f4aa2e796285d0d3172f700f864ded8e","commitMessage":"@@@dbeaver/dbeaver-ee#972 IAM auth UI\n","date":"2021-05-20 01:32:56","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"}]
