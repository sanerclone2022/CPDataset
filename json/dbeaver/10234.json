[{"authorTime":"2019-01-13 18:24:47","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":7,"curCode":"    public String getDeclaration(DBRProgressMonitor monitor)\n        throws DBException\n    {\n        if (clientBody == null) {\n            if (!persisted) {\n                this.clientBody =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\" + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                    \"BEGIN\" + GeneralUtils.getDefaultLineSeparator() +\n                    \"END\";\n            } else {\n                try (JDBCSession session = DBUtils.openMetaSession(monitor, this, \"Read procedure declaration\")) {\n                    try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SHOW CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL))) {\n                        try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                            if (dbResult.next()) {\n                                clientBody = JDBCUtils.safeGetString(dbResult, (getProcedureType() == DBSProcedureType.PROCEDURE ? \"Create Procedure\" : \"Create Function\"));\n                                if (clientBody == null) {\n                                    clientBody = \"\";\n                                } else {\n                                    clientBody = normalizeCreateStatement(clientBody);\n                                }\n                            } else {\n                                clientBody = \"\";\n                            }\n                        }\n                    }\n                } catch (SQLException e) {\n                    clientBody = e.getMessage();\n                    throw new DBException(e, getDataSource());\n                }\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        }\n        return clientBody;\n    }\n","date":"2018-07-23 15:41:36","endLine":184,"groupId":"4904","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDeclaration","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a6/40455918d48fce09b8ef1ad8a29d001fd4a80e.src","preCode":"    public String getDeclaration(DBRProgressMonitor monitor)\n        throws DBException\n    {\n        if (clientBody == null) {\n            if (!persisted) {\n                this.clientBody =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\" + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                    \"BEGIN\" + GeneralUtils.getDefaultLineSeparator() +\n                    \"END\";\n            } else {\n                try (JDBCSession session = DBUtils.openMetaSession(monitor, this, \"Read procedure declaration\")) {\n                    try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SHOW CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL))) {\n                        try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                            if (dbResult.next()) {\n                                clientBody = JDBCUtils.safeGetString(dbResult, (getProcedureType() == DBSProcedureType.PROCEDURE ? \"Create Procedure\" : \"Create Function\"));\n                                if (clientBody == null) {\n                                    clientBody = \"\";\n                                } else {\n                                    clientBody = normalizeCreateStatement(clientBody);\n                                }\n                            } else {\n                                clientBody = \"\";\n                            }\n                        }\n                    }\n                } catch (SQLException e) {\n                    clientBody = e.getMessage();\n                    throw new DBException(e, getDataSource());\n                }\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        }\n        return clientBody;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLProcedure.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"NB"},{"authorDate":"2019-01-13 18:24:47","commitOrder":7,"curCode":"    public String getObjectDefinitionText(DBRProgressMonitor monitor, Map<String, Object> options) throws DBException\n    {\n        if (body == null) {\n            if (!persisted) {\n                this.body =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                        \"AS \" + GeneralUtils.getDefaultLineSeparator() +\n                        \"SELECT 1\";\n            } else {\n                this.body = SQLServerUtils.extractSource(monitor, getContainer().getDatabase(), getContainer(), getName());\n            }\n        }\n        return body;\n    }\n","date":"2019-01-13 18:24:47","endLine":147,"groupId":"11703","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getObjectDefinitionText","params":"(DBRProgressMonitormonitor@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/eb/58cf2a981ac355e4d004a21633dbf0da965358.src","preCode":"    public String getObjectDefinitionText(DBRProgressMonitor monitor, Map<String, Object> options) throws DBException\n    {\n        if (body == null) {\n            if (!persisted) {\n                this.body =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                        \"AS \" + GeneralUtils.getDefaultLineSeparator() +\n                        \"SELECT 1\";\n            } else {\n                this.body = SQLServerUtils.extractSource(monitor, getContainer().getDatabase(), getContainer(), getName());\n            }\n        }\n        return body;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerProcedure.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"9f759bcb6ffd66d1ad9d2f34fdc1efb58b346bb6","commitMessage":"@@@#2488 SQL Server: procedure manager\n\n\nFormer-commit-id: 5db62334bf4cb555de0551040726fcd19ba66fd4","date":"2019-01-13 18:24:47","modifiedFileCount":"3","status":"M","submitter":"serge-rider"},{"authorTime":"2019-08-30 16:09:15","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":8,"curCode":"    public String getDeclaration(DBRProgressMonitor monitor)\n        throws DBException\n    {\n        if (clientBody == null) {\n            if (!persisted) {\n                this.clientBody =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\" + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                    \"BEGIN\" + GeneralUtils.getDefaultLineSeparator() +\n                    \"END\";\n            } else {\n                try (JDBCSession session = DBUtils.openMetaSession(monitor, this, \"Read procedure declaration\")) {\n                    try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SHOW CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL))) {\n                        try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                            if (dbResult.next()) {\n                                clientBody = JDBCUtils.safeGetString(dbResult, (getProcedureType() == DBSProcedureType.PROCEDURE ? \"Create Procedure\" : \"Create Function\"));\n                                if (clientBody == null) {\n                                    clientBody = \"\";\n                                } else {\n                                    clientBody = normalizeCreateStatement(clientBody);\n                                }\n                            } else {\n                                clientBody = \"\";\n                            }\n                        }\n                    }\n                } catch (SQLException e) {\n                    clientBody = e.getMessage();\n                    throw new DBException(e, getDataSource());\n                }\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        }\n        return clientBody;\n    }\n","date":"2018-07-23 15:41:36","endLine":184,"groupId":"10234","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDeclaration","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a6/40455918d48fce09b8ef1ad8a29d001fd4a80e.src","preCode":"    public String getDeclaration(DBRProgressMonitor monitor)\n        throws DBException\n    {\n        if (clientBody == null) {\n            if (!persisted) {\n                this.clientBody =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + \"()\" + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                    \"BEGIN\" + GeneralUtils.getDefaultLineSeparator() +\n                    \"END\";\n            } else {\n                try (JDBCSession session = DBUtils.openMetaSession(monitor, this, \"Read procedure declaration\")) {\n                    try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SHOW CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL))) {\n                        try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                            if (dbResult.next()) {\n                                clientBody = JDBCUtils.safeGetString(dbResult, (getProcedureType() == DBSProcedureType.PROCEDURE ? \"Create Procedure\" : \"Create Function\"));\n                                if (clientBody == null) {\n                                    clientBody = \"\";\n                                } else {\n                                    clientBody = normalizeCreateStatement(clientBody);\n                                }\n                            } else {\n                                clientBody = \"\";\n                            }\n                        }\n                    }\n                } catch (SQLException e) {\n                    clientBody = e.getMessage();\n                    throw new DBException(e, getDataSource());\n                }\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        }\n        return clientBody;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLProcedure.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"N"},{"authorDate":"2019-08-30 16:09:15","commitOrder":8,"curCode":"    public String getObjectDefinitionText(DBRProgressMonitor monitor, Map<String, Object> options) throws DBException {\n        if (body == null) {\n            if (!persisted) {\n                this.body =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                        \"AS \" + GeneralUtils.getDefaultLineSeparator() +\n                        \"SELECT 1\";\n            } else {\n                this.body = SQLServerUtils.extractSource(monitor, getContainer(), getName());\n            }\n        }\n        return body;\n    }\n","date":"2019-08-30 16:09:15","endLine":144,"groupId":"10234","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getObjectDefinitionText","params":"(DBRProgressMonitormonitor@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/285c918edb7c6b003d27c9c344e8def6af2b92.src","preCode":"    public String getObjectDefinitionText(DBRProgressMonitor monitor, Map<String, Object> options) throws DBException {\n        if (body == null) {\n            if (!persisted) {\n                this.body =\n                    \"CREATE \" + getProcedureType().name() + \" \" + getFullyQualifiedName(DBPEvaluationContext.DDL) + GeneralUtils.getDefaultLineSeparator() +\n                        (procedureType == DBSProcedureType.FUNCTION ? \"RETURNS INT\" + GeneralUtils.getDefaultLineSeparator() : \"\") +\n                        \"AS \" + GeneralUtils.getDefaultLineSeparator() +\n                        \"SELECT 1\";\n            } else {\n                this.body = SQLServerUtils.extractSource(monitor, getContainer().getDatabase(), getContainer(), getName());\n            }\n        }\n        return body;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerProcedure.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"59e991ca2c62b1c405599e79f10f1399763a93d0","commitMessage":"@@@SQL Server model refactoring\n\n\nFormer-commit-id: 8689f6b155a37d8002b59ed91e71b0712d7a17b1","date":"2019-08-30 16:09:15","modifiedFileCount":"6","status":"M","submitter":"Serge Rider"}]
