[{"authorTime":"2021-03-12 19:18:23","codes":[{"authorDate":"2017-04-16 06:15:01","commitOrder":3,"curCode":"    protected void appendConstraintDefinition(StringBuilder decl, DBECommandAbstract<OBJECT_TYPE> command) {\n        decl.append(\" (\"); \r\n        \r\n        try {\n            List<? extends DBSEntityAttributeRef> attrs = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            if (attrs != null) {\n                boolean firstColumn = true;\n                for (DBSEntityAttributeRef constraintColumn : attrs) {\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute == null) {\n                        continue;\n                    }\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.warn(\"Can't obtain attribute references\", e);\n        }\n        decl.append(\")\"); \r\n    }\n","date":"2017-04-16 06:15:07","endLine":120,"groupId":"15179","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"appendConstraintDefinition","params":"(StringBuilderdecl@DBECommandAbstract<OBJECT_TYPE>command)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/54/bbc234d2e62214231a727a499133ac7bf8d2a4.src","preCode":"    protected void appendConstraintDefinition(StringBuilder decl, DBECommandAbstract<OBJECT_TYPE> command) {\n        decl.append(\" (\"); \r\n        \r\n        try {\n            List<? extends DBSEntityAttributeRef> attrs = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            if (attrs != null) {\n                boolean firstColumn = true;\n                for (DBSEntityAttributeRef constraintColumn : attrs) {\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute == null) {\n                        continue;\n                    }\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.warn(\"Can't obtain attribute references\", e);\n        }\n        decl.append(\")\"); \r\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/edit/struct/SQLConstraintManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"NB"},{"authorDate":"2021-03-12 19:18:23","commitOrder":3,"curCode":"    private StringBuilder getNestedDeclarationScript(TABLE_TYPE owner, DBECommandAbstract<OBJECT_TYPE> command, Map<String, Object> options)\n    {\n        OBJECT_TYPE foreignKey = command.getObject();\n        boolean legacySyntax = isLegacyForeignKeySyntax(owner);\n\n        \r\n        String constraintName = DBUtils.getQuotedIdentifier(foreignKey.getDataSource(), foreignKey.getName());\n\n        StringBuilder decl = new StringBuilder(40);\n        if (!legacySyntax || !foreignKey.isPersisted()) {\n            decl.append(\"CONSTRAINT \");\n        }\n        if (!legacySyntax) {\n            decl.append(constraintName).append(\" \"); \r\n        }\n        decl.append(foreignKey.getConstraintType().getName().toUpperCase(Locale.ENGLISH)) \r\n            .append(\" (\"); \r\n        try {\n            \r\n            final Collection<? extends DBSEntityAttributeRef> columns = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            boolean firstColumn = true;\n            for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                if (!firstColumn) decl.append(\",\"); \r\n                firstColumn = false;\n                if (attribute != null) {\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.error(\"Can't obtain reference attributes\", e);\n        }\n        final DBSEntityConstraint refConstraint = foreignKey.getReferencedConstraint();\n\n        final String refTableName =\n            refConstraint == null ? \"<?>\" : DBUtils.getEntityScriptName(refConstraint.getParentObject(), options);\n\n        decl.append(\") REFERENCES \").append(refTableName).append(\"(\"); \r\n        if (refConstraint instanceof DBSEntityReferrer) {\n            try {\n                boolean firstColumn = true;\n                List<? extends DBSEntityAttributeRef> columns = ((DBSEntityReferrer) refConstraint).getAttributeReferences(new VoidProgressMonitor());\n                for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute != null) {\n                        decl.append(DBUtils.getQuotedIdentifier(attribute));\n                    }\n                }\n            } catch (DBException e) {\n                log.error(\"Can't obtain ref constraint reference attributes\", e);\n            }\n        }\n        decl.append(\")\"); \r\n        if (foreignKey.getDeleteRule() != null && !CommonUtils.isEmpty(foreignKey.getDeleteRule().getClause())) {\n            decl.append(\" ON DELETE \").append(foreignKey.getDeleteRule().getClause()); \r\n        }\n        if (foreignKey.getUpdateRule() != null && !CommonUtils.isEmpty(foreignKey.getUpdateRule().getClause())) {\n            decl.append(\" ON UPDATE \").append(foreignKey.getUpdateRule().getClause()); \r\n        }\n\n        if (legacySyntax) {\n            decl.append(\" CONSTRAINT \").append(constraintName); \r\n        }\n        return decl;\n    }\n","date":"2021-03-12 19:18:23","endLine":151,"groupId":"17195","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedDeclarationScript","params":"(TABLE_TYPEowner@DBECommandAbstract<OBJECT_TYPE>command@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/27/822c01452d945a5d28da5f6f1d307834d00868.src","preCode":"    private StringBuilder getNestedDeclarationScript(TABLE_TYPE owner, DBECommandAbstract<OBJECT_TYPE> command, Map<String, Object> options)\n    {\n        OBJECT_TYPE foreignKey = command.getObject();\n        boolean legacySyntax = isLegacyForeignKeySyntax(owner);\n\n        \r\n        String constraintName = DBUtils.getQuotedIdentifier(foreignKey.getDataSource(), foreignKey.getName());\n\n        StringBuilder decl = new StringBuilder(40);\n        if (!legacySyntax || !foreignKey.isPersisted()) {\n            decl.append(\"CONSTRAINT \");\n        }\n        if (!legacySyntax) {\n            decl.append(constraintName).append(\" \"); \r\n        }\n        decl.append(foreignKey.getConstraintType().getName().toUpperCase(Locale.ENGLISH)) \r\n            .append(\" (\"); \r\n        try {\n            \r\n            final Collection<? extends DBSEntityAttributeRef> columns = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            boolean firstColumn = true;\n            for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                if (!firstColumn) decl.append(\",\"); \r\n                firstColumn = false;\n                if (attribute != null) {\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.error(\"Can't obtain reference attributes\", e);\n        }\n        final DBSEntityConstraint refConstraint = foreignKey.getReferencedConstraint();\n\n        final String refTableName =\n            refConstraint == null ? \"<?>\" : DBUtils.getEntityScriptName(refConstraint.getParentObject(), options);\n\n        decl.append(\") REFERENCES \").append(refTableName).append(\"(\"); \r\n        if (refConstraint instanceof DBSEntityReferrer) {\n            try {\n                boolean firstColumn = true;\n                List<? extends DBSEntityAttributeRef> columns = ((DBSEntityReferrer) refConstraint).getAttributeReferences(new VoidProgressMonitor());\n                for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute != null) {\n                        decl.append(DBUtils.getQuotedIdentifier(attribute));\n                    }\n                }\n            } catch (DBException e) {\n                log.error(\"Can't obtain ref constraint reference attributes\", e);\n            }\n        }\n        decl.append(\")\"); \r\n        if (foreignKey.getDeleteRule() != null && !CommonUtils.isEmpty(foreignKey.getDeleteRule().getClause())) {\n            decl.append(\" ON DELETE \").append(foreignKey.getDeleteRule().getClause()); \r\n        }\n        if (foreignKey.getUpdateRule() != null && !CommonUtils.isEmpty(foreignKey.getUpdateRule().getClause())) {\n            decl.append(\" ON UPDATE \").append(foreignKey.getUpdateRule().getClause()); \r\n        }\n\n        if (legacySyntax) {\n            decl.append(\" CONSTRAINT \").append(constraintName); \r\n        }\n        return decl;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/edit/struct/SQLForeignKeyManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"c6e6d9bfb7049ef3037f79727051cf8568882ca9","commitMessage":"@@@Merge pull request #11696 from dbeaver/informixConstr#11007\n\n #11007 move FK from nested declaration in table DDL in special cases?\n\nFormer-commit-id: 474a51aa6a1958c220c142af6785c4200b7c3c65","date":"2021-03-12 19:18:23","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-03-17 17:25:27","codes":[{"authorDate":"2017-04-16 06:15:01","commitOrder":4,"curCode":"    protected void appendConstraintDefinition(StringBuilder decl, DBECommandAbstract<OBJECT_TYPE> command) {\n        decl.append(\" (\"); \r\n        \r\n        try {\n            List<? extends DBSEntityAttributeRef> attrs = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            if (attrs != null) {\n                boolean firstColumn = true;\n                for (DBSEntityAttributeRef constraintColumn : attrs) {\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute == null) {\n                        continue;\n                    }\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.warn(\"Can't obtain attribute references\", e);\n        }\n        decl.append(\")\"); \r\n    }\n","date":"2017-04-16 06:15:07","endLine":120,"groupId":"10928","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"appendConstraintDefinition","params":"(StringBuilderdecl@DBECommandAbstract<OBJECT_TYPE>command)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/54/bbc234d2e62214231a727a499133ac7bf8d2a4.src","preCode":"    protected void appendConstraintDefinition(StringBuilder decl, DBECommandAbstract<OBJECT_TYPE> command) {\n        decl.append(\" (\"); \r\n        \r\n        try {\n            List<? extends DBSEntityAttributeRef> attrs = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            if (attrs != null) {\n                boolean firstColumn = true;\n                for (DBSEntityAttributeRef constraintColumn : attrs) {\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute == null) {\n                        continue;\n                    }\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.warn(\"Can't obtain attribute references\", e);\n        }\n        decl.append(\")\"); \r\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/edit/struct/SQLConstraintManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2021-03-17 17:25:27","commitOrder":4,"curCode":"    private StringBuilder getNestedDeclarationScript(TABLE_TYPE owner, DBECommandAbstract<OBJECT_TYPE> command, Map<String, Object> options)\n    {\n        OBJECT_TYPE foreignKey = command.getObject();\n        boolean legacySyntax = isLegacyForeignKeySyntax(owner);\n        boolean constraintDuplicated = isFKConstraintDuplicated(owner);\n\n        \r\n        String constraintName = DBUtils.getQuotedIdentifier(foreignKey.getDataSource(), foreignKey.getName());\n\n        StringBuilder decl = new StringBuilder(40);\n        if (!legacySyntax || !foreignKey.isPersisted() || constraintDuplicated) {\n            decl.append(\"CONSTRAINT \");\n        }\n        if (!legacySyntax) {\n            decl.append(constraintName).append(\" \"); \r\n        }\n        decl.append(foreignKey.getConstraintType().getName().toUpperCase(Locale.ENGLISH)) \r\n            .append(\" (\"); \r\n        try {\n            \r\n            final Collection<? extends DBSEntityAttributeRef> columns = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            boolean firstColumn = true;\n            for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                if (!firstColumn) decl.append(\",\"); \r\n                firstColumn = false;\n                if (attribute != null) {\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.error(\"Can't obtain reference attributes\", e);\n        }\n        final DBSEntityConstraint refConstraint = foreignKey.getReferencedConstraint();\n\n        final String refTableName =\n            refConstraint == null ? \"<?>\" : DBUtils.getEntityScriptName(refConstraint.getParentObject(), options);\n\n        decl.append(\") REFERENCES \").append(refTableName).append(\"(\"); \r\n        if (refConstraint instanceof DBSEntityReferrer) {\n            try {\n                boolean firstColumn = true;\n                List<? extends DBSEntityAttributeRef> columns = ((DBSEntityReferrer) refConstraint).getAttributeReferences(new VoidProgressMonitor());\n                for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute != null) {\n                        decl.append(DBUtils.getQuotedIdentifier(attribute));\n                    }\n                }\n            } catch (DBException e) {\n                log.error(\"Can't obtain ref constraint reference attributes\", e);\n            }\n        }\n        decl.append(\")\"); \r\n        appendUpdateDeleteRule(foreignKey, decl);\n\n        if (legacySyntax) {\n            decl.append(\" CONSTRAINT \").append(constraintName); \r\n        }\n        return decl;\n    }\n","date":"2021-03-17 17:25:27","endLine":148,"groupId":"10928","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getNestedDeclarationScript","params":"(TABLE_TYPEowner@DBECommandAbstract<OBJECT_TYPE>command@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2a/d948efd24255119dbd8c063f36497799df1c97.src","preCode":"    private StringBuilder getNestedDeclarationScript(TABLE_TYPE owner, DBECommandAbstract<OBJECT_TYPE> command, Map<String, Object> options)\n    {\n        OBJECT_TYPE foreignKey = command.getObject();\n        boolean legacySyntax = isLegacyForeignKeySyntax(owner);\n\n        \r\n        String constraintName = DBUtils.getQuotedIdentifier(foreignKey.getDataSource(), foreignKey.getName());\n\n        StringBuilder decl = new StringBuilder(40);\n        if (!legacySyntax || !foreignKey.isPersisted()) {\n            decl.append(\"CONSTRAINT \");\n        }\n        if (!legacySyntax) {\n            decl.append(constraintName).append(\" \"); \r\n        }\n        decl.append(foreignKey.getConstraintType().getName().toUpperCase(Locale.ENGLISH)) \r\n            .append(\" (\"); \r\n        try {\n            \r\n            final Collection<? extends DBSEntityAttributeRef> columns = command.getObject().getAttributeReferences(new VoidProgressMonitor());\n            boolean firstColumn = true;\n            for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                if (!firstColumn) decl.append(\",\"); \r\n                firstColumn = false;\n                if (attribute != null) {\n                    decl.append(DBUtils.getQuotedIdentifier(attribute));\n                }\n            }\n        } catch (DBException e) {\n            log.error(\"Can't obtain reference attributes\", e);\n        }\n        final DBSEntityConstraint refConstraint = foreignKey.getReferencedConstraint();\n\n        final String refTableName =\n            refConstraint == null ? \"<?>\" : DBUtils.getEntityScriptName(refConstraint.getParentObject(), options);\n\n        decl.append(\") REFERENCES \").append(refTableName).append(\"(\"); \r\n        if (refConstraint instanceof DBSEntityReferrer) {\n            try {\n                boolean firstColumn = true;\n                List<? extends DBSEntityAttributeRef> columns = ((DBSEntityReferrer) refConstraint).getAttributeReferences(new VoidProgressMonitor());\n                for (DBSEntityAttributeRef constraintColumn : CommonUtils.safeCollection(columns)) {\n                    if (!firstColumn) decl.append(\",\"); \r\n                    firstColumn = false;\n                    final DBSEntityAttribute attribute = constraintColumn.getAttribute();\n                    if (attribute != null) {\n                        decl.append(DBUtils.getQuotedIdentifier(attribute));\n                    }\n                }\n            } catch (DBException e) {\n                log.error(\"Can't obtain ref constraint reference attributes\", e);\n            }\n        }\n        decl.append(\")\"); \r\n        if (foreignKey.getDeleteRule() != null && !CommonUtils.isEmpty(foreignKey.getDeleteRule().getClause())) {\n            decl.append(\" ON DELETE \").append(foreignKey.getDeleteRule().getClause()); \r\n        }\n        if (foreignKey.getUpdateRule() != null && !CommonUtils.isEmpty(foreignKey.getUpdateRule().getClause())) {\n            decl.append(\" ON UPDATE \").append(foreignKey.getUpdateRule().getClause()); \r\n        }\n\n        if (legacySyntax) {\n            decl.append(\" CONSTRAINT \").append(constraintName); \r\n        }\n        return decl;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/edit/struct/SQLForeignKeyManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"4cd54c5df2fa770a7f558d9be71394bdbe47a30a","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 390039bc8127a319883ab8222d0cc7241525dd6c","date":"2021-03-17 17:25:27","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"}]
