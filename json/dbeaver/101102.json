[{"authorTime":"2015-08-19 05:50:09","codes":[{"authorDate":"2015-08-19 05:50:09","commitOrder":2,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2015-08-19 05:50:09","endLine":657,"groupId":"593","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8d/74943fa6f3ab834f89524e10ac7b80218226d3.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"B"},{"authorDate":"2015-08-19 05:50:09","commitOrder":2,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<ErrorPosition>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        return null;\n    }\n","date":"2015-08-19 05:50:09","endLine":600,"groupId":"6958","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4c/ae245c37be6bf67ebd058f6c66bd78a1ba819d.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<ErrorPosition>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":577,"status":"MB"}],"commitId":"edd752cb0be471841cebc64c7e77bd368d0009be","commitMessage":"@@@SQL query error positioning (PostgreSQL.  Oracle.  MyL)\n\nFormer-commit-id: 0a67f6f0c879ee246c5d2d22d9f73726e37ca810","date":"2015-08-19 05:50:09","modifiedFileCount":"5","status":"M","submitter":"jurgen"},{"authorTime":"2015-10-03 06:14:38","codes":[{"authorDate":"2015-08-19 05:50:09","commitOrder":3,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2015-08-19 05:50:09","endLine":657,"groupId":"593","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8d/74943fa6f3ab834f89524e10ac7b80218226d3.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"N"},{"authorDate":"2015-10-03 06:14:38","commitOrder":3,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        return null;\n    }\n","date":"2015-10-03 06:14:38","endLine":600,"groupId":"593","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d6/db99a7b09f7cefaae741838cfc7b31e69da615.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<ErrorPosition>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":577,"status":"M"}],"commitId":"c62247f9d578736606d522548c599ecff7e8f5ce","commitMessage":"@@@Java 1.7 -> fix diamonds\n\nFormer-commit-id: 21bb8fa7ed63cab668bc3a73e2b8f6b66bc1c67f","date":"2015-10-03 06:14:38","modifiedFileCount":"373","status":"M","submitter":"jurgen"},{"authorTime":"2016-11-06 23:54:26","codes":[{"authorDate":"2016-11-06 23:54:26","commitOrder":4,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2016-11-06 23:54:26","endLine":673,"groupId":"593","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBCSessionsession@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bf/d200ebb3ac1becdc8ec4cdf92cf30cd01144fa.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"M"},{"authorDate":"2016-11-06 23:54:26","commitOrder":4,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (CallableStatement stat = ((JDBCSession) session).prepareCall(\n                \"declare\\n\" +\n                    \"    l_theCursor     integer default dbms_sql.open_cursor; \\n\" +\n                    \"    l_status        integer; \\n\" +\n                    \"begin \\n\" +\n                    \"     begin \\n\" +\n                    \"     dbms_sql.parse(  l_theCursor, ?, dbms_sql.native ); \\n\" +\n                    \"     exception \\n\" +\n                    \"         when others then l_status := dbms_sql.last_error_position; \\n\" +\n                    \"     end; \\n\" +\n                    \"     dbms_sql.close_cursor( l_theCursor );\\n\" +\n                    \"     DBMS_OUTPUT.put_line(l_status);\\n\" +\n                    \"? := l_status;\\n\" +\n                    \"end;\")) {\n                stat.setString(1, query);\n                stat.registerOutParameter(2, Types.INTEGER);\n                stat.execute();\n                int errorPos = stat.getInt(2);\n                if (errorPos <= 0) {\n                    return null;\n                }\n\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = errorPos;\n                return new ErrorPosition[] { pos };\n\n            } catch (SQLException e) {\n                \r\n                log.debug(\"Can't extract parse error info: \" + e.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2016-11-06 23:54:26","endLine":646,"groupId":"593","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBCSessionsession@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/df/5d172033f1a7211ee7bef8a22c48929d690cc4.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"M"}],"commitId":"d1b0ec77d4c74d3436f8e99bb387333f7bf63368","commitMessage":"@@@#915 Oracle error position extraction\n\n\nFormer-commit-id: 1d2838a984df92c63387320339d71fd2e6894080","date":"2016-11-06 23:54:26","modifiedFileCount":"9","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-11-07 00:00:53","codes":[{"authorDate":"2016-11-06 23:54:26","commitOrder":5,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2016-11-06 23:54:26","endLine":673,"groupId":"593","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBCSessionsession@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bf/d200ebb3ac1becdc8ec4cdf92cf30cd01144fa.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"N"},{"authorDate":"2016-11-07 00:00:53","commitOrder":5,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (CallableStatement stat = ((JDBCSession) session).prepareCall(\n                \"declare\\n\" +\n                \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                \"begin \\n\" +\n                \"  begin \\n\" +\n                \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                \"    exception \\n\" +\n                \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                \"    end; \\n\" +\n                \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                \"end;\"))\n            {\n                stat.setString(1, query);\n                stat.registerOutParameter(2, Types.INTEGER);\n                stat.execute();\n                int errorPos = stat.getInt(2);\n                if (errorPos <= 0) {\n                    return null;\n                }\n\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = errorPos;\n                return new ErrorPosition[] { pos };\n\n            } catch (SQLException e) {\n                \r\n                log.debug(\"Can't extract parse error info: \" + e.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2016-11-07 00:00:53","endLine":644,"groupId":"593","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBCSessionsession@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2e/de15c20398413a96dc9dae48d36dd857bf3efb.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (CallableStatement stat = ((JDBCSession) session).prepareCall(\n                \"declare\\n\" +\n                    \"    l_theCursor     integer default dbms_sql.open_cursor; \\n\" +\n                    \"    l_status        integer; \\n\" +\n                    \"begin \\n\" +\n                    \"     begin \\n\" +\n                    \"     dbms_sql.parse(  l_theCursor, ?, dbms_sql.native ); \\n\" +\n                    \"     exception \\n\" +\n                    \"         when others then l_status := dbms_sql.last_error_position; \\n\" +\n                    \"     end; \\n\" +\n                    \"     dbms_sql.close_cursor( l_theCursor );\\n\" +\n                    \"     DBMS_OUTPUT.put_line(l_status);\\n\" +\n                    \"? := l_status;\\n\" +\n                    \"end;\")) {\n                stat.setString(1, query);\n                stat.registerOutParameter(2, Types.INTEGER);\n                stat.execute();\n                int errorPos = stat.getInt(2);\n                if (errorPos <= 0) {\n                    return null;\n                }\n\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = errorPos;\n                return new ErrorPosition[] { pos };\n\n            } catch (SQLException e) {\n                \r\n                log.debug(\"Can't extract parse error info: \" + e.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"M"}],"commitId":"d61af8a16dfc817fb0b7b72b04082311b028d38c","commitMessage":"@@@#915 Oracle error position extraction\n\n\nFormer-commit-id: a5bd0f2602e7c18a87dc29416d7a17d5adbe6b61","date":"2016-11-07 00:00:53","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-03-19 19:41:06","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":6,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2017-03-19 19:41:06","endLine":671,"groupId":"593","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"M"},{"authorDate":"2017-03-19 19:41:06","commitOrder":6,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                break;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                pos.position = Integer.parseInt(matcher.group(2)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (JDBCSession session = (JDBCSession) context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Extract last error position\")) {\n                try (CallableStatement stat = session.prepareCall(\n                    \"declare\\n\" +\n                        \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                        \"begin \\n\" +\n                        \"  begin \\n\" +\n                        \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                        \"    exception \\n\" +\n                        \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                        \"    end; \\n\" +\n                        \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                        \"end;\")) {\n                    stat.setString(1, query);\n                    stat.registerOutParameter(2, Types.INTEGER);\n                    stat.execute();\n                    int errorPos = stat.getInt(2);\n                    if (errorPos <= 0) {\n                        return null;\n                    }\n\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = errorPos;\n                    return new ErrorPosition[]{pos};\n\n                } catch (SQLException e) {\n                    \r\n                    log.debug(\"Can't extract parse error info: \" + e.getMessage());\n                }\n            }\n        }\n        return null;\n    }\n","date":"2017-03-19 19:41:06","endLine":613,"groupId":"9761","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/ebd324cdec5581fe84a5a696c10062c36aba7d.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBCSession session, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                return null;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(2)) - 1;\n                pos.position = Integer.parseInt(matcher.group(3)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (CallableStatement stat = ((JDBCSession) session).prepareCall(\n                \"declare\\n\" +\n                \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                \"begin \\n\" +\n                \"  begin \\n\" +\n                \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                \"    exception \\n\" +\n                \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                \"    end; \\n\" +\n                \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                \"end;\"))\n            {\n                stat.setString(1, query);\n                stat.registerOutParameter(2, Types.INTEGER);\n                stat.execute();\n                int errorPos = stat.getInt(2);\n                if (errorPos <= 0) {\n                    return null;\n                }\n\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.position = errorPos;\n                return new ErrorPosition[] { pos };\n\n            } catch (SQLException e) {\n                \r\n                log.debug(\"Can't extract parse error info: \" + e.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"M"}],"commitId":"c994ba8f165c1f75288f6cfeefb9095b5cb04914","commitMessage":"@@@Merge branch 'devel' of https://github.com/serge-rider/dbeaver\n\n\nFormer-commit-id: cdb84c55a71481c781e9366599848ef81d4cb10f","date":"2017-03-19 19:41:06","modifiedFileCount":"145","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-05-25 18:56:17","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":7,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2017-03-19 19:41:06","endLine":671,"groupId":"593","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"N"},{"authorDate":"2018-05-25 18:56:17","commitOrder":7,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                break;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                pos.position = Integer.parseInt(matcher.group(2)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error.getCause() != null) {\n            \r\n            try {\n                Object errorPosition = BeanUtils.readObjectProperty(error.getCause(), \"errorPosition\");\n                if (errorPosition instanceof Number) {\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = ((Number) errorPosition).intValue();\n                    return new ErrorPosition[]{pos};\n                }\n            } catch (Exception e) {\n                \r\n            }\n\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (JDBCSession session = (JDBCSession) context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Extract last error position\")) {\n                try (CallableStatement stat = session.prepareCall(\n                    \"declare\\n\" +\n                        \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                        \"begin \\n\" +\n                        \"  begin \\n\" +\n                        \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                        \"    exception \\n\" +\n                        \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                        \"    end; \\n\" +\n                        \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                        \"end;\")) {\n                    stat.setString(1, query);\n                    stat.registerOutParameter(2, Types.INTEGER);\n                    stat.execute();\n                    int errorPos = stat.getInt(2);\n                    if (errorPos <= 0) {\n                        return null;\n                    }\n\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = errorPos;\n                    return new ErrorPosition[]{pos};\n\n                } catch (SQLException e) {\n                    \r\n                    log.debug(\"Can't extract parse error info: \" + e.getMessage());\n                }\n            }\n        }\n        return null;\n    }\n","date":"2018-05-25 18:56:17","endLine":719,"groupId":"593","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bf/56e62608564e25f16cbe54193d63c4d1c2bace.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                break;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                pos.position = Integer.parseInt(matcher.group(2)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (JDBCSession session = (JDBCSession) context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Extract last error position\")) {\n                try (CallableStatement stat = session.prepareCall(\n                    \"declare\\n\" +\n                        \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                        \"begin \\n\" +\n                        \"  begin \\n\" +\n                        \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                        \"    exception \\n\" +\n                        \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                        \"    end; \\n\" +\n                        \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                        \"end;\")) {\n                    stat.setString(1, query);\n                    stat.registerOutParameter(2, Types.INTEGER);\n                    stat.execute();\n                    int errorPos = stat.getInt(2);\n                    if (errorPos <= 0) {\n                        return null;\n                    }\n\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = errorPos;\n                    return new ErrorPosition[]{pos};\n\n                } catch (SQLException e) {\n                    \r\n                    log.debug(\"Can't extract parse error info: \" + e.getMessage());\n                }\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":651,"status":"M"}],"commitId":"392ff708849dccf93f9cd539eaba205daa6f69c2","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 3e1f4ae4c2d44df435e5a8879208ed27cce440d0","date":"2018-05-25 18:56:17","modifiedFileCount":"6","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":8,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","date":"2017-03-19 19:41:06","endLine":671,"groupId":"101102","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/95b2d86c58e18b823be12788420e04c89793f9.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            if (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                return new ErrorPosition[] { pos };\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":660,"status":"N"},{"authorDate":"2018-08-15 00:53:44","commitOrder":8,"curCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                break;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            List<ErrorPosition> positions = new ArrayList<>();\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                pos.position = Integer.parseInt(matcher.group(2)) - 1;\n                positions.add(pos);\n            }\n            if (positions.isEmpty()) {\n                matcher = ERROR_POSITION_PATTERN_2.matcher(message);\n                while (matcher.find()) {\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.info = matcher.group(1);\n                    pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                    positions.add(pos);\n                }\n            }\n            if (positions.isEmpty()) {\n                matcher = ERROR_POSITION_PATTERN_3.matcher(message);\n                while (matcher.find()) {\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.info = matcher.group(1);\n                    pos.position = Integer.parseInt(matcher.group(1)) - 1;\n                    positions.add(pos);\n                }\n            }\n\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error.getCause() != null) {\n            \r\n            try {\n                Object errorPosition = BeanUtils.readObjectProperty(error.getCause(), \"errorPosition\");\n                if (errorPosition instanceof Number) {\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = ((Number) errorPosition).intValue();\n                    return new ErrorPosition[]{pos};\n                }\n            } catch (Exception e) {\n                \r\n            }\n\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (JDBCSession session = (JDBCSession) context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Extract last error position\")) {\n                try (CallableStatement stat = session.prepareCall(\n                    \"declare\\n\" +\n                        \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                        \"begin \\n\" +\n                        \"  begin \\n\" +\n                        \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                        \"    exception \\n\" +\n                        \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                        \"    end; \\n\" +\n                        \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                        \"end;\")) {\n                    stat.setString(1, query);\n                    stat.registerOutParameter(2, Types.INTEGER);\n                    stat.execute();\n                    int errorPos = stat.getInt(2);\n                    if (errorPos <= 0) {\n                        return null;\n                    }\n\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = errorPos;\n                    return new ErrorPosition[]{pos};\n\n                } catch (SQLException e) {\n                    \r\n                    log.debug(\"Can't extract parse error info: \" + e.getMessage());\n                }\n            }\n        }\n        return null;\n    }\n","date":"2018-08-15 00:53:44","endLine":763,"groupId":"101102","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getErrorPosition","params":"(@NotNullDBRProgressMonitormonitor@@NotNullDBCExecutionContextcontext@@NotNullStringquery@@NotNullThrowableerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/28/6b932543bcd89d99f76bf3baa5a82c715fbebb.src","preCode":"    public ErrorPosition[] getErrorPosition(@NotNull DBRProgressMonitor monitor, @NotNull DBCExecutionContext context, @NotNull String query, @NotNull Throwable error) {\n        while (error instanceof DBException) {\n            if (error.getCause() == null) {\n                break;\n            }\n            error = error.getCause();\n        }\n        String message = error.getMessage();\n        if (!CommonUtils.isEmpty(message)) {\n            Matcher matcher = ERROR_POSITION_PATTERN.matcher(message);\n            List<ErrorPosition> positions = new ArrayList<>();\n            while (matcher.find()) {\n                DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                pos.info = matcher.group(1);\n                pos.line = Integer.parseInt(matcher.group(1)) - 1;\n                pos.position = Integer.parseInt(matcher.group(2)) - 1;\n                positions.add(pos);\n            }\n            if (!positions.isEmpty()) {\n                return positions.toArray(new ErrorPosition[positions.size()]);\n            }\n        }\n        if (error.getCause() != null) {\n            \r\n            try {\n                Object errorPosition = BeanUtils.readObjectProperty(error.getCause(), \"errorPosition\");\n                if (errorPosition instanceof Number) {\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = ((Number) errorPosition).intValue();\n                    return new ErrorPosition[]{pos};\n                }\n            } catch (Exception e) {\n                \r\n            }\n\n        }\n        if (error instanceof SQLException && SQLState.SQL_42000.getCode().equals(((SQLException) error).getSQLState())) {\n            try (JDBCSession session = (JDBCSession) context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Extract last error position\")) {\n                try (CallableStatement stat = session.prepareCall(\n                    \"declare\\n\" +\n                        \"  l_cursor integer default dbms_sql.open_cursor; \\n\" +\n                        \"begin \\n\" +\n                        \"  begin \\n\" +\n                        \"  dbms_sql.parse(  l_cursor, ?, dbms_sql.native ); \\n\" +\n                        \"    exception \\n\" +\n                        \"      when others then ? := dbms_sql.last_error_position; \\n\" +\n                        \"    end; \\n\" +\n                        \"    dbms_sql.close_cursor( l_cursor );\\n\" +\n                        \"end;\")) {\n                    stat.setString(1, query);\n                    stat.registerOutParameter(2, Types.INTEGER);\n                    stat.execute();\n                    int errorPos = stat.getInt(2);\n                    if (errorPos <= 0) {\n                        return null;\n                    }\n\n                    DBPErrorAssistant.ErrorPosition pos = new DBPErrorAssistant.ErrorPosition();\n                    pos.position = errorPos;\n                    return new ErrorPosition[]{pos};\n\n                } catch (SQLException e) {\n                    \r\n                    log.debug(\"Can't extract parse error info: \" + e.getMessage());\n                }\n            }\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleDataSource.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":676,"status":"M"}],"commitId":"aa14dc53c5c488a5ae30d1a1ef21f3c0f0ddea31","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 82f7a4fe56fccb9cb54aecddfd86d69cd795214f","date":"2018-08-15 00:53:44","modifiedFileCount":"162","status":"M","submitter":"serge@jkiss.org"}]
