[{"authorTime":"2020-04-24 18:12:46","codes":[{"authorDate":"2020-04-24 22:42:42","commitOrder":2,"curCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, SpannerMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            instanceText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_instance, \"\"); \r\n            instanceText.setToolTipText(\"Spanner Instance ID\"); \r\n            instanceText.addModifyListener(textListener);\n\n            databaseText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_database, \"\"); \r\n            databaseText.setToolTipText(\"Spanner Database ID\"); \r\n            databaseText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, SpannerMessages.label_private_key_path);\n            privateKeyFile = new TextWithOpenFile(addrGroup, SpannerMessages.label_private_key_path, new String[] { \"*\", \"*.json\" } ); \r\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            \r\n            privateKeyFile.setLayoutData(gd);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","date":"2020-04-24 22:42:42","endLine":99,"groupId":"620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositecomposite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/de/cd4f2a05671e4751c63c3caa48d9d5b6d5789d.src","preCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, SpannerMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            instanceText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_instance, \"\"); \r\n            instanceText.setToolTipText(\"Spanner Instance ID\"); \r\n            instanceText.addModifyListener(textListener);\n\n            databaseText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_database, \"\"); \r\n            databaseText.setToolTipText(\"Spanner Database ID\"); \r\n            databaseText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, SpannerMessages.label_private_key_path);\n            privateKeyFile = new TextWithOpenFile(addrGroup, SpannerMessages.label_private_key_path, new String[] { \"*\", \"*.json\" } ); \r\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            \r\n            privateKeyFile.setLayoutData(gd);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.spanner.ui/src/org/jkiss/dbeaver/ext/spanner/ui/views/SpannerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2020-04-24 18:12:46","commitOrder":2,"curCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            extraProjectsText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_additional_project, \"\"); \r\n            extraProjectsText.setToolTipText(\"Coma-separated list of projects (optional)\"); \r\n            extraProjectsText.addModifyListener(textListener);\n        }\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_security, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            usernameText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_service_account, \"\"); \r\n            usernameText.setToolTipText(\"Google account email address. Can be left empty if auth type is service based and key file contains all user info (JSON).\"); \r\n            usernameText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_oauth_type);\n            authTypeCombo = new Combo(addrGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);\n            authTypeCombo.add(BigQueryMessages.label_service_based);\n            authTypeCombo.add(BigQueryMessages.label_user_based);\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n            authTypeCombo.setLayoutData(gd);\n            authTypeCombo.addModifyListener(textListener);\n            authTypeCombo.select(0);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_key_path);\n            authCertFile = new TextWithOpenFile(addrGroup, BigQueryMessages.label_private_key_path, new String[] { \"*\", \"*.p12\", \"*.json\" } ); \r\n            gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            authCertFile.setLayoutData(gd);\n        }\n\n\n        {\n            \r\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_server_info, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            hostText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_host, BigQueryConstants.DEFAULT_HOST_NAME);\n            hostText.addModifyListener(textListener);\n\n            portText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_port, String.valueOf(BigQueryConstants.DEFAULT_PORT));\n            GridData gd = (GridData) portText.getLayoutData();\n            gd.widthHint = 40;\n            portText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n            portText.addModifyListener(textListener);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","date":"2020-04-24 18:12:46","endLine":136,"groupId":"1501","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositecomposite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/1d/2205f18cc1d897769381e6dbd5d938fb5e9be9.src","preCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            extraProjectsText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_additional_project, \"\"); \r\n            extraProjectsText.setToolTipText(\"Coma-separated list of projects (optional)\"); \r\n            extraProjectsText.addModifyListener(textListener);\n        }\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_security, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            usernameText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_service_account, \"\"); \r\n            usernameText.setToolTipText(\"Google account email address. Can be left empty if auth type is service based and key file contains all user info (JSON).\"); \r\n            usernameText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_oauth_type);\n            authTypeCombo = new Combo(addrGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);\n            authTypeCombo.add(BigQueryMessages.label_service_based);\n            authTypeCombo.add(BigQueryMessages.label_user_based);\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n            authTypeCombo.setLayoutData(gd);\n            authTypeCombo.addModifyListener(textListener);\n            authTypeCombo.select(0);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_key_path);\n            authCertFile = new TextWithOpenFile(addrGroup, BigQueryMessages.label_private_key_path, new String[] { \"*\", \"*.p12\", \"*.json\" } ); \r\n            gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            authCertFile.setLayoutData(gd);\n        }\n\n\n        {\n            \r\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_server_info, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            hostText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_host, BigQueryConstants.DEFAULT_HOST_NAME);\n            hostText.addModifyListener(textListener);\n\n            portText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_port, String.valueOf(BigQueryConstants.DEFAULT_PORT));\n            GridData gd = (GridData) portText.getLayoutData();\n            gd.widthHint = 40;\n            portText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n            portText.addModifyListener(textListener);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.bigquery.ui/src/org/jkiss/dbeaver/ext/bigquery/ui/views/BigQueryConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"1184dd5a8d3950738a63a49825e299efe68fa5f0","commitMessage":"@@@Merge pull request #8544 from dbeaver/refactors#8517\n\n#8517 ui part of plugin ext.spanner in ext.spanner.ui moved\n\nFormer-commit-id: 37f5e5ac82daac4c93ba51eaff54b176e6de70be","date":"2020-04-24 22:42:42","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-05-16 00:21:21","codes":[{"authorDate":"2020-04-24 22:42:42","commitOrder":3,"curCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, SpannerMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            instanceText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_instance, \"\"); \r\n            instanceText.setToolTipText(\"Spanner Instance ID\"); \r\n            instanceText.addModifyListener(textListener);\n\n            databaseText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_database, \"\"); \r\n            databaseText.setToolTipText(\"Spanner Database ID\"); \r\n            databaseText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, SpannerMessages.label_private_key_path);\n            privateKeyFile = new TextWithOpenFile(addrGroup, SpannerMessages.label_private_key_path, new String[] { \"*\", \"*.json\" } ); \r\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            \r\n            privateKeyFile.setLayoutData(gd);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","date":"2020-04-24 22:42:42","endLine":99,"groupId":"10514","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositecomposite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/de/cd4f2a05671e4751c63c3caa48d9d5b6d5789d.src","preCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, SpannerMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            instanceText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_instance, \"\"); \r\n            instanceText.setToolTipText(\"Spanner Instance ID\"); \r\n            instanceText.addModifyListener(textListener);\n\n            databaseText = UIUtils.createLabelText(addrGroup, SpannerMessages.label_database, \"\"); \r\n            databaseText.setToolTipText(\"Spanner Database ID\"); \r\n            databaseText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, SpannerMessages.label_private_key_path);\n            privateKeyFile = new TextWithOpenFile(addrGroup, SpannerMessages.label_private_key_path, new String[] { \"*\", \"*.json\" } ); \r\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            \r\n            privateKeyFile.setLayoutData(gd);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.spanner.ui/src/org/jkiss/dbeaver/ext/spanner/ui/views/SpannerConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2020-05-16 00:21:21","commitOrder":3,"curCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            extraProjectsText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_additional_project, \"\"); \r\n            extraProjectsText.setToolTipText(\"Coma-separated list of projects (optional)\"); \r\n            extraProjectsText.addModifyListener(textListener);\n        }\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_security, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            usernameText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_service_account, \"\"); \r\n            usernameText.setToolTipText(\"Google account email address. Can be left empty if auth type is service based and key file contains all user info (JSON).\"); \r\n            usernameText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_oauth_type);\n            authTypeCombo = new Combo(addrGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);\n            authTypeCombo.add(BigQueryMessages.label_service_based);\n            authTypeCombo.add(BigQueryMessages.label_user_based);\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n            authTypeCombo.setLayoutData(gd);\n            authTypeCombo.addModifyListener(textListener);\n            authTypeCombo.select(0);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_key_path);\n            authCertFile = new TextWithOpenFile(addrGroup, BigQueryMessages.label_private_key_path, new String[] { \"*\", \"*.p12\", \"*.json\" } ); \r\n            gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            authCertFile.setLayoutData(gd);\n        }\n\n\n        {\n            \r\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_server_info, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            hostText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_host, BigQueryConstants.DEFAULT_HOST_NAME);\n            hostText.addModifyListener(textListener);\n\n            portText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_port, String.valueOf(BigQueryConstants.DEFAULT_PORT));\n            GridData gd = (GridData) portText.getLayoutData();\n            gd.widthHint = UIUtils.getFontHeight(portText) * 7;\n            portText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n            portText.addModifyListener(textListener);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","date":"2020-05-16 00:21:21","endLine":136,"groupId":"10514","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositecomposite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ae/ba60131da8d20505057af813974cc3b9542f4e.src","preCode":"    public void createControl(Composite composite)\n    {\n        setImageDescriptor(logoImage);\n\n        Composite settingsGroup = new Composite(composite, SWT.NONE);\n        settingsGroup.setLayout(new GridLayout(1, false));\n        settingsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));\n        ModifyListener textListener = e -> site.updateButtons();\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_connection, 2, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            projectText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_project, \"\"); \r\n            projectText.addModifyListener(textListener);\n\n            extraProjectsText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_additional_project, \"\"); \r\n            extraProjectsText.setToolTipText(\"Coma-separated list of projects (optional)\"); \r\n            extraProjectsText.addModifyListener(textListener);\n        }\n\n        {\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_security, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            usernameText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_service_account, \"\"); \r\n            usernameText.setToolTipText(\"Google account email address. Can be left empty if auth type is service based and key file contains all user info (JSON).\"); \r\n            usernameText.addModifyListener(textListener);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_oauth_type);\n            authTypeCombo = new Combo(addrGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);\n            authTypeCombo.add(BigQueryMessages.label_service_based);\n            authTypeCombo.add(BigQueryMessages.label_user_based);\n            GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n            authTypeCombo.setLayoutData(gd);\n            authTypeCombo.addModifyListener(textListener);\n            authTypeCombo.select(0);\n\n            UIUtils.createControlLabel(addrGroup, BigQueryMessages.label_key_path);\n            authCertFile = new TextWithOpenFile(addrGroup, BigQueryMessages.label_private_key_path, new String[] { \"*\", \"*.p12\", \"*.json\" } ); \r\n            gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            authCertFile.setLayoutData(gd);\n        }\n\n\n        {\n            \r\n            Composite addrGroup = UIUtils.createControlGroup(settingsGroup, BigQueryMessages.label_server_info, 4, 0, 0);\n            addrGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n\n            hostText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_host, BigQueryConstants.DEFAULT_HOST_NAME);\n            hostText.addModifyListener(textListener);\n\n            portText = UIUtils.createLabelText(addrGroup, BigQueryMessages.label_port, String.valueOf(BigQueryConstants.DEFAULT_PORT));\n            GridData gd = (GridData) portText.getLayoutData();\n            gd.widthHint = 40;\n            portText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n            portText.addModifyListener(textListener);\n        }\n\n        createDriverPanel(settingsGroup);\n        setControl(settingsGroup);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.bigquery.ui/src/org/jkiss/dbeaver/ext/bigquery/ui/views/BigQueryConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"3616ed96d269cdc2d6f04cb03db7b2d55f50fcc3","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 1f512f95d19b209f2751f28e93884d9db1ddb144","date":"2020-05-16 00:21:21","modifiedFileCount":"13","status":"M","submitter":"serge-rider"}]
