[{"authorTime":"2020-03-19 18:53:14","codes":[{"authorDate":"2021-08-20 17:49:25","commitOrder":2,"curCode":"    public DBCPlan deserialize(Reader planData) throws InvocationTargetException {\n        JsonObject jo = JsonParser.parseReader(planData).getAsJsonObject();\n\n        String query = getQuery(jo);\n\n        ExecutionPlanDeserializer<OceanbasePlanNodeJSON> loader = new ExecutionPlanDeserializer<>();\n        List<OceanbasePlanNodeJSON> rootNodes = loader.loadRoot(dataSource, jo,\n                (datasource, node, parent) -> new OceanbasePlanNodeJSON(parent, getNodeAttributes(node)));\n        return new OceanbasePlanJSON(dataSource, query, rootNodes);\n    }\n","date":"2021-08-20 17:49:25","endLine":99,"groupId":"15502","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deserialize","params":"(ReaderplanData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fd/482b3dc5f962f018493fa2af1ff734e1fd55c4.src","preCode":"    public DBCPlan deserialize(Reader planData) throws InvocationTargetException {\n        JsonObject jo = JsonParser.parseReader(planData).getAsJsonObject();\n\n        String query = getQuery(jo);\n\n        ExecutionPlanDeserializer<OceanbasePlanNodeJSON> loader = new ExecutionPlanDeserializer<>();\n        List<OceanbasePlanNodeJSON> rootNodes = loader.loadRoot(dataSource, jo,\n                (datasource, node, parent) -> new OceanbasePlanNodeJSON(parent, getNodeAttributes(node)));\n        return new OceanbasePlanJSON(dataSource, query, rootNodes);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oceanbase/src/org/jkiss/dbeaver/ext/oceanbase/model/plan/OceanbasePlanAnalyzer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"},{"authorDate":"2020-03-19 18:53:14","commitOrder":2,"curCode":"    public DBCPlan deserialize(@NotNull Reader planData) throws IOException, InvocationTargetException {\n\n\tJsonObject jo = new JsonParser().parse(planData).getAsJsonObject();\n\tString query = getQuery(jo);\n\n\t{\n\t    ExecutionPlanDeserializer<OcientPlanNodeJson> loader = new ExecutionPlanDeserializer<>();\n\t    List<OcientPlanNodeJson> rootNodes = loader.loadRoot(dataSource, jo,\n\t\t    (datasource, node, parent) -> new OcientPlanNodeJson(parent, getNodeAttributes(node)));\n\t    return new OcientExecutionPlan(query, rootNodes);\n\t}\n\n    }\n","date":"2020-03-19 18:53:14","endLine":121,"groupId":"15502","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deserialize","params":"(@NotNullReaderplanData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/98/821ecc8a210611163abcf55b6e97b9346a6b1e.src","preCode":"    public DBCPlan deserialize(@NotNull Reader planData) throws IOException, InvocationTargetException {\n\n\tJsonObject jo = new JsonParser().parse(planData).getAsJsonObject();\n\tString query = getQuery(jo);\n\n\t{\n\t    ExecutionPlanDeserializer<OcientPlanNodeJson> loader = new ExecutionPlanDeserializer<>();\n\t    List<OcientPlanNodeJson> rootNodes = loader.loadRoot(dataSource, jo,\n\t\t    (datasource, node, parent) -> new OcientPlanNodeJson(parent, getNodeAttributes(node)));\n\t    return new OcientExecutionPlan(query, rootNodes);\n\t}\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ocient/src/org/jkiss/dbeaver/ext/ocient/model/plan/OcientQueryPlaner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"NB"}],"commitId":"c04ad91eed471373f4e9059ff79e7f09e147d661","commitMessage":"@@@Merge pull request #13449 from LuckyLeoZZ/devel\n\nAdd database plugin","date":"2021-08-20 17:49:25","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-03-19 18:53:14","codes":[{"authorDate":"2021-08-20 18:18:04","commitOrder":3,"curCode":"    public DBCPlan deserialize(@NotNull Reader planData) throws InvocationTargetException {\n        JsonObject jo = new JsonParser().parse(planData).getAsJsonObject();\n\n        String query = getQuery(jo);\n\n        ExecutionPlanDeserializer<OceanbasePlanNodeJSON> loader = new ExecutionPlanDeserializer<>();\n        List<OceanbasePlanNodeJSON> rootNodes = loader.loadRoot(dataSource, jo,\n                (datasource, node, parent) -> new OceanbasePlanNodeJSON(parent, getNodeAttributes(node)));\n        return new OceanbasePlanJSON(dataSource, query, rootNodes);\n    }\n","date":"2021-08-20 18:18:04","endLine":94,"groupId":"101021","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"deserialize","params":"(@NotNullReaderplanData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b5/528208ee978bd3ceec9600187f25e7977666e7.src","preCode":"    public DBCPlan deserialize(Reader planData) throws InvocationTargetException {\n        JsonObject jo = JsonParser.parseReader(planData).getAsJsonObject();\n\n        String query = getQuery(jo);\n\n        ExecutionPlanDeserializer<OceanbasePlanNodeJSON> loader = new ExecutionPlanDeserializer<>();\n        List<OceanbasePlanNodeJSON> rootNodes = loader.loadRoot(dataSource, jo,\n                (datasource, node, parent) -> new OceanbasePlanNodeJSON(parent, getNodeAttributes(node)));\n        return new OceanbasePlanJSON(dataSource, query, rootNodes);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oceanbase/src/org/jkiss/dbeaver/ext/oceanbase/model/plan/OceanbasePlanAnalyzer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-03-19 18:53:14","commitOrder":3,"curCode":"    public DBCPlan deserialize(@NotNull Reader planData) throws IOException, InvocationTargetException {\n\n\tJsonObject jo = new JsonParser().parse(planData).getAsJsonObject();\n\tString query = getQuery(jo);\n\n\t{\n\t    ExecutionPlanDeserializer<OcientPlanNodeJson> loader = new ExecutionPlanDeserializer<>();\n\t    List<OcientPlanNodeJson> rootNodes = loader.loadRoot(dataSource, jo,\n\t\t    (datasource, node, parent) -> new OcientPlanNodeJson(parent, getNodeAttributes(node)));\n\t    return new OcientExecutionPlan(query, rootNodes);\n\t}\n\n    }\n","date":"2020-03-19 18:53:14","endLine":121,"groupId":"101021","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deserialize","params":"(@NotNullReaderplanData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/98/821ecc8a210611163abcf55b6e97b9346a6b1e.src","preCode":"    public DBCPlan deserialize(@NotNull Reader planData) throws IOException, InvocationTargetException {\n\n\tJsonObject jo = new JsonParser().parse(planData).getAsJsonObject();\n\tString query = getQuery(jo);\n\n\t{\n\t    ExecutionPlanDeserializer<OcientPlanNodeJson> loader = new ExecutionPlanDeserializer<>();\n\t    List<OcientPlanNodeJson> rootNodes = loader.loadRoot(dataSource, jo,\n\t\t    (datasource, node, parent) -> new OcientPlanNodeJson(parent, getNodeAttributes(node)));\n\t    return new OcientExecutionPlan(query, rootNodes);\n\t}\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ocient/src/org/jkiss/dbeaver/ext/ocient/model/plan/OcientQueryPlaner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"}],"commitId":"337e6db33dc41d0de5fca34a62af76dadb3351f4","commitMessage":"@@@#13596 Oceanbase plugin config and fixes\n","date":"2021-08-20 18:18:04","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"}]
