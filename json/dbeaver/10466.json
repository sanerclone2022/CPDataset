[{"authorTime":"2019-04-02 01:47:10","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":3,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"NB"},{"authorDate":"2019-04-02 01:47:10","commitOrder":3,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_NON_DEFAULT_DB, String.valueOf(showNonDefault.getSelection()));\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_TEMPLATES_DB, String.valueOf(showTemplates.getSelection()));\n        super.saveSettings(dataSource);\n    }\n","date":"2019-04-02 01:47:11","endLine":273,"groupId":"901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/5da9982e68833bd41bf883c27fa8073189b625.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_NON_DEFAULT_DB, String.valueOf(showNonDefault.getSelection()));\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_TEMPLATES_DB, String.valueOf(showTemplates.getSelection()));\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/PostgreConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"}],"commitId":"7a2a046c695d937956bf3cfc4af587277855d06a","commitMessage":"@@@#10 Model/UI refactoring\n\n\nFormer-commit-id: 6acc10c1a419b15f7094be6e35e04b63145dae91","date":"2019-04-02 01:47:11","modifiedFileCount":"39","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-17 00:03:28","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":4,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2019-12-17 00:03:28","commitOrder":4,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2019-12-17 00:03:28","endLine":247,"groupId":"901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8f/74d4439d884b1be176a413e460d5c54b9f6837.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_NON_DEFAULT_DB, String.valueOf(showNonDefault.getSelection()));\n        connectionInfo.setProviderProperty(PostgreConstants.PROP_SHOW_TEMPLATES_DB, String.valueOf(showTemplates.getSelection()));\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/PostgreConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"d32e450bd52cdea70e257a3edfe2a2d74c8c7381","commitMessage":"@@@#7183 Double-dollar rule configuration. Custom rules model refactoring\n\n\nFormer-commit-id: cf3c1e29a9f546c5443ca7892516b187b3710ddd","date":"2019-12-17 00:03:28","modifiedFileCount":"13","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-03-10 04:07:44","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":5,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"901","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-03-10 04:07:44","commitOrder":5,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2020-03-10 04:07:44","endLine":190,"groupId":"901","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d2/d898d3ea242dd57f16b61a3ecab4e113788a4a.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/PostgreConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"56664f85f388c01f40fbcff52226a1c95a5063a4","commitMessage":"@@@#8128 PG connection page adoption. UI utils.\n\n\nFormer-commit-id: 53818541caae21f5bcfbf6b780a264d39b0aa98e","date":"2020-03-10 04:07:44","modifiedFileCount":"7","status":"M","submitter":"serge-rider"},{"authorTime":"2020-09-29 04:01:54","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":6,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","date":"2018-08-15 00:53:44","endLine":284,"groupId":"10466","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4b/3bc7eed33bb1ef63e5ab8b852023a8c9b931b0.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (warehouseText != null) {\n            connectionInfo.setServerName(warehouseText.getText().trim());\n        }\n        if (schemaText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_SCHEMA, schemaText.getText().trim());\n        }\n        if (usernameText != null) {\n            connectionInfo.setUserName(usernameText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_ROLE, roleText.getText().trim());\n        }\n        if (authTypeCombo != null) {\n            connectionInfo.setProviderProperty(SnowflakeConstants.PROP_AUTHENTICATOR, authTypeCombo.getText().trim());\n        }\n        if (passwordText != null) {\n            connectionInfo.setUserPassword(passwordText.getText());\n        }\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.snowflake.ui/src/org/jkiss/dbeaver/ext/snowflake/views/SnowflakeConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-09-29 04:01:54","commitOrder":6,"curCode":"    public void saveSettings(DBPDataSourceContainer dataSource) {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (roleText != null) {\n            connectionInfo.setProviderProperty(PostgreConstants.PROP_CHOSEN_ROLE, roleText.getText().trim());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        super.saveSettings(dataSource);\n    }\n","date":"2020-09-29 04:01:54","endLine":193,"groupId":"10466","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"saveSettings","params":"(DBPDataSourceContainerdataSource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8b/64fbcafb6932c6aaae5c0872ceb0999121a068.src","preCode":"    public void saveSettings(DBPDataSourceContainer dataSource)\n    {\n        DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration();\n        if (hostText != null) {\n            connectionInfo.setHostName(hostText.getText().trim());\n        }\n        if (portText != null) {\n            connectionInfo.setHostPort(portText.getText().trim());\n        }\n        if (dbText != null) {\n            connectionInfo.setDatabaseName(dbText.getText().trim());\n        }\n        if (homesSelector != null) {\n            connectionInfo.setClientHomeId(homesSelector.getSelectedHome());\n        }\n\n        super.saveSettings(dataSource);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/PostgreConnectionPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"9e05345739be5d54e31e19a6c2a9b3ac0d884038","commitMessage":"@@@Merge pull request #9873 from dbeaver/pg-role#9518\n\n#9518 add role choosing to pg\n\nFormer-commit-id: 99cfa9e162f117c8bfacaba173723a9475aa11c5","date":"2020-09-29 04:01:54","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"}]
