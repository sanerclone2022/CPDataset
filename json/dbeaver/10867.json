[{"authorTime":"2018-12-28 05:03:02","codes":[{"authorDate":"2018-12-28 05:03:02","commitOrder":1,"curCode":"    public Map<Object, Object> getFormatterProperties(String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<Object, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","date":"2018-12-28 05:03:02","endLine":130,"groupId":"15911","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFormatterProperties","params":"(StringtypeId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/cb/cf1ff61f8074571368e424ce890f75c550e706.src","preCode":"    public Map<Object, Object> getFormatterProperties(String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<Object, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2018-12-28 05:03:02","commitOrder":1,"curCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            Map<Object, Object> formatterProps = new HashMap<>();\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","date":"2018-12-28 05:03:02","endLine":222,"groupId":"6917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initDefaultPreferences","params":"(DBPPreferenceStorestore@Localelocale)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/cb/cf1ff61f8074571368e424ce890f75c550e706.src","preCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            Map<Object, Object> formatterProps = new HashMap<>();\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"}],"commitId":"d8d3a183caba0a0896e417c8c8749e9bc21fd045","commitMessage":"@@@#10 Core services refactoring\n\n\nFormer-commit-id: f9bed361900d1fe163b8943aecb3ca0f2bc7ee34","date":"2018-12-28 05:03:02","modifiedFileCount":"0","status":"B","submitter":"serge-rider"},{"authorTime":"2020-07-05 17:55:54","codes":[{"authorDate":"2020-07-05 17:55:54","commitOrder":2,"curCode":"    public Map<String, Object> getFormatterProperties(String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<String, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","date":"2020-07-05 17:55:54","endLine":130,"groupId":"15911","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFormatterProperties","params":"(StringtypeId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4d/a3bf446837ae779585f071740e3f19d7a34411.src","preCode":"    public Map<Object, Object> getFormatterProperties(String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<Object, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2020-07-05 17:55:54","commitOrder":2,"curCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            \r\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","date":"2020-07-05 17:55:54","endLine":222,"groupId":"857","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initDefaultPreferences","params":"(DBPPreferenceStorestore@Localelocale)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4d/a3bf446837ae779585f071740e3f19d7a34411.src","preCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<Object, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            Map<Object, Object> formatterProps = new HashMap<>();\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"a735616187ae38240f70bfebbd04711c5174962e","commitMessage":"@@@Properties model refactoring\n\n\nFormer-commit-id: 16ca7c8c54e6a5dfe239a57ba98edc8f1f273349","date":"2020-07-05 17:55:54","modifiedFileCount":"58","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-07-05 17:55:54","codes":[{"authorDate":"2021-08-18 15:40:52","commitOrder":3,"curCode":"    public Map<String, Object> getFormatterProperties(DBPPreferenceStore store, String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<String, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","date":"2021-08-18 15:40:52","endLine":130,"groupId":"10867","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getFormatterProperties","params":"(DBPPreferenceStorestore@StringtypeId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/47/77a2dba0dae03ccb948526c321b3ea7577b5d3.src","preCode":"    public Map<String, Object> getFormatterProperties(String typeId)\n    {\n        DataFormatterDescriptor formatter = DataFormatterRegistry.getInstance().getDataFormatter(typeId);\n        Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n        Map<String, Object> formatterProps = new HashMap<>();\n        for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n            Object defaultValue = defaultProperties.get(prop.getId());\n            Object propValue = PrefUtils.getPreferenceValue(\n                store,\n                DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), prop.getDataType());\n            if (propValue != null && !CommonUtils.equalObjects(defaultValue, propValue)) {\n                formatterProps.put(prop.getId(), propValue);\n            }\n        }\n        return formatterProps;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2020-07-05 17:55:54","commitOrder":3,"curCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            \r\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","date":"2020-07-05 17:55:54","endLine":222,"groupId":"10867","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initDefaultPreferences","params":"(DBPPreferenceStorestore@Localelocale)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4d/a3bf446837ae779585f071740e3f19d7a34411.src","preCode":"    public static void initDefaultPreferences(DBPPreferenceStore store, Locale locale)\n    {\n        for (DataFormatterDescriptor formatter : DataFormatterRegistry.getInstance().getDataFormatters()) {\n            Map<String, Object> defaultProperties = formatter.getSample().getDefaultProperties(locale);\n            \r\n            for (DBPPropertyDescriptor prop : formatter.getProperties()) {\n                Object defaultValue = defaultProperties.get(prop.getId());\n                if (defaultValue != null) {\n                    PrefUtils.setPreferenceDefaultValue(store, DATAFORMAT_TYPE_PREFIX + formatter.getId() + \".\" + prop.getId(), defaultValue);\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/registry/formatter/DataFormatterProfile.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"N"}],"commitId":"72e14ffce538bcb66b6db1ca0f2552e745d9c5c5","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n","date":"2021-08-18 15:40:52","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"}]
