[{"authorTime":"2019-08-07 17:18:28","codes":[{"authorDate":"2019-07-03 02:48:02","commitOrder":4,"curCode":"    public GenericPrimaryKey configureObject(DBRProgressMonitor monitor, Object table, GenericPrimaryKey primaryKey) {\n        return new UITask<GenericPrimaryKey>() {\n            @Override\n            protected GenericPrimaryKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","date":"2019-07-03 02:48:02","endLine":62,"groupId":"150","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objecttable@GenericPrimaryKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/1b/26ae360ef30d69a6d7cb77f0b24b515cf1f2f5.src","preCode":"    public GenericPrimaryKey configureObject(DBRProgressMonitor monitor, Object table, GenericPrimaryKey primaryKey) {\n        return new UITask<GenericPrimaryKey>() {\n            @Override\n            protected GenericPrimaryKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic.ui/src/org/jkiss/dbeaver/ext/generic/views/GenericTablePrimaryKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"NB"},{"authorDate":"2019-08-07 17:18:28","commitOrder":4,"curCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","date":"2019-08-07 17:18:28","endLine":56,"groupId":"150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objectcontainer@SQLServerTableUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/d9e8d867c0f2bcf4c5874f0a50c81f474a1525.src","preCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/config/SQLServerUniqueKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"68d6b326cc907ca51f2a082be4dfa0f795300c96","commitMessage":"@@@SQL Server & PG model refactoring (extract UI)\n\n\nFormer-commit-id: 10dde7954f22c87c4711bd41832e0f49198acef7","date":"2019-08-07 17:18:28","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-08-07 17:18:28","codes":[{"authorDate":"2020-01-13 04:05:09","commitOrder":5,"curCode":"    public GenericUniqueKey configureObject(DBRProgressMonitor monitor, Object table, GenericUniqueKey primaryKey) {\n        return new UITask<GenericUniqueKey>() {\n            @Override\n            protected GenericUniqueKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","date":"2020-01-13 04:05:09","endLine":62,"groupId":"150","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objecttable@GenericUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a0/a1cc2dc45116e3212f39f91ee1522af407b436.src","preCode":"    public GenericPrimaryKey configureObject(DBRProgressMonitor monitor, Object table, GenericPrimaryKey primaryKey) {\n        return new UITask<GenericPrimaryKey>() {\n            @Override\n            protected GenericPrimaryKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic.ui/src/org/jkiss/dbeaver/ext/generic/views/GenericTablePrimaryKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-08-07 17:18:28","commitOrder":5,"curCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","date":"2019-08-07 17:18:28","endLine":56,"groupId":"150","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objectcontainer@SQLServerTableUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/d9e8d867c0f2bcf4c5874f0a50c81f474a1525.src","preCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/config/SQLServerUniqueKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"ea43e170ae31b314627af8f5035dc13373eefe5f","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: b8a88ef308f898dd3c5f78540f0e556e77b18cad","date":"2020-01-13 04:05:09","modifiedFileCount":"136","status":"M","submitter":"serge-rider"},{"authorTime":"2019-08-07 17:18:28","codes":[{"authorDate":"2020-10-23 20:18:39","commitOrder":6,"curCode":"    public GenericUniqueKey configureObject(DBRProgressMonitor monitor, Object table, GenericUniqueKey primaryKey) {\n        boolean isSupportCheckConstraint = primaryKey.getDataSource().getMetaModel().supportsCheckConstraints();\n        return new UITask<GenericUniqueKey>() {\n            @Override\n            protected GenericUniqueKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    isSupportCheckConstraint ?\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY, DBSEntityConstraintType.CHECK} :\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                if (primaryKey instanceof GenericCheckConstraint) {\n                    ((GenericCheckConstraint)primaryKey).setCheckConstraintExpression(editPage.getConstraintExpression());\n                }\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","date":"2020-10-23 20:18:39","endLine":69,"groupId":"5031","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objecttable@GenericUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2d/1bb711fb644a23e690a1e4e3358bfe7866c8a9.src","preCode":"    public GenericUniqueKey configureObject(DBRProgressMonitor monitor, Object table, GenericUniqueKey primaryKey) {\n        return new UITask<GenericUniqueKey>() {\n            @Override\n            protected GenericUniqueKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic.ui/src/org/jkiss/dbeaver/ext/generic/views/GenericTablePrimaryKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2019-08-07 17:18:28","commitOrder":6,"curCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","date":"2019-08-07 17:18:28","endLine":56,"groupId":"150","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objectcontainer@SQLServerTableUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/d9e8d867c0f2bcf4c5874f0a50c81f474a1525.src","preCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/config/SQLServerUniqueKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"241ddf4c52f4277a3119553b9056735dfda2a9b6","commitMessage":"@@@Merge pull request #10140 from dbeaver/informixchecks#9114\n\n#9114 supports creating check constraints Informix\n\nFormer-commit-id: abc08701362441287f7cb7b8392051ac1b879891","date":"2020-10-23 20:18:39","modifiedFileCount":"6","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-08-07 17:18:28","codes":[{"authorDate":"2021-03-30 00:46:34","commitOrder":7,"curCode":"    public GenericUniqueKey configureObject(DBRProgressMonitor monitor, Object table, GenericUniqueKey primaryKey) {\n        boolean isSupportCheckConstraint = primaryKey.getDataSource().getMetaModel().supportsCheckConstraints();\n        return new UITask<GenericUniqueKey>() {\n            @Override\n            protected GenericUniqueKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    isSupportCheckConstraint ?\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY, DBSEntityConstraintType.CHECK} :\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                if (primaryKey instanceof DBSTableCheckConstraint) {\n                    ((DBSTableCheckConstraint)primaryKey).setCheckConstraintDefinition(editPage.getConstraintExpression());\n                }\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","date":"2021-03-30 00:46:34","endLine":69,"groupId":"10432","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objecttable@GenericUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/1b/8e2b36831b33055404bc774d559d16968247f8.src","preCode":"    public GenericUniqueKey configureObject(DBRProgressMonitor monitor, Object table, GenericUniqueKey primaryKey) {\n        boolean isSupportCheckConstraint = primaryKey.getDataSource().getMetaModel().supportsCheckConstraints();\n        return new UITask<GenericUniqueKey>() {\n            @Override\n            protected GenericUniqueKey runTask() {\n                EditConstraintPage editPage = new EditConstraintPage(\n                    \"Create unique constraint\",\n                    primaryKey,\n                    isSupportCheckConstraint ?\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY, DBSEntityConstraintType.CHECK} :\n                            new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n                if (!editPage.edit()) {\n                    return null;\n                }\n\n                primaryKey.setConstraintType(editPage.getConstraintType());\n                primaryKey.setName(editPage.getConstraintName());\n                if (primaryKey instanceof GenericCheckConstraint) {\n                    ((GenericCheckConstraint)primaryKey).setCheckConstraintExpression(editPage.getConstraintExpression());\n                }\n                int colIndex = 1;\n                for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                    primaryKey.addColumn(\n                        new GenericTableConstraintColumn(\n                            primaryKey,\n                            (GenericTableColumn) tableColumn,\n                            colIndex++));\n                }\n                return primaryKey;\n            }\n        }.execute();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic.ui/src/org/jkiss/dbeaver/ext/generic/views/GenericTablePrimaryKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2019-08-07 17:18:28","commitOrder":7,"curCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","date":"2019-08-07 17:18:28","endLine":56,"groupId":"10432","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"configureObject","params":"(DBRProgressMonitormonitor@Objectcontainer@SQLServerTableUniqueKeyprimaryKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/d9e8d867c0f2bcf4c5874f0a50c81f474a1525.src","preCode":"    public SQLServerTableUniqueKey configureObject(DBRProgressMonitor monitor, Object container, SQLServerTableUniqueKey primaryKey) {\n        return UITask.run(() -> {\n            EditConstraintPage editPage = new EditConstraintPage(\n                \"Create constraint\",\n                primaryKey,\n                new DBSEntityConstraintType[] {DBSEntityConstraintType.PRIMARY_KEY, DBSEntityConstraintType.UNIQUE_KEY} );\n            if (!editPage.edit()) {\n                return null;\n            }\n            primaryKey.setConstraintType(editPage.getConstraintType());\n            primaryKey.setName(editPage.getConstraintName());\n            int colIndex = 1;\n            for (DBSEntityAttribute tableColumn : editPage.getSelectedAttributes()) {\n                primaryKey.addColumn(\n                    new SQLServerTableUniqueKeyColumn(\n                        primaryKey,\n                        (SQLServerTableColumn) tableColumn,\n                        colIndex++));\n            }\n            return primaryKey;\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/config/SQLServerUniqueKeyConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"284e19608f788758c5d12aefcdad783191596ec1","commitMessage":"@@@Merge pull request #11896 from dbeaver/sqlserverCheck#11495\n\n#11495 check constraints added in standard generated DDL\n\nFormer-commit-id: 04f3251c982280176abdcb5af94bd60a4c3254ab","date":"2021-03-30 00:46:34","modifiedFileCount":"7","status":"M","submitter":"Serge Rider"}]
