[{"authorTime":"2020-03-19 18:53:14","codes":[{"authorDate":"2021-08-20 17:49:25","commitOrder":2,"curCode":"    public void serialize(Writer planData, DBCPlan plan) throws IOException {\n        serializeJson(planData, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n            @Override\n            public String version() {\n                return MySQLConstants.TYPE_JSON;\n            }\n\n            @Override\n            public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n                JsonObject attributes = new JsonObject();\n                OceanbasePlanNodeJSON jsNode = (OceanbasePlanNodeJSON) node;\n                for (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n                    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n                }\n                nodeJson.add(PROP_ATTRIBUTES, attributes);\n            }\n        });\n    }\n","date":"2021-08-20 17:49:25","endLine":87,"groupId":"11314","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"serialize","params":"(WriterplanData@DBCPlanplan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fd/482b3dc5f962f018493fa2af1ff734e1fd55c4.src","preCode":"    public void serialize(Writer planData, DBCPlan plan) throws IOException {\n        serializeJson(planData, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n            @Override\n            public String version() {\n                return MySQLConstants.TYPE_JSON;\n            }\n\n            @Override\n            public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n                JsonObject attributes = new JsonObject();\n                OceanbasePlanNodeJSON jsNode = (OceanbasePlanNodeJSON) node;\n                for (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n                    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n                }\n                nodeJson.add(PROP_ATTRIBUTES, attributes);\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oceanbase/src/org/jkiss/dbeaver/ext/oceanbase/model/plan/OceanbasePlanAnalyzer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2020-03-19 18:53:14","commitOrder":2,"curCode":"    public void serialize(@NotNull Writer writer, @NotNull DBCPlan plan) throws IOException, InvocationTargetException {\n\n\tserializeJson(writer, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n\t    @Override\n\t    public String version() {\n\t\treturn \"json\";\n\t    }\n\n\t    @Override\n\t    public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n\n\t\tJsonObject attributes = new JsonObject();\n\t\tOcientPlanNodeJson jsNode = (OcientPlanNodeJson) node;\n\t\tfor (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n\t\t    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n\t\t}\n\t\tnodeJson.add(PROP_ATTRIBUTES, attributes);\n\t    }\n\t});\n    }\n","date":"2020-03-19 18:53:14","endLine":95,"groupId":"11314","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serialize","params":"(@NotNullWriterwriter@@NotNullDBCPlanplan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/98/821ecc8a210611163abcf55b6e97b9346a6b1e.src","preCode":"    public void serialize(@NotNull Writer writer, @NotNull DBCPlan plan) throws IOException, InvocationTargetException {\n\n\tserializeJson(writer, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n\t    @Override\n\t    public String version() {\n\t\treturn \"json\";\n\t    }\n\n\t    @Override\n\t    public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n\n\t\tJsonObject attributes = new JsonObject();\n\t\tOcientPlanNodeJson jsNode = (OcientPlanNodeJson) node;\n\t\tfor (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n\t\t    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n\t\t}\n\t\tnodeJson.add(PROP_ATTRIBUTES, attributes);\n\t    }\n\t});\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ocient/src/org/jkiss/dbeaver/ext/ocient/model/plan/OcientQueryPlaner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"}],"commitId":"c04ad91eed471373f4e9059ff79e7f09e147d661","commitMessage":"@@@Merge pull request #13449 from LuckyLeoZZ/devel\n\nAdd database plugin","date":"2021-08-20 17:49:25","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-03-19 18:53:14","codes":[{"authorDate":"2021-08-20 18:18:04","commitOrder":3,"curCode":"    public void serialize(@NotNull Writer planData, @NotNull DBCPlan plan) throws IOException {\n        serializeJson(planData, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n            @Override\n            public String version() {\n                return MySQLConstants.TYPE_JSON;\n            }\n\n            @Override\n            public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n                JsonObject attributes = new JsonObject();\n                OceanbasePlanNodeJSON jsNode = (OceanbasePlanNodeJSON) node;\n                for (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n                    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n                }\n                nodeJson.add(PROP_ATTRIBUTES, attributes);\n            }\n        });\n    }\n","date":"2021-08-20 18:18:04","endLine":82,"groupId":"10178","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"serialize","params":"(@NotNullWriterplanData@@NotNullDBCPlanplan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b5/528208ee978bd3ceec9600187f25e7977666e7.src","preCode":"    public void serialize(Writer planData, DBCPlan plan) throws IOException {\n        serializeJson(planData, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n            @Override\n            public String version() {\n                return MySQLConstants.TYPE_JSON;\n            }\n\n            @Override\n            public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n                JsonObject attributes = new JsonObject();\n                OceanbasePlanNodeJSON jsNode = (OceanbasePlanNodeJSON) node;\n                for (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n                    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n                }\n                nodeJson.add(PROP_ATTRIBUTES, attributes);\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oceanbase/src/org/jkiss/dbeaver/ext/oceanbase/model/plan/OceanbasePlanAnalyzer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2020-03-19 18:53:14","commitOrder":3,"curCode":"    public void serialize(@NotNull Writer writer, @NotNull DBCPlan plan) throws IOException, InvocationTargetException {\n\n\tserializeJson(writer, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n\t    @Override\n\t    public String version() {\n\t\treturn \"json\";\n\t    }\n\n\t    @Override\n\t    public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n\n\t\tJsonObject attributes = new JsonObject();\n\t\tOcientPlanNodeJson jsNode = (OcientPlanNodeJson) node;\n\t\tfor (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n\t\t    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n\t\t}\n\t\tnodeJson.add(PROP_ATTRIBUTES, attributes);\n\t    }\n\t});\n    }\n","date":"2020-03-19 18:53:14","endLine":95,"groupId":"10178","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serialize","params":"(@NotNullWriterwriter@@NotNullDBCPlanplan)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/98/821ecc8a210611163abcf55b6e97b9346a6b1e.src","preCode":"    public void serialize(@NotNull Writer writer, @NotNull DBCPlan plan) throws IOException, InvocationTargetException {\n\n\tserializeJson(writer, plan, dataSource.getInfo().getDriverName(), new DBCQueryPlannerSerialInfo() {\n\n\t    @Override\n\t    public String version() {\n\t\treturn \"json\";\n\t    }\n\n\t    @Override\n\t    public void addNodeProperties(DBCPlanNode node, JsonObject nodeJson) {\n\n\t\tJsonObject attributes = new JsonObject();\n\t\tOcientPlanNodeJson jsNode = (OcientPlanNodeJson) node;\n\t\tfor (Map.Entry<String, String> e : jsNode.getNodeProps().entrySet()) {\n\t\t    attributes.add(e.getKey(), new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n\t\t}\n\t\tnodeJson.add(PROP_ATTRIBUTES, attributes);\n\t    }\n\t});\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ocient/src/org/jkiss/dbeaver/ext/ocient/model/plan/OcientQueryPlaner.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"337e6db33dc41d0de5fca34a62af76dadb3351f4","commitMessage":"@@@#13596 Oceanbase plugin config and fixes\n","date":"2021-08-20 18:18:04","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"}]
