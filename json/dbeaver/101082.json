[{"authorTime":"2016-10-09 16:17:59","codes":[{"authorDate":"2016-10-09 16:17:59","commitOrder":1,"curCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\t\t\n\t}\n","date":"2016-10-09 16:17:59","endLine":99,"groupId":"7710","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b7/06cae09eb95188ecd1ba58ce6f532f804dcc95.src","preCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\t\t\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2016-10-09 16:17:59","commitOrder":1,"curCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n\t\t\n\t\tString sql;\n\t\tif (forTable != null) {\n\t\t\tsql = SQL_UK_TAB;\n\t\t} else {\n\t\t\tsql = SQL_UK_ALL;\n\t\t}\n\t\t\n\t\tJDBCPreparedStatement dbStat = session.prepareStatement(sql);\n\t\tdbStat.setString(1, exasolSchema.getName());\n\t\tif (forTable != null)\n\t\t\tdbStat.setString(2, forTable.getName());\n\t\t\n\t\treturn dbStat;\n\t\t\t\n\t}\n","date":"2016-10-09 16:17:59","endLine":87,"groupId":"7710","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ba/c47cce73d81e37e87363019ae9a809643f8a3a.src","preCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n\t\t\n\t\tString sql;\n\t\tif (forTable != null) {\n\t\t\tsql = SQL_UK_TAB;\n\t\t} else {\n\t\t\tsql = SQL_UK_ALL;\n\t\t}\n\t\t\n\t\tJDBCPreparedStatement dbStat = session.prepareStatement(sql);\n\t\tdbStat.setString(1, exasolSchema.getName());\n\t\tif (forTable != null)\n\t\t\tdbStat.setString(2, forTable.getName());\n\t\t\n\t\treturn dbStat;\n\t\t\t\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableUniqueKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"798a6543e6606cd3222a863c7a920c25d68581a5","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: b86d35a342037e96faa44a359ac1ef183f5eeb77","date":"2016-10-09 16:17:59","modifiedFileCount":"0","status":"B","submitter":"Serge Rider"},{"authorTime":"2017-03-19 19:41:06","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":2,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":107,"groupId":"16505","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/5d817bb66d0ae650036e0e7971574526742602.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2017-03-19 19:41:06","commitOrder":2,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":99,"groupId":"16505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4d/2731eb9a1b4d81b503555441e54daa2a573b02.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = SQL_UK_TAB;\n        } else {\n            sql = SQL_UK_ALL;\n        }\n\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null)\n            dbStat.setString(2, forTable.getName());\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableUniqueKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"c994ba8f165c1f75288f6cfeefb9095b5cb04914","commitMessage":"@@@Merge branch 'devel' of https://github.com/serge-rider/dbeaver\n\n\nFormer-commit-id: cdb84c55a71481c781e9366599848ef81d4cb10f","date":"2017-03-19 19:41:06","modifiedFileCount":"145","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-07-17 22:24:52","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":3,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":107,"groupId":"16505","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/5d817bb66d0ae650036e0e7971574526742602.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"N"},{"authorDate":"2017-07-17 22:24:52","commitOrder":3,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-07-17 22:24:52","endLine":130,"groupId":"16505","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/1023665608c83999475bfb44c09a014055978b.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableUniqueKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"3ad464d1ea833a3d2424df73d6615960275be1fb","commitMessage":"@@@Merge pull request #1892 from Sargul/devel\n\nData Type Issue and performance\n\nFormer-commit-id: 1088a45588a8728ebddf1d026eb7c2d606a731c5","date":"2017-07-17 22:24:52","modifiedFileCount":"2","status":"M","submitter":"Charly"},{"authorTime":"2017-07-17 22:24:52","codes":[{"authorDate":"2018-11-29 01:42:56","commitOrder":4,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2018-11-29 01:42:56","endLine":119,"groupId":"16505","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/193f79268f45213e247f54c1cd885daf94c0c0.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2017-07-17 22:24:52","commitOrder":4,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-07-17 22:24:52","endLine":130,"groupId":"16505","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/1023665608c83999475bfb44c09a014055978b.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableUniqueKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"}],"commitId":"1127ab1c44afb782192c03bc6cba8676bc58801a","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 0d5d7e725b9c5996adc0b7a93d63e797b23c71a8","date":"2018-11-29 01:42:56","modifiedFileCount":"10","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2017-07-17 22:24:52","codes":[{"authorDate":"2020-03-26 20:25:14","commitOrder":5,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2020-03-26 20:25:14","endLine":118,"groupId":"101082","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/aae2e4a7cecd66bb0e3935d7f2950fc8582f4f.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2017-07-17 22:24:52","commitOrder":5,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-07-17 22:24:52","endLine":130,"groupId":"101082","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/1023665608c83999475bfb44c09a014055978b.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_UK_TAB,ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_UK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableUniqueKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"}],"commitId":"919dad208dd39232b1ed87c5a630340f8269ada0","commitMessage":"@@@#8226 Exasol: FK model enhancement (read ref columns)\n\n\nFormer-commit-id: f9ddcc72824ad32cf5a5f97dfcc5bd868debeafb","date":"2020-03-26 20:25:14","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"}]
