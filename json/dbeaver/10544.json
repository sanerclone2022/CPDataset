[{"authorTime":"2020-05-31 16:55:35","codes":[{"authorDate":"2020-05-31 16:55:35","commitOrder":1,"curCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","date":"2020-05-31 16:55:35","endLine":178,"groupId":"6189","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createScriptColumns","params":"(ColumnViewerviewer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/90/8293565c8403fb5d1b69662db53a2185e069e7.src","preCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tasks/ui/sql/script/SQLScriptTaskScriptSelectorDialog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2020-05-31 16:55:35","commitOrder":1,"curCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","date":"2020-05-31 16:55:35","endLine":157,"groupId":"6189","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createScriptColumns","params":"(ColumnViewerviewer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f6/cf3214ef96860c12f843994d722e487e9607dd.src","preCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tasks/ui/sql/script/SQLScriptTaskDataSourceSelectorDialog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"}],"commitId":"64433a1b8083af8ec382c7806582807f99c744ec","commitMessage":"@@@SQL script task UI configurator\n\n\nFormer-commit-id: 056258ec619ed6af36443c6efea85075f582e244","date":"2020-05-31 16:55:35","modifiedFileCount":"0","status":"B","submitter":"serge-rider"},{"authorTime":"2020-06-18 23:39:06","codes":[{"authorDate":"2020-06-18 23:39:06","commitOrder":2,"curCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, DTUIMessages.sql_script_task_selector_dialog_column_description_script, SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, DTUIMessages.sql_script_task_selector_dialog_column_description_script_data_source, SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","date":"2020-06-18 23:39:06","endLine":179,"groupId":"10544","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createScriptColumns","params":"(ColumnViewerviewer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/cb/61c724a097ab494ea3c7467b7bf5db98e40f77.src","preCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tasks/ui/sql/script/SQLScriptTaskScriptSelectorDialog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2020-06-18 23:39:06","commitOrder":2,"curCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script, SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source, SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","date":"2020-06-18 23:39:06","endLine":158,"groupId":"10544","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createScriptColumns","params":"(ColumnViewerviewer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/57/0ff2a55c33e1a15ab8ea2dd414a44f02caf330.src","preCode":"    static void createScriptColumns(ColumnViewer viewer) {\n        final ILabelProvider mainLabelProvider = (ILabelProvider) viewer.getLabelProvider();\n        ViewerColumnController columnController = new ViewerColumnController(\"sqlTaskScriptViewer\", viewer);\n        columnController.setForceAutoSize(true);\n        columnController.addColumn(ModelMessages.model_navigator_Name, \"Script\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                return mainLabelProvider.getText(element);\n            }\n            @Override\n            public Image getImage(Object element) {\n                return mainLabelProvider.getImage(element);\n            }\n            @Override\n            public String getToolTipText(Object element) {\n                if (mainLabelProvider instanceof IToolTipProvider) {\n                    return ((IToolTipProvider) mainLabelProvider).getToolTipText(element);\n                }\n                return null;\n            }\n        });\n\n        columnController.addColumn(ModelMessages.model_navigator_Connection, \"Script datasource\", SWT.LEFT, true, true, new ColumnLabelProvider() {\n            @Override\n            public String getText(Object element) {\n                if (element instanceof DBNResource) {\n                    Collection<DBPDataSourceContainer> containers = ((DBNResource) element).getAssociatedDataSources();\n                    if (!CommonUtils.isEmpty(containers)) {\n                        StringBuilder text = new StringBuilder();\n                        for (DBPDataSourceContainer container : containers) {\n                            if (text.length() > 0) {\n                                text.append(\", \");\n                            }\n                            text.append(container.getName());\n                        }\n                        return text.toString();\n                    }\n                }\n                return \"\";\n            }\n\n            @Override\n            public Image getImage(Object element) {\n                return null;\n            }\n        });\n        columnController.createColumns(true);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tasks/ui/sql/script/SQLScriptTaskDataSourceSelectorDialog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"1d51f16589e05ba2826d3b132a00beab2e00ecd3","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 56ceb89c8329ad2d8f994d43216ba33001e1314a","date":"2020-06-18 23:39:06","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"}]
