[{"authorTime":"2018-07-23 15:41:36","codes":[{"authorDate":"2019-11-26 02:40:21","commitOrder":3,"curCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = sessionManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View sessions\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session\")) {\n                        Throwable lastError = null;\n                        for (SESSION_TYPE dbaSession : this.sessions) {\n                            try {\n                                sessionManager.alterSession(session, dbaSession, options);\n                            } catch (Exception e) {\n                                log.error(\"Error killing session \" + session, e);\n                                lastError = e;\n                            }\n                        }\n                        if (lastError != null) {\n                            throw new InvocationTargetException(lastError);\n                        }\n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","date":"2019-11-26 02:40:26","endLine":171,"groupId":"15071","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluate","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/de/1438aea9ce69f5c30c7ccaa7756e9b9d2a3b8f.src","preCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = sessionManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View sessions\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session\")) {\n                        Throwable lastError = null;\n                        for (SESSION_TYPE dbaSession : this.sessions) {\n                            try {\n                                sessionManager.alterSession(session, dbaSession, options);\n                            } catch (Exception e) {\n                                log.error(\"Error killing session \" + session, e);\n                                lastError = e;\n                            }\n                        }\n                        if (lastError != null) {\n                            throw new InvocationTargetException(lastError);\n                        }\n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.session/src/org/jkiss/dbeaver/ui/views/session/SessionTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2018-07-23 15:41:36","commitOrder":3,"curCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = lockManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View locks\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session by lock\")) {\n                    \t\tlockManager.alterSession(session, this.lock, options);\t                       \n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","date":"2018-07-23 15:41:36","endLine":161,"groupId":"16876","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"evaluate","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/33/ba8884dce1e7654fb9e1ae780b25b0138a5890.src","preCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = lockManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View locks\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session by lock\")) {\n                    \t\tlockManager.alterSession(session, this.lock, options);\t                       \n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ui.locks/src/org/jkiss/dbeaver/ext/ui/locks/table/LockTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"NB"}],"commitId":"38283d2bce0457708a945ab1d322114812fa5171","commitMessage":"@@@#6972 Extract tools and task management from core\n\n\nFormer-commit-id: 40b8c740cfbecaf9fe46428bbf06e885628f5b73","date":"2019-11-26 02:40:26","modifiedFileCount":"32","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-16 07:03:51","codes":[{"authorDate":"2019-12-16 07:03:51","commitOrder":4,"curCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = sessionManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View sessions\", null)) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session\")) {\n                        Throwable lastError = null;\n                        for (SESSION_TYPE dbaSession : this.sessions) {\n                            try {\n                                sessionManager.alterSession(session, dbaSession, options);\n                            } catch (Exception e) {\n                                log.error(\"Error killing session \" + session, e);\n                                lastError = e;\n                            }\n                        }\n                        if (lastError != null) {\n                            throw new InvocationTargetException(lastError);\n                        }\n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","date":"2019-12-16 07:03:51","endLine":171,"groupId":"12474","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluate","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/65/fb57184178316b0f8dbb83aaa5e78e915787f8.src","preCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = sessionManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View sessions\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session\")) {\n                        Throwable lastError = null;\n                        for (SESSION_TYPE dbaSession : this.sessions) {\n                            try {\n                                sessionManager.alterSession(session, dbaSession, options);\n                            } catch (Exception e) {\n                                log.error(\"Error killing session \" + session, e);\n                                lastError = e;\n                            }\n                        }\n                        if (lastError != null) {\n                            throw new InvocationTargetException(lastError);\n                        }\n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.session/src/org/jkiss/dbeaver/ui/views/session/SessionTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2019-12-16 07:03:51","commitOrder":4,"curCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = lockManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View locks\", null)) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session by lock\")) {\n                    \t\tlockManager.alterSession(session, this.lock, options);\t                       \n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","date":"2019-12-16 07:03:51","endLine":161,"groupId":"12474","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"evaluate","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6f/548d999de7d1a742230fd3c97063433aa125a3.src","preCode":"        public Void evaluate(DBRProgressMonitor monitor)\n            throws InvocationTargetException, InterruptedException\n        {\n            try {\n                try (DBCExecutionContext isolatedContext = lockManager.getDataSource().getDefaultInstance().openIsolatedContext(monitor, \"View locks\")) {\n                    try (DBCSession session = isolatedContext.openSession(monitor, DBCExecutionPurpose.UTIL, \"Kill server session by lock\")) {\n                    \t\tlockManager.alterSession(session, this.lock, options);\t                       \n                        return null;\n                    }\n                }\n            } catch (Throwable ex) {\n                throw new InvocationTargetException(ex);\n            }\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.ui.locks/src/org/jkiss/dbeaver/ext/ui/locks/table/LockTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"5d1213b1b60b3f816b903635f88f372791225c28","commitMessage":"@@@dbeaver/dbeaver#5172 Isolated context initialization improvement (use active context instead of global)\n\n\nFormer-commit-id: 8f1ffec90272bf98d653bd53acbff9279b96dd07","date":"2019-12-16 07:03:51","modifiedFileCount":"25","status":"M","submitter":"serge-rider"}]
