[{"authorTime":"2018-12-29 05:36:45","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":1,"curCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":71,"groupId":"14884","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullfinalIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/10/440ca8a7dc79efffee9f171fb5898d7226017d.src","preCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/EnumValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2018-12-29 05:36:45","commitOrder":1,"curCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n            case PANEL:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case EDITOR:\n                return new TextViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":64,"groupId":"3302","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/b2625d3cf5da13d22942add2a2590086eb2082.src","preCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n            case PANEL:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case EDITOR:\n                return new TextViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/UUIDValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"}],"commitId":"3752e74ff31a5aee8616c9e37d50626de690a976","commitMessage":"@@@#10 RSV implementation extraction\n\n\nFormer-commit-id: aa7c026a3e9871fad79ded3afbf21c0e1684c7dd","date":"2018-12-29 05:36:49","modifiedFileCount":"16","status":"B","submitter":"serge-rider"},{"authorTime":"2019-03-11 02:18:18","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":2,"curCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":71,"groupId":"14884","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullfinalIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/10/440ca8a7dc79efffee9f171fb5898d7226017d.src","preCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/EnumValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2019-03-11 02:18:18","commitOrder":2,"curCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n            case PANEL:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            if (((String) strValue).isEmpty()) {\n                                return null;\n                            }\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case EDITOR:\n                return new TextViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","date":"2019-03-11 02:18:18","endLine":67,"groupId":"6674","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e3/0b1c5f9c326c3ace2fd11614ee495f0f368637.src","preCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n            case PANEL:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case EDITOR:\n                return new TextViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/UUIDValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"9190ce06b7c546d3a78bc29fecf3fd617b9d49bf","commitMessage":"@@@NULL UUID edit fix\n\n\nFormer-commit-id: 6b6ae95aab5b26a294ae152d391579dcee513ec7","date":"2019-03-11 02:18:18","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2020-08-10 17:21:44","codes":[{"authorDate":"2018-12-29 05:36:45","commitOrder":3,"curCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","date":"2018-12-29 05:36:49","endLine":71,"groupId":"10381","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullfinalIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/10/440ca8a7dc79efffee9f171fb5898d7226017d.src","preCode":"    public IValueEditor createEditor(@NotNull final IValueController controller)\n        throws DBException\n    {\n        switch (controller.getEditType()) {\n            case INLINE:\n            {\n                if (isMultiValue(controller)) {\n                    return null;\n                }\n                return new EnumInlineEditor(controller);\n            }\n            case PANEL:\n            {\n                return new EnumPanelEditor(controller);\n            }\n            case EDITOR:\n                return new DefaultValueViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/EnumValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2020-08-10 17:21:44","commitOrder":3,"curCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            if (((String) strValue).isEmpty()) {\n                                return null;\n                            }\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case PANEL:\n                return new ContentPanelEditor(controller);\n            case EDITOR:\n                if (controller.getExecutionContext().getDataSource().getContainer().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_STRING_USE_CONTENT_EDITOR)) {\n                    return ContentEditor.openEditor(controller);\n                } else {\n                    return new TextViewDialog(controller);\n                }\n            default:\n                return null;\n        }\n    }\n","date":"2020-08-10 17:21:44","endLine":75,"groupId":"10381","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createEditor","params":"(@NotNullIValueControllercontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ae/731770fe8746fe8310e250a078b758ced6041e.src","preCode":"    public IValueEditor createEditor(@NotNull IValueController controller) throws DBException {\n        switch (controller.getEditType()) {\n            case INLINE:\n            case PANEL:\n                return new StringInlineEditor(controller) {\n                    @Override\n                    public Object extractEditorValue() throws DBCException {\n                        Object strValue = super.extractEditorValue();\n                        if (strValue instanceof String) {\n                            if (((String) strValue).isEmpty()) {\n                                return null;\n                            }\n                            try {\n                                return UUID.fromString((String) strValue);\n                            } catch (Exception e) {\n                                throw new DBCException(\"Bad UUID value [\" + strValue + \"]\");\n                            }\n                        }\n                        return strValue;\n                    }\n                };\n            case EDITOR:\n                return new TextViewDialog(controller);\n            default:\n                return null;\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/data/managers/UUIDValueManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"d1430fac4f1201ac73a8560a463f0512ed8ee2be","commitMessage":"@@@#8960 UUID transform fix + Hex control fixes (copy/paste handler)\n\n\nFormer-commit-id: 68127c1b277cd02bdc5ae0a83ae81a3581165dd3","date":"2020-08-10 17:21:44","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"}]
