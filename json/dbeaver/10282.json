[{"authorTime":"2018-10-13 20:06:58","codes":[{"authorDate":"2018-10-13 20:06:58","commitOrder":1,"curCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2018-10-13 20:06:58","endLine":271,"groupId":"817","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7d/1ee2b341e22c7a2d5def294a52f815a0d3d500.src","preCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"},{"authorDate":"2018-10-13 20:06:58","commitOrder":1,"curCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2018-10-13 20:06:58","endLine":201,"groupId":"10229","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6a/a5635be1ab233913274ebea8532f709adb954c.src","preCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"51c8ddf4ec4daa621c3feff34d120e934633a6ac","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 17f886546eced0902561199e308934e6d98952a0","date":"2018-10-13 20:06:58","modifiedFileCount":"410","status":"B","submitter":"serge@jkiss.org"},{"authorTime":"2020-12-05 19:09:02","codes":[{"authorDate":"2020-12-05 19:09:02","commitOrder":2,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (GeneralUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":305,"groupId":"817","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4a/bc44fa52c4db4bb5a7e6a1cdc022542a0a1529.src","preCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2020-12-05 19:09:02","commitOrder":2,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":261,"groupId":"10229","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/32/1644c061673994505ed667d3ddc2dc8a537899.src","preCode":"    static String getFullServerVersion(File path)\n    {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"5c0cce794ce95d8916c51c97467e99f06b3d8291","commitMessage":"@@@Merge pull request #10614 from dbeaver/native-clients-mac#7976\n\n#7976 find local mysql.  mariadb and postgres servers on mac\n\nFormer-commit-id: 46b23aa9ecb83d5a7d4df19c46ea547fa1bffaca","date":"2020-12-05 19:09:02","modifiedFileCount":"9","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-12-05 19:09:02","codes":[{"authorDate":"2021-02-10 18:35:22","commitOrder":3,"curCode":"    public static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (GeneralUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2021-02-10 18:35:22","endLine":313,"groupId":"817","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/75/ae8217bb673173068f9cf7b6f991885d0f6344.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (GeneralUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"},{"authorDate":"2020-12-05 19:09:02","commitOrder":3,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":261,"groupId":"10229","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/32/1644c061673994505ed667d3ddc2dc8a537899.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"8a280682514584077eb6864634685a167bf20a65","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: bd1ec1a529ad8a5873467c3a89b658b6e07c663c","date":"2021-02-10 18:35:22","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-12-05 19:09:02","codes":[{"authorDate":"2021-02-24 01:04:45","commitOrder":4,"curCode":"    public static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (RuntimeUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2021-02-24 01:04:45","endLine":309,"groupId":"817","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c7/df1de947d070cabbfe3c0d3d2132e0c37a7ead.src","preCode":"    public static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (GeneralUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2020-12-05 19:09:02","commitOrder":4,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":261,"groupId":"10229","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/32/1644c061673994505ed667d3ddc2dc8a537899.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"193ae09a9bccf7f6a29d1a17025e22d008c14969","commitMessage":"@@@Merge pull request #11445 from dbeaver/os-utils-refactoring\n\nOs utils refactoring\n\nFormer-commit-id: 3baeed9a85bbe6e2a9394e847e294ce740ddbc94","date":"2021-02-24 01:04:45","modifiedFileCount":"20","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-12-05 19:09:02","codes":[{"authorDate":"2021-02-24 01:11:07","commitOrder":5,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (RuntimeUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2021-02-24 01:11:07","endLine":309,"groupId":"817","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fa/60580bebf4d53ad1eef259720298d4f3c2e17b.src","preCode":"    public static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (RuntimeUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2020-12-05 19:09:02","commitOrder":5,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":261,"groupId":"10229","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/32/1644c061673994505ed667d3ddc2dc8a537899.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"be51814e846848ed863bd8f5b3fe2984cbb71b67","commitMessage":"@@@Merge pull request #11444 from dbeaver/column-statistics-enhansments\n\nColumn statistics enhansments\n\nFormer-commit-id: 3054a39b7b0fac5dbf7de60701fbc37d8bdd23d2","date":"2021-02-24 01:11:07","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-12-05 19:09:02","codes":[{"authorDate":"2021-03-04 12:29:35","commitOrder":6,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[]{cmd, MySQLConstants.FLAG_VERSION});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2021-03-04 12:29:35","endLine":304,"groupId":"10282","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d1/c9d8572c9c6393adf1e3b61ba6c15fb6170f42.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            MySQLUtils.getMySQLConsoleBinaryName()).getAbsolutePath();\n\n        try {\n            Process p;\n            if (RuntimeUtils.isWindows()) {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"-V\"});\n            } else {\n                p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            }\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    while ((line = input.readLine()) != null) {\n                        int pos = line.indexOf(\"Distrib \");\n                        if (pos != -1) {\n                            pos += 8;\n                            int pos2 = line.indexOf(\",\", pos);\n                            return line.substring(pos, pos2);\n                        }\n                        pos = line.indexOf(\"Ver \");\n                        if (pos != -1) {\n                            pos += 4;\n                            int pos2 = line.indexOf(\" for \", pos);\n                            return line.substring(pos, pos2);\n                        }\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading MySQL server version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/MySQLDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2020-12-05 19:09:02","commitOrder":6,"curCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","date":"2020-12-05 19:09:02","endLine":261,"groupId":"10282","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getFullServerVersion","params":"(Filepath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/32/1644c061673994505ed667d3ddc2dc8a537899.src","preCode":"    private static String getFullServerVersion(File path) {\n        File binPath = path;\n        File binSubfolder = new File(binPath, \"bin\");\n        if (binSubfolder.exists()) {\n            binPath = binSubfolder;\n        }\n\n        String cmd = new File(\n            binPath,\n            RuntimeUtils.getNativeBinaryName(\"psql\")).getAbsolutePath();\n\n        try {\n            Process p = Runtime.getRuntime().exec(new String[] {cmd, \"--version\"});\n            try {\n                BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                try {\n                    String line;\n                    if ((line = input.readLine()) != null) {\n                        return line;\n                    }\n                } finally {\n                    IOUtils.close(input);\n                }\n            } finally {\n                p.destroy();\n            }\n        }\n        catch (Exception ex) {\n            log.warn(\"Error reading PostgreSQL native client version from \" + cmd, ex);\n        }\n        return null;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/PostgreDataSourceProvider.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"d707a4be76c3484226ef60383b3cfb4c55bb8fb2","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 27a27177ff8a61c649572201561007efddcdc97f","date":"2021-03-04 12:29:35","modifiedFileCount":"5","status":"M","submitter":"serge-rider"}]
