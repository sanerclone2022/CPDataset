[{"authorTime":"2012-12-27 21:42:23","codes":[{"authorDate":"2012-12-27 21:42:23","commitOrder":1,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Commit '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().commit();\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2012-12-27 21:42:23","endLine":73,"groupId":"2845","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7f/b7ebbf4ec39321b31704282ed8a75313da9479.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Commit '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().commit();\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2012-12-27 21:42:23","commitOrder":1,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Rollback '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().rollback(null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2012-12-27 21:42:23","endLine":73,"groupId":"16190","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/3cce322072a432e8e2831c2ea744f4dc9e400e.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Rollback '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().rollback(null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"}],"commitId":"c3b34f573b09ba5384a00b6fd31cc27c0203f3ee","commitMessage":"@@@UI core extracted. Icons fixed\nInitial tray functions\n\nFormer-commit-id: 59fc8c64f3b110b4883c5fae440d012aba85c317","date":"2012-12-27 21:42:23","modifiedFileCount":"68","status":"B","submitter":"jurgen"},{"authorTime":"2013-10-08 15:21:33","codes":[{"authorDate":"2013-10-08 15:21:33","commitOrder":2,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        session.getTransactionManager().commit();\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2013-10-08 15:21:33","endLine":73,"groupId":"1222","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/d2455576d80bcea0e5fd775b39bc2d7258e707.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Commit '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().commit();\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2013-10-08 15:21:33","commitOrder":2,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        session.getTransactionManager().rollback(null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2013-10-08 15:21:33","endLine":73,"groupId":"5291","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/96/eed6840914e588c8b46d38e8c385bf9ae6662a.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCExecutionContext context = dataSource.openContext(monitor, DBCExecutionPurpose.UTIL, \"Rollback '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        context.getTransactionManager().rollback(null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        context.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"43081fb4b3d7999eb2ed59297eee368e64d13178","commitMessage":"@@@Execution context/session refactoring\n\nFormer-commit-id: 367b3a6295a50f34e66cecab82a8ab087dc01101","date":"2013-10-08 15:21:33","modifiedFileCount":"186","status":"M","submitter":"jurgen"},{"authorTime":"2015-04-07 21:28:25","codes":[{"authorDate":"2015-04-07 21:28:25","commitOrder":3,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.commit();\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-07 21:28:25","endLine":71,"groupId":"1425","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/87/7bd2ab501b1e780f9a4985f445dcaae9630ff5.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        session.getTransactionManager().commit();\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2015-04-07 21:28:25","commitOrder":3,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.rollback(null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-07 21:28:25","endLine":71,"groupId":"1425","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/68/f870898c007f67391bce511bbb7c0ff91bd387.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        final DBPDataSource dataSource = dataSourceContainer.getDataSource();\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback '\" + dataSourceContainer.getName() + \"' transaction\");\n                    try {\n                        session.getTransactionManager().rollback(null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"4d1de389150876b89f231a588a85d96c9a8839cf","commitMessage":"@@@Transaction manager refactoring\n\nFormer-commit-id: 6bcc1e510048fe30f38b81d890eaad1d5c87a59e","date":"2015-04-07 21:28:25","modifiedFileCount":"24","status":"M","submitter":"jurgen"},{"authorTime":"2015-04-08 04:20:01","codes":[{"authorDate":"2015-04-08 04:20:01","commitOrder":4,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.commit(monitor);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-08 04:20:01","endLine":71,"groupId":"1425","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/33/e0ae60b0f0274ea0c42ff8489ef9f92601504b.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.commit();\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2015-04-08 04:20:01","commitOrder":4,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.rollback(monitor, null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-08 04:20:01","endLine":71,"groupId":"1425","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bb/38c84bc9fc6859292afe10778794be16fe4fba.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.rollback(null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"ce30e1b68066d61b236edcd5363a00fca3654250","commitMessage":"@@@Transaction manager refactoring\n\nFormer-commit-id: 4c7bf6834268b0baa1f0df7eab96685a7940bd54","date":"2015-04-08 04:20:01","modifiedFileCount":"12","status":"M","submitter":"jurgen"},{"authorTime":"2015-04-16 21:58:22","codes":[{"authorDate":"2015-04-16 21:58:22","commitOrder":5,"curCode":"    public static void execute(Shell shell, @NotNull final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBPDataSource dataSource = dataSourceContainer.getDataSource();\n                    if (dataSource != null) {\n                        DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSource);\n                        if (txnManager != null) {\n                            DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                            try {\n                                txnManager.commit(session);\n                            } catch (DBCException e) {\n                                throw new InvocationTargetException(e);\n                            } finally {\n                                session.close();\n                            }\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-16 21:58:22","endLine":81,"groupId":"8027","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@@NotNullfinalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/31/a8b83ca0a6a20fe9d153d46c392e2d2e2dea8c.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.commit(monitor);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2015-04-16 21:58:22","commitOrder":5,"curCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBPDataSource dataSource = dataSourceContainer.getDataSource();\n                    if (dataSource != null) {\n                        DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSource);\n                        if (txnManager != null) {\n                            DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                            try {\n                                txnManager.rollback(session, null);\n                            } catch (DBCException e) {\n                                throw new InvocationTargetException(e);\n                            } finally {\n                                session.close();\n                            }\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-04-16 21:58:22","endLine":80,"groupId":"2569","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBSDataSourceContainerdataSourceContainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/55/892fbdcdb53a9f512f7a9e025af12f1ce0a7e7.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSourceContainer.getDataSource());\n                    if (txnManager != null) {\n                        try {\n                            txnManager.rollback(monitor, null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"05918c86d81d6ff5bb86493477a011c52dcc8278","commitMessage":"@@@Transaction manager refactoring. Session logging is in interface\n\nFormer-commit-id: 3b8a4f68e791f359a62f2ae3766e72428bdb62fc","date":"2015-04-16 21:58:22","modifiedFileCount":"14","status":"M","submitter":"jurgen"},{"authorTime":"2015-05-26 00:39:36","codes":[{"authorDate":"2015-05-26 00:39:36","commitOrder":6,"curCode":"    public static void execute(Shell shell, @NotNull final DBCExecutionContext context) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                    if (txnManager != null) {\n                        DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                        try {\n                            txnManager.commit(session);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        } finally {\n                            session.close();\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-05-26 00:39:36","endLine":71,"groupId":"7021","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b6/cb77f06d68be7aaebe5c22b89b24fb32684e61.src","preCode":"    public static void execute(Shell shell, @NotNull final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBPDataSource dataSource = dataSourceContainer.getDataSource();\n                    if (dataSource != null) {\n                        DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSource);\n                        if (txnManager != null) {\n                            DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                            try {\n                                txnManager.commit(session);\n                            } catch (DBCException e) {\n                                throw new InvocationTargetException(e);\n                            } finally {\n                                session.close();\n                            }\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2015-05-26 00:39:36","commitOrder":6,"curCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                    if (txnManager != null) {\n                        DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                        try {\n                            txnManager.rollback(session, null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        } finally {\n                            session.close();\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","date":"2015-05-26 00:39:36","endLine":70,"groupId":"7021","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8e/ceedd53d4216af11f4eb46563502fd9e921805.src","preCode":"    public static void execute(Shell shell, final DBSDataSourceContainer dataSourceContainer) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException\n                {\n                    DBPDataSource dataSource = dataSourceContainer.getDataSource();\n                    if (dataSource != null) {\n                        DBCTransactionManager txnManager = DBUtils.getTransactionManager(dataSource);\n                        if (txnManager != null) {\n                            DBCSession session = dataSource.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                            try {\n                                txnManager.rollback(session, null);\n                            } catch (DBCException e) {\n                                throw new InvocationTargetException(e);\n                            } finally {\n                                session.close();\n                            }\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"e8711c24b73ca0223ab488709a42841d0444e7fe","commitMessage":"@@@Use execution contexts wherever it is possible\n\nFormer-commit-id: 96877500453cda712905166c0c27014d8ba02f84","date":"2015-05-26 00:39:36","modifiedFileCount":"112","status":"M","submitter":"jurgen"},{"authorTime":"2015-07-27 01:40:17","codes":[{"authorDate":"2015-07-27 01:40:17","commitOrder":7,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                    try {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            }\n        });\n    }\n","date":"2015-07-27 01:40:17","endLine":62,"groupId":"7021","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/30/e34c4830e6c08a74f7603da73d2787284f9937.src","preCode":"    public static void execute(Shell shell, @NotNull final DBCExecutionContext context) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                    if (txnManager != null) {\n                        DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                        try {\n                            txnManager.commit(session);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        } finally {\n                            session.close();\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Commit\", \"Error while committing session\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2015-07-27 01:40:17","commitOrder":7,"curCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                    try {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            }\n        });\n    }\n","date":"2015-07-27 01:40:17","endLine":63,"groupId":"7021","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e3/d62581a3acc27a46f492f7eaca8a230e18c644.src","preCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        try {\n            DBeaverUI.runInProgressService(new DBRRunnableWithProgress() {\n                @Override\n                public void run(DBRProgressMonitor monitor)\n                    throws InvocationTargetException, InterruptedException {\n                    DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                    if (txnManager != null) {\n                        DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                        try {\n                            txnManager.rollback(session, null);\n                        } catch (DBCException e) {\n                            throw new InvocationTargetException(e);\n                        } finally {\n                            session.close();\n                        }\n                    }\n                }\n            });\n        } catch (InvocationTargetException e) {\n            UIUtils.showErrorDialog(shell, \"Rollback\", \"Error during session rollback\", e);\n        } catch (InterruptedException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"cfc5c7d00400dbc781d586f77a7db5bb5ccac7dc","commitMessage":"@@@Use job instead of progress service.\n\nFormer-commit-id: bd4a78caa12f1646b95a1a8794d183ababbf58df","date":"2015-07-27 01:40:17","modifiedFileCount":"7","status":"M","submitter":"jurgen"},{"authorTime":"2015-10-03 06:58:22","codes":[{"authorDate":"2015-10-03 06:58:22","commitOrder":8,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2015-10-03 06:58:22","endLine":59,"groupId":"16192","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/df/f6777fd1afc44fba803067e71803a988bc6a78.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\");\n                    try {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2015-10-03 06:58:22","commitOrder":8,"curCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2015-10-03 06:58:22","endLine":60,"groupId":"16192","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(Shellshell@finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/63/4151b19385b9d045a2b495ae4f70c51b098099.src","preCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\");\n                    try {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    } finally {\n                        session.close();\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"7d8e925311844771cefc37311309cb62b064a6ec","commitMessage":"@@@Java 1.7 -> fix auto-close\n\nFormer-commit-id: 6d25c7bb871b38b224ca2771a7148a371cf306bf","date":"2015-10-03 06:58:22","modifiedFileCount":"78","status":"M","submitter":"jurgen"},{"authorTime":"2017-02-17 17:57:06","codes":[{"authorDate":"2015-10-03 06:58:22","commitOrder":9,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2015-10-03 06:58:22","endLine":59,"groupId":"16192","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/df/f6777fd1afc44fba803067e71803a988bc6a78.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2017-02-17 17:57:06","commitOrder":9,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2017-02-17 17:57:06","endLine":59,"groupId":"16192","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ed/e91acee765b2e1b421ffa2cade15d9604aba4a.src","preCode":"    public static void execute(Shell shell, final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"2818ddd868d7be29ba450e994d2be05926a59806","commitMessage":"@@@#1264 Pending transaction dialog. Commit/rollback actions.\n\n\nFormer-commit-id: 3aa04ed757ba2dcad46a32405867805b7906b5ac","date":"2017-02-17 17:57:06","modifiedFileCount":"4","status":"M","submitter":"serge-rider"},{"authorTime":"2017-02-17 17:57:06","codes":[{"authorDate":"2018-04-07 05:33:50","commitOrder":10,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                NotificationPopupMessage.showMessage(\n                    context.getDataSource(),\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    3000, SWT.ICON_INFORMATION\n                );\n            }\n        });\n    }\n","date":"2018-04-07 05:33:50","endLine":65,"groupId":"3243","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/81/b8d5a2cc9c5d446ecf34642c80305719db1b32.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                        txnManager.commit(session);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2017-02-17 17:57:06","commitOrder":10,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2017-02-17 17:57:06","endLine":59,"groupId":"16192","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ed/e91acee765b2e1b421ffa2cade15d9604aba4a.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"}],"commitId":"a81265dd50ed35bae03741f4b9de99544a7b2e14","commitMessage":"@@@#3278 Notification sample (commit)\n\n\nFormer-commit-id: 82e99467f5940d4fabbf62e3981556c103406984","date":"2018-04-07 05:33:50","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2017-02-17 17:57:06","codes":[{"authorDate":"2018-04-07 06:13:17","commitOrder":11,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                AbstractNotification notification = new DatabaseNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    DBPMessageType.WARNING, null);\n                NotificationsUi.getService().notify(\n                    Collections.singletonList(notification));\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n            }\n        });\n    }\n","date":"2018-04-07 06:13:17","endLine":81,"groupId":"3243","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/27/5a27299a33966014e63ded35160b71f1424a09.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                NotificationPopupMessage.showMessage(\n                    context.getDataSource(),\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    3000, SWT.ICON_INFORMATION\n                );\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2017-02-17 17:57:06","commitOrder":11,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2017-02-17 17:57:06","endLine":59,"groupId":"16192","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ed/e91acee765b2e1b421ffa2cade15d9604aba4a.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"}],"commitId":"aae2c5017c6561f7fd2c811ad15db01b6f18cf3a","commitMessage":"@@@#3278 Switch to Mylyn notifications\n\n\nFormer-commit-id: 1b96f70dd79f7078ad82f17df75925c5278567f5","date":"2018-04-07 06:13:17","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2017-02-17 17:57:06","codes":[{"authorDate":"2018-04-07 14:48:49","commitOrder":12,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                NotificationUtils.sendNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n            }\n        });\n    }\n","date":"2018-04-07 14:48:49","endLine":73,"groupId":"3243","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/ec02b6cdedad0a462038e2d56d43bf5d98df40.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                AbstractNotification notification = new DatabaseNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    DBPMessageType.WARNING, null);\n                NotificationsUi.getService().notify(\n                    Collections.singletonList(notification));\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2017-02-17 17:57:06","commitOrder":12,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","date":"2017-02-17 17:57:06","endLine":59,"groupId":"16192","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ed/e91acee765b2e1b421ffa2cade15d9604aba4a.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"}],"commitId":"89c321b92ac8f4cd693a9ea8e2bcd0c32ece7c7b","commitMessage":"@@@#3278 Database notifications model\n\n\nFormer-commit-id: fd880e4537c292b18800c50d8034ba4c1f81b44c","date":"2018-04-07 14:48:49","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2018-04-07 17:35:33","codes":[{"authorDate":"2018-04-07 17:35:33","commitOrder":13,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\");\n            }\n        });\n    }\n","date":"2018-04-07 17:35:33","endLine":64,"groupId":"3243","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/41/7372b5ffef5f3b5f3d10941f8a8bfe11442806.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                NotificationUtils.sendNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2018-04-07 17:35:33","commitOrder":13,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                    DBeaverNotifications.showNotification(\n                        context.getDataSource(),\n                        \"rollback\",\n                        \"Transaction has been rolled back\\n\\n\" +\n                            \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                            \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                            DBPMessageType.ERROR);\n\n                }\n            }\n        });\n    }\n","date":"2018-04-07 17:35:33","endLine":71,"groupId":"2494","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/72/673d66bdf62cab40a59a46ee4d73afac60b59d.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"5c2ba13303b0f813c12c9958844aeff6fe604246","commitMessage":"@@@#3278 Notifications preferences + commit/rollback notifications\n\n\nFormer-commit-id: 5fa0153755e97ab691029c36ede64ac26b4386ec","date":"2018-04-07 17:35:33","modifiedFileCount":"10","status":"M","submitter":"serge-rider"},{"authorTime":"2018-04-07 17:44:58","codes":[{"authorDate":"2018-04-07 17:44:58","commitOrder":14,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    null,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n            }\n        });\n    }\n","date":"2018-04-07 17:44:58","endLine":67,"groupId":"3243","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bb/5f335563c506ae46e821081949724953ec87fa.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\");\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2018-04-07 17:44:58","commitOrder":14,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                    txnManager.rollback(session, null);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"rollback\",\n                    \"Transaction has been rolled back\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        DBPMessageType.ERROR,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n\n            }\n        });\n    }\n","date":"2018-04-07 17:44:58","endLine":69,"groupId":"2494","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/85/e3a8fac3391a4c096405cab3f99c77eaee9a2b.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", new DBRRunnableWithProgress() {\n            @Override\n            public void run(DBRProgressMonitor monitor)\n                throws InvocationTargetException, InterruptedException {\n                DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n                if (txnManager != null) {\n                    QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                    try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                        txnManager.rollback(session, null);\n                    } catch (DBCException e) {\n                        throw new InvocationTargetException(e);\n                    }\n                    DBeaverNotifications.showNotification(\n                        context.getDataSource(),\n                        \"rollback\",\n                        \"Transaction has been rolled back\\n\\n\" +\n                            \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                            \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                            DBPMessageType.ERROR);\n\n                }\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"b9d80a04154a58fc6a8239c7d4b764dcf58a3c99","commitMessage":"@@@#3278 Commit/rollback notifications\n\n\nFormer-commit-id: dc263f2c749cbac2046eedf9689b2a6b923cdd89","date":"2018-04-07 17:44:58","modifiedFileCount":"5","status":"M","submitter":"serge-rider"},{"authorTime":"2018-04-08 01:14:22","codes":[{"authorDate":"2018-04-08 01:14:22","commitOrder":15,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    DBeaverNotifications.NT_COMMIT,\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    null,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n            }\n        });\n    }\n","date":"2018-04-08 01:14:22","endLine":67,"groupId":"2002","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/87/f925bab0ffab1575ede119d61d12b69ca92d29.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"commit\",\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    null,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2018-04-08 01:14:22","commitOrder":15,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                    txnManager.rollback(session, null);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    DBeaverNotifications.NT_ROLLBACK,\n                    \"Transaction has been rolled back\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        DBPMessageType.ERROR,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n\n            }\n        });\n    }\n","date":"2018-04-08 01:14:22","endLine":69,"groupId":"2494","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/88/8855467ecb8d9e7ef75e91d5aef198bbe7e715.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                    txnManager.rollback(session, null);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    \"rollback\",\n                    \"Transaction has been rolled back\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        DBPMessageType.ERROR,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"1f1c69bd98480bbe3071d5628933ad36238c1dde","commitMessage":"@@@#3278 Reconnect notification\n\n\nFormer-commit-id: 7ca3349c528415bce450de809af2d2459681862d","date":"2018-04-08 01:14:22","modifiedFileCount":"3","status":"M","submitter":"serge-rider"},{"authorTime":"2020-01-25 18:41:34","codes":[{"authorDate":"2020-01-25 18:41:34","commitOrder":16,"curCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                if (context.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.TRANSACTIONS_SHOW_NOTIFICATIONS)) {\n                    DBeaverNotifications.showNotification(\n                        context.getDataSource(),\n                        DBeaverNotifications.NT_COMMIT,\n                        \"Transaction has been committed\\n\\n\" +\n                            \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                            \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        null,\n                        () -> TransactionLogDialog.showDialog(null, context, true));\n                }\n            }\n        });\n    }\n","date":"2020-01-25 18:41:34","endLine":70,"groupId":"10526","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(@NotNullfinalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/50/1314abda52c7570407aa4781323b5c85e7029f.src","preCode":"    public static void execute(@NotNull final DBCExecutionContext context) {\n        TasksJob.runTask(\"Commit transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Commit transaction\")) {\n                    txnManager.commit(session);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    DBeaverNotifications.NT_COMMIT,\n                    \"Transaction has been committed\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                    null,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceCommitHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2020-01-25 18:41:34","commitOrder":16,"curCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                    txnManager.rollback(session, null);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n\n                if (context.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.TRANSACTIONS_SHOW_NOTIFICATIONS)) {\n                    DBeaverNotifications.showNotification(\n                        context.getDataSource(),\n                        DBeaverNotifications.NT_ROLLBACK,\n                        \"Transaction has been rolled back\\n\\n\" +\n                            \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                            \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        DBPMessageType.ERROR,\n                        () -> TransactionLogDialog.showDialog(null, context, true));\n                }\n            }\n        });\n    }\n","date":"2020-01-25 18:41:34","endLine":70,"groupId":"10526","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(finalDBCExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/03/3b4f6b22c3fef2b0e4b8dc7ea83375fe1fe7cb.src","preCode":"    public static void execute(final DBCExecutionContext context) {\n        TasksJob.runTask(\"Rollback transaction\", monitor -> {\n            DBCTransactionManager txnManager = DBUtils.getTransactionManager(context);\n            if (txnManager != null) {\n                QMTransactionState txnInfo = QMUtils.getTransactionState(context);\n                try (DBCSession session = context.openSession(monitor, DBCExecutionPurpose.UTIL, \"Rollback transaction\")) {\n                    txnManager.rollback(session, null);\n                } catch (DBCException e) {\n                    throw new InvocationTargetException(e);\n                }\n                DBeaverNotifications.showNotification(\n                    context.getDataSource(),\n                    DBeaverNotifications.NT_ROLLBACK,\n                    \"Transaction has been rolled back\\n\\n\" +\n                        \"Query count: \" + txnInfo.getUpdateCount() + \"\\n\" +\n                        \"Duration: \" + RuntimeUtils.formatExecutionTime(System.currentTimeMillis() - txnInfo.getTransactionStartTime()) + \"\\n\",\n                        DBPMessageType.ERROR,\n                    () -> TransactionLogDialog.showDialog(null, context, true));\n\n            }\n        });\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/actions/datasource/DataSourceRollbackHandler.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"8c2e5bf7dd3e63e17dcfa536dd2839071792ddc6","commitMessage":"@@@#7571 Smart commit model for table editors\n\n\nFormer-commit-id: 2bc8cb61b5a41792213b4a2a448a9ea893aad3e2","date":"2020-01-25 18:41:34","modifiedFileCount":"12","status":"M","submitter":"Serge Rider"}]
