[{"authorTime":"2019-02-03 14:20:32","codes":[{"authorDate":"2020-01-10 23:16:20","commitOrder":3,"curCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","date":"2020-01-10 23:16:20","endLine":237,"groupId":"5280","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onCursorChange","params":"(intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/58/827abc332cde55dc7857db319e1191f5e250bb.src","preCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.console/src/org/jkiss/dbeaver/data/console/ConsoleTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"},{"authorDate":"2019-02-03 14:20:32","commitOrder":3,"curCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","date":"2019-02-03 14:20:32","endLine":232,"groupId":"5280","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onCursorChange","params":"(intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b4/166c46f979217e004a3e4c652c3650ab1f18e2.src","preCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/plaintext/PlainTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"NB"}],"commitId":"ed61883da063203d0710885dc1afa753c9469f19","commitMessage":"@@@Merge pull request #7580 from dbeaver/667-script-console\n\nSQL Script Output Console - plugin module\n\nFormer-commit-id: 5ac05a70dcd19424dafae8148ffc1ae0553277bc","date":"2020-01-10 23:16:20","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-05-09 21:17:06","codes":[{"authorDate":"2020-01-10 23:16:20","commitOrder":4,"curCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","date":"2020-01-10 23:16:20","endLine":237,"groupId":"10335","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onCursorChange","params":"(intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/58/827abc332cde55dc7857db319e1191f5e250bb.src","preCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.console/src/org/jkiss/dbeaver/data/console/ConsoleTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"N"},{"authorDate":"2021-05-09 21:17:06","commitOrder":4,"curCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    text.setStyleRanges(new StyleRange[]{curLineRange});\n                    text.redraw();\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","date":"2021-05-09 21:17:06","endLine":228,"groupId":"10335","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onCursorChange","params":"(intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/75/40865c03a372212f0e8771f528a9ab12b87ea4.src","preCode":"    private void onCursorChange(int offset) {\n        ResultSetModel model = controller.getModel();\n\n        int lineNum = text.getLineAtOffset(offset);\n        int lineOffset = text.getOffsetAtLine(lineNum);\n        int horizontalOffset = offset - lineOffset;\n\n        int lineCount = text.getLineCount();\n\n        boolean delimLeading = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n\n        int rowNum = lineNum - FIRST_ROW_LINE; \r\n        if (controller.isRecordMode()) {\n            if (rowNum < 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getVisibleAttributeCount()) {\n                curAttribute = model.getVisibleAttribute(rowNum);\n            }\n        } else {\n            int colNum = 0;\n            int horOffsetBegin = 0, horOffsetEnd = 0;\n            if (delimLeading) horOffsetEnd++;\n            for (int i = 0; i < colWidths.length; i++) {\n                horOffsetBegin = horOffsetEnd;\n                horOffsetEnd += colWidths[i] + 1;\n                if (horizontalOffset < horOffsetEnd) {\n                    colNum = i;\n                    break;\n                }\n            }\n            if (rowNum < 0 && model.getRowCount() > 0) {\n                rowNum = 0;\n            }\n            if (rowNum >= 0 && rowNum < model.getRowCount() && colNum >= 0 && colNum < model.getVisibleAttributeCount()) {\n                controller.setCurrentRow(model.getRow(rowNum));\n                curAttribute = model.getVisibleAttribute(colNum);\n            }\n            controller.updateEditControls();\n\n            {\n                \r\n                if (curLineRange == null || curLineRange.start != lineOffset + horOffsetBegin) {\n                    curLineRange = new StyleRange(\n                        lineOffset + horOffsetBegin,\n                        horOffsetEnd - horOffsetBegin - 1,\n                        null,\n                        curLineColor);\n                    UIUtils.asyncExec(() -> {\n                        text.setStyleRanges(new StyleRange[]{curLineRange});\n                        text.redraw();\n                    });\n                }\n            }\n\n            if (lineNum == lineCount - 1 &&\n                controller.isHasMoreData() &&\n                controller.getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_SET_AUTO_FETCH_NEXT_SEGMENT)) {\n                controller.readNextSegment();\n            }\n        }\n        fireSelectionChanged(new PlainTextSelectionImpl());\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/plaintext/PlainTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"f5756e4267f63d73b7ba43ad20862a6864fa72f1","commitMessage":"@@@Data viewer activation fixes\n\n\nFormer-commit-id: de127969a36065f871b0efb5348112f7123e1089","date":"2021-05-09 21:17:06","modifiedFileCount":"2","status":"M","submitter":"serge-rider"}]
