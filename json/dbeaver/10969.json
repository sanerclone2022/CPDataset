[{"authorTime":"2017-04-07 01:00:13","codes":[{"authorDate":"2017-04-07 01:00:13","commitOrder":1,"curCode":"\t\tpublic Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\t\tthrows DBException {\n\t   \t try {\n\t   \t\t \n\t   \t\tList<OracleLockItem> locks = new ArrayList<>();\n\t   \t\t \n\t         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\t        \t \n\t        \t String otype = (String) options.get(LockManagerViewer.keyType); \n\t        \t \n\t        \t switch (otype) {\n\t        \t \n\t\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\t\tdbStat.setInt(1, (int) options.get(OracleLockEditor.sidWait)); \n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\t\tdbStat.setInt(1, (int) options.get(OracleLockEditor.sidHold)); \n\t\t\t\t\t\tbreak;\n\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn locks;\n\t\t\t\t\t}\n\t        \t \n\t             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\t                 \n\t                 while (dbResult.next()) {\n\t                     locks.add(new OracleLockItem(dbResult));\n\t                 }\n\t             }\n\t         }\n\t         \n\t         return locks;\n\t         \n\t     } catch (SQLException e) {\n\t         throw new DBException(e, session.getDataSource());\n\t     }\n\t\t} \n","date":"2017-04-07 01:00:13","endLine":185,"groupId":"17144","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ef/e7db79555df2d8abc478ee5d3dbb30b2d04ccc.src","preCode":"\t\tpublic Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\t\tthrows DBException {\n\t   \t try {\n\t   \t\t \n\t   \t\tList<OracleLockItem> locks = new ArrayList<>();\n\t   \t\t \n\t         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\t        \t \n\t        \t String otype = (String) options.get(LockManagerViewer.keyType); \n\t        \t \n\t        \t switch (otype) {\n\t        \t \n\t\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\t\tdbStat.setInt(1, (int) options.get(OracleLockEditor.sidWait)); \n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\t\tdbStat.setInt(1, (int) options.get(OracleLockEditor.sidHold)); \n\t\t\t\t\t\tbreak;\n\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn locks;\n\t\t\t\t\t}\n\t        \t \n\t             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\t                 \n\t                 while (dbResult.next()) {\n\t                     locks.add(new OracleLockItem(dbResult));\n\t                 }\n\t             }\n\t         }\n\t         \n\t         return locks;\n\t         \n\t     } catch (SQLException e) {\n\t         throw new DBException(e, session.getDataSource());\n\t     }\n\t\t} \n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/lock/OracleLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2017-04-07 01:00:13","commitOrder":1,"curCode":"\tpublic Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\tthrows DBException {\n   \t try {\n   \t\t \n   \t\tList<PostgreLockItem> locks = new ArrayList<>();\n   \t\t \n         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n        \t \n        \t String otype = (String) options.get(LockManagerViewer.keyType); \n        \t \n        \t switch (otype) {\n        \t \n\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidWait)); \n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidHold)); \n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\treturn locks;\n\t\t\t\t}\n        \t \n             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                 \n                 while (dbResult.next()) {\n                     locks.add(new PostgreLockItem(dbResult));\n                 }\n             }\n         }\n         \n         return locks;\n         \n     } catch (SQLException e) {\n         throw new DBException(e, session.getDataSource());\n     }\n\t}\n","date":"2017-04-07 01:00:13","endLine":201,"groupId":"17144","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bd/dcf06595c627628576c40b6bb7cc3c94b43cd8.src","preCode":"\tpublic Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\tthrows DBException {\n   \t try {\n   \t\t \n   \t\tList<PostgreLockItem> locks = new ArrayList<>();\n   \t\t \n         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n        \t \n        \t String otype = (String) options.get(LockManagerViewer.keyType); \n        \t \n        \t switch (otype) {\n        \t \n\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidWait)); \n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidHold)); \n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\treturn locks;\n\t\t\t\t}\n        \t \n             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                 \n                 while (dbResult.next()) {\n                     locks.add(new PostgreLockItem(dbResult));\n                 }\n             }\n         }\n         \n         return locks;\n         \n     } catch (SQLException e) {\n         throw new DBException(e, session.getDataSource());\n     }\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/lock/PostgreLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"1caa6ecff00883654b31818cd010eeacaa8f4b62","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 9741484feafc04eb12750f9c08ade754e3e5d7b7","date":"2017-04-07 01:00:13","modifiedFileCount":"1","status":"B","submitter":"Serge Rider"},{"authorTime":"2017-04-07 01:00:13","codes":[{"authorDate":"2019-07-18 00:37:23","commitOrder":2,"curCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockManagerViewer.keyType);\n\n                switch (otype) {\n\n                    case LockManagerViewer.typeWait:\n                        dbStat.setInt(1, (int) options.get(sidWait));\n                        break;\n\n                    case LockManagerViewer.typeHold:\n                        dbStat.setInt(1, (int) options.get(sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-07-18 00:37:23","endLine":183,"groupId":"11415","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ef/c84406e1510f46772f2822f2d0af2d36c0f364.src","preCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockManagerViewer.keyType);\n\n                switch (otype) {\n\n                    case LockManagerViewer.typeWait:\n                        dbStat.setInt(1, (int) options.get(OracleLockEditor.sidWait));\n                        break;\n\n                    case LockManagerViewer.typeHold:\n                        dbStat.setInt(1, (int) options.get(OracleLockEditor.sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/lock/OracleLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2017-04-07 01:00:13","commitOrder":2,"curCode":"\tpublic Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\tthrows DBException {\n   \t try {\n   \t\t \n   \t\tList<PostgreLockItem> locks = new ArrayList<>();\n   \t\t \n         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n        \t \n        \t String otype = (String) options.get(LockManagerViewer.keyType); \n        \t \n        \t switch (otype) {\n        \t \n\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidWait)); \n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidHold)); \n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\treturn locks;\n\t\t\t\t}\n        \t \n             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                 \n                 while (dbResult.next()) {\n                     locks.add(new PostgreLockItem(dbResult));\n                 }\n             }\n         }\n         \n         return locks;\n         \n     } catch (SQLException e) {\n         throw new DBException(e, session.getDataSource());\n     }\n\t}\n","date":"2017-04-07 01:00:13","endLine":201,"groupId":"17144","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bd/dcf06595c627628576c40b6bb7cc3c94b43cd8.src","preCode":"\tpublic Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n\t\t\tthrows DBException {\n   \t try {\n   \t\t \n   \t\tList<PostgreLockItem> locks = new ArrayList<>();\n   \t\t \n         try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n        \t \n        \t String otype = (String) options.get(LockManagerViewer.keyType); \n        \t \n        \t switch (otype) {\n        \t \n\t\t\t\tcase LockManagerViewer.typeWait:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidWait)); \n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase LockManagerViewer.typeHold:\n\t\t\t\t\tdbStat.setInt(1, (int) options.get(PostgreLockEditor.pidHold)); \n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\treturn locks;\n\t\t\t\t}\n        \t \n             try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                 \n                 while (dbResult.next()) {\n                     locks.add(new PostgreLockItem(dbResult));\n                 }\n             }\n         }\n         \n         return locks;\n         \n     } catch (SQLException e) {\n         throw new DBException(e, session.getDataSource());\n     }\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/lock/PostgreLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"N"}],"commitId":"f358a58c40efaa4db7a7e3aed26c4334dcdab38a","commitMessage":"@@@Oracle UI extraction.\n\n\nFormer-commit-id: 380f22c79cd66088b6c291253efa5c9a17ef7883","date":"2019-07-18 00:37:23","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-19 22:13:54","codes":[{"authorDate":"2019-07-19 22:13:54","commitOrder":3,"curCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(sidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-07-19 22:13:54","endLine":182,"groupId":"11415","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fe/5e6d9e5b3a4400ee8cd05857b16ff29ae1756d.src","preCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockManagerViewer.keyType);\n\n                switch (otype) {\n\n                    case LockManagerViewer.typeWait:\n                        dbStat.setInt(1, (int) options.get(sidWait));\n                        break;\n\n                    case LockManagerViewer.typeHold:\n                        dbStat.setInt(1, (int) options.get(sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/lock/OracleLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2019-07-19 22:13:54","commitOrder":3,"curCode":"    public Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<PostgreLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(pidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(pidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new PostgreLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-07-19 22:13:54","endLine":233,"groupId":"11415","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/65/4c65e7f8cc72154f5f11caa4cda9c98a089505.src","preCode":"    public Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<PostgreLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockManagerViewer.keyType);\n\n                switch (otype) {\n\n                    case LockManagerViewer.typeWait:\n                        dbStat.setInt(1, (int) options.get(PostgreLockEditor.pidWait));\n                        break;\n\n                    case LockManagerViewer.typeHold:\n                        dbStat.setInt(1, (int) options.get(PostgreLockEditor.pidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new PostgreLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/lock/PostgreLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"4feb4265be5dbabb55d9b3486b4ed3be340ad4c0","commitMessage":"@@@UI Refactoring\n\n\nFormer-commit-id: 1e1f3b0ee5c21fa07f7af19ded2cc6523a3d1919","date":"2019-07-19 22:13:54","modifiedFileCount":"15","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-19 22:13:54","codes":[{"authorDate":"2020-12-25 17:16:25","commitOrder":4,"curCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            String sql = LOCK_ITEM_QUERY;\n            if (!dataSource.isAtLeastV9()) {\n                sql = LOCK_ITEM_QUERY_8V;\n            }\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(sidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2020-12-25 17:16:25","endLine":216,"groupId":"10969","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/48/3ebed0f3f7653bfac4de001de3b7cd9c3d73c9.src","preCode":"    public Collection<OracleLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<OracleLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(sidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(sidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new OracleLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/lock/OracleLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2019-07-19 22:13:54","commitOrder":4,"curCode":"    public Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<PostgreLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(pidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(pidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new PostgreLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-07-19 22:13:54","endLine":233,"groupId":"10969","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getLockItems","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/65/4c65e7f8cc72154f5f11caa4cda9c98a089505.src","preCode":"    public Collection<PostgreLockItem> getLockItems(DBCSession session, Map<String, Object> options)\n        throws DBException {\n        try {\n\n            List<PostgreLockItem> locks = new ArrayList<>();\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(LOCK_ITEM_QUERY)) {\n\n                String otype = (String) options.get(LockGraphManager.keyType);\n\n                switch (otype) {\n\n                    case LockGraphManager.typeWait:\n                        dbStat.setInt(1, (int) options.get(pidWait));\n                        break;\n\n                    case LockGraphManager.typeHold:\n                        dbStat.setInt(1, (int) options.get(pidHold));\n                        break;\n\n                    default:\n                        return locks;\n                }\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n\n                    while (dbResult.next()) {\n                        locks.add(new PostgreLockItem(dbResult));\n                    }\n                }\n            }\n\n            return locks;\n\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/lock/PostgreLockManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"}],"commitId":"cc999df9b0a08a2bd00348b202a84c6a292b64ae","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: b21b0935a0f8e9f70f4904e63c888d933b7465ec","date":"2020-12-25 17:16:25","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"}]
