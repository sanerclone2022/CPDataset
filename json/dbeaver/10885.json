[{"authorTime":"2016-02-15 23:01:52","codes":[{"authorDate":"2016-02-15 23:01:52","commitOrder":3,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2016-02-15 23:01:52","endLine":52,"groupId":"9901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/7797e4b08f11d011a13857b4e0063e2a6c1675.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"MB"},{"authorDate":"2016-02-15 23:01:52","commitOrder":3,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2016-02-15 23:01:52","endLine":59,"groupId":"9901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/dd/18ed16432c971bea158627b03cb42d755c1582.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"MB"}],"commitId":"dc072cbd62b828dd83861f48c7c10a94e6aa834a","commitMessage":"@@@#12 Array and composite types support\n\n\nFormer-commit-id: 5efca4dc46b058f8c40150a6c6167225afaf6f8f","date":"2016-02-15 23:01:52","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-04-16 06:15:14","codes":[{"authorDate":"2016-04-16 06:15:14","commitOrder":4,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, Map<String, Object> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2016-04-16 06:15:14","endLine":53,"groupId":"9901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a1/f65459954cb10a7e354343bec3571213af56e8.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2016-04-16 06:15:14","commitOrder":4,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, Map<String, Object> options) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2016-04-16 06:15:14","endLine":56,"groupId":"9901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ae/8995aa65130929728f55175a32daa3a07ddb27.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"fff484b83b9e8a43adcaddd79c7eeff4cbf2ae77","commitMessage":"@@@Attribute transformers model\n\n\nFormer-commit-id: 16a625266dcd985634467cf3e2b939bf3f2c6f30","date":"2016-04-16 06:15:14","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-04-16 22:19:44","codes":[{"authorDate":"2016-04-16 22:19:44","commitOrder":5,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2016-04-16 22:19:44","endLine":53,"groupId":"9901","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d4/155bcb3113579859a347d06afab3730d5a8f8b.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, Map<String, Object> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2016-04-16 22:19:44","commitOrder":5,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2016-04-16 22:19:44","endLine":56,"groupId":"9901","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7a/090621d3f160af1862c9ab5825d271b93ab34c.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, Map<String, Object> options) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"e523b0f4d4f9bd3347478d16f22519b4fc6be62f","commitMessage":"@@@Virtual model persistence\n\n\nFormer-commit-id: 8f3738e5e9e735469d916db5f701c40c62cddd1f","date":"2016-04-16 22:19:44","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"},{"authorTime":"2017-09-08 04:47:31","codes":[{"authorDate":"2016-04-16 22:19:44","commitOrder":6,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2016-04-16 22:19:44","endLine":53,"groupId":"9901","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d4/155bcb3113579859a347d06afab3730d5a8f8b.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2017-09-08 04:47:31","commitOrder":6,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2017-09-08 04:47:31","endLine":59,"groupId":"9901","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/59b6c120ae84acc3859465ec31c040cdc3b883.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"53538f605d7719b4a481f1fa7d3573f3ad02431c","commitMessage":"@@@Results presentation: disable complex types visualization (optional)\n\n\nFormer-commit-id: c999d6d7f1b83967addf46e4f9bdb7eeed3ce22a","date":"2017-09-08 04:47:31","modifiedFileCount":"5","status":"M","submitter":"serge-rider"},{"authorTime":"2017-09-08 04:47:31","codes":[{"authorDate":"2019-07-06 23:41:44","commitOrder":7,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2019-07-06 23:41:44","endLine":56,"groupId":"9901","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e1/84084ecbbab801d5c2ffa12880555eca27d282.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2017-09-08 04:47:31","commitOrder":7,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2017-09-08 04:47:31","endLine":59,"groupId":"9901","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@String>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/59b6c120ae84acc3859465ec31c040cdc3b883.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"}],"commitId":"34d1d50be34247ef2ed4ae646322d0a3f6ce11e8","commitMessage":"@@@#6228 Complex types (structs) visualize config fix\n\n\nFormer-commit-id: c6b96116fcef96cd82cd1e791cbed4ad117aaa2b","date":"2019-07-06 23:41:44","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-08-09 17:21:27","codes":[{"authorDate":"2019-08-09 17:21:27","commitOrder":8,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, Object> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","date":"2019-08-09 17:21:27","endLine":56,"groupId":"10885","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5c/dc58255bbd54db37198456980ce783e0a10871.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType dataType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            dataType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            dataType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (dataType instanceof DBSEntity) {\n            createNestedTypeBindings(session, attribute, rows, (DBSEntity) dataType);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ComplexTypeAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2019-08-09 17:21:27","commitOrder":8,"curCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, Object> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","date":"2019-08-09 17:21:27","endLine":59,"groupId":"10885","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"transformAttribute","params":"(@NotNullDBCSessionsession@@NotNullDBDAttributeBindingattribute@@NotNullList<Object[]>rows@@NotNullMap<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/83/bb23d8424604fff0f49d767237cff713532da0.src","preCode":"    public void transformAttribute(@NotNull DBCSession session, @NotNull DBDAttributeBinding attribute, @NotNull List<Object[]> rows, @NotNull Map<String, String> options) throws DBException {\n        if (!session.getDataSource().getContainer().getPreferenceStore().getBoolean(ModelPreferences.RESULT_TRANSFORM_COMPLEX_TYPES)) {\n            return;\n        }\n        DBSDataType collectionType;\n        if (attribute.getAttribute() instanceof DBSTypedObjectEx) {\n            collectionType = ((DBSTypedObjectEx) attribute.getAttribute()).getDataType();\n        } else {\n            collectionType = DBUtils.resolveDataType(session.getProgressMonitor(), session.getDataSource(), attribute.getTypeName());\n        }\n        if (collectionType != null) {\n            DBSDataType componentType = collectionType.getComponentType(session.getProgressMonitor());\n            if (componentType instanceof DBSEntity) {\n                ComplexTypeAttributeTransformer.createNestedTypeBindings(session, attribute, rows, (DBSEntity) componentType);\n                return;\n            }\n        }\n        \r\n        \r\n        MapAttributeTransformer.resolveMapsFromData(session, attribute, rows);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/data/transformers/ArrayAttributeTransformer.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"7b55315e0e25647a76abce1785cc4df2176b321e","commitMessage":"@@@Configuration save/load improvements\n\n\nFormer-commit-id: 864de4f4b5a431d97e2567870a0a0548926c5696","date":"2019-08-09 17:21:27","modifiedFileCount":"23","status":"M","submitter":"Serge Rider"}]
