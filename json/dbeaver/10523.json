[{"authorTime":"2019-07-14 03:36:31","codes":[{"authorDate":"2019-02-01 04:17:53","commitOrder":8,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","date":"2019-02-01 04:17:53","endLine":136,"groupId":"10125","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/db/4f44c279ab43a705df55652236668c09ec5291.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"NB"},{"authorDate":"2019-07-14 03:36:31","commitOrder":8,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        enableHandlerContent(descriptor);\n\n        configurator.createControl(handlerComposite);\n    }\n","date":"2019-07-14 03:36:31","endLine":212,"groupId":"13189","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/c2910d3139d37b5696ca0583de5be624627f44.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        enableHandlerContent(descriptor);\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"B"}],"commitId":"658178711b9db12aff5a67373db5ab0df6124f26","commitMessage":"@@@Network profiles page\n\n\nFormer-commit-id: 60f1fb146e959fd9eb711faf5c73e31bbae25588","date":"2019-07-14 03:36:31","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 05:57:02","codes":[{"authorDate":"2019-02-01 04:17:53","commitOrder":9,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","date":"2019-02-01 04:17:53","endLine":136,"groupId":"10125","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/db/4f44c279ab43a705df55652236668c09ec5291.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"N"},{"authorDate":"2019-07-14 05:57:02","commitOrder":9,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","date":"2019-07-14 05:57:02","endLine":251,"groupId":"13189","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8c/7d2f7476857326ac6a88a01b2ad411be52d415.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        enableHandlerContent(descriptor);\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"3ef6ba405819a0cfac994824441effe2eaec3d31","commitMessage":"@@@Network profiles page - enablement fixes\n\n\nFormer-commit-id: 5adc45dd1b14617c563bad148b330c833714ff5e","date":"2019-07-14 05:57:02","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-16 22:12:59","codes":[{"authorDate":"2019-02-01 04:17:53","commitOrder":10,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","date":"2019-02-01 04:17:53","endLine":136,"groupId":"10125","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/db/4f44c279ab43a705df55652236668c09ec5291.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"N"},{"authorDate":"2019-07-16 22:12:59","commitOrder":10,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","date":"2019-07-16 22:12:59","endLine":298,"groupId":"13189","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c3/8ea288a1283152bf050e32484ba8c967ddf7e8.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"577d8d23e7985255f1d36e9cf579356bbd22cf73","commitMessage":"@@@Network profiles management fixes\n\n\nFormer-commit-id: 834c84379513d302d86dc17c37a4cc5ee7aa83a2","date":"2019-07-16 22:12:59","modifiedFileCount":"18","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-07-16 22:12:59","codes":[{"authorDate":"2019-07-22 23:50:00","commitOrder":11,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createComposite(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","date":"2019-07-22 23:50:00","endLine":138,"groupId":"10125","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/11/5c2e127d7fcad58fbebf75091b5592df14408c.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-07-16 22:12:59","commitOrder":11,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","date":"2019-07-16 22:12:59","endLine":298,"groupId":"13189","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c3/8ea288a1283152bf050e32484ba8c967ddf7e8.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"N"}],"commitId":"676415d00266bd2801f2652c5ad3c9f4e53018d6","commitMessage":"@@@#6281 Advanced proxy configuration UI. Network handlers descriptors model additions\n\n\nFormer-commit-id: 42cebb6ce097d1f0a7bd2caf98eceb0f7710f80b","date":"2019-07-22 23:50:00","modifiedFileCount":"6","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-03-09 02:54:32","codes":[{"authorDate":"2020-03-09 02:54:32","commitOrder":12,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createComposite(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite, this::updatePageCompletion);\n    }\n","date":"2020-03-09 02:54:32","endLine":138,"groupId":"10523","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/31/8cff348f6688fa97c6d68e4bc9e7b1fde70e36.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor) throws DBException\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createComposite(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck, tabItem));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2020-03-09 02:54:32","commitOrder":12,"curCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite, this::updateApplyButton);\n\n        enableHandlerContent(descriptor);\n    }\n","date":"2020-03-09 02:54:32","endLine":310,"groupId":"10523","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createHandlerTab","params":"(finalNetworkHandlerDescriptordescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/75/62777836ca6ebfd95021262081b6de42f195f8.src","preCode":"    private void createHandlerTab(final NetworkHandlerDescriptor descriptor)\n    {\n        IObjectPropertyConfigurator<DBWHandlerConfiguration> configurator;\n        try {\n            String implName = descriptor.getHandlerType().getImplName();\n            UIPropertyConfiguratorDescriptor configDescriptor = UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n            if (configDescriptor == null) {\n                return;\n            }\n            configurator = configDescriptor.createConfigurator();\n        } catch (DBException e) {\n            log.error(\"Can't create network configurator '\" + descriptor.getId() + \"'\", e);\n            return;\n        }\n        allHandlers.add(descriptor);\n\n        TabItem tabItem = new TabItem(handlersFolder, SWT.NONE);\n        tabItem.setText(descriptor.getLabel());\n        tabItem.setToolTipText(descriptor.getDescription());\n        tabItem.setData(descriptor);\n\n        Composite composite = new Composite(handlersFolder, SWT.NONE);\n        tabItem.setControl(composite);\n        composite.setLayout(new GridLayout(1, false));\n        composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        final Button useHandlerCheck = UIUtils.createCheckbox(composite, NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler, descriptor.getLabel()), false);\n        useHandlerCheck.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                if (selectedProfile == null) {\n                    useHandlerCheck.setSelection(false);\n                    UIUtils.showMessageBox(getShell(), \"No profile\", \"Select existing profile or create a new one\", SWT.ICON_INFORMATION);\n                    return;\n                }\n                HandlerBlock handlerBlock = configurations.get(descriptor);\n                DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(selectedProfile);\n                if (handlerConfiguration == null) {\n                    handlerConfiguration = new DBWHandlerConfiguration(descriptor, null);\n                    handlerBlock.loadedConfigs.put(selectedProfile, handlerConfiguration);\n                }\n                handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n                enableHandlerContent(descriptor);\n            }\n        });\n        Composite handlerComposite = UIUtils.createPlaceholder(composite, 1);\n        configurations.put(descriptor, new HandlerBlock(configurator, handlerComposite, useHandlerCheck));\n\n        handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n        configurator.createControl(handlerComposite);\n\n        enableHandlerContent(descriptor);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"c72093d775f9075bcfa9a112c1dcc3c13d1b8101","commitMessage":"@@@#8128 Initial model + MySQL connection page redesign\n\n\nFormer-commit-id: 8ede44e5a8ecdf54346fb3afde75fff82051341f","date":"2020-03-09 02:54:32","modifiedFileCount":"18","status":"M","submitter":"serge-rider"}]
