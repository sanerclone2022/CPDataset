[{"authorTime":"2016-10-09 16:17:59","codes":[{"authorDate":"2016-10-09 16:17:59","commitOrder":1,"curCode":"\tprotected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException\n\t{\n\t\tString sql;\n\t\tif(forView != null) {\n\t\t\tsql= SQL_COLS_VIEW;\n\t\t} else {\n\t\t\tsql= SQL_COLS_ALL;\n\t\t}\n\t\t\n\t\tJDBCPreparedStatement dbStat = session.prepareStatement(sql);\n\t\tdbStat.setString(1, exasolSchema.getName());\n\t\tif (forView != null) \n\t\t{\n\t\t\tdbStat.setString(2, forView.getName());\n\t\t}\n\t\t\n\t\treturn dbStat;\n\t\t\n\t}\n","date":"2016-10-09 16:17:59","endLine":91,"groupId":"1798","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/47/daa05acc3c030105e8f76a23495dd3a48fa832.src","preCode":"\tprotected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException\n\t{\n\t\tString sql;\n\t\tif(forView != null) {\n\t\t\tsql= SQL_COLS_VIEW;\n\t\t} else {\n\t\t\tsql= SQL_COLS_ALL;\n\t\t}\n\t\t\n\t\tJDBCPreparedStatement dbStat = session.prepareStatement(sql);\n\t\tdbStat.setString(1, exasolSchema.getName());\n\t\tif (forView != null) \n\t\t{\n\t\t\tdbStat.setString(2, forView.getName());\n\t\t}\n\t\t\n\t\treturn dbStat;\n\t\t\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2016-10-09 16:17:59","commitOrder":1,"curCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\t\t\n\t}\n","date":"2016-10-09 16:17:59","endLine":99,"groupId":"7710","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b7/06cae09eb95188ecd1ba58ce6f532f804dcc95.src","preCode":"\tprotected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n\tthrows SQLException\n\t{\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\t\t\n\t}\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"798a6543e6606cd3222a863c7a920c25d68581a5","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: b86d35a342037e96faa44a359ac1ef183f5eeb77","date":"2016-10-09 16:17:59","modifiedFileCount":"0","status":"B","submitter":"Serge Rider"},{"authorTime":"2017-03-19 19:41:06","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":2,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n        if (forView != null) {\n            sql = String.format(SQL_COLS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":107,"groupId":"6741","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/341eed356c3f0f1900ba11d54482f3f6415e7b.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n        if (forView != null) {\n            sql = SQL_COLS_VIEW;\n        } else {\n            sql = SQL_COLS_ALL;\n        }\n\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forView != null) {\n            dbStat.setString(2, forView.getName());\n        }\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2017-03-19 19:41:06","commitOrder":2,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":107,"groupId":"16505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/5d817bb66d0ae650036e0e7971574526742602.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = SQL_FK_TAB;\n        } else {\n            sql = SQL_FK_ALL;\n        }\n        JDBCPreparedStatement dbStat = session.prepareStatement(sql);\n        dbStat.setString(1, exasolSchema.getName());\n        if (forTable != null) {\n            dbStat.setString(2, forTable.getName());\n        }\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"c994ba8f165c1f75288f6cfeefb9095b5cb04914","commitMessage":"@@@Merge branch 'devel' of https://github.com/serge-rider/dbeaver\n\n\nFormer-commit-id: cdb84c55a71481c781e9366599848ef81d4cb10f","date":"2017-03-19 19:41:06","modifiedFileCount":"145","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-11-29 01:42:56","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":3,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n        if (forView != null) {\n            sql = String.format(SQL_COLS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2017-03-19 19:41:06","endLine":107,"groupId":"6741","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b3/341eed356c3f0f1900ba11d54482f3f6415e7b.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n        if (forView != null) {\n            sql = String.format(SQL_COLS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"N"},{"authorDate":"2018-11-29 01:42:56","commitOrder":3,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2018-11-29 01:42:56","endLine":119,"groupId":"16505","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/193f79268f45213e247f54c1cd885daf94c0c0.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"1127ab1c44afb782192c03bc6cba8676bc58801a","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 0d5d7e725b9c5996adc0b7a93d63e797b23c71a8","date":"2018-11-29 01:42:56","modifiedFileCount":"10","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2018-11-29 01:42:56","codes":[{"authorDate":"2019-01-05 21:14:01","commitOrder":4,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (forView != null) {\n            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2019-01-05 21:14:01","endLine":99,"groupId":"48","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/00/a50df2f638b28c31a2aaf2315094a2e1d82ca9.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n        if (forView != null) {\n            sql = String.format(SQL_COLS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2018-11-29 01:42:56","commitOrder":4,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2018-11-29 01:42:56","endLine":119,"groupId":"16505","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/193f79268f45213e247f54c1cd885daf94c0c0.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"}],"commitId":"53a256b0083790f745567d007134d501869f2369","commitMessage":"@@@Merge pull request #4922 from Sargul/devel\n\nExasol V6.1 update part 1\n\nFormer-commit-id: 3b04f5eb137b4346d65111cbada26d4bbdf2c531","date":"2019-01-05 21:14:01","modifiedFileCount":"22","status":"M","submitter":"Charly"},{"authorTime":"2018-11-29 01:42:56","codes":[{"authorDate":"2019-01-08 03:48:50","commitOrder":5,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (exasolSchema.getName().equals(\"SYS\"))\n\t\t{\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_SYS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_SYS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t} else {\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t}\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2019-01-08 03:48:50","endLine":175,"groupId":"48","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d7/282caa5e3eeef435e8aff6f3cb828e31bb4495.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (forView != null) {\n            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n        } else {\n            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2018-11-29 01:42:56","commitOrder":5,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2018-11-29 01:42:56","endLine":119,"groupId":"16505","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/193f79268f45213e247f54c1cd885daf94c0c0.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"}],"commitId":"6e43b1de4723dff5ec48dbbdbf969f65010af6af","commitMessage":"@@@Merge pull request #4939 from Sargul/devel\n\nExasol: fix auto complete for system view columns\nFormer-commit-id: b2f3869ae91ad64bf5c9823bab1d75f35785ba66","date":"2019-01-08 03:48:50","modifiedFileCount":"2","status":"M","submitter":"Charly"},{"authorTime":"2018-11-29 01:42:56","codes":[{"authorDate":"2019-02-13 03:10:22","commitOrder":6,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (exasolSchema.getName().equals(\"SYS\") || exasolSchema.getName().equals(\"EXA_STATISTICS\"))\n\t\t{\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_SYS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_SYS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t} else {\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t}\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2019-02-13 03:10:22","endLine":175,"groupId":"48","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/97/dc639e937ab677c872cb4f829827062137906f.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (exasolSchema.getName().equals(\"SYS\"))\n\t\t{\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_SYS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_SYS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t} else {\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t}\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2018-11-29 01:42:56","commitOrder":6,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2018-11-29 01:42:56","endLine":119,"groupId":"16505","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3c/193f79268f45213e247f54c1cd885daf94c0c0.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"}],"commitId":"772c84fb9e8017cbfe73f6247b401dfae8ff830d","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 7e6f76299413fe114794c2f81bccbfc6c5fe180c","date":"2019-02-13 03:10:22","modifiedFileCount":"10","status":"M","submitter":"serge-rider"},{"authorTime":"2020-03-26 20:25:14","codes":[{"authorDate":"2019-02-13 03:10:22","commitOrder":7,"curCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (exasolSchema.getName().equals(\"SYS\") || exasolSchema.getName().equals(\"EXA_STATISTICS\"))\n\t\t{\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_SYS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_SYS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t} else {\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t}\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","date":"2019-02-13 03:10:22","endLine":175,"groupId":"101078","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullExasolSchemaexasolSchema@@NullableExasolViewforView)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/97/dc639e937ab677c872cb4f829827062137906f.src","preCode":"    protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull ExasolSchema exasolSchema, @Nullable ExasolView forView) throws SQLException {\n        String sql;\n\t\tString tablePrefix = exasolSchema.getDataSource().getTablePrefix(ExasolSysTablePrefix.ALL);\n\n\t\tif (exasolSchema.getName().equals(\"SYS\") || exasolSchema.getName().equals(\"EXA_STATISTICS\"))\n\t\t{\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_SYS_VIEW, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_SYS_ALL, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t} else {\n\t\t\tif (forView != null) {\n\t            sql = String.format(SQL_COLS_VIEW,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()), ExasolUtils.quoteString(forView.getName())) ;\n\t        } else {\n\t            sql = String.format(SQL_COLS_ALL,tablePrefix, ExasolUtils.quoteString(exasolSchema.getName()));\n\t        }\n\t\t}\n\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n\n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolViewCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"},{"authorDate":"2020-03-26 20:25:14","commitOrder":7,"curCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        dbStat.setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","date":"2020-03-26 20:25:14","endLine":118,"groupId":"101078","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@ExasolSchemaexasolSchema@ExasolTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9c/aae2e4a7cecd66bb0e3935d7f2950fc8582f4f.src","preCode":"    protected JDBCStatement prepareObjectsStatement(JDBCSession session, ExasolSchema exasolSchema, ExasolTable forTable)\n        throws SQLException {\n        String sql;\n        if (forTable != null) {\n            sql = String.format(SQL_FK_TAB,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(forTable.getName()));\n        } else {\n            sql = String.format(SQL_FK_ALL,ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()),ExasolUtils.quoteString(exasolSchema.getName()));\n        }\n        JDBCStatement dbStat = session.createStatement();\n        \n        ((JDBCStatementImpl) dbStat).setQueryString(sql);\n        \n        return dbStat;\n\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.exasol/src/org/jkiss/dbeaver/ext/exasol/model/cache/ExasolTableForeignKeyCache.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"919dad208dd39232b1ed87c5a630340f8269ada0","commitMessage":"@@@#8226 Exasol: FK model enhancement (read ref columns)\n\n\nFormer-commit-id: f9ddcc72824ad32cf5a5f97dfcc5bd868debeafb","date":"2020-03-26 20:25:14","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"}]
