[{"authorTime":"2021-03-05 05:01:21","codes":[{"authorDate":"2019-07-02 19:55:19","commitOrder":4,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2019-07-02 19:55:19","endLine":218,"groupId":"1948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/14/042dd0cf8ab0a25f4f4ecd9df307f7f82816d0.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"NB"},{"authorDate":"2021-03-05 05:01:21","commitOrder":4,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            String sql = \"SELECT TriggerName,\\n\" +\n                    \"ActionTime,\\n\" +\n                    \"Event,\\n\" +\n                    \"CASE EnabledFlag\\n\" +\n                    \"WHEN 'Y' THEN 'ENABLED'\\n\" +\n                    \"WHEN 'N' THEN 'DISABLED'\\n\" +\n                    \"END as status,\\n\" +\n                    \"CASE Kind\\n\" +\n                    \"WHEN 'R' THEN 'ROW'\\n\" +\n                    \"WHEN 'S' THEN 'STATEMENT'\\n\" +\n                    \"end as triggerKind,\\n\" +\n                    \"RequestText as definition,\\n\" +\n                    \"CreateTimeStamp as createDate,\\n\" +\n                    \"TriggerComment as description\\n\" +\n                    \"FROM DBC.TriggersV\\n\" +\n                    \"WHERE SubjectTableDataBaseName=?\\n\" +\n                    \"AND TableName=?\";\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(sql)) {\n                dbStat.setString(1, table.getSchema().getName());\n                dbStat.setString(2, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        String description = JDBCUtils.safeGetString(dbResult, \"description\");\n                        result.add(new TeradataTrigger(container, table, name, description, dbResult));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-03-05 05:01:21","endLine":185,"groupId":"2434","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/15/7af5ae7b16bb74e18bba376cc08243f52ced1b.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            String sql = \"SELECT TriggerName,\\n\" +\n                    \"ActionTime,\\n\" +\n                    \"Event,\\n\" +\n                    \"CASE EnabledFlag\\n\" +\n                    \"WHEN 'Y' THEN 'ENABLED'\\n\" +\n                    \"WHEN 'N' THEN 'DISABLED'\\n\" +\n                    \"END as status,\\n\" +\n                    \"CASE Kind\\n\" +\n                    \"WHEN 'R' THEN 'ROW'\\n\" +\n                    \"WHEN 'S' THEN 'STATEMENT'\\n\" +\n                    \"end as triggerKind,\\n\" +\n                    \"RequestText as definition,\\n\" +\n                    \"CreateTimeStamp as createDate,\\n\" +\n                    \"TriggerComment as description\\n\" +\n                    \"FROM DBC.TriggersV\\n\" +\n                    \"WHERE SubjectTableDataBaseName=?\\n\" +\n                    \"AND TableName=?\";\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(sql)) {\n                dbStat.setString(1, table.getSchema().getName());\n                dbStat.setString(2, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        String description = JDBCUtils.safeGetString(dbResult, \"description\");\n                        result.add(new TeradataTrigger(container, table, name, description, dbResult));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.teradata/src/org/jkiss/dbeaver/ext/teradata/model/TeradataMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"}],"commitId":"ffa8b4bac291f09e33adb0c4bad94ca9aac14bc2","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 2855e78c315b193a497053b2d3a4dc703055947a","date":"2021-03-05 05:01:21","modifiedFileCount":"20","status":"M","submitter":"serge-rider"},{"authorTime":"2021-06-22 02:29:23","codes":[{"authorDate":"2021-06-22 02:29:23","commitOrder":5,"curCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-06-22 02:29:23","endLine":246,"groupId":"10345","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/18/efd5ac2d081e1e8bd0d5e377dad4510cc14f55.src","preCode":"    public List<GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            throw new DBException(\"Database level triggers aren't supported for HSQLDB\");\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                    \"SELECT * FROM INFORMATION_SCHEMA.TRIGGERS\\n\" +\n                            \"WHERE EVENT_OBJECT_SCHEMA=? AND EVENT_OBJECT_TABLE=?\")) {\n                dbStat.setString(1, container.getName());\n                dbStat.setString(2, table.getName());\n\n                List<GenericTrigger> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"TRIGGER_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        HSQLTrigger trigger = new HSQLTrigger(\n                                container,\n                                table,\n                                name,\n                                dbResult);\n                        result.add(trigger);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"},{"authorDate":"2021-06-22 02:29:23","commitOrder":5,"curCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            String sql = \"SELECT TriggerName,\\n\" +\n                    \"ActionTime,\\n\" +\n                    \"Event,\\n\" +\n                    \"CASE EnabledFlag\\n\" +\n                    \"WHEN 'Y' THEN 'ENABLED'\\n\" +\n                    \"WHEN 'N' THEN 'DISABLED'\\n\" +\n                    \"END as status,\\n\" +\n                    \"CASE Kind\\n\" +\n                    \"WHEN 'R' THEN 'ROW'\\n\" +\n                    \"WHEN 'S' THEN 'STATEMENT'\\n\" +\n                    \"end as triggerKind,\\n\" +\n                    \"RequestText as definition,\\n\" +\n                    \"CreateTimeStamp as createDate,\\n\" +\n                    \"TriggerComment as description\\n\" +\n                    \"FROM DBC.TriggersV\\n\" +\n                    \"WHERE SubjectTableDataBaseName=?\\n\" +\n                    \"AND TableName=?\";\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(sql)) {\n                dbStat.setString(1, table.getSchema().getName());\n                dbStat.setString(2, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        String description = JDBCUtils.safeGetString(dbResult, \"description\");\n                        result.add(new TeradataTrigger(table, name, description, dbResult));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-06-22 02:29:23","endLine":226,"groupId":"10345","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"loadTriggers","params":"(DBRProgressMonitormonitor@@NotNullGenericStructContainercontainer@@NullableGenericTableBasetable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6a/42d8dc540f5716c87ed2e9acc178c3077d44fd.src","preCode":"    public List<? extends GenericTrigger> loadTriggers(DBRProgressMonitor monitor, @NotNull GenericStructContainer container, @Nullable GenericTableBase table) throws DBException {\n        if (table == null) {\n            return Collections.emptyList();\n        }\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read triggers\")) {\n            String sql = \"SELECT TriggerName,\\n\" +\n                    \"ActionTime,\\n\" +\n                    \"Event,\\n\" +\n                    \"CASE EnabledFlag\\n\" +\n                    \"WHEN 'Y' THEN 'ENABLED'\\n\" +\n                    \"WHEN 'N' THEN 'DISABLED'\\n\" +\n                    \"END as status,\\n\" +\n                    \"CASE Kind\\n\" +\n                    \"WHEN 'R' THEN 'ROW'\\n\" +\n                    \"WHEN 'S' THEN 'STATEMENT'\\n\" +\n                    \"end as triggerKind,\\n\" +\n                    \"RequestText as definition,\\n\" +\n                    \"CreateTimeStamp as createDate,\\n\" +\n                    \"TriggerComment as description\\n\" +\n                    \"FROM DBC.TriggersV\\n\" +\n                    \"WHERE SubjectTableDataBaseName=?\\n\" +\n                    \"AND TableName=?\";\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(sql)) {\n                dbStat.setString(1, table.getSchema().getName());\n                dbStat.setString(2, table.getName());\n                List<GenericTrigger> result = new ArrayList<>();\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, 1);\n                        String description = JDBCUtils.safeGetString(dbResult, \"description\");\n                        result.add(new TeradataTrigger(container, table, name, description, dbResult));\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.teradata/src/org/jkiss/dbeaver/ext/teradata/model/TeradataMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"2518e4a91e5c228d6bef4abbf3b21f772004d581","commitMessage":"@@@Merge pull request #12885 from dbeaver/genericTriggersCache#11013\n\n#11013 add support of trigger cache for generic triggers","date":"2021-06-22 02:29:23","modifiedFileCount":"19","status":"M","submitter":"Serge Rider"}]
