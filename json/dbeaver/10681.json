[{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":1,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","date":"2018-08-15 00:53:44","endLine":186,"groupId":"5096","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/19/c33bf9cec6e930e4a6d45639565cb3448e5d5a.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterCSV.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"},{"authorDate":"2018-08-15 00:53:44","commitOrder":1,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","date":"2018-08-15 00:53:44","endLine":156,"groupId":"9906","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d0/b78c3e736534507801e4cab242972e4b1ccf24.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterMarkdownTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"aa14dc53c5c488a5ae30d1a1ef21f3c0f0ddea31","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 82f7a4fe56fccb9cb54aecddfd86d69cd795214f","date":"2018-08-15 00:53:44","modifiedFileCount":"162","status":"B","submitter":"serge@jkiss.org"},{"authorTime":"2019-04-09 21:32:05","codes":[{"authorDate":"2019-04-09 21:32:05","commitOrder":2,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","date":"2019-04-09 21:32:05","endLine":183,"groupId":"5096","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2a/ad0346bca485a23b09939c032920fb6c0c0927.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterCSV.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2019-04-09 21:32:05","commitOrder":2,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","date":"2019-04-09 21:32:05","endLine":152,"groupId":"3621","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b7/06cba8438cc01802bb28fe04e2006bb45deaad.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    out.write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterMarkdownTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"d14f82cbf44fd6a5a56f8c6741caf2bcedd52944","commitMessage":"@@@#1646 Export to multiple files impl\n\n\nFormer-commit-id: 9c3ff3991914d5f132efddbfce790867ea971583","date":"2019-04-09 21:32:05","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-09-12 06:30:20","codes":[{"authorDate":"2019-09-12 06:30:20","commitOrder":3,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","date":"2019-09-12 06:30:20","endLine":187,"groupId":"5096","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e9/0d13cc396af0c8262790d1cd25ff5ca52e2e34.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterCSV.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-09-12 06:30:20","commitOrder":3,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","date":"2019-09-12 06:30:20","endLine":151,"groupId":"3621","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7e/5d51e36f2fefedc18e8cfa14d5527bfaa7f583.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.size(); i++) {\n            DBDAttributeBinding column = columns.get(i);\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterMarkdownTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"1d9c9b8c4fd2536ccc4092f71659033fbe0ce12d","commitMessage":"@@@#6725 Virtual attributes in data transfer. Virtual attribute value evaluation\n\n\nFormer-commit-id: de7c1d81f1b8105846e762a0f1a8bbc5b1fb1500","date":"2019-09-12 06:30:20","modifiedFileCount":"23","status":"M","submitter":"serge-rider"},{"authorTime":"2019-09-12 06:30:20","codes":[{"authorDate":"2020-01-28 20:25:28","commitOrder":4,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n\n                if (quoteStrategy == QuoteStrategy.DISABLED) {\n                    if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                        \r\n                        quote = true;\n                    }\n                } else if (quoteStrategy == QuoteStrategy.STRINGS) {\n                    if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date)) {\n                        quote = true;\n                    }\n                } else if (quoteStrategy == QuoteStrategy.ALL_BUT_NUMBERS) {\n                    if (!(row[i] instanceof Number)) {\n                        quote = true;\n                    }\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","date":"2020-01-28 20:25:28","endLine":208,"groupId":"10681","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/6d/b6175c82599de3f13da33b5145f15b244e115a.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL, false);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n\r\n                        getSite().writeBinaryData(cs);\n\r\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                String stringValue = super.getValueDisplayString(column, row[i]);\n                boolean quote = false;\n                if (!stringValue.isEmpty() && !(row[i] instanceof Number) && !(row[i] instanceof Date) && Character.isDigit(stringValue.charAt(0))) {\n                    \r\n                    quote = true;\n                }\n                writeCellValue(stringValue, quote);\n            }\n            if (i < row.length - 1) {\n                writeDelimiter();\n            }\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterCSV.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2019-09-12 06:30:20","commitOrder":4,"curCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","date":"2019-09-12 06:30:20","endLine":151,"groupId":"10681","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"exportRow","params":"(DBCSessionsession@DBCResultSetresultSet@Object[]row)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7e/5d51e36f2fefedc18e8cfa14d5527bfaa7f583.src","preCode":"    public void exportRow(DBCSession session, DBCResultSet resultSet, Object[] row) throws DBException, IOException\n    {\n        writeDelimiter();\n        for (int i = 0; i < row.length && i < columns.length; i++) {\n            DBDAttributeBinding column = columns[i];\n            if (DBUtils.isNullValue(row[i])) {\n                if (!CommonUtils.isEmpty(nullString)) {\n                    getWriter().write(nullString);\n                }\n            } else if (row[i] instanceof DBDContent) {\n                \r\n                \r\n                DBDContent content = (DBDContent)row[i];\n                try {\n                    DBDContentStorage cs = content.getContents(session.getProgressMonitor());\n                    if (cs == null) {\n                        writeCellValue(DBConstants.NULL_VALUE_LABEL);\n                    } else if (ContentUtils.isTextContent(content)) {\n                        writeCellValue(cs.getContentReader());\n                    } else {\n                        getSite().writeBinaryData(cs);\n                    }\n                }\n                finally {\n                    content.release();\n                }\n            } else {\n                writeCellValue(super.getValueDisplayString(column, row[i]));\n            }\n            writeDelimiter();\n        }\n        writeRowLimit();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterMarkdownTable.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"N"}],"commitId":"ea1cf8ac6670d23ab7e17e046b160572ce9f4fc9","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 07ce05d9b12caa1adf76e9540122d6f2ffedb280","date":"2020-01-28 20:25:28","modifiedFileCount":"7","status":"M","submitter":"Serge Rider"}]
