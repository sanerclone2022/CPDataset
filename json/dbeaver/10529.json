[{"authorTime":"2019-07-14 03:36:31","codes":[{"authorDate":"2019-07-14 03:36:31","commitOrder":1,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.BORDER | SWT.SINGLE);\n            profilesTable.setHeaderVisible(true);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n        updateControlsState();\n\n        return divider;\n    }\n","date":"2019-07-14 03:36:31","endLine":150,"groupId":"180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/c2910d3139d37b5696ca0583de5be624627f44.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.BORDER | SWT.SINGLE);\n            profilesTable.setHeaderVisible(true);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n        updateControlsState();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2019-07-14 03:36:31","commitOrder":1,"curCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 03:36:31","endLine":274,"groupId":"3732","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/c2910d3139d37b5696ca0583de5be624627f44.src","preCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"}],"commitId":"658178711b9db12aff5a67373db5ab0df6124f26","commitMessage":"@@@Network profiles page\n\n\nFormer-commit-id: 60f1fb146e959fd9eb711faf5c73e31bbae25588","date":"2019-07-14 03:36:31","modifiedFileCount":"5","status":"B","submitter":"Serge Rider"},{"authorTime":"2019-07-14 03:36:31","codes":[{"authorDate":"2019-07-14 05:57:02","commitOrder":2,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.BORDER | SWT.SINGLE);\n            profilesTable.setHeaderVisible(true);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n        updateControlsState();\n\n        return divider;\n    }\n","date":"2019-07-14 05:57:02","endLine":189,"groupId":"180","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8c/7d2f7476857326ac6a88a01b2ad411be52d415.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.BORDER | SWT.SINGLE);\n            profilesTable.setHeaderVisible(true);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n        updateControlsState();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-07-14 03:36:31","commitOrder":2,"curCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 03:36:31","endLine":274,"groupId":"3732","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/c2910d3139d37b5696ca0583de5be624627f44.src","preCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"N"}],"commitId":"3ef6ba405819a0cfac994824441effe2eaec3d31","commitMessage":"@@@Network profiles page - enablement fixes\n\n\nFormer-commit-id: 5adc45dd1b14617c563bad148b330c833714ff5e","date":"2019-07-14 05:57:02","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 03:36:31","codes":[{"authorDate":"2019-07-14 14:30:28","commitOrder":3,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-14 14:30:28","endLine":187,"groupId":"180","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b7/b6f42fbd5c5dd8d92228aa3a7e2293e58332c8.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.BORDER | SWT.SINGLE);\n            profilesTable.setHeaderVisible(true);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n        updateControlsState();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-07-14 03:36:31","commitOrder":3,"curCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 03:36:31","endLine":274,"groupId":"3732","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0a/c2910d3139d37b5696ca0583de5be624627f44.src","preCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"N"}],"commitId":"c350a68ca62827ad4720797e3e8277662c58c221","commitMessage":"@@@Network profiles editor page\n\n\nFormer-commit-id: 5d58e3d6302ad1c13e04a0235990a957516f3d56","date":"2019-07-14 14:30:28","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2019-07-14 16:22:21","commitOrder":4,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-14 16:22:21","endLine":194,"groupId":"13196","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":4,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"3732","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"}],"commitId":"431df29cf0c5dd9f4d8a2669ae835d9c90cc6108","commitMessage":"@@@Network profiles save\n\n\nFormer-commit-id: 651e8c376b480244bf64c7140c7dd5e2615f7de1","date":"2019-07-14 16:22:21","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2019-07-16 22:12:59","commitOrder":5,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                        if (!usedBy.isEmpty()) {\n                            UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                            return;\n                        }\n                        if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                            return;\n                        }\n\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-16 22:12:59","endLine":201,"groupId":"13196","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c3/8ea288a1283152bf050e32484ba8c967ddf7e8.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileId(UUID.randomUUID().toString());\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":5,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"3732","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"N"}],"commitId":"577d8d23e7985255f1d36e9cf579356bbd22cf73","commitMessage":"@@@Network profiles management fixes\n\n\nFormer-commit-id: 834c84379513d302d86dc17c37a4cc5ee7aa83a2","date":"2019-07-16 22:12:59","modifiedFileCount":"18","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2019-07-19 17:52:52","commitOrder":6,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = \"\";\n                    while (true) {\n                        profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                        if (CommonUtils.isEmptyTrimmed(profileName)) {\n                            return;\n                        }\n                        if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                            UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                            continue;\n                        }\n                        break;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                        if (!usedBy.isEmpty()) {\n                            UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                            return;\n                        }\n                        if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                            return;\n                        }\n\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-19 17:52:52","endLine":214,"groupId":"13196","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/eb/98ad117eb72c94edd3d1337605f5475d4e2793.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = UIUtils.createComposite(divider, 1);\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", \"\");\n                    if (CommonUtils.isEmpty(profileName)) {\n                        return;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                        if (!usedBy.isEmpty()) {\n                            UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                            return;\n                        }\n                        if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                            return;\n                        }\n\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":6,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"3732","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"N"}],"commitId":"05a0b5981e16011a704a0f6d74e0695d12d7df8a","commitMessage":"@@@#6300 Network profile create fix\n\n\nFormer-commit-id: 10e5b07c919fb790601c9435d2b284f2c35fe1d0","date":"2019-07-19 17:52:52","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2019-07-23 05:20:32","commitOrder":7,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            {\n                ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n                ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n                createItem.setToolTipText(\"Create new profile\");\n                createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n                createItem.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        String profileName = \"\";\n                        while (true) {\n                            profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                            if (CommonUtils.isEmptyTrimmed(profileName)) {\n                                return;\n                            }\n                            if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                                UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                                continue;\n                            }\n                            break;\n                        }\n                        DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                        newProfile.setProfileName(profileName);\n                        projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n\n                        TableItem item = new TableItem(profilesTable, SWT.NONE);\n                        item.setText(newProfile.getProfileName());\n                        item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                        item.setData(newProfile);\n                        if (profilesTable.getItemCount() == 1) {\n                            selectedProfile = newProfile;\n                            profilesTable.select(0);\n                            updateControlsState();\n                        }\n                    }\n                });\n\n                ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n                deleteItem.setToolTipText(\"Delete profile\");\n                deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n                deleteItem.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        if (selectedProfile != null) {\n                            List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                            if (!usedBy.isEmpty()) {\n                                UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                                return;\n                            }\n                            if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                                return;\n                            }\n\n                            projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                            projectMeta.getDataSourceRegistry().flushConfig();\n                            profilesTable.remove(profilesTable.getSelectionIndex());\n                            selectedProfile = null;\n                            updateControlsState();\n                        } else {\n                            UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                        }\n                    }\n                });\n            }\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-23 05:20:32","endLine":218,"groupId":"0","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c8/3e34ad11fdfcbf7c6265d06f22b8eb377aa8dd.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n            ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n            ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n            createItem.setToolTipText(\"Create new profile\");\n            createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n            createItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    String profileName = \"\";\n                    while (true) {\n                        profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                        if (CommonUtils.isEmptyTrimmed(profileName)) {\n                            return;\n                        }\n                        if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                            UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                            continue;\n                        }\n                        break;\n                    }\n                    DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                    newProfile.setProfileName(profileName);\n                    projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                    projectMeta.getDataSourceRegistry().flushConfig();\n\n                    TableItem item = new TableItem(profilesTable, SWT.NONE);\n                    item.setText(newProfile.getProfileName());\n                    item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                    item.setData(newProfile);\n                    if (profilesTable.getItemCount() == 1) {\n                        selectedProfile = newProfile;\n                        profilesTable.select(0);\n                        updateControlsState();\n                    }\n                }\n            });\n\n            ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n            deleteItem.setToolTipText(\"Delete profile\");\n            deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n            deleteItem.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    if (selectedProfile != null) {\n                        List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                        if (!usedBy.isEmpty()) {\n                            UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                            return;\n                        }\n                        if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                            return;\n                        }\n\n                        projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n                        profilesTable.remove(profilesTable.getSelectionIndex());\n                        selectedProfile = null;\n                        updateControlsState();\n                    } else {\n                        UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                    }\n                }\n            });\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":7,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"3732","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"N"}],"commitId":"405c4b477b36cd0f52a0fa3d36b9c21bfa9417d1","commitMessage":"@@@UI fixes\n\n\nFormer-commit-id: c9095cfe361246f434a8f05df46f60fc71b63919","date":"2019-07-23 05:20:32","modifiedFileCount":"7","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2019-07-31 02:17:59","commitOrder":8,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            {\n                ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n                UIUtils.createToolItem(toolbar, \"Create new profile\", UIIcon.ROW_ADD, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        String profileName = \"\";\n                        while (true) {\n                            profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                            if (CommonUtils.isEmptyTrimmed(profileName)) {\n                                return;\n                            }\n                            if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                                UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                                continue;\n                            }\n                            break;\n                        }\n                        DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                        newProfile.setProfileName(profileName);\n                        projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n\n                        TableItem item = new TableItem(profilesTable, SWT.NONE);\n                        item.setText(newProfile.getProfileName());\n                        item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                        item.setData(newProfile);\n                        if (profilesTable.getItemCount() == 1) {\n                            selectedProfile = newProfile;\n                            profilesTable.select(0);\n                            updateControlsState();\n                        }\n                    }\n                });\n\n                UIUtils.createToolItem(toolbar, \"Delete profile\", UIIcon.ROW_DELETE, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        if (selectedProfile != null) {\n                            List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                            if (!usedBy.isEmpty()) {\n                                UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                                return;\n                            }\n                            if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                                return;\n                            }\n\n                            projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                            projectMeta.getDataSourceRegistry().flushConfig();\n                            profilesTable.remove(profilesTable.getSelectionIndex());\n                            selectedProfile = null;\n                            updateControlsState();\n                        } else {\n                            UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                        }\n                    }\n                });\n            }\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2019-07-31 02:17:59","endLine":212,"groupId":"13298","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/b0f7ac6dd58c6da22ae51e769237f9e6d03ec1.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            {\n                ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n                ToolItem createItem = new ToolItem(toolbar, SWT.NONE);\n                createItem.setToolTipText(\"Create new profile\");\n                createItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_ADD));\n                createItem.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        String profileName = \"\";\n                        while (true) {\n                            profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                            if (CommonUtils.isEmptyTrimmed(profileName)) {\n                                return;\n                            }\n                            if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                                UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                                continue;\n                            }\n                            break;\n                        }\n                        DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                        newProfile.setProfileName(profileName);\n                        projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n\n                        TableItem item = new TableItem(profilesTable, SWT.NONE);\n                        item.setText(newProfile.getProfileName());\n                        item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                        item.setData(newProfile);\n                        if (profilesTable.getItemCount() == 1) {\n                            selectedProfile = newProfile;\n                            profilesTable.select(0);\n                            updateControlsState();\n                        }\n                    }\n                });\n\n                ToolItem deleteItem = new ToolItem(toolbar, SWT.NONE);\n                deleteItem.setToolTipText(\"Delete profile\");\n                deleteItem.setImage(DBeaverIcons.getImage(UIIcon.ROW_DELETE));\n                deleteItem.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        if (selectedProfile != null) {\n                            List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                            if (!usedBy.isEmpty()) {\n                                UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                                return;\n                            }\n                            if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                                return;\n                            }\n\n                            projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                            projectMeta.getDataSourceRegistry().flushConfig();\n                            profilesTable.remove(profilesTable.getSelectionIndex());\n                            selectedProfile = null;\n                            updateControlsState();\n                        } else {\n                            UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                        }\n                    }\n                });\n            }\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":8,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"3732","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"N"}],"commitId":"265f6b9ca095663bf3b6a3b8c40fc8d80dd30595","commitMessage":"@@@#6379 Data viewer: color settings dialog\n\n\nFormer-commit-id: 80d7e7b91736e052f12856d917f3404151d24c3a","date":"2019-07-31 02:17:59","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-14 16:22:21","codes":[{"authorDate":"2020-05-08 22:41:33","commitOrder":9,"curCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            {\n                ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL | SWT.RIGHT);\n\n                UIUtils.createToolItem(toolbar, \"Create\", \"Create new profile\", UIIcon.ROW_ADD, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        String profileName = \"\";\n                        while (true) {\n                            profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                            if (CommonUtils.isEmptyTrimmed(profileName)) {\n                                return;\n                            }\n                            if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                                UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                                continue;\n                            }\n                            break;\n                        }\n                        DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                        newProfile.setProfileName(profileName);\n                        projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n\n                        TableItem item = new TableItem(profilesTable, SWT.NONE);\n                        item.setText(newProfile.getProfileName());\n                        item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                        item.setData(newProfile);\n                        if (profilesTable.getItemCount() == 1) {\n                            selectedProfile = newProfile;\n                            profilesTable.select(0);\n                            updateControlsState();\n                        }\n                    }\n                });\n\n                UIUtils.createToolItem(toolbar, \"Delete\", \"Delete profile\", UIIcon.ROW_DELETE, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        if (selectedProfile != null) {\n                            List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                            if (!usedBy.isEmpty()) {\n                                UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                                return;\n                            }\n                            if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                                return;\n                            }\n\n                            projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                            projectMeta.getDataSourceRegistry().flushConfig();\n                            profilesTable.remove(profilesTable.getSelectionIndex());\n                            selectedProfile = null;\n                            updateControlsState();\n                        } else {\n                            UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                        }\n                    }\n                });\n            }\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","date":"2020-05-08 22:41:33","endLine":212,"groupId":"10529","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createContents","params":"(finalCompositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/4c/ec0aabe0f5f23f32e82ba9c987b539dd276bad.src","preCode":"    protected Control createContents(final Composite parent) {\n        CustomSashForm divider = UIUtils.createPartDivider(null, parent, SWT.HORIZONTAL);\n\n        {\n            Composite profilesGroup = new Composite(divider, SWT.BORDER);\n            GridLayout gl = new GridLayout(1, false);\n            gl.marginWidth = 0;\n            gl.marginHeight = 0;\n            profilesGroup.setLayout(gl);\n\n            GridData gd = new GridData(GridData.FILL_BOTH);\n            profilesGroup.setLayoutData(gd);\n\n            {\n                ToolBar toolbar = new ToolBar(profilesGroup, SWT.HORIZONTAL);\n\n                UIUtils.createToolItem(toolbar, \"Create new profile\", UIIcon.ROW_ADD, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        String profileName = \"\";\n                        while (true) {\n                            profileName = EnterNameDialog.chooseName(getShell(), \"Profile name\", profileName);\n                            if (CommonUtils.isEmptyTrimmed(profileName)) {\n                                return;\n                            }\n                            if (projectMeta.getDataSourceRegistry().getNetworkProfile(profileName) != null) {\n                                UIUtils.showMessageBox(getShell(), \"Wrong profile name\", \"Profile '\" + profileName + \"' already exist in project '\" + projectMeta.getName() + \"'\", SWT.ICON_ERROR);\n                                continue;\n                            }\n                            break;\n                        }\n                        DBWNetworkProfile newProfile = new DBWNetworkProfile();\n                        newProfile.setProfileName(profileName);\n                        projectMeta.getDataSourceRegistry().updateNetworkProfile(newProfile);\n                        projectMeta.getDataSourceRegistry().flushConfig();\n\n                        TableItem item = new TableItem(profilesTable, SWT.NONE);\n                        item.setText(newProfile.getProfileName());\n                        item.setImage(DBeaverIcons.getImage(DBIcon.TYPE_DOCUMENT));\n                        item.setData(newProfile);\n                        if (profilesTable.getItemCount() == 1) {\n                            selectedProfile = newProfile;\n                            profilesTable.select(0);\n                            updateControlsState();\n                        }\n                    }\n                });\n\n                UIUtils.createToolItem(toolbar, \"Delete profile\", UIIcon.ROW_DELETE, new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        if (selectedProfile != null) {\n                            List<? extends DBPDataSourceContainer> usedBy = projectMeta.getDataSourceRegistry().getDataSourcesByProfile(selectedProfile);\n                            if (!usedBy.isEmpty()) {\n                                UIUtils.showMessageBox(getShell(), \"Can't delete profile\", \"Configuration profile '\" + selectedProfile.getProfileName() + \"' used by \" + usedBy.size() + \" connections:\\n\" + usedBy, SWT.ICON_ERROR);\n                                return;\n                            }\n                            if (!UIUtils.confirmAction(getShell(), \"Delete profile\", \"Are you sure you want to delete configuration profile '\" + selectedProfile.getProfileName() + \"'?\")) {\n                                return;\n                            }\n\n                            projectMeta.getDataSourceRegistry().removeNetworkProfile(selectedProfile);\n                            projectMeta.getDataSourceRegistry().flushConfig();\n                            profilesTable.remove(profilesTable.getSelectionIndex());\n                            selectedProfile = null;\n                            updateControlsState();\n                        } else {\n                            UIUtils.showMessageBox(getShell(), \"No profile\", \"Select profile first\", SWT.ICON_ERROR);\n                        }\n                    }\n                });\n            }\n\n            profilesTable = new Table(profilesGroup, SWT.SINGLE);\n            gd = new GridData(GridData.FILL_BOTH);\n            gd.minimumWidth = 150;\n            profilesTable.setLayoutData(gd);\n            profilesTable.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    saveHandlerSettings();\n                    TableItem[] selection = profilesTable.getSelection();\n                    if (ArrayUtils.isEmpty(selection)) {\n                        selectedProfile = null;\n                    } else {\n                        selectedProfile = (DBWNetworkProfile) selection[0].getData();\n                    }\n                    updateControlsState();\n                }\n            });\n\n\n        }\n\n        {\n            handlersFolder = new TabFolder(divider, SWT.TOP | SWT.FLAT);\n            handlersFolder.setLayoutData(new GridData(GridData.FILL_BOTH));\n            for (NetworkHandlerDescriptor nhd : NetworkHandlerRegistry.getInstance().getDescriptors()) {\n                if (!nhd.hasObjectTypes()) {\n                    createHandlerTab(nhd);\n                }\n            }\n            handlersFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    updateControlsState();\n                }\n            });\n        }\n\n        divider.setWeights(new int[] { 300, 700 } );\n\n        performDefaults();\n\n        return divider;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-07-14 16:22:21","commitOrder":9,"curCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","date":"2019-07-14 16:22:21","endLine":355,"groupId":"10529","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"performOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/e6f80656bce743758e6dbeabccc4bb87bde6ca.src","preCode":"    public boolean performOk() {\n        saveHandlerSettings();\n\n        for (TableItem item : profilesTable.getItems()) {\n            DBWNetworkProfile profile = (DBWNetworkProfile) item.getData();\n            saveSettings(profile);\n            projectMeta.getDataSourceRegistry().updateNetworkProfile(profile);\n        }\n        projectMeta.getDataSourceRegistry().flushConfig();\n\n        return super.performOk();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/preferences/PrefPageProjectNetworkProfiles.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"N"}],"commitId":"a01b5d910410ed5128cfc92fe04941e891062c53","commitMessage":"@@@Profiles model refactoring\n\n\nFormer-commit-id: 5897ce0ef1136e689bf3ca11dfd36cc2936ca963","date":"2020-05-08 22:41:33","modifiedFileCount":"5","status":"M","submitter":"serge-rider"}]
