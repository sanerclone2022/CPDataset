[{"authorTime":"2016-03-05 05:36:43","codes":[{"authorDate":"2015-11-15 01:34:20","commitOrder":5,"curCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","date":"2015-11-15 01:34:20","endLine":101,"groupId":"3354","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getRealRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/39/a0e48be9fc87f30db9160797752b983743ab0f.src","preCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleTablePhysical.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"NB"},{"authorDate":"2016-03-05 05:36:43","commitOrder":5,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2016-03-05 05:36:43","endLine":92,"groupId":"3354","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/84/82042714fa40ebd7bee4fd67cd1d7ff30d9477.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"ce8443064dcd319dcf9e50fa48027fa0cdc9d373","commitMessage":"@@@#264 PostgreSQL foreign tables model\n\n\nFormer-commit-id: bd3145c6e650370ef4f67c3ca6e5437309c44500","date":"2016-03-05 05:36:43","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-07-23 15:41:36","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":6,"curCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","date":"2018-07-23 15:41:36","endLine":108,"groupId":"3029","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getRealRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ac/719c75b17968903de19068768d83629f7bc501.src","preCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleTablePhysical.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2018-07-23 15:41:36","commitOrder":6,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2018-07-23 15:41:36","endLine":104,"groupId":"3029","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/dd/f638ef7270e854464cd9df3d20f1e75f272334.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, getDataSource(), \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"f5dacff54df650fa052fcc6e82dac15c414085c3","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: f856da844bdb094ac789a5c775045caea0c36124","date":"2018-07-23 15:41:36","modifiedFileCount":"524","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":7,"curCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","date":"2018-08-15 00:53:44","endLine":109,"groupId":"13953","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getRealRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ca/3ba30176fa920598a7d195fcf26a6ba781bffb.src","preCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleTablePhysical.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-08-15 00:53:44","commitOrder":7,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2018-08-15 00:53:44","endLine":105,"groupId":"13953","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b4/fe695513f24fc772a00a8a53dd9122fd1e121b.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"aa14dc53c5c488a5ae30d1a1ef21f3c0f0ddea31","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 82f7a4fe56fccb9cb54aecddfd86d69cd795214f","date":"2018-08-15 00:53:44","modifiedFileCount":"162","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2019-01-14 01:20:53","codes":[{"authorDate":"2018-08-15 00:53:44","commitOrder":8,"curCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","date":"2018-08-15 00:53:44","endLine":109,"groupId":"10965","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getRealRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ca/3ba30176fa920598a7d195fcf26a6ba781bffb.src","preCode":"    public synchronized Long getRealRowCount(DBRProgressMonitor monitor)\n    {\n        if (realRowCount != null) {\n            return realRowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            realRowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (realRowCount == null) {\n            realRowCount = -1L;\n        }\n\n        return realRowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleTablePhysical.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"},{"authorDate":"2019-01-14 01:20:53","commitOrder":8,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2019-01-14 01:20:53","endLine":111,"groupId":"10965","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a5/b33df7c4c59c7296fc2365f65e6e132fb6e663.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"9b1e02c0e30b0d6553ebedd450bc9c7b54fac586","commitMessage":"@@@#4605 PG: index & table rel size info. Stats metadata info fixed\n\n\nFormer-commit-id: 91cf5ad6abe3b62f3b71efefc14512f9bf7848bf","date":"2019-01-14 01:20:53","modifiedFileCount":"3","status":"M","submitter":"serge-rider"}]
