[{"authorTime":"2018-11-09 02:46:55","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":3,"curCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-07-23 15:41:36","endLine":171,"groupId":"1946","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadSequences","params":"(@NotNullDBRProgressMonitormonitor@@NotNullGenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d5/2a28dffdadba3aa9d936914412723e082e9997.src","preCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"NB"},{"authorDate":"2018-11-09 02:46:55","commitOrder":3,"curCode":"    public List<GenericSequence> loadSequences(DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + getSystemSchemaFQN(container.getDataSource(), container.getCatalog()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-11-09 02:46:55","endLine":344,"groupId":"9644","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadSequences","params":"(DBRProgressMonitormonitor@GenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9f/bb22d146f8ca897b9a83a70200092b0a90817f.src","preCode":"    public List<GenericSequence> loadSequences(DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + getSystemSchemaFQN(container.getDataSource(), container.getCatalog()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/generic/SQLServerMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"}],"commitId":"1c39cfbda8c05471978712a5655d50e974d5f7fd","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 2e1f466dbcc91f7a51798ee1500190fbdd75dc79","date":"2018-11-09 02:46:55","modifiedFileCount":"20","status":"M","submitter":"serge-rider"},{"authorTime":"2018-11-09 04:16:46","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":4,"curCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-07-23 15:41:36","endLine":171,"groupId":"1946","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadSequences","params":"(@NotNullDBRProgressMonitormonitor@@NotNullGenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d5/2a28dffdadba3aa9d936914412723e082e9997.src","preCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2018-11-09 04:16:46","commitOrder":4,"curCode":"    public List<GenericSequence> loadSequences(DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + SQLServerUtils.getSystemSchemaFQN(container.getDataSource(), container.getCatalog().getName(), getSystemSchema()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-11-09 04:16:46","endLine":345,"groupId":"9644","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadSequences","params":"(DBRProgressMonitormonitor@GenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/09/7812e33c2384629ff9a2033b9aaaaf9afae2fe.src","preCode":"    public List<GenericSequence> loadSequences(DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + getSystemSchemaFQN(container.getDataSource(), container.getCatalog()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/generic/SQLServerMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"}],"commitId":"05c6b3847e54dc6eef99d9e2b6bd9ed72a089e92","commitMessage":"@@@#810 SQL Server: schema reading\n\n\nFormer-commit-id: 97fe9e105aa45438c74c999763a6f2812dd8c00b","date":"2018-11-09 04:16:46","modifiedFileCount":"6","status":"M","submitter":"serge-rider"},{"authorTime":"2021-03-13 01:52:58","codes":[{"authorDate":"2018-07-23 15:41:36","commitOrder":5,"curCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2018-07-23 15:41:36","endLine":171,"groupId":"10289","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loadSequences","params":"(@NotNullDBRProgressMonitormonitor@@NotNullGenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d5/2a28dffdadba3aa9d936914412723e082e9997.src","preCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, @NotNull GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA=?\")) {\n                dbStat.setString(1, container.getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"SEQUENCE_NAME\");\n                        if (name == null) {\n                            continue;\n                        }\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            JDBCUtils.safeGetLong(dbResult, \"NEXT_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MINIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"MAXIMUM_VALUE\"),\n                            JDBCUtils.safeGetLong(dbResult, \"INCREMENT\")\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hsqldb/src/org/jkiss/dbeaver/ext/hsqldb/model/HSQLMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2021-03-13 01:52:58","commitOrder":5,"curCode":"    public List<GenericSequence> loadSequences(@NotNull DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + SQLServerUtils.getSystemSchemaFQN(container.getDataSource(), container.getCatalog().getName(), getSystemSchema()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","date":"2021-03-13 01:52:58","endLine":430,"groupId":"10289","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"loadSequences","params":"(@NotNullDBRProgressMonitormonitor@GenericStructContainercontainer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/721d5f628397b98e114209b31b63e24c239d5a.src","preCode":"    public List<GenericSequence> loadSequences(DBRProgressMonitor monitor, GenericStructContainer container) throws DBException {\n        try (JDBCSession session = DBUtils.openMetaSession(monitor, container, \"Read system sequences\")) {\n            try (JDBCPreparedStatement dbStat = session.prepareStatement(\n                \"SELECT * FROM \" + SQLServerUtils.getSystemSchemaFQN(container.getDataSource(), container.getCatalog().getName(), getSystemSchema()) + \".sequences WHERE schema_name(schema_id)=?\")) {\n                dbStat.setString(1, container.getSchema().getName());\n                List<GenericSequence> result = new ArrayList<>();\n\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    while (dbResult.next()) {\n                        String name = JDBCUtils.safeGetString(dbResult, \"name\");\n                        if (name == null) {\n                            continue;\n                        }\n                        name = name.trim();\n                        GenericSequence sequence = new GenericSequence(\n                            container,\n                            name,\n                            null,\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"current_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"minimum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"maximum_value\")),\n                            CommonUtils.toLong(JDBCUtils.safeGetObject(dbResult, \"increment\"))\n                        );\n                        result.add(sequence);\n                    }\n                }\n                return result;\n\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, container.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/generic/SQLServerMetaModel.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"M"}],"commitId":"0a8e3cd1e8fdc49464a933ff3fc93d08dfcfdcfd","commitMessage":"@@@#6916 SAP IQ detection fix\n\n\nFormer-commit-id: 0ddbdda100072e89bbdd52a10e9bc7fd175917b8","date":"2021-03-13 01:52:58","modifiedFileCount":"1","status":"M","submitter":"serge-rider"}]
