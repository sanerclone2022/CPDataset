[{"authorTime":"2019-02-22 17:15:19","codes":[{"authorDate":"2020-01-10 23:16:20","commitOrder":6,"curCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \"+controller.getDataContainer().getName()+\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","date":"2020-01-10 23:16:20","endLine":388,"groupId":"12486","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"printGrid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/58/827abc332cde55dc7857db319e1191f5e250bb.src","preCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \"+controller.getDataContainer().getName()+\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.console/src/org/jkiss/dbeaver/data/console/ConsoleTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"B"},{"authorDate":"2019-02-22 17:15:19","commitOrder":6,"curCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (!append) {\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                if (extraSpaces) grid.append(\" \");\n                DBDAttributeBinding attr = attrs.get(i);\n                String attrName = getAttributeName(attr);\n                grid.append(attrName);\n                for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                    grid.append(\" \");\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n\n            \r\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                for (int k = colWidths[i]; k > 0; k--) {\n                    grid.append(\"-\");\n                }\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n\n        \r\n        int firstRow = append ? totalRows : 0;\n        if (append) {\n            grid.append(\"\\n\");\n        }\n        for (int i = firstRow; i < allRows.size(); i++) {\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        if (append) {\n            text.append(grid.toString());\n        } else {\n            text.setText(grid.toString());\n        }\n\n        totalRows = allRows.size();\n    }\n","date":"2019-02-22 17:15:19","endLine":370,"groupId":"12486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"printGrid","params":"(booleanappend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/94/7c2275988730302cad124da059bac52e823836.src","preCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (!append) {\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                if (extraSpaces) grid.append(\" \");\n                DBDAttributeBinding attr = attrs.get(i);\n                String attrName = getAttributeName(attr);\n                grid.append(attrName);\n                for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                    grid.append(\" \");\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n\n            \r\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                for (int k = colWidths[i]; k > 0; k--) {\n                    grid.append(\"-\");\n                }\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n\n        \r\n        int firstRow = append ? totalRows : 0;\n        if (append) {\n            grid.append(\"\\n\");\n        }\n        for (int i = firstRow; i < allRows.size(); i++) {\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        if (append) {\n            text.append(grid.toString());\n        } else {\n            text.setText(grid.toString());\n        }\n\n        totalRows = allRows.size();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/plaintext/PlainTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"NB"}],"commitId":"ed61883da063203d0710885dc1afa753c9469f19","commitMessage":"@@@Merge pull request #7580 from dbeaver/667-script-console\n\nSQL Script Output Console - plugin module\n\nFormer-commit-id: 5ac05a70dcd19424dafae8148ffc1ae0553277bc","date":"2020-01-10 23:16:20","modifiedFileCount":"0","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-02-22 17:15:19","codes":[{"authorDate":"2020-01-19 00:25:44","commitOrder":7,"curCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \").append(controller.getDataContainer().getName()).append(\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","date":"2020-01-19 00:25:44","endLine":381,"groupId":"12486","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"printGrid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/de9da855fdaf7da6d02bf07dd33125052f5559.src","preCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \"+controller.getDataContainer().getName()+\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.console/src/org/jkiss/dbeaver/data/console/ConsoleTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2019-02-22 17:15:19","commitOrder":7,"curCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (!append) {\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                if (extraSpaces) grid.append(\" \");\n                DBDAttributeBinding attr = attrs.get(i);\n                String attrName = getAttributeName(attr);\n                grid.append(attrName);\n                for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                    grid.append(\" \");\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n\n            \r\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                for (int k = colWidths[i]; k > 0; k--) {\n                    grid.append(\"-\");\n                }\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n\n        \r\n        int firstRow = append ? totalRows : 0;\n        if (append) {\n            grid.append(\"\\n\");\n        }\n        for (int i = firstRow; i < allRows.size(); i++) {\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        if (append) {\n            text.append(grid.toString());\n        } else {\n            text.setText(grid.toString());\n        }\n\n        totalRows = allRows.size();\n    }\n","date":"2019-02-22 17:15:19","endLine":370,"groupId":"12486","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"printGrid","params":"(booleanappend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/94/7c2275988730302cad124da059bac52e823836.src","preCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (!append) {\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                if (extraSpaces) grid.append(\" \");\n                DBDAttributeBinding attr = attrs.get(i);\n                String attrName = getAttributeName(attr);\n                grid.append(attrName);\n                for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                    grid.append(\" \");\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n\n            \r\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                for (int k = colWidths[i]; k > 0; k--) {\n                    grid.append(\"-\");\n                }\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n\n        \r\n        int firstRow = append ? totalRows : 0;\n        if (append) {\n            grid.append(\"\\n\");\n        }\n        for (int i = firstRow; i < allRows.size(); i++) {\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        if (append) {\n            text.append(grid.toString());\n        } else {\n            text.setText(grid.toString());\n        }\n\n        totalRows = allRows.size();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/plaintext/PlainTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"N"}],"commitId":"7fe72d533296d7a8c48443ebb04c1481e57e295d","commitMessage":"@@@Console viewer\n\n\nFormer-commit-id: 6c85ce39074926d5dd709a9995e2da0822495ec4","date":"2020-01-19 00:25:44","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-04-07 18:06:03","codes":[{"authorDate":"2020-01-19 00:25:44","commitOrder":8,"curCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \").append(controller.getDataContainer().getName()).append(\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","date":"2020-01-19 00:25:44","endLine":381,"groupId":"10337","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"printGrid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/5d/de9da855fdaf7da6d02bf07dd33125052f5559.src","preCode":"    private void printGrid() {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        grid.append(\"> \").append(controller.getDataContainer().getName()).append(\"\\n\");\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        int firstRow = totalRows;\n\n        boolean newLines = false;\n        for (int i = firstRow; i < allRows.size(); i++) {\n            newLines = true;\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        totalRows = allRows.size();\n\n        grid.append(\"\\n\");\n\n        \r\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            for (int k = colWidths[i]; k > 0; k--) {\n                grid.append(\"-\");\n            }\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\\n\");\n\n        if (newLines) {\n            text.append(grid.toString());\n            text.append(totalRows +\" row(s) fetched.\\n\\n\");\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.data.console/src/org/jkiss/dbeaver/data/console/ConsoleTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2021-04-07 18:06:03","commitOrder":8,"curCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean delimTop = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TOP);\n        boolean delimBottom = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_BOTTOM);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (delimTop) {\n            \r\n            printSeparator(delimLeading, delimTrailing, colWidths, grid);\n        }\n        \r\n        if (delimLeading) grid.append(\"|\");\n        for (int i = 0; i < attrs.size(); i++) {\n            if (i > 0) grid.append(\"|\");\n            if (extraSpaces) grid.append(\" \");\n            DBDAttributeBinding attr = attrs.get(i);\n            String attrName = getAttributeName(attr);\n            grid.append(attrName);\n            for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                grid.append(\" \");\n            }\n            if (extraSpaces) grid.append(\" \");\n        }\n        if (delimTrailing) grid.append(\"|\");\n        grid.append(\"\\n\");\n\n        \r\n        printSeparator(delimLeading, delimTrailing, colWidths, grid);\n\n        \r\n        for (ResultSetRow row : allRows) {\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        if (delimBottom) {\n            \r\n            printSeparator(delimLeading, delimTrailing, colWidths, grid);\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        final int topIndex = text.getTopIndex();\n        final int horizontalIndex = text.getHorizontalIndex();\n        final int caretOffset = text.getCaretOffset();\n\n        text.setText(grid.toString());\n\n        if (append) {\n            \r\n            text.setTopIndex(topIndex);\n            text.setHorizontalIndex(horizontalIndex);\n            text.setCaretOffset(caretOffset);\n        }\n\n        totalRows = allRows.size();\n    }\n","date":"2021-04-07 18:06:03","endLine":369,"groupId":"10337","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"printGrid","params":"(booleanappend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/f04cb40196a6a9196d01c95e0d706deb429fe7.src","preCode":"    private void printGrid(boolean append) {\n        DBPPreferenceStore prefs = getController().getPreferenceStore();\n        int maxColumnSize = prefs.getInt(ResultSetPreferences.RESULT_TEXT_MAX_COLUMN_SIZE);\n        boolean delimLeading = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_LEADING);\n        boolean delimTrailing = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_DELIMITER_TRAILING);\n        boolean extraSpaces = prefs.getBoolean(ResultSetPreferences.RESULT_TEXT_EXTRA_SPACES);\n        this.showNulls = getController().getPreferenceStore().getBoolean(ResultSetPreferences.RESULT_TEXT_SHOW_NULLS);\n\n        DBDDisplayFormat displayFormat = DBDDisplayFormat.safeValueOf(prefs.getString(ResultSetPreferences.RESULT_TEXT_VALUE_FORMAT));\n\n        StringBuilder grid = new StringBuilder(512);\n        ResultSetModel model = controller.getModel();\n        List<DBDAttributeBinding> attrs = model.getVisibleAttributes();\n\n        List<ResultSetRow> allRows = model.getAllRows();\n        int extraSpacesNum = extraSpaces ? 2 : 0;\n        if (colWidths == null) {\n            \r\n            colWidths = new int[attrs.size()];\n\n            for (int i = 0; i < attrs.size(); i++) {\n                DBDAttributeBinding attr = attrs.get(i);\n                colWidths[i] = getAttributeName(attr).length() + extraSpacesNum;\n                if (showNulls && !attr.isRequired()) {\n                    colWidths[i] = Math.max(colWidths[i], DBConstants.NULL_VALUE_LABEL.length());\n                }\n                for (ResultSetRow row : allRows) {\n                    String displayString = getCellString(model, attr, row, displayFormat);\n                    colWidths[i] = Math.max(colWidths[i], getStringWidth(displayString) + extraSpacesNum);\n                }\n            }\n            for (int i = 0; i < colWidths.length; i++) {\n                if (colWidths[i] > maxColumnSize) {\n                    colWidths[i] = maxColumnSize;\n                }\n            }\n        }\n\n        if (!append) {\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                if (extraSpaces) grid.append(\" \");\n                DBDAttributeBinding attr = attrs.get(i);\n                String attrName = getAttributeName(attr);\n                grid.append(attrName);\n                for (int k = colWidths[i] - attrName.length() - extraSpacesNum; k > 0; k--) {\n                    grid.append(\" \");\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n\n            \r\n            \r\n            if (delimLeading) grid.append(\"|\");\n            for (int i = 0; i < attrs.size(); i++) {\n                if (i > 0) grid.append(\"|\");\n                for (int k = colWidths[i]; k > 0; k--) {\n                    grid.append(\"-\");\n                }\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n\n        \r\n        int firstRow = append ? totalRows : 0;\n        if (append) {\n            grid.append(\"\\n\");\n        }\n        for (int i = firstRow; i < allRows.size(); i++) {\n            ResultSetRow row = allRows.get(i);\n            if (delimLeading) grid.append(\"|\");\n            for (int k = 0; k < attrs.size(); k++) {\n                if (k > 0) grid.append(\"|\");\n                DBDAttributeBinding attr = attrs.get(k);\n                String displayString = getCellString(model, attr, row, displayFormat);\n                if (displayString.length() >= colWidths[k]) {\n                    displayString = CommonUtils.truncateString(displayString, colWidths[k]);\n                }\n\n                int stringWidth = getStringWidth(displayString);\n\n                if (extraSpaces) grid.append(\" \");\n                DBPDataKind dataKind = attr.getDataKind();\n                if ((dataKind == DBPDataKind.NUMERIC && rightJustifyNumbers) ||\n                    (dataKind == DBPDataKind.DATETIME && rightJustifyDateTime))\n                {\n                    \r\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                    grid.append(displayString);\n                } else {\n                    grid.append(displayString);\n                    for (int j = colWidths[k] - stringWidth - extraSpacesNum; j > 0; j--) {\n                        grid.append(\" \");\n                    }\n                }\n                if (extraSpaces) grid.append(\" \");\n            }\n            if (delimTrailing) grid.append(\"|\");\n            grid.append(\"\\n\");\n        }\n        grid.setLength(grid.length() - 1); \r\n\n        if (append) {\n            text.append(grid.toString());\n        } else {\n            text.setText(grid.toString());\n        }\n\n        totalRows = allRows.size();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.data/src/org/jkiss/dbeaver/ui/controls/resultset/plaintext/PlainTextPresentation.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"bd0294bf9ce3810306b75c3ee211ae42bd34dcc0","commitMessage":"@@@Merge pull request #12014 from dbeaver/plaintext-presentation-delimiters#11660\n\n#11660 Plaintext presentation: top and bottom delimiters\n\nFormer-commit-id: edc446af2866e5ba9b469f7e64f7d97245674e98","date":"2021-04-07 18:06:03","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"}]
