[{"authorTime":"2012-10-26 16:57:28","codes":[{"authorDate":"2012-10-26 16:57:28","commitOrder":1,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-10-26 16:57:28","endLine":167,"groupId":"11108","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/12/e683f433d8bfd3ba499a678d5f72a38790f0e9.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2012-10-26 16:57:28","commitOrder":1,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, \"\"); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-10-26 16:57:28","endLine":190,"groupId":"10165","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/70/eb913733e05c000c190c4c7df346c62a12f559.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, \"\"); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"04c106ea3592a06a604155d0ad450ef2fa90e518","commitMessage":"@@@Tools packages refactoring\nProject export fix\n\nFormer-commit-id: 8aab3e9befc1ceed4c63f52f582131c7163fdaad","date":"2012-10-26 16:57:28","modifiedFileCount":"12","status":"B","submitter":"jurgen"},{"authorTime":"2012-12-13 21:04:22","codes":[{"authorDate":"2012-10-26 16:57:28","commitOrder":2,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-10-26 16:57:28","endLine":167,"groupId":"11108","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/12/e683f433d8bfd3ba499a678d5f72a38790f0e9.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2012-12-13 21:04:22","commitOrder":2,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-12-13 21:04:22","endLine":190,"groupId":"10165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ce/9c82ab0f7a50b042f94230d9464e8d08cde92c.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, \"\"); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"3d22dabcc82521a0dfbdd408e0a5f78e083955c6","commitMessage":"@@@Oracle schema manager fix\nSQL query execute fix (do not check update count in case of existing resultset)\nReplace dummy empty strings on null in UI componenets\n\nFormer-commit-id: 19ebb37a6d06d6038cc0c6e7b9dda4fc53ac496b","date":"2012-12-13 21:04:22","modifiedFileCount":"16","status":"M","submitter":"jurgen"},{"authorTime":"2012-12-28 18:23:00","codes":[{"authorDate":"2012-12-28 18:23:00","commitOrder":3,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-12-28 18:23:00","endLine":167,"groupId":"11108","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a7/878d9266da5d175e7956f8feba9cbb415a6b38.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2012-12-28 18:23:00","commitOrder":3,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-12-28 18:23:00","endLine":190,"groupId":"10165","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/20/66a8a9fe8f1b5511d8701dc4acd19f41f32f69.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getInstance().getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"dff725f6fed0c5c3829a92835b45d7b5555e5253","commitMessage":"@@@Preferences management refactoring\n\nFormer-commit-id: 97efd22f74a6adf9da6d66f178a61bcd4a0bb735","date":"2012-12-28 18:23:00","modifiedFileCount":"41","status":"M","submitter":"jurgen"},{"authorTime":"2013-03-01 15:45:18","codes":[{"authorDate":"2012-12-28 18:23:00","commitOrder":4,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2012-12-28 18:23:00","endLine":167,"groupId":"11108","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a7/878d9266da5d175e7956f8feba9cbb415a6b38.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2013-03-01 15:45:18","commitOrder":4,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2013-03-01 15:45:18","endLine":193,"groupId":"10165","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c0/779e802885e25005f768ad63e1ab38fcf6f6ec.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            projectList.add(DBeaverCore.getInstance().getProjectRegistry().getActiveProject());\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"88c84c2171aec22f183fe08cef7d93112cd289e2","commitMessage":"@@@ASSIGNED - bug 131: Import Script wizard and Export Script wizard should handle \"No active project\" case \nhttp://bugz.jkiss.org/show_bug.cgi?id=131\nFormer-commit-id: ccd61ff2812e11c14ac9908bd607d330fab09213","date":"2013-03-01 15:45:18","modifiedFileCount":"5","status":"M","submitter":"alexander_fedorov2000"},{"authorTime":"2015-06-24 04:33:39","codes":[{"authorDate":"2015-06-24 04:33:39","commitOrder":5,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2015-06-24 04:33:39","endLine":166,"groupId":"11108","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c4/22346e32bca1f5b38e72c3579d62a5ad7dd93a.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2015-06-24 04:33:39","commitOrder":5,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2015-06-24 04:33:39","endLine":193,"groupId":"2070","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e5/1cb8a8cf0dab4135327fc3a2c2af9469d0035d.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBIcon.PROJECT.getImage());\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBIcon.TREE_FOLDER.getImage());\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"3d99c7a17685badf1fbef33e2300eab6fd456091","commitMessage":"@@@Images model refactoring\n\nFormer-commit-id: f2c94ba7fc3fad2dc0cdd753ab526f0299894b6c","date":"2015-06-24 04:33:39","modifiedFileCount":"178","status":"M","submitter":"jurgen"},{"authorTime":"2015-10-03 06:14:38","codes":[{"authorDate":"2015-06-24 04:33:39","commitOrder":6,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2015-06-24 04:33:39","endLine":166,"groupId":"11108","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c4/22346e32bca1f5b38e72c3579d62a5ad7dd93a.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2015-10-03 06:14:38","commitOrder":6,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2015-10-03 06:14:38","endLine":193,"groupId":"2070","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/10/bb8dfbf448134cb38e084259e73d6ca55695c7.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<IProject>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"c62247f9d578736606d522548c599ecff7e8f5ce","commitMessage":"@@@Java 1.7 -> fix diamonds\n\nFormer-commit-id: 21bb8fa7ed63cab668bc3a73e2b8f6b66bc1c67f","date":"2015-10-03 06:14:38","modifiedFileCount":"373","status":"M","submitter":"jurgen"},{"authorTime":"2016-06-21 00:15:15","codes":[{"authorDate":"2015-06-24 04:33:39","commitOrder":7,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2015-06-24 04:33:39","endLine":166,"groupId":"11108","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c4/22346e32bca1f5b38e72c3579d62a5ad7dd93a.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2016-06-21 00:15:15","commitOrder":7,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = DBeaverUI.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2016-06-21 00:15:15","endLine":193,"groupId":"2070","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d7/a3e265aff43a55b6f350166432d882f3398928.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"d19488e8290319aab234c441966063503ec01eb4","commitMessage":"@@@Shared images usage refactoring\n\n\nFormer-commit-id: 2b0bd279b6bb508c3a62b86ec6ecfd5a17e5101d","date":"2016-06-21 00:15:15","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-06-21 00:15:15","codes":[{"authorDate":"2016-09-17 20:44:59","commitOrder":8,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2016-09-17 20:44:59","endLine":173,"groupId":"5074","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9d/67aa009c2099a3bff29a9ae02474157b262d15.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, ScriptsExportUtils.getScriptsNode(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2016-06-21 00:15:15","commitOrder":8,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = DBeaverUI.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2016-06-21 00:15:15","endLine":193,"groupId":"2070","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/d7/a3e265aff43a55b6f350166432d882f3398928.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = DBeaverUI.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"}],"commitId":"8c9aa966c863978f8022769e05684a24c10b9a2c","commitMessage":"@@@Scripts export/import wizards fixes\n\n\nFormer-commit-id: aeee9c16182d59b12c2eff4d09aee2e8dc4e20eb","date":"2016-09-17 20:44:59","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-05-29 16:08:39","codes":[{"authorDate":"2016-09-17 20:44:59","commitOrder":9,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2016-09-17 20:44:59","endLine":173,"groupId":"5074","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9d/67aa009c2099a3bff29a9ae02474157b262d15.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"},{"authorDate":"2018-05-29 16:08:39","commitOrder":9,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-05-29 16:08:39","endLine":191,"groupId":"2070","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/1d/6fbbfc96e828392ed8282a2cd3aaa37750330e.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = DBeaverUI.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"b5633c102c90efd03e3092ff39d51b1e58f8e73d","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 15dc8eef248c3a23e4c3a7b2de56d43d3f286513","date":"2018-05-29 16:08:39","modifiedFileCount":"181","status":"M","submitter":"Serge Rider"},{"authorTime":"2018-12-26 05:13:03","codes":[{"authorDate":"2016-09-17 20:44:59","commitOrder":10,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2016-09-17 20:44:59","endLine":173,"groupId":"5074","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/9d/67aa009c2099a3bff29a9ae02474157b262d15.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"},{"authorDate":"2018-12-26 05:13:03","commitOrder":10,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:13:03","endLine":192,"groupId":"2070","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/67/a0091e4bf053473b1cfb491dcfe9549d048592.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBeaverCore.getInstance().getProjectRegistry().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBeaverCore.getInstance().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"9bcb918d07c6ac5d32d94147cdd7486d362342cc","commitMessage":"@@@#10 Navigator packages refactoring\n\n\nFormer-commit-id: 9b1c84f6149eb60054ee43767ab7366f23368919","date":"2018-12-26 05:13:03","modifiedFileCount":"36","status":"M","submitter":"serge-rider"},{"authorTime":"2018-12-26 05:25:07","codes":[{"authorDate":"2018-12-26 05:25:07","commitOrder":11,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:25:07","endLine":173,"groupId":"5074","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/99/e9264957601cd40b6718e3125ac21f3bc5e02a.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2018-12-26 05:25:07","commitOrder":11,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:25:07","endLine":192,"groupId":"2070","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/52/acc5f614ed447195a2f12fd836cef6d9d6086d.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBeaverCore.getGlobalPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"44b09447721f41d5927147a8d19ec82a247c433f","commitMessage":"@@@#10 Global preferences refactoring\n\n\nFormer-commit-id: 83bed6d831a2009e7ebb5a77c788effd7656bc3a","date":"2018-12-26 05:25:07","modifiedFileCount":"54","status":"M","submitter":"serge-rider"},{"authorTime":"2018-12-26 05:25:07","codes":[{"authorDate":"2018-12-26 05:34:52","commitOrder":12,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBWorkbench.getPlatform().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:34:52","endLine":172,"groupId":"5074","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fa/6c6dfd27414cf764a06aee604bc2007de800a5.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBeaverCore.getInstance().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2018-12-26 05:25:07","commitOrder":12,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:25:07","endLine":192,"groupId":"2070","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/52/acc5f614ed447195a2f12fd836cef6d9d6086d.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"39b11865866d4a59098f4dee5ce0c2ca86af352c","commitMessage":"@@@#10 Core refactoring\n\n\nFormer-commit-id: 45e982cd8be5c3bc1899322c9f0c4037df78ee9c","date":"2018-12-26 05:34:52","modifiedFileCount":"31","status":"M","submitter":"serge-rider"},{"authorTime":"2019-07-10 05:09:15","codes":[{"authorDate":"2018-12-26 05:34:52","commitOrder":13,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBWorkbench.getPlatform().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2018-12-26 05:34:52","endLine":172,"groupId":"10515","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fa/6c6dfd27414cf764a06aee604bc2007de800a5.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_SCRIPTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        scriptsNavigator = new DatabaseNavigatorTree(placeholder, DBWorkbench.getPlatform().getNavigatorModel().getRoot(), SWT.BORDER | SWT.CHECK);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        scriptsNavigator.setLayoutData(gd);\n        CheckboxTreeViewer viewer = (CheckboxTreeViewer) scriptsNavigator.getViewer();\n        viewer.addCheckStateListener(new ICheckStateListener() {\n            @Override\n            public void checkStateChanged(CheckStateChangedEvent event)\n            {\n                updateState();\n            }\n        });\n\n        scriptsNavigator.getViewer().addFilter(new ViewerFilter() {\n            @Override\n            public boolean select(Viewer viewer, Object parentElement, Object element)\n            {\n                return element instanceof DBNResource && ((DBNResource) element).getResource() instanceof IContainer;\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            overwriteCheck = UIUtils.createCheckbox(generalSettings, CoreMessages.dialog_project_export_wizard_page_checkbox_overwrite_files, false);\n            gd = new GridData(GridData.BEGINNING);\n            gd.horizontalSpan = 3;\n            overwriteCheck.setLayoutData(gd);\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_page_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_page_dialog_choose_export_dir_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/scripts/ScriptsExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2019-07-10 05:09:15","commitOrder":13,"curCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<DBPProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(DBWorkbench.getPlatform().getWorkspace().getProject(resource.getProject()));\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            DBPProject activeProject = DBWorkbench.getPlatform().getWorkspace().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (DBPProject project : DBWorkbench.getPlatform().getWorkspace().getProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","date":"2019-07-10 05:09:17","endLine":191,"groupId":"10515","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"createControl","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ef/c11cf29cd7679421dd3b52c4eee6b6a9081a9b.src","preCode":"    public void createControl(Composite parent)\n    {\n        String outDir = DBWorkbench.getPlatform().getPreferenceStore().getString(PREF_PROJECTS_EXPORT_OUT_DIR);\n        if (CommonUtils.isEmpty(outDir)) {\n            outDir = RuntimeUtils.getUserHomeDir().getAbsolutePath();\n        }\n\n        Set<IProject> projectList = new LinkedHashSet<>();\n        final ISelection selection = UIUtils.getActiveWorkbenchWindow().getActivePage().getSelection();\n        if (selection != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {\n            for (Iterator<?> iter = ((IStructuredSelection) selection).iterator(); iter.hasNext(); ) {\n                Object element = iter.next();\n                IResource resource = RuntimeUtils.getObjectAdapter(element, IResource.class);\n                if (resource != null) {\n                    projectList.add(resource.getProject());\n                }\n            }\n        }\n        if (projectList.isEmpty()) {\n            IProject activeProject = DBWorkbench.getPlatform().getProjectManager().getActiveProject();\n            if (activeProject != null) {\n    \t\t\tprojectList.add(activeProject);\n\t\t\t}\n        }\n\n        Composite placeholder = UIUtils.createPlaceholder(parent, 1);\n        placeholder.setLayout(new GridLayout(1, false));\n\n        \r\n        projectsTable = new Table(placeholder, SWT.MULTI | SWT.CHECK | SWT.BORDER);\n        GridData gd = new GridData(GridData.FILL_BOTH);\n        projectsTable.setLayoutData(gd);\n        projectsTable.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e)\n            {\n                updateState();\n            }\n        });\n\n        for (IProject project : DBWorkbench.getPlatform().getLiveProjects()) {\n            final TableItem item = new TableItem(projectsTable, SWT.NONE);\n            item.setImage(DBeaverIcons.getImage(DBIcon.PROJECT));\n            item.setText(project.getName());\n            item.setData(project);\n            if (projectList.contains(project)) {\n                item.setChecked(true);\n            }\n        }\n\n        final Composite fileNameGroup = UIUtils.createPlaceholder(placeholder, 2);\n        fileNameGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText = UIUtils.createLabelText(fileNameGroup, CoreMessages.dialog_project_export_wizard_start_label_output_file, null); \r\n        fileNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fileNameText.addModifyListener(new ModifyListener() {\n            @Override\n            public void modifyText(ModifyEvent e)\n            {\n                if (!CommonUtils.equalObjects(fileNameText.getText(), getArchiveFileName(getProjectsToExport()))) {\n                    fileNameEdited = true;\n                }\n            }\n        });\n\n        \r\n        Composite generalSettings = UIUtils.createPlaceholder(placeholder, 3);\n        generalSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        {\n            UIUtils.createControlLabel(generalSettings, CoreMessages.dialog_project_export_wizard_start_label_directory);\n            directoryText = new Text(generalSettings, SWT.BORDER);\n            directoryText.setText(outDir);\n            directoryText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n            directoryText.addModifyListener(new ModifyListener() {\n                @Override\n                public void modifyText(ModifyEvent e)\n                {\n                    updateState();\n                }\n            });\n\n            Button openFolder = new Button(generalSettings, SWT.PUSH);\n            openFolder.setImage(DBeaverIcons.getImage(DBIcon.TREE_FOLDER));\n            openFolder.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.NONE);\n                    dialog.setMessage(CoreMessages.dialog_project_export_wizard_start_dialog_directory_message);\n                    dialog.setText(CoreMessages.dialog_project_export_wizard_start_dialog_directory_text);\n                    String directory = directoryText.getText();\n                    if (!CommonUtils.isEmpty(directory)) {\n                        dialog.setFilterPath(directory);\n                    }\n                    directory = dialog.open();\n                    if (directory != null) {\n                        directoryText.setText(directory);\n                    }\n                }\n            });\n        }\n        exportDriverCheck = UIUtils.createCheckbox(placeholder, CoreMessages.dialog_project_export_wizard_start_checkbox_libraries, false);\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.horizontalSpan = 3;\n        exportDriverCheck.setLayoutData(gd);\n\n        setControl(placeholder);\n\n        updateState();\n    }\n","realPath":"plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/tools/project/ProjectExportWizardPage.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"2394d126468473ed01b8d66616378734ba430a4d","commitMessage":"@@@Project metadata refactoring\n\n\nFormer-commit-id: 777d92286e075a03b28c387a5f28841de9a20cca","date":"2019-07-10 05:09:17","modifiedFileCount":"76","status":"M","submitter":"Serge Rider"}]
