[{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2018-11-11 22:52:24","commitOrder":4,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","date":"2018-11-11 22:52:24","endLine":176,"groupId":"13953","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0f/a53ffb8ad184dfbe73d05b41ae7271520bc395.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"},{"authorDate":"2018-08-15 00:53:44","commitOrder":4,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2018-08-15 00:53:44","endLine":105,"groupId":"13953","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b4/fe695513f24fc772a00a8a53dd9122fd1e121b.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"NB"}],"commitId":"15f48c4eb74b9e5eeffdf11d04e241d4e43d99cd","commitMessage":"@@@#810 SQL Server: triggers + fixes\n\n\nFormer-commit-id: 6867f6eb44ceec2cbea77561f1fb206ba49aaecf","date":"2018-11-11 22:52:24","modifiedFileCount":"9","status":"M","submitter":"serge-rider"},{"authorTime":"2018-08-15 00:53:44","codes":[{"authorDate":"2018-11-12 18:23:35","commitOrder":5,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","date":"2018-11-12 18:23:35","endLine":182,"groupId":"13953","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ec/1abfaf40fbdc1d244b3f725fd636bfd7788742.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2018-08-15 00:53:44","commitOrder":5,"curCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2018-08-15 00:53:44","endLine":105,"groupId":"13953","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b4/fe695513f24fc772a00a8a53dd9122fd1e121b.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"5d07ebd34422fdb4a26212f81fb3ad9cd334c133","commitMessage":"@@@Sync deadlock fix (cache clear).\n\n\nFormer-commit-id: 75f5dcf204cb3f69ea3dc4d6b5f5593fbfa881a2","date":"2018-11-12 18:23:35","modifiedFileCount":"10","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-01-14 01:20:53","codes":[{"authorDate":"2018-11-12 18:23:35","commitOrder":6,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","date":"2018-11-12 18:23:35","endLine":182,"groupId":"13953","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ec/1abfaf40fbdc1d244b3f725fd636bfd7788742.src","preCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"N"},{"authorDate":"2019-01-14 01:20:53","commitOrder":6,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2019-01-14 01:20:53","endLine":111,"groupId":"13953","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a5/b33df7c4c59c7296fc2365f65e6e132fb6e663.src","preCode":"    public synchronized Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"9b1e02c0e30b0d6553ebedd450bc9c7b54fac586","commitMessage":"@@@#4605 PG: index & table rel size info. Stats metadata info fixed\n\n\nFormer-commit-id: 91cf5ad6abe3b62f3b71efefc14512f9bf7848bf","date":"2019-01-14 01:20:53","modifiedFileCount":"3","status":"M","submitter":"serge-rider"},{"authorTime":"2019-01-14 01:20:53","codes":[{"authorDate":"2020-06-04 13:56:30","commitOrder":7,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor) throws DBCException\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","date":"2020-06-04 13:56:30","endLine":198,"groupId":"10964","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c7/d8a798a474f7eca9eab7c3756505f923ea63f3.src","preCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null || !isPersisted()) {\n            return rowCount;\n        }\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/SQLServerTableBase.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2019-01-14 01:20:53","commitOrder":7,"curCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","date":"2019-01-14 01:20:53","endLine":111,"groupId":"10964","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowCount","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a5/b33df7c4c59c7296fc2365f65e6e132fb6e663.src","preCode":"    public Long getRowCount(DBRProgressMonitor monitor)\n    {\n        if (rowCount != null) {\n            return rowCount;\n        }\n        if (!isPersisted()) {\n            \r\n            return null;\n        }\n\n        \r\n        try (DBCSession session = DBUtils.openMetaSession(monitor, this, \"Read row count\")) {\n            rowCount = countData(new AbstractExecutionSource(this, session.getExecutionContext(), this), session, null, DBSDataContainer.FLAG_NONE);\n        } catch (DBException e) {\n            log.debug(\"Can't fetch row count\", e);\n        }\n        if (rowCount == null) {\n            rowCount = -1L;\n        }\n\n        return rowCount;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/PostgreTableReal.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"865516c5cc6191facfde9b24a7554ce6c184f57c","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 421e3425b6c1ceadf84f202b22d9391e992fb008","date":"2020-06-04 13:56:30","modifiedFileCount":"15","status":"M","submitter":"serge-rider"}]
