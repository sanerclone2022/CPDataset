[{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2015-10-03 06:58:22","commitOrder":4,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*,sq.SQL_TEXT FROM V$SESSION s\\n\" +\n                    \"LEFT OUTER JOIN V$SQL sq ON sq.SQL_ID=s.SQL_ID\\n\" +\n                    \"WHERE s.TYPE='USER'\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2015-10-03 06:58:22","endLine":75,"groupId":"765","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/3b/e4ad8d1aed98fef2fa531881f9c019b0bcb15d.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*,sq.SQL_TEXT FROM V$SESSION s\\n\" +\n                    \"LEFT OUTER JOIN V$SQL sq ON sq.SQL_ID=s.SQL_ID\\n\" +\n                    \"WHERE s.TYPE='USER'\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"NB"},{"authorDate":"2016-02-13 23:32:30","commitOrder":4,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"db2c0d36cc7ef3b832f8fbefc92d76b1d175c4e2","commitMessage":"@@@#12 PostgreSQL session manager\n\n\nFormer-commit-id: 0204be7c1dd9f797815a0b6f82df25d209617aee","date":"2016-02-13 23:32:30","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2017-03-19 19:41:06","commitOrder":5,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*, sq.SQL_TEXT\\n\" +\n                \"FROM V$SESSION s, V$SQL sq\\n\" +\n                \"WHERE sq.ADDRESS(+) = s.SQL_ADDRESS AND s.TYPE = 'USER'\"))\n            {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2017-03-19 19:41:06","endLine":75,"groupId":"765","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/2b/2704f1411693404c94d6921b143612270b7e4f.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*,sq.SQL_TEXT FROM V$SESSION s\\n\" +\n                    \"LEFT OUTER JOIN V$SQL sq ON sq.SQL_ID=s.SQL_ID\\n\" +\n                    \"WHERE s.TYPE='USER'\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":5,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"c994ba8f165c1f75288f6cfeefb9095b5cb04914","commitMessage":"@@@Merge branch 'devel' of https://github.com/serge-rider/dbeaver\n\n\nFormer-commit-id: cdb84c55a71481c781e9366599848ef81d4cb10f","date":"2017-03-19 19:41:06","modifiedFileCount":"145","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2017-10-31 04:17:39","commitOrder":6,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*, sq.SQL_FULLTEXT\\n\" +\n                \"FROM V$SESSION s, V$SQL sq\\n\" +\n                \"WHERE sq.ADDRESS(+) = s.SQL_ADDRESS AND s.TYPE = 'USER'\"))\n            {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2017-10-31 04:17:39","endLine":75,"groupId":"765","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/30/19ca9bc9ed14ed6c578742815e10695535a2cd.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*, sq.SQL_TEXT\\n\" +\n                \"FROM V$SESSION s, V$SQL sq\\n\" +\n                \"WHERE sq.ADDRESS(+) = s.SQL_ADDRESS AND s.TYPE = 'USER'\"))\n            {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":6,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"5c1751ed9baea8411cb00600b54430538c30d529","commitMessage":"@@@#2405 Oracle session SQL reading fix (use clob column)\n\n\nFormer-commit-id: e00ac095ce388a3918d3ce19cc997e857df6953f","date":"2017-10-31 04:17:39","modifiedFileCount":"2","status":"M","submitter":"serge-rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2018-10-13 20:06:58","commitOrder":7,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM V$SESSION s \\n\" +\n                \"LEFT JOIN v$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN v$sess_io io ON ( s.sid = io.sid)\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2018-10-13 20:06:58","endLine":92,"groupId":"765","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f3/9b9678e2e475fc1f92af578bc6703579bb5a58.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\n                \"SELECT s.*, sq.SQL_FULLTEXT\\n\" +\n                \"FROM V$SESSION s, V$SQL sq\\n\" +\n                \"WHERE sq.ADDRESS(+) = s.SQL_ADDRESS AND s.TYPE = 'USER'\"))\n            {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":7,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"51c8ddf4ec4daa621c3feff34d120e934633a6ac","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 17f886546eced0902561199e308934e6d98952a0","date":"2018-10-13 20:06:58","modifiedFileCount":"410","status":"M","submitter":"serge@jkiss.org"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2019-03-14 04:17:21","commitOrder":8,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM GV$SESSION s \\n\" +\n                \"LEFT JOIN gv$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN gv$sess_io io ON ( s.sid = io.sid)\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-03-14 04:17:21","endLine":92,"groupId":"765","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/17/ea25c979ec0ddbd9985198af30bf68681b598f.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM V$SESSION s \\n\" +\n                \"LEFT JOIN v$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN v$sess_io io ON ( s.sid = io.sid)\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":8,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"60b5f5c21409c7274a9bc207716d0220e134a968","commitMessage":"@@@#5313 Oracle session manager - monitor global sessions (RAC)\n\n\nFormer-commit-id: 12431c9cf3a8bc5b377d6eb601219e3f82b35e9d","date":"2019-03-14 04:17:21","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2019-04-07 20:23:13","commitOrder":9,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM GV$SESSION s \\n\" +\n                \"LEFT JOIN gv$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN gv$sess_io io ON ( s.sid = io.sid AND s.inst_id = io.inst_id )\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2019-04-07 20:23:13","endLine":92,"groupId":"765","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/c5/179ff93ed032e405cdf94f721b801a7d31f36c.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM GV$SESSION s \\n\" +\n                \"LEFT JOIN gv$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN gv$sess_io io ON ( s.sid = io.sid)\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":9,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"a7883120d5952a06cc1b23352f8473f8e2736884","commitMessage":"@@@Merge pull request #5669 from p91paul/devel\n\n#5313.  #5346: Oracle session browser bugfixes\n\nFormer-commit-id: 694b4d56b1bef2dedc75389fe84a3d418effbe56","date":"2019-04-07 20:23:13","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2020-10-29 16:43:32","commitOrder":10,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV9 = dataSource.isAtLeastV9();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV9) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if(atLeastV9) {\n                sql.append(\" AND s.sql_child_number = sq.child_number\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2020-10-29 16:43:32","endLine":104,"groupId":"765","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/64/f720cacf2417d9bea8b1fd55129d61ea6ed77b.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, sq.SQL_FULLTEXT, io.* \\n\" +\n                \"FROM GV$SESSION s \\n\" +\n                \"LEFT JOIN gv$sql sq ON (s.sql_address = sq.address AND s.sql_hash_value = sq.hash_value AND s.sql_child_number = sq.child_number)\\n\" +\n                \"LEFT JOIN gv$sess_io io ON ( s.sid = io.sid AND s.inst_id = io.inst_id )\\n\" +\n                \r\n                \r\n                \"WHERE 1=1\");\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":10,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"1cad76253207a96fcc9e519e1add16d6fd6cf688","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: ea776e68dbd8c4a1aafcf8f0cf5b5b3752fbcc26","date":"2020-10-29 16:43:32","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2020-11-18 18:20:01","commitOrder":11,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV9 = dataSource.isAtLeastV9();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV9) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if(atLeastV9) {\n                sql.append(\" AND s.sql_child_number = sq.child_number (+)\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2020-11-18 18:20:01","endLine":104,"groupId":"765","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/22/a15df41fa95eb1ed9bb168fab570cace03d4a2.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV9 = dataSource.isAtLeastV9();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV9) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if(atLeastV9) {\n                sql.append(\" AND s.sql_child_number = sq.child_number\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":11,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"3560efebd380b69d68c8ac39cfb8e62921ccd69a","commitMessage":"@@@Merge pull request #10414 from simasch/devel\n\n#10413 Oracle: Only Sessions that execute SQL are shown fixed. \n\nFormer-commit-id: 66f36f3f6788459af76d7154a7fbfea8a6a8f01d","date":"2020-11-18 18:20:01","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2016-02-13 23:32:30","codes":[{"authorDate":"2020-11-28 23:54:13","commitOrder":12,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV11 = dataSource.isAtLeastV11();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV11) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if (atLeastV11) {\n                sql.append(\" AND s.sql_child_number = sq.child_number (+)\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2020-11-28 23:54:13","endLine":104,"groupId":"765","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a4/aedc7f85574c1dbb2d929512e10b242338b12b.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV9 = dataSource.isAtLeastV9();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV9) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if(atLeastV9) {\n                sql.append(\" AND s.sql_child_number = sq.child_number (+)\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-02-13 23:32:30","commitOrder":12,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2016-02-13 23:32:30","endLine":71,"groupId":"765","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7b/6d32561b09fb62011941888c35e5b1dc6943c8.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"b6ddb9ba2412f799a0ca996ff34d6f5ee8375669","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 9065fe4a9c4ab9736c30a54575598e3eec3b837f","date":"2020-11-28 23:54:13","modifiedFileCount":"7","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-05-08 23:01:57","codes":[{"authorDate":"2021-05-08 23:01:57","commitOrder":13,"curCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException {\n        try {\n\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(generateSessionReadQuery(options))) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2021-05-08 23:01:57","endLine":77,"groupId":"10819","id":19,"instanceNumber":1,"isCurCommit":1,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/e3/8e51a3a9c401be436b82128799c7b37f9fd8c0.src","preCode":"    public Collection<OracleServerSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        boolean atLeastV11 = dataSource.isAtLeastV11();\n        try {\n            StringBuilder sql = new StringBuilder();\n            sql.append(\n                \"SELECT s.*, \");\n            if (atLeastV11) {\n               sql.append(\"sq.SQL_FULLTEXT, \");\n            } else {\n               sql.append(\"sq.SQL_TEXT AS SQL_FULLTEXT, \");\n            }\n            sql.append(\"io.*\\n\" +\n                \"FROM GV$SESSION s, gv$sql sq, gv$sess_io io\\n\" +\n                \"WHERE s.sql_address = sq.address(+)\\n\" +\n                \" AND s.sql_hash_value = sq.hash_value(+)\" +\n                \" AND s.sid = io.sid(+)\" +\n                \" AND s.inst_id = io.inst_id(+)\");\n                \r\n                \r\n                \r\n            if (atLeastV11) {\n                sql.append(\" AND s.sql_child_number = sq.child_number (+)\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_BACKGROUND)) {\n                sql.append(\" AND s.TYPE = 'USER'\");\n            }\n            if (!CommonUtils.getOption(options, OPTION_SHOW_INACTIVE)) {\n                sql.append(\" AND s.STATUS <> 'INACTIVE'\");\n            }\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(sql.toString())) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<OracleServerSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new OracleServerSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/session/OracleServerSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2021-05-08 23:01:57","commitOrder":13,"curCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(generateSessionReadQuery(options))) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","date":"2021-05-08 23:01:57","endLine":72,"groupId":"10819","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"getSessions","params":"(DBCSessionsession@Map<String@Object>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b8/2f249fe67ff437fb879b789586d73a33bff068.src","preCode":"    public Collection<PostgreSession> getSessions(DBCSession session, Map<String, Object> options) throws DBException\n    {\n        try {\n            try (JDBCPreparedStatement dbStat = ((JDBCSession) session).prepareStatement(\"SELECT sa.* FROM pg_catalog.pg_stat_activity sa\")) {\n                try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                    List<PostgreSession> sessions = new ArrayList<>();\n                    while (dbResult.next()) {\n                        sessions.add(new PostgreSession(dbResult));\n                    }\n                    return sessions;\n                }\n            }\n        } catch (SQLException e) {\n            throw new DBException(e, session.getDataSource());\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/session/PostgreSessionManager.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"2ea9007e44ecefc87573a789d3f6f10299837b50","commitMessage":"@@@dbeaver/dbeaver#11314 Session manager - show and run session read SQL query\n\n\nFormer-commit-id: fe19e9e2de1eecdee0dd43fc350aee5276c19f20","date":"2021-05-08 23:01:57","modifiedFileCount":"11","status":"M","submitter":"Serge Rider"}]
