[{"authorTime":"2019-08-07 17:18:28","codes":[{"authorDate":"2018-12-26 06:22:59","commitOrder":6,"curCode":"    private void createFunctionGroup(Composite parent) {\n        Group functionGroup = UIUtils.createControlGroup(parent, \"Function\", 2, GridData.VERTICAL_ALIGN_BEGINNING, SWT.DEFAULT);\n        UIUtils.createControlLabel(functionGroup, \"Function\");\n        functionCombo = new CSmartSelector<PostgreProcedure>(functionGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n            @Override\n            public Image getImage(Object element) {\n                return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n            }\n\n            @Override\n            public String getText(Object element) {\n                if (element == null) {\n                    return \"N/A\";\n                }\n                return ((PostgreProcedure)element).getFullQualifiedSignature();\n            }\n        }) {\n            @Override\n            protected void dropDown(boolean drop) {\n                if (drop) {\n                    DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel();\n                    DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(container.getDataSource());\n                    if (dsNode != null) {\n                        DBNNode curNode = selectedFunction == null ? null : navigatorModel.getNodeByObject(selectedFunction);\n                        DBNNode node = DBWorkbench.getPlatformUI().selectObject(\n                            parent.getShell(),\n                            \"Select function to debug\",\n                            dsNode,\n                            curNode,\n                            new Class[]{DBSInstance.class, DBSObjectContainer.class, PostgreProcedure.class},\n                            new Class[]{PostgreProcedure.class}, null);\n                        if (node instanceof DBNDatabaseNode && ((DBNDatabaseNode) node).getObject() instanceof PostgreProcedure) {\n                            functionCombo.removeAll();\n                            selectedFunction = (PostgreProcedure) ((DBNDatabaseNode) node).getObject();\n                            functionCombo.addItem(selectedFunction);\n                            functionCombo.select(selectedFunction);\n                            updateParametersTable();\n                            container.updateDialogState();\n                        }\n                        parametersTable.setEnabled(selectedFunction != null);\n                    }\n                }\n\n            }\n        };\n        functionCombo.addItem(null);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(functionCombo) * 40 + 10;\n        functionCombo.setLayoutData(gd);\n\n        processIdText = UIUtils.createLabelText(functionGroup, \"Process ID\", \"\", SWT.BORDER, new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(processIdText) * 10 + 10;\n        processIdText.setLayoutData(gd);\n    }\n","date":"2018-12-26 06:23:02","endLine":151,"groupId":"14056","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createFunctionGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bb/e053d44b395e7e6e437021fe5704d9a9d16936.src","preCode":"    private void createFunctionGroup(Composite parent) {\n        Group functionGroup = UIUtils.createControlGroup(parent, \"Function\", 2, GridData.VERTICAL_ALIGN_BEGINNING, SWT.DEFAULT);\n        UIUtils.createControlLabel(functionGroup, \"Function\");\n        functionCombo = new CSmartSelector<PostgreProcedure>(functionGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n            @Override\n            public Image getImage(Object element) {\n                return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n            }\n\n            @Override\n            public String getText(Object element) {\n                if (element == null) {\n                    return \"N/A\";\n                }\n                return ((PostgreProcedure)element).getFullQualifiedSignature();\n            }\n        }) {\n            @Override\n            protected void dropDown(boolean drop) {\n                if (drop) {\n                    DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel();\n                    DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(container.getDataSource());\n                    if (dsNode != null) {\n                        DBNNode curNode = selectedFunction == null ? null : navigatorModel.getNodeByObject(selectedFunction);\n                        DBNNode node = DBWorkbench.getPlatformUI().selectObject(\n                            parent.getShell(),\n                            \"Select function to debug\",\n                            dsNode,\n                            curNode,\n                            new Class[]{DBSInstance.class, DBSObjectContainer.class, PostgreProcedure.class},\n                            new Class[]{PostgreProcedure.class}, null);\n                        if (node instanceof DBNDatabaseNode && ((DBNDatabaseNode) node).getObject() instanceof PostgreProcedure) {\n                            functionCombo.removeAll();\n                            selectedFunction = (PostgreProcedure) ((DBNDatabaseNode) node).getObject();\n                            functionCombo.addItem(selectedFunction);\n                            functionCombo.select(selectedFunction);\n                            updateParametersTable();\n                            container.updateDialogState();\n                        }\n                        parametersTable.setEnabled(selectedFunction != null);\n                    }\n                }\n\n            }\n        };\n        functionCombo.addItem(null);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(functionCombo) * 40 + 10;\n        functionCombo.setLayoutData(gd);\n\n        processIdText = UIUtils.createLabelText(functionGroup, \"Process ID\", \"\", SWT.BORDER, new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(processIdText) * 10 + 10;\n        processIdText.setLayoutData(gd);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.debug.ui/src/org/jkiss/dbeaver/ext/postgresql/debug/ui/internal/PostgreDebugPanelFunction.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"NB"},{"authorDate":"2019-08-07 17:18:28","commitOrder":6,"curCode":"            public PostgreProcedureSelector(Composite pageContents, Composite parent) {\n                super(pageContents, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n                    @Override\n                    public Image getImage(Object element) {\n                        return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n                    }\n\n                    @Override\n                    public String getText(Object element) {\n                        if (element == null) {\n                            return \"N/A\";\n                        }\n                        return ((PostgreProcedure) element).getFullQualifiedSignature();\n                    }\n                });\n                this.parent = parent;\n            }\n","date":"2019-08-07 17:18:28","endLine":124,"groupId":"15994","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"PostgreProcedureSelector","params":"(CompositepageContents@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/91/5fc04c2858f9536a4f05e316b97da7617a1bf4.src","preCode":"            public PostgreProcedureSelector(Composite pageContents, Composite parent) {\n                super(pageContents, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n                    @Override\n                    public Image getImage(Object element) {\n                        return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n                    }\n\n                    @Override\n                    public String getText(Object element) {\n                        if (element == null) {\n                            return \"N/A\";\n                        }\n                        return ((PostgreProcedure) element).getFullQualifiedSignature();\n                    }\n                });\n                this.parent = parent;\n            }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/config/PostgreTriggerConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"68d6b326cc907ca51f2a082be4dfa0f795300c96","commitMessage":"@@@SQL Server & PG model refactoring (extract UI)\n\n\nFormer-commit-id: 10dde7954f22c87c4711bd41832e0f49198acef7","date":"2019-08-07 17:18:28","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2021-05-31 04:20:10","codes":[{"authorDate":"2018-12-26 06:22:59","commitOrder":7,"curCode":"    private void createFunctionGroup(Composite parent) {\n        Group functionGroup = UIUtils.createControlGroup(parent, \"Function\", 2, GridData.VERTICAL_ALIGN_BEGINNING, SWT.DEFAULT);\n        UIUtils.createControlLabel(functionGroup, \"Function\");\n        functionCombo = new CSmartSelector<PostgreProcedure>(functionGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n            @Override\n            public Image getImage(Object element) {\n                return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n            }\n\n            @Override\n            public String getText(Object element) {\n                if (element == null) {\n                    return \"N/A\";\n                }\n                return ((PostgreProcedure)element).getFullQualifiedSignature();\n            }\n        }) {\n            @Override\n            protected void dropDown(boolean drop) {\n                if (drop) {\n                    DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel();\n                    DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(container.getDataSource());\n                    if (dsNode != null) {\n                        DBNNode curNode = selectedFunction == null ? null : navigatorModel.getNodeByObject(selectedFunction);\n                        DBNNode node = DBWorkbench.getPlatformUI().selectObject(\n                            parent.getShell(),\n                            \"Select function to debug\",\n                            dsNode,\n                            curNode,\n                            new Class[]{DBSInstance.class, DBSObjectContainer.class, PostgreProcedure.class},\n                            new Class[]{PostgreProcedure.class}, null);\n                        if (node instanceof DBNDatabaseNode && ((DBNDatabaseNode) node).getObject() instanceof PostgreProcedure) {\n                            functionCombo.removeAll();\n                            selectedFunction = (PostgreProcedure) ((DBNDatabaseNode) node).getObject();\n                            functionCombo.addItem(selectedFunction);\n                            functionCombo.select(selectedFunction);\n                            updateParametersTable();\n                            container.updateDialogState();\n                        }\n                        parametersTable.setEnabled(selectedFunction != null);\n                    }\n                }\n\n            }\n        };\n        functionCombo.addItem(null);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(functionCombo) * 40 + 10;\n        functionCombo.setLayoutData(gd);\n\n        processIdText = UIUtils.createLabelText(functionGroup, \"Process ID\", \"\", SWT.BORDER, new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(processIdText) * 10 + 10;\n        processIdText.setLayoutData(gd);\n    }\n","date":"2018-12-26 06:23:02","endLine":151,"groupId":"101008","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createFunctionGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bb/e053d44b395e7e6e437021fe5704d9a9d16936.src","preCode":"    private void createFunctionGroup(Composite parent) {\n        Group functionGroup = UIUtils.createControlGroup(parent, \"Function\", 2, GridData.VERTICAL_ALIGN_BEGINNING, SWT.DEFAULT);\n        UIUtils.createControlLabel(functionGroup, \"Function\");\n        functionCombo = new CSmartSelector<PostgreProcedure>(functionGroup, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n            @Override\n            public Image getImage(Object element) {\n                return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n            }\n\n            @Override\n            public String getText(Object element) {\n                if (element == null) {\n                    return \"N/A\";\n                }\n                return ((PostgreProcedure)element).getFullQualifiedSignature();\n            }\n        }) {\n            @Override\n            protected void dropDown(boolean drop) {\n                if (drop) {\n                    DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel();\n                    DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(container.getDataSource());\n                    if (dsNode != null) {\n                        DBNNode curNode = selectedFunction == null ? null : navigatorModel.getNodeByObject(selectedFunction);\n                        DBNNode node = DBWorkbench.getPlatformUI().selectObject(\n                            parent.getShell(),\n                            \"Select function to debug\",\n                            dsNode,\n                            curNode,\n                            new Class[]{DBSInstance.class, DBSObjectContainer.class, PostgreProcedure.class},\n                            new Class[]{PostgreProcedure.class}, null);\n                        if (node instanceof DBNDatabaseNode && ((DBNDatabaseNode) node).getObject() instanceof PostgreProcedure) {\n                            functionCombo.removeAll();\n                            selectedFunction = (PostgreProcedure) ((DBNDatabaseNode) node).getObject();\n                            functionCombo.addItem(selectedFunction);\n                            functionCombo.select(selectedFunction);\n                            updateParametersTable();\n                            container.updateDialogState();\n                        }\n                        parametersTable.setEnabled(selectedFunction != null);\n                    }\n                }\n\n            }\n        };\n        functionCombo.addItem(null);\n        GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(functionCombo) * 40 + 10;\n        functionCombo.setLayoutData(gd);\n\n        processIdText = UIUtils.createLabelText(functionGroup, \"Process ID\", \"\", SWT.BORDER, new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));\n        gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n        gd.widthHint = UIUtils.getFontHeight(processIdText) * 10 + 10;\n        processIdText.setLayoutData(gd);\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.debug.ui/src/org/jkiss/dbeaver/ext/postgresql/debug/ui/internal/PostgreDebugPanelFunction.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2021-05-31 04:20:10","commitOrder":7,"curCode":"            PostgreProcedureSelector(Composite pageContents, Composite parent) {\n                super(pageContents, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n                    @Override\n                    public Image getImage(Object element) {\n                        return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n                    }\n\n                    @Override\n                    public String getText(Object element) {\n                        if (element == null) {\n                            return \"N/A\";\n                        }\n                        return ((PostgreProcedure) element).getFullQualifiedSignature();\n                    }\n                });\n                this.parent = parent;\n            }\n","date":"2021-05-31 04:20:10","endLine":114,"groupId":"101008","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"PostgreProcedureSelector","params":"(CompositepageContents@Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/fd/db5feb69455ac037ce5e6dd13196549884eef6.src","preCode":"            public PostgreProcedureSelector(Composite pageContents, Composite parent) {\n                super(pageContents, SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY, new LabelProvider() {\n                    @Override\n                    public Image getImage(Object element) {\n                        return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE);\n                    }\n\n                    @Override\n                    public String getText(Object element) {\n                        if (element == null) {\n                            return \"N/A\";\n                        }\n                        return ((PostgreProcedure) element).getFullQualifiedSignature();\n                    }\n                });\n                this.parent = parent;\n            }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/ui/config/PostgreTriggerConfigurator.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"61c7482b2866ad64b6c83cdae9037315e0e65c71","commitMessage":"@@@#12598 Navigator refresh fix\n","date":"2021-05-31 04:20:10","modifiedFileCount":"1","status":"M","submitter":"serge-rider"}]
