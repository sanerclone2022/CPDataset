[{"authorTime":"2020-06-12 00:23:06","codes":[{"authorDate":"2020-07-23 00:02:07","commitOrder":2,"curCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-07-23 00:02:07","endLine":667,"groupId":"11443","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@MySQLCatalogowner@MySQLTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/21/65545210718a50fed36c0399a2c7a1bc1770e9.src","preCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLCatalog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"B"},{"authorDate":"2020-06-12 00:23:06","commitOrder":2,"curCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView = \"ALL_TAB_COLS\";\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n                colsView = \"ALL_TAB_COLUMNS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.* \" +\n                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-06-12 00:23:06","endLine":561,"groupId":"455","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullOracleSchemaowner@@NullableOracleTableBaseforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ca/c93e5f9f8c4fd692ef01b4f1259684f4d9d839.src","preCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView = \"ALL_TAB_COLS\";\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n                colsView = \"ALL_TAB_COLUMNS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.* \" +\n                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":532,"status":"NB"}],"commitId":"5c760ef9082ecf5e928bd8c9edef13cb44cb07b1","commitMessage":"@@@Merge pull request #9339 from dbeaver/checkcnstrmysql#9155\n\n#9155 ?ombine ?onstraints and ?heck ?onstraints tabs\n\nFormer-commit-id: 8cf5f91120704629302efb4623afa3b5aeac48d3","date":"2020-07-23 00:02:07","modifiedFileCount":"7","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-08-09 04:51:34","codes":[{"authorDate":"2020-07-23 00:02:07","commitOrder":3,"curCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-07-23 00:02:07","endLine":667,"groupId":"11443","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@MySQLCatalogowner@MySQLTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/21/65545210718a50fed36c0399a2c7a1bc1770e9.src","preCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLCatalog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"N"},{"authorDate":"2020-08-09 04:51:34","commitOrder":3,"curCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView = \"ALL_TAB_COLS\";\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n                colsView = \"ALL_TAB_COLUMNS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.*,c.TABLE_NAME as OBJECT_NAME \" +\n                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-08-09 04:51:34","endLine":570,"groupId":"455","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullOracleSchemaowner@@NullableOracleTableBaseforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/33/27afbb2b3188ba1e3f5da79b2b78149fffd295.src","preCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView = \"ALL_TAB_COLS\";\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n                colsView = \"ALL_TAB_COLUMNS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.* \" +\n                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":541,"status":"M"}],"commitId":"8b88dcba7b17ea982dda6c7794b366bc46a9b5a2","commitMessage":"@@@Oracle table cache fix (columns query)\n\n\nFormer-commit-id: 6da3e9a842a0fbec32ee52dd60bc2b1cd6eb012e","date":"2020-08-09 04:51:34","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2020-08-28 12:34:35","codes":[{"authorDate":"2020-07-23 00:02:07","commitOrder":4,"curCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-07-23 00:02:07","endLine":667,"groupId":"12259","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareObjectsStatement","params":"(JDBCSessionsession@MySQLCatalogowner@MySQLTableforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/21/65545210718a50fed36c0399a2c7a1bc1770e9.src","preCode":"        protected JDBCStatement prepareObjectsStatement(JDBCSession session, MySQLCatalog owner, MySQLTable forTable)\n            throws SQLException\n        {\n            StringBuilder sql = new StringBuilder(500);\n            sql.append(\n                \"SELECT kc.CONSTRAINT_NAME,kc.TABLE_NAME,kc.COLUMN_NAME,kc.ORDINAL_POSITION\\n\" +\n                \"FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kc WHERE kc.TABLE_SCHEMA=? AND kc.REFERENCED_TABLE_NAME IS NULL\");\n            if (forTable != null) {\n                sql.append(\" AND kc.TABLE_NAME=?\");\n            }\n            sql.append(\"\\nORDER BY kc.CONSTRAINT_NAME,kc.ORDINAL_POSITION\");\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/MySQLCatalog.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"N"},{"authorDate":"2020-08-28 12:34:35","commitOrder":4,"curCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView;\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, \"ALL_TAB_COLS\")) {\n                colsView = \"TAB_COLUMNS\";\n            } else {\n                colsView = \"TAB_COLS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.*,c.TABLE_NAME as OBJECT_NAME \" +\n                    \"FROM \").append(OracleUtils.getAdminAllViewPrefix(session.getProgressMonitor(), getDataSource(), colsView)).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","date":"2020-08-28 12:34:35","endLine":566,"groupId":"12259","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareChildrenStatement","params":"(@NotNullJDBCSessionsession@@NotNullOracleSchemaowner@@NullableOracleTableBaseforTable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/8f/3ed332ee1a44eeaad27b382f1e24802051336d.src","preCode":"        protected JDBCStatement prepareChildrenStatement(@NotNull JDBCSession session, @NotNull OracleSchema owner, @Nullable OracleTableBase forTable)\n            throws SQLException\n        {\n            String colsView = \"ALL_TAB_COLS\";\n            if (!owner.getDataSource().isViewAvailable(session.getProgressMonitor(), OracleConstants.SCHEMA_SYS, colsView)) {\n                colsView = \"ALL_TAB_COLUMNS\";\n            }\n            StringBuilder sql = new StringBuilder(500);\n            sql\n                .append(\"SELECT \").append(OracleUtils.getSysCatalogHint(owner.getDataSource())).append(\"\\nc.*,c.TABLE_NAME as OBJECT_NAME \" +\n                    \"FROM \").append(OracleUtils.getSysSchemaPrefix(owner.getDataSource())).append(colsView).append(\" c\\n\" +\n\r\n                    \"WHERE c.OWNER=?\");\n            if (forTable != null) {\n                sql.append(\" AND c.TABLE_NAME=?\");\n            }\n\r\n\r\n\r\n\r\n\r\n\r\n\n            JDBCPreparedStatement dbStat = session.prepareStatement(sql.toString());\n            dbStat.setString(1, owner.getName());\n            if (forTable != null) {\n                dbStat.setString(2, forTable.getName());\n            }\n            return dbStat;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/OracleSchema.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":535,"status":"M"}],"commitId":"e05e8ce42b67882db6a1b5d32b00d854e8a9e469","commitMessage":"@@@#9649 ORacle: use DB_ view to read tables and columns (if enabled)\n\n\nFormer-commit-id: 5bfa0457a4a0049cb743ae78a289742200f76022","date":"2020-08-28 12:34:35","modifiedFileCount":"1","status":"M","submitter":"serge-rider"}]
