[{"authorTime":"2019-12-23 21:20:34","codes":[{"authorDate":"2019-12-23 21:20:34","commitOrder":4,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, \"Security\", 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(\"Override user credentials (\" + connectionInfo.getUserName() +\n                \") for objects '\" + wizard.getObjectsName() + \"'.\\nExternal tools like 'mysqldump' may require different set of permissions.\");\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(\"Authentication\");\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), \"Authentication\", false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(\"Reset to default\");\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        }\n    }\n","date":"2019-12-23 21:20:34","endLine":82,"groupId":"9105","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0d/aec1cfcaae25e20e9ec90369c25fa0a6685a39.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, \"Security\", 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(\"Override user credentials (\" + connectionInfo.getUserName() +\n                \") for objects '\" + wizard.getObjectsName() + \"'.\\nExternal tools like 'mysqldump' may require different set of permissions.\");\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(\"Authentication\");\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), \"Authentication\", false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(\"Reset to default\");\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/tools/MySQLWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"MB"},{"authorDate":"2019-12-23 21:20:34","commitOrder":4,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","date":"2019-12-23 21:20:34","endLine":108,"groupId":"4391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f3/6ef8572ce0845e7bf58f4df2b90b4d2b390708.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/tools/PostgreToolWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"fdb93e46504fa19878e2c657fe3e2228c21fc3dd","commitMessage":"@@@#7444 Regacy code remove.\n\n\nFormer-commit-id: 351808eca76b8afbdc72dea86788fd0804024ee0","date":"2019-12-23 21:20:34","modifiedFileCount":"29","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-23 21:20:34","codes":[{"authorDate":"2020-09-18 20:35:29","commitOrder":5,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(parent, MySQLUIMessages.tools_db_export_wizard_page_settings_security_group, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(MySQLUIMessages.tools_db_export_wizard_page_settings_security_label_info, connectionInfo.getUserName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_auth);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), MySQLUIMessages.tools_db_export_wizard_page_settings_auth_title, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_reset);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        }\n    }\n","date":"2020-09-18 20:35:29","endLine":82,"groupId":"5156","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/33/85bb07967c6ff536284f95c0603c57217f66ba.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, \"Security\", 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(\"Override user credentials (\" + connectionInfo.getUserName() +\n                \") for objects '\" + wizard.getObjectsName() + \"'.\\nExternal tools like 'mysqldump' may require different set of permissions.\");\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(\"Authentication\");\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), \"Authentication\", false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(\"Reset to default\");\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/tools/MySQLWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-12-23 21:20:34","commitOrder":5,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","date":"2019-12-23 21:20:34","endLine":108,"groupId":"4391","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f3/6ef8572ce0845e7bf58f4df2b90b4d2b390708.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/tools/PostgreToolWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"}],"commitId":"a022c98b27b39255d901f01b3017dd8a46876baf","commitMessage":"@@@Merge pull request #9814 from dbeaver/mysqldump-credentials#5350\n\n#5350 mysqldump credentials\n\nFormer-commit-id: 13616cfc5270525b691bca3400d76f641708e5dd","date":"2020-09-18 20:35:29","modifiedFileCount":"5","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-12-23 21:20:34","codes":[{"authorDate":"2020-10-22 19:25:31","commitOrder":6,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(parent, MySQLUIMessages.tools_db_export_wizard_page_settings_security_group, 3, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(MySQLUIMessages.tools_db_export_wizard_page_settings_security_label_info, connectionInfo.getUserName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_auth);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), MySQLUIMessages.tools_db_export_wizard_page_settings_auth_title, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_reset);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n\n            if (wizard.getSettings() instanceof MySQLNativeCredentialsSettings) {\n                MySQLNativeCredentialsSettings settings = (MySQLNativeCredentialsSettings) wizard.getSettings();\n\n                Button overrideCredentials = UIUtils.createCheckbox(securityGroup, MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials, settings.isOverrideCredentials());\n                overrideCredentials.setToolTipText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials_tip);\n                overrideCredentials.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        settings.setOverrideCredentials(overrideCredentials.getSelection());\n                    }\n                });\n            }\n        }\n    }\n","date":"2020-10-22 19:25:31","endLine":96,"groupId":"5156","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/60/3735614181baa770b9f726b3bd8a0091cede9e.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(parent, MySQLUIMessages.tools_db_export_wizard_page_settings_security_group, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(MySQLUIMessages.tools_db_export_wizard_page_settings_security_label_info, connectionInfo.getUserName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_auth);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), MySQLUIMessages.tools_db_export_wizard_page_settings_auth_title, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_reset);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/tools/MySQLWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-12-23 21:20:34","commitOrder":6,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","date":"2019-12-23 21:20:34","endLine":108,"groupId":"4391","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f3/6ef8572ce0845e7bf58f4df2b90b4d2b390708.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/tools/PostgreToolWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"}],"commitId":"b31bdc70aaf45a9204c8eb640c774c17d914646e","commitMessage":"@@@Merge pull request #10124 from dbeaver/mysql-credentials#9983\n\n#9983 Checkbox to override credentials stored in system\n\nFormer-commit-id: 5d20717e94fe1e5d127cb7c2bb39d024270a2568","date":"2020-10-22 19:25:31","modifiedFileCount":"8","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-27 21:24:50","codes":[{"authorDate":"2020-10-27 21:24:50","commitOrder":7,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(parent, MySQLUIMessages.tools_db_export_wizard_page_settings_security_group, 3, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(MySQLUIMessages.tools_db_export_wizard_page_settings_security_label_info, connectionInfo.getUserName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_auth);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), MySQLUIMessages.tools_db_export_wizard_page_settings_auth_title, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    authDialog.setSavePasswordText(MySQLUIMessages.tools_db_export_wizard_page_settings_auth_save_password_checkbox);\n                    authDialog.setSavePasswordToolTipText(MySQLUIMessages.tools_db_export_wizard_page_settings_auth_save_password_checkbox_tip);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_reset);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n\n            if (wizard.getSettings() instanceof MySQLNativeCredentialsSettings) {\n                MySQLNativeCredentialsSettings settings = (MySQLNativeCredentialsSettings) wizard.getSettings();\n\n                Button overrideCredentials = UIUtils.createCheckbox(securityGroup, MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials, settings.isOverrideCredentials());\n                overrideCredentials.setToolTipText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials_tip);\n                overrideCredentials.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        settings.setOverrideCredentials(overrideCredentials.getSelection());\n                    }\n                });\n            }\n        }\n    }\n","date":"2020-10-27 21:24:50","endLine":98,"groupId":"10308","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b1/6e85f0a440109038d36c6e94028197e8834117.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n        if (connectionInfo != null) {\n            Group securityGroup = UIUtils.createControlGroup(parent, MySQLUIMessages.tools_db_export_wizard_page_settings_security_group, 3, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(MySQLUIMessages.tools_db_export_wizard_page_settings_security_label_info, connectionInfo.getUserName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 3;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_auth);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), MySQLUIMessages.tools_db_export_wizard_page_settings_auth_title, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(true);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_button_reset);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e) {\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n\n            if (wizard.getSettings() instanceof MySQLNativeCredentialsSettings) {\n                MySQLNativeCredentialsSettings settings = (MySQLNativeCredentialsSettings) wizard.getSettings();\n\n                Button overrideCredentials = UIUtils.createCheckbox(securityGroup, MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials, settings.isOverrideCredentials());\n                overrideCredentials.setToolTipText(MySQLUIMessages.tools_db_export_wizard_page_settings_security_checkbox_override_host_credentials_tip);\n                overrideCredentials.addSelectionListener(new SelectionAdapter() {\n                    @Override\n                    public void widgetSelected(SelectionEvent e) {\n                        settings.setOverrideCredentials(overrideCredentials.getSelection());\n                    }\n                });\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.mysql.ui/src/org/jkiss/dbeaver/ext/mysql/tools/MySQLWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2020-10-27 21:24:50","commitOrder":7,"curCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    authDialog.setSavePasswordText(PostgreMessages.wizard_backup_page_setting_authentication_save_password);\n                    authDialog.setSavePasswordToolTipText(PostgreMessages.wizard_backup_page_setting_authentication_save_password_tip);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","date":"2020-10-27 21:24:50","endLine":110,"groupId":"10308","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createSecurityGroup","params":"(Compositeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/40/ee7a2c8cb838d40a5d28ce2fc71db1d3ece39d.src","preCode":"    public void createSecurityGroup(Composite parent)\n    {\n        try {\n            final SecuredPasswordEncrypter encrypter = new SecuredPasswordEncrypter();\n            final DBPConnectionConfiguration connectionInfo = wizard.getSettings().getDataSourceContainer().getActualConnectionConfiguration();\n            final String authProperty = DBConstants.INTERNAL_PROP_PREFIX + \"-auth-\" + wizard.getObjectsName() + \"@\";\n            String authUser = null;\n            String authPassword = null;\n            {\n                String authValue = connectionInfo.getProviderProperty(authProperty);\n                if (authValue != null) {\n                    String authCredentials = encrypter.decrypt(authValue);\n                    int divPos = authCredentials.indexOf(':');\n                    if (divPos != -1) {\n                        authUser = authCredentials.substring(0, divPos);\n                        authPassword = authCredentials.substring(divPos + 1);\n                    }\n                }\n            }\n\n            final boolean savePassword = authUser != null;\n            Group securityGroup = UIUtils.createControlGroup(\n                parent, PostgreMessages.wizard_backup_page_setting_group_security, 2, GridData.HORIZONTAL_ALIGN_BEGINNING, 0);\n            Label infoLabel = new Label(securityGroup, SWT.NONE);\n            infoLabel.setText(NLS.bind(PostgreMessages.wizard_backup_page_setting_group_security_label_info, connectionInfo.getUserName(),\n           \t\t wizard.getObjectsName()));\n            GridData gd = new GridData(GridData.FILL_HORIZONTAL);\n            gd.horizontalSpan = 2;\n            infoLabel.setLayoutData(gd);\n            Button authButton = new Button(securityGroup, SWT.PUSH);\n            authButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication);\n            authButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    BaseAuthDialog authDialog = new BaseAuthDialog(getShell(), PostgreMessages.wizard_backup_page_setting_group_security_btn_authentication, false, true);\n                    authDialog.setUserName(wizard.getSettings().getToolUserName());\n                    authDialog.setUserPassword(wizard.getSettings().getToolUserPassword());\n                    authDialog.setSavePassword(savePassword);\n                    if (authDialog.open() == IDialogConstants.OK_ID) {\n                        wizard.getSettings().setToolUserName(authDialog.getUserName());\n                        wizard.getSettings().setToolUserPassword(authDialog.getUserPassword());\n                    }\n                }\n            });\n\n            Button resetButton = new Button(securityGroup, SWT.PUSH);\n            resetButton.setText(PostgreMessages.wizard_backup_page_setting_group_security_btn_reset_default);\n            resetButton.addSelectionListener(new SelectionAdapter() {\n                @Override\n                public void widgetSelected(SelectionEvent e)\n                {\n                    connectionInfo.getProviderProperties().remove(authProperty);\n                    wizard.getSettings().setToolUserName(null);\n                    wizard.getSettings().setToolUserPassword(null);\n                }\n            });\n        } catch (EncryptionException e) {\n            \r\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.postgresql.ui/src/org/jkiss/dbeaver/ext/postgresql/tools/PostgreToolWizardPageSettings.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"1061e8f70549e9d9cb85e1d30409a2387d0fb4f7","commitMessage":"@@@Merge pull request #10173 from dbeaver/datatransfer-task-credentials#9922\n\n#9922 Don't save last used task credentials\n\nFormer-commit-id: fe2f87b5666c67aec863436b94ab4665b1eae60b","date":"2020-10-27 21:24:50","modifiedFileCount":"6","status":"M","submitter":"Serge Rider"}]
