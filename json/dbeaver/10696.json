[{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2020-06-16 04:30:46","commitOrder":10,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.resultTabs.addListener(SWT.Resize, event -> {\n            if (!resultsSash.isDisposed()) {\n                int[] weights = resultsSash.getWeights();\n                IPreferenceStore prefs = getPreferenceStore();\n                if (prefs != null && weights.length == 2) {\n                    prefs.setValue(SQLPreferenceConstants.RESULTS_PANEL_RATIO, weights[0] + \"-\" + weights[1]);\n                }\n            }\n        });\n        String resultsPanelRatio = getPreferenceStore().getString(SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        if (!CommonUtils.isEmpty(resultsPanelRatio)) {\n            String[] weights = resultsPanelRatio.split(\"-\");\n            if (weights.length > 1) {\n                resultsSash.setWeights(new int[] {\n                    Integer.parseInt(weights[0]),\n                    Integer.parseInt(weights[1]),\n                });\n            }\n        }\n\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(resultTabs, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), resultTabs, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n                if (resultTabs.getItemCount() > 1) {\n                    manager.add(new Action(\"Close multiple results\") {\n                        @Override\n                        public void run()\n                        {\n                            closeExtraResultTabs(null, false);\n                        }\n                    });\n                    int pinnedTabsCount = 0;\n                    for (CTabItem item : resultTabs.getItems()) {\n                        if (item.getData() instanceof QueryResultsContainer) {\n                            if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                pinnedTabsCount++;\n                            }\n                        }\n                    }\n                    if (pinnedTabsCount > 1) {\n                        manager.add(new Action(\"Unpin all tabs\") {\n                            @Override\n                            public void run()\n                            {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            manager.add(new Separator());\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? \"Unpin tab\" : \"Pin tab\") {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(\"Set tab title\") {\n                        @Override\n                        public void run()\n                        {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), \"Tab title\", activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (activeTab != null && activeTab.getShowClose()) {\n                    manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                }\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2020-06-16 04:30:46","endLine":1088,"groupId":"2325","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/03/072898357b8daad9fa54b81ad37ed2a4bc0043.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.resultTabs.addListener(SWT.Resize, event -> {\n            if (!resultsSash.isDisposed()) {\n                int[] weights = resultsSash.getWeights();\n                IPreferenceStore prefs = getPreferenceStore();\n                if (prefs != null && weights.length == 2) {\n                    prefs.setValue(SQLPreferenceConstants.RESULTS_PANEL_RATIO, weights[0] + \"-\" + weights[1]);\n                }\n            }\n        });\n        String resultsPanelRatio = getPreferenceStore().getString(SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        if (!CommonUtils.isEmpty(resultsPanelRatio)) {\n            String[] weights = resultsPanelRatio.split(\"-\");\n            if (weights.length > 1) {\n                resultsSash.setWeights(new int[] {\n                    Integer.parseInt(weights[0]),\n                    Integer.parseInt(weights[1]),\n                });\n            }\n        }\n\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(resultTabs, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), resultTabs, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n                if (resultTabs.getItemCount() > 1) {\n                    manager.add(new Action(\"Close multiple results\") {\n                        @Override\n                        public void run()\n                        {\n                            closeExtraResultTabs(null, false);\n                        }\n                    });\n                    int pinnedTabsCount = 0;\n                    for (CTabItem item : resultTabs.getItems()) {\n                        if (item.getData() instanceof QueryResultsContainer) {\n                            if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                pinnedTabsCount++;\n                            }\n                        }\n                    }\n                    if (pinnedTabsCount > 1) {\n                        manager.add(new Action(\"Unpin all tabs\") {\n                            @Override\n                            public void run()\n                            {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            manager.add(new Separator());\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? \"Unpin tab\" : \"Pin tab\") {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(\"Set tab title\") {\n                        @Override\n                        public void run()\n                        {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), \"Tab title\", activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (activeTab != null && activeTab.getShowClose()) {\n                    manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                }\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":920,"status":"NB"},{"authorDate":"2020-10-01 01:16:32","commitOrder":10,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"B"}],"commitId":"b14723044f302ccdb9f6feeda4756def5bcddabf","commitMessage":"@@@#9927 SQL results tabs indexes and naming fixes\n\n\nFormer-commit-id: 404dd2213e2c7c1e576863d1a14583567554e903","date":"2020-10-01 01:16:32","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2020-12-03 17:30:35","commitOrder":11,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.resultTabs.addListener(SWT.Resize, event -> {\n            if (!resultsSash.isDisposed()) {\n                int[] weights = resultsSash.getWeights();\n                IPreferenceStore prefs = getPreferenceStore();\n                if (prefs != null && weights.length == 2) {\n                    prefs.setValue(SQLPreferenceConstants.RESULTS_PANEL_RATIO, weights[0] + \"-\" + weights[1]);\n                }\n            }\n        });\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        String resultsPanelRatio = getPreferenceStore().getString(SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        if (!CommonUtils.isEmpty(resultsPanelRatio)) {\n            String[] weights = resultsPanelRatio.split(\"-\");\n            if (weights.length > 1) {\n                resultsSash.setWeights(new int[] {\n                    Integer.parseInt(weights[0]),\n                    Integer.parseInt(weights[1]),\n                });\n            }\n        }\n\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(resultTabs, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), resultTabs, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2020-12-03 17:30:35","endLine":1206,"groupId":"15775","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/bc/ac256a09936003a6a273e26284755cb34f21ae.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.resultTabs.addListener(SWT.Resize, event -> {\n            if (!resultsSash.isDisposed()) {\n                int[] weights = resultsSash.getWeights();\n                IPreferenceStore prefs = getPreferenceStore();\n                if (prefs != null && weights.length == 2) {\n                    prefs.setValue(SQLPreferenceConstants.RESULTS_PANEL_RATIO, weights[0] + \"-\" + weights[1]);\n                }\n            }\n        });\n        String resultsPanelRatio = getPreferenceStore().getString(SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        if (!CommonUtils.isEmpty(resultsPanelRatio)) {\n            String[] weights = resultsPanelRatio.split(\"-\");\n            if (weights.length > 1) {\n                resultsSash.setWeights(new int[] {\n                    Integer.parseInt(weights[0]),\n                    Integer.parseInt(weights[1]),\n                });\n            }\n        }\n\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(resultTabs, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), resultTabs, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n                if (resultTabs.getItemCount() > 1) {\n                    manager.add(new Action(\"Close multiple results\") {\n                        @Override\n                        public void run()\n                        {\n                            closeExtraResultTabs(null, false);\n                        }\n                    });\n                    int pinnedTabsCount = 0;\n                    for (CTabItem item : resultTabs.getItems()) {\n                        if (item.getData() instanceof QueryResultsContainer) {\n                            if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                pinnedTabsCount++;\n                            }\n                        }\n                    }\n                    if (pinnedTabsCount > 1) {\n                        manager.add(new Action(\"Unpin all tabs\") {\n                            @Override\n                            public void run()\n                            {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            manager.add(new Separator());\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? \"Unpin tab\" : \"Pin tab\") {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(\"Set tab title\") {\n                        @Override\n                        public void run()\n                        {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), \"Tab title\", activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (activeTab != null && activeTab.getShowClose()) {\n                    manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                }\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":974,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":11,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"3553ffaaaabf29867a9961afe4b61009046700d7","commitMessage":"@@@Merge pull request #10534 from dbeaver/resultset-tabs#10280\n\n#10280 Refactor result set tabs\n\nFormer-commit-id: b4a85b4e19e72ad19377596a5e89faef0c65f54e","date":"2020-12-03 17:30:35","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-01-12 23:14:12","commitOrder":12,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-01-12 23:14:12","endLine":1216,"groupId":"4696","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/59/c27d7f68d8de59d0c87dc4577f91810be97ae4.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.resultTabs.addListener(SWT.Resize, event -> {\n            if (!resultsSash.isDisposed()) {\n                int[] weights = resultsSash.getWeights();\n                IPreferenceStore prefs = getPreferenceStore();\n                if (prefs != null && weights.length == 2) {\n                    prefs.setValue(SQLPreferenceConstants.RESULTS_PANEL_RATIO, weights[0] + \"-\" + weights[1]);\n                }\n            }\n        });\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        String resultsPanelRatio = getPreferenceStore().getString(SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        if (!CommonUtils.isEmpty(resultsPanelRatio)) {\n            String[] weights = resultsPanelRatio.split(\"-\");\n            if (weights.length > 1) {\n                resultsSash.setWeights(new int[] {\n                    Integer.parseInt(weights[0]),\n                    Integer.parseInt(weights[1]),\n                });\n            }\n        }\n\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(resultTabs, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), resultTabs, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1002,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":12,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"949ce3bc6e2e7b1475a88fff401c3dbdeff6d6d8","commitMessage":"@@@#10683 Output/log tabs moved to the special folder\n\n\nFormer-commit-id: 1220ab56a8ccaa535020a997141a23afecc228fd","date":"2021-01-12 23:14:12","modifiedFileCount":"2","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-02-03 19:58:01","commitOrder":13,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        if (false) {\n            \r\n            createQueryProcessor(true, true);\n        } else {\n            resultsSash.setMaximizedControl(sqlEditorPanel);\n        }\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-02-03 19:58:01","endLine":1220,"groupId":"10554","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/7c/1244208420948303c2b83187230585fe471732.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1002,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":13,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"618453ee877fa863d765d4a0048c495c492ca60f","commitMessage":"@@@#11206 Do nto open results tab on editor initialization\n\n\nFormer-commit-id: aaa897defa7ab75d85f2d95a13656cca01a961c5","date":"2021-02-03 19:58:01","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-02-13 22:39:41","commitOrder":14,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-02-13 22:39:41","endLine":1217,"groupId":"8386","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/ab/1bbd3c67fc5804197fd1db8c6151e16174a8ff.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        if (false) {\n            \r\n            createQueryProcessor(true, true);\n        } else {\n            resultsSash.setMaximizedControl(sqlEditorPanel);\n        }\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1002,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":14,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"306b79f44fbe6c8ddced5c5415d43f59f554fcc9","commitMessage":"@@@#11206 Initial tab hide: just hide it (we must have RSV on start to enable actions)\n\n\nFormer-commit-id: e0a591218a37fedcca180f47c97d97d7e89b8b28","date":"2021-02-13 22:39:41","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-05-03 22:08:47","commitOrder":15,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-05-03 22:08:47","endLine":1221,"groupId":"8386","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/b9/e9099781dfa315ad09c6acae90972d524c0104.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1006,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":15,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"2df628d8e12ddccaad8e0dacce93ecf25293d07c","commitMessage":"@@@#12333 Extra views toolbar.  Auto-show log toggle action.\n\n\nFormer-commit-id: 4f782e28fef4ed9a6b3525cf5e329fa945f39182","date":"2021-05-03 22:08:47","modifiedFileCount":"1","status":"M","submitter":"serge-rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-07-05 20:31:28","commitOrder":16,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-07-05 20:31:28","endLine":1231,"groupId":"17397","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/88/fb8d606f780ec99fa388e9ff2fc618dc2df00c.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        \r\n        logViewer = new SQLLogPanel(sqlExtraPanelFolder, this);\n        outputViewer = new SQLEditorOutputConsoleViewer(getSite(), sqlExtraPanelFolder, SWT.NONE);\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1018,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":16,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"97682a5a7f0f24a634a3b70831c052a70bc12da5","commitMessage":"@@@Merge pull request #13100 from dbeaver/11533_query_variables\n\n11533 query variables","date":"2021-07-05 20:31:28","modifiedFileCount":"15","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-07-06 16:20:26","commitOrder":17,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            manager.add(new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText(),\n                                true,\n                                false));\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-07-06 16:20:26","endLine":1242,"groupId":"17397","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/49/5f0def4db37eb0a6688a18846363dafbaadd3c.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1019,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":17,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"a95e774461b46b3e8f2f619984059575ae6d3866","commitMessage":"@@@#11533 Variable add/remove + assign action\n","date":"2021-07-06 16:20:26","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-07-09 17:38:37","commitOrder":18,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            AssignVariableAction action = new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText());\n                            action.setEditable(false);\n                            manager.add(action);\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-07-09 17:38:37","endLine":1242,"groupId":"12574","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/66/0455707a7e24d99be526ed4ae312602f6c8481.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            manager.add(new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText(),\n                                true,\n                                false));\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1019,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":18,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"f33207decc29ad4d0578dd9b348abe80410b9bea","commitMessage":"@@@#11533 Variable add fix\n","date":"2021-07-09 17:38:37","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-08-09 22:47:16","commitOrder":19,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_TAB_NEXT && e.stateMask == SWT.MOD1) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        \r\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            AssignVariableAction action = new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText());\n                            action.setEditable(false);\n                            manager.add(action);\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-08-09 22:47:16","endLine":1241,"groupId":"16661","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/13/a505110964cf788cfb0e4645733b3e6bc3da24.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_PAGE_NEXT) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.doit = false;\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            AssignVariableAction action = new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText());\n                            action.setEditable(false);\n                            manager.add(action);\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1019,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":19,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"9700","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"94a7c773cf3e125637e01a425563d4834184c7a0","commitMessage":"@@@Merge pull request #13442 from dbeaver/sql-editor-tabs-navigate#12532\n\n#12532 Use Ctrl+Tab to traverse to active result set viewer","date":"2021-08-09 22:47:16","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"},{"authorTime":"2020-10-01 01:16:32","codes":[{"authorDate":"2021-08-24 21:50:45","commitOrder":20,"curCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_TAB_NEXT && e.stateMask == SWT.MOD1) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        createQueryProcessor(true, true);\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            AssignVariableAction action = new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText());\n                            action.setEditable(false);\n                            manager.add(action);\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","date":"2021-08-24 21:50:45","endLine":1241,"groupId":"10696","id":21,"instanceNumber":1,"isCurCommit":1,"methodName":"createResultTabs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/0d/0d45d1740c166f57e6a7166740cb085539c724.src","preCode":"    private void createResultTabs()\n    {\n        resultTabs = new CTabFolder(resultsSash, SWT.TOP | SWT.FLAT);\n        CSSUtils.setCSSClass(resultTabs, DBStyles.COLORED_BY_CONNECTION_TYPE);\n        resultTabsReorder = new TabFolderReorder(resultTabs);\n        resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));\n        resultTabs.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                if (extraPresentationCurrentPanel != null) {\n                    extraPresentationCurrentPanel.deactivatePanel();\n                }\n                extraPresentationCurrentPanel = null;\n                Object data = e.item.getData();\n                if (data instanceof QueryResultsContainer) {\n                    setActiveResultsContainer((QueryResultsContainer) data);\n                } else if (data instanceof SQLEditorPresentationPanel) {\n                    extraPresentationCurrentPanel = ((SQLEditorPresentationPanel) data);\n                    extraPresentationCurrentPanel.activatePanel();\n                } else if (data instanceof ExplainPlanViewer) {\n                    SQLQuery planQuery = ((ExplainPlanViewer) data).getQuery();\n                    if (planQuery != null) {\n                        getSelectionProvider().setSelection(new TextSelection(planQuery.getOffset(), 0));\n                    }\n                }\n            }\n        });\n        this.addSashRatioSaveListener(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n        this.resultTabs.addListener(TabFolderReorder.ITEM_MOVE_EVENT, event -> {\n            CTabItem item = (CTabItem) event.item;\n            if (item.getData() instanceof QueryResultsContainer) {\n                ((QueryResultsContainer) item.getData()).resultsTab = item;\n            }\n        });\n        restoreSashRatio(resultsSash, SQLPreferenceConstants.RESULTS_PANEL_RATIO);\n\n        getTextViewer().getTextWidget().addTraverseListener(e -> {\n            if (e.detail == SWT.TRAVERSE_TAB_NEXT && e.stateMask == SWT.MOD1) {\n                ResultSetViewer viewer = getActiveResultSetViewer();\n                if (viewer != null && viewer.getActivePresentation().getControl().isVisible()) {\n                    viewer.getActivePresentation().getControl().setFocus();\n                    e.detail = SWT.TRAVERSE_NONE;\n                }\n            }\n        });\n        resultTabs.setSimple(true);\n\n        resultTabs.addMouseListener(new MouseAdapter() {\n            @Override\n            public void mouseUp(MouseEvent e) {\n                if (e.button == 2) {\n                    CTabItem item = resultTabs.getItem(new Point(e.x, e.y));\n                    if (item != null && item.getShowClose()) {\n                        item.dispose();\n                    }\n                }\n            }\n        });\n        resultTabs.addListener(SWT.MouseDoubleClick, event -> {\n            if (event.button != 1) {\n                return;\n            }\n            CTabItem selectedItem = resultTabs.getItem(new Point(event.getBounds().x, event.getBounds().y));\n            if (selectedItem != null && selectedItem  == resultTabs.getSelection()) {\n                toggleEditorMaximize();\n            }\n        });\n\n        \r\n        createExtraViewControls();\n\n        \r\n        \r\n        resultsSash.setMaximizedControl(sqlEditorPanel);\n\n        {\n            resultTabs.addMouseListener(new MouseAdapter() {\n                @Override\n                public void mouseDown(MouseEvent e) {\n                    activeResultsTab = resultTabs.getItem(new Point(e.x, e.y));\n                }\n            });\n            MenuManager menuMgr = new MenuManager();\n            Menu menu = menuMgr.createContextMenu(resultTabs);\n            menuMgr.addMenuListener(manager -> {\n                int pinnedTabsCount = 0;\n                int resultTabsCount = 0;\n                for (CTabItem item : resultTabs.getItems()) {\n                    if (item.getData() instanceof QueryResultsContainer) {\n                        resultTabsCount++;\n                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                            pinnedTabsCount++;\n                        }\n                    }\n                }\n                final CTabItem activeTab = getActiveResultsTab();\n                if (activeTab != null && activeTab.getData() instanceof QueryResultsContainer) {\n                    {\n                        final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                        if (resultsContainer.getResultSetController().hasData()) {\n                            final boolean isPinned = resultsContainer.isPinned();\n                            manager.add(new Action(isPinned ? SQLEditorMessages.action_result_tabs_unpin_tab : SQLEditorMessages.action_result_tabs_pin_tab) {\n                                @Override\n                                public void run() {\n                                    resultsContainer.setPinned(!isPinned);\n\n                                    CTabItem currTabItem = activeTab;\n                                    CTabItem nextTabItem;\n\n                                    if (isPinned) {\n                                        for (int i = resultTabs.indexOf(activeTab) + 1; i < resultTabs.getItemCount(); i++) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    } else {\n                                        for (int i = resultTabs.indexOf(activeTab) - 1; i >= 0; i--) {\n                                            nextTabItem = resultTabs.getItem(i);\n                                            if (!nextTabItem.getShowClose()) {\n                                                break;\n                                            }\n                                            resultTabsReorder.swapTabs(currTabItem, nextTabItem);\n                                            currTabItem = nextTabItem;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    manager.add(new Action(SQLEditorMessages.action_result_tabs_set_name) {\n                        @Override\n                        public void run() {\n                            EnterNameDialog dialog = new EnterNameDialog(resultTabs.getShell(), SQLEditorMessages.action_result_tabs_set_name_title, activeTab.getText());\n                            if (dialog.open() == IDialogConstants.OK_ID) {\n                                if (activeTab.getData() instanceof QueryResultsContainer) {\n                                    final QueryResultsContainer resultsContainer = (QueryResultsContainer) activeTab.getData();\n                                    resultsContainer.setTabName(dialog.getResult());\n                                }\n                            }\n                        }\n                    });\n                    if (activeTab.getData() instanceof QueryResultsContainer) {\n                        QueryResultsContainer rc = ((QueryResultsContainer) activeTab.getData());\n                        if (rc.hasData()) {\n                            AssignVariableAction action = new AssignVariableAction(\n                                SQLEditor.this,\n                                rc.getQuery().getText());\n                            action.setEditable(false);\n                            manager.add(action);\n                        }\n                    }\n                }\n                if (pinnedTabsCount > 1 || resultTabsCount > 1 || (activeTab != null && activeTab.getShowClose())) {\n                    manager.add(new Separator());\n                    if (pinnedTabsCount > 1 && activeTab != null && !activeTab.getShowClose()) {\n                        manager.add(new Separator());\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_unpin_all_tabs) {\n                            @Override\n                            public void run() {\n                                for (CTabItem item : resultTabs.getItems()) {\n                                    if (item.getData() instanceof QueryResultsContainer) {\n                                        if (((QueryResultsContainer) item.getData()).isPinned()) {\n                                            ((QueryResultsContainer) item.getData()).setPinned(false);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    if (resultTabsCount - pinnedTabsCount > 1 && activeTab != null && activeTab.getShowClose() && activeTab.getData() instanceof QueryResultsContainer) {\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_all_tabs) {\n                            @Override\n                            public void run() {\n                                closeExtraResultTabs(null, false, false);\n                            }\n                        });\n\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_query_tabs) {\n                            @Override\n                            public void run() {\n                                QueryProcessor processor = ((QueryResultsContainer) activeTab.getData()).queryProcessor;\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (QueryResultsContainer container : processor.getResultContainers()) {\n                                    CTabItem tab = container.getTabItem();\n                                    if (tab.getShowClose() && container.queryProcessor == processor) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                            }\n                        });\n                        manager.add(new Action(SQLEditorMessages.action_result_tabs_close_other_tabs) {\n                            @Override\n                            public void run() {\n                                List<CTabItem> tabsToRemove = new ArrayList<>();\n                                for (CTabItem tab : resultTabs.getItems()) {\n                                    if (tab.getShowClose() && tab != activeTab) {\n                                        tabsToRemove.add(tab);\n                                    }\n                                }\n                                for (CTabItem tab : tabsToRemove) {\n                                    tab.dispose();\n                                }\n                                setActiveResultsContainer((QueryResultsContainer) activeTab.getData());\n                            }\n                        });\n                    }\n                    if (activeTab != null && activeTab.getShowClose()) {\n                        manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_CLOSE_TAB));\n                    }\n                }\n                manager.add(new Separator());\n                manager.add(ActionUtils.makeCommandContribution(getSite(), SQLEditorCommands.CMD_SQL_EDITOR_MAXIMIZE_PANEL));\n            });\n            menuMgr.setRemoveAllWhenShown(true);\n            resultTabs.setMenu(menu);\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":1019,"status":"M"},{"authorDate":"2020-10-01 01:16:32","commitOrder":20,"curCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","date":"2020-10-01 01:16:32","endLine":3286,"groupId":"10696","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxResultsTabIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/56/8be864ab5f5115de01bcdd6f78874d3b1d953b.src","preCode":"    private int getMaxResultsTabIndex() {\n        int maxIndex = 0;\n        for (CTabItem tab : resultTabs.getItems()) {\n            if (tab.getData() instanceof QueryResultsContainer) {\n                maxIndex = Math.max(maxIndex, ((QueryResultsContainer) tab.getData()).getResultSetIndex());\n            }\n        }\n        return maxIndex;\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/SQLEditor.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":3278,"status":"N"}],"commitId":"c024179d7857bd472ecdd62421c6b9f78d8a65ae","commitMessage":"@@@#13636 Pre-open results panel\n","date":"2021-08-24 21:50:45","modifiedFileCount":"1","status":"M","submitter":"Serge Rider"}]
