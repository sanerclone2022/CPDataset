[{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2019-09-22 14:58:33","commitOrder":3,"curCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","date":"2019-09-22 14:58:33","endLine":163,"groupId":"1526","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findViewsByMask","params":"(JDBCSessionsession@GenericSchemaparentSchema@StringobjectNameMask@booleancaseSensitive@intmaxResults@List<DBSObjectReference>result)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/a3/249069e0404ef7bb11e0891871c5d74c349764.src","preCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"},{"authorDate":"2019-07-02 19:55:19","commitOrder":3,"curCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","date":"2019-07-02 19:55:19","endLine":207,"groupId":"13131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveObject","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/78/c579396d94fa8771ff4f543e08c0e6b858d701.src","preCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"NB"}],"commitId":"051002627b20fa9c370fe62d00e3aaf3d4376a6e","commitMessage":"@@@Merge pull request #6780 from kai-morich/hana01\n\nadded HANA plugin features:\n\nFormer-commit-id: 74726f27ff1aff071718176b51d45c992dfad465","date":"2019-09-22 14:58:33","modifiedFileCount":"4","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2019-09-29 19:07:00","commitOrder":4,"curCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n                    if (schema == null)\n                        continue; \r\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","date":"2019-09-29 19:07:00","endLine":167,"groupId":"322","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findViewsByMask","params":"(JDBCSessionsession@GenericSchemaparentSchema@StringobjectNameMask@booleancaseSensitive@intmaxResults@List<DBSObjectReference>result)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/f8/a75bf00f91b7cb81214b149b58eace727a2272.src","preCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2019-07-02 19:55:19","commitOrder":4,"curCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","date":"2019-07-02 19:55:19","endLine":207,"groupId":"13131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveObject","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/78/c579396d94fa8771ff4f543e08c0e6b858d701.src","preCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"dad422c3ebfbb616f40e7cb24673e1705eee2d76","commitMessage":"@@@Merge pull request #6857 from kai-morich/hana02\n\nHana02\n\nFormer-commit-id: 6785cd952a0e61e1cf44edb7671795a6a7d97ce6","date":"2019-09-29 19:07:00","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2020-04-15 03:04:43","commitOrder":5,"curCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY SCHEMA_NAME, VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n                    if (schema == null)\n                        continue; \r\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","date":"2020-04-15 03:04:43","endLine":163,"groupId":"322","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"findViewsByMask","params":"(JDBCSessionsession@GenericSchemaparentSchema@StringobjectNameMask@booleancaseSensitive@intmaxResults@List<DBSObjectReference>result)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/29/e7103f81710625804deb712fc8448281d2daf1.src","preCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n                    if (schema == null)\n                        continue; \r\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2019-07-02 19:55:19","commitOrder":5,"curCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","date":"2019-07-02 19:55:19","endLine":207,"groupId":"13131","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveObject","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/78/c579396d94fa8771ff4f543e08c0e6b858d701.src","preCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"8f8fd335e1dd490fd1f61c65e140db23728714b9","commitMessage":"@@@Merge pull request #8420 from kai-morich/hana-search\n\nHANA: DB Metadata Search fixes\nFormer-commit-id: fdabead59cd42286f79dbb86b04b871d08acdc1a","date":"2020-04-15 03:04:43","modifiedFileCount":"3","status":"M","submitter":"Serge Rider"},{"authorTime":"2019-07-02 19:55:19","codes":[{"authorDate":"2021-04-06 20:35:15","commitOrder":6,"curCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, @NotNull ObjectsSearchParams params,\n                                 List<DBSObjectReference> result) throws SQLException {\n        String stmt = \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += params.isCaseSensitive() ? \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt += \" AND SCHEMA_NAME = ?\";\n        stmt += \" ORDER BY SCHEMA_NAME, VIEW_NAME LIMIT \" + (params.getMaxResults() - result.size());\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, params.isCaseSensitive() ? params.getMask() : params.getMask().toUpperCase());\n            if (parentSchema != null) {\n                dbStat.setString(2, parentSchema.getName());\n            }\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                while (!monitor.isCanceled() && dbResult.next()) {\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n                    if (schema == null)\n                        continue; \r\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","date":"2021-04-06 20:35:15","endLine":261,"groupId":"121034","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"findViewsByMask","params":"(JDBCSessionsession@GenericSchemaparentSchema@@NotNullObjectsSearchParamsparams@List<DBSObjectReference>result)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/71/6aa9be705488890026c77ec3e873970820d5a1.src","preCode":"    private void findViewsByMask(JDBCSession session, GenericSchema parentSchema, String objectNameMask,\n            boolean caseSensitive, int maxResults, List<DBSObjectReference> result) throws SQLException, DBException {\n        String stmt =                       \"SELECT SCHEMA_NAME, VIEW_NAME, COMMENTS FROM SYS.VIEWS WHERE\";\n        stmt += caseSensitive ?             \" VIEW_NAME LIKE ?\" : \" UPPER(VIEW_NAME) LIKE ?\";\n        if (parentSchema != null)stmt +=    \" AND SCHEMA_NAME = ?\";\n        stmt +=                             \" ORDER BY SCHEMA_NAME, VIEW_NAME LIMIT \" + maxResults;\n\n        DBRProgressMonitor monitor = session.getProgressMonitor();\n        try (JDBCPreparedStatement dbStat = session.prepareStatement(stmt)) {\n            dbStat.setString(1, caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n            if (parentSchema != null)\n                dbStat.setString(2, parentSchema.getName());\n            try (JDBCResultSet dbResult = dbStat.executeQuery()) {\n                int numResults = maxResults;\n                while (dbResult.next() && numResults-- > 0) {\n                    if (monitor.isCanceled())\n                        break;\n                    String schemaName = dbResult.getString(1);\n                    String objectName = dbResult.getString(2);\n                    String description = dbResult.getString(3);\n                    GenericSchema schema = parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n                    if (schema == null)\n                        continue; \r\n\n                    result.add(new AbstractObjectReference(objectName, schema, description, GenericTable.class,\n                            RelationalObjectType.TYPE_VIEW) {\n                        @Override\n                        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException {\n                            GenericTableBase object = ((GenericObjectContainer) getContainer()).getTable(monitor,\n                                    getName());\n                            if (object == null) {\n                                throw new DBException(\"Can't find object '\" + getName() + \"' in '\"\n                                        + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n                            }\n                            return object;\n                        }\n\n                    });\n                }\n            }\n        }\n    }\n","realPath":"plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"},{"authorDate":"2019-07-02 19:55:19","commitOrder":6,"curCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","date":"2019-07-02 19:55:19","endLine":207,"groupId":"121034","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveObject","params":"(DBRProgressMonitormonitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-dbeaver-10-0.7/blobInfo/CC_OUT/blobs/78/c579396d94fa8771ff4f543e08c0e6b858d701.src","preCode":"        public DBSObject resolveObject(DBRProgressMonitor monitor) throws DBException\n        {\n            GenericTableBase table = getContainer().getTable(monitor, getName());\n            if (table == null) {\n                throw new DBException(\"Can't find table '\" + getName() + \"' in '\" + DBUtils.getFullQualifiedName(dataSource, getContainer()) + \"'\");\n            }\n            return table;\n        }\n","realPath":"plugins/org.jkiss.dbeaver.ext.generic/src/org/jkiss/dbeaver/ext/generic/model/GenericStructureAssistant.java","repoName":"dbeaver","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"57f75a36c097e247a0603d2a31c929d0e76c304a","commitMessage":"@@@Merge remote-tracking branch 'origin/devel' into devel\n\n\nFormer-commit-id: 5f91104468cde36ac982db80d67194f17242a12d","date":"2021-04-06 20:35:15","modifiedFileCount":"22","status":"M","submitter":"Serge Rider"}]
