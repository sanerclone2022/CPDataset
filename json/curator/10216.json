[{"authorTime":"2015-04-28 06:09:46","codes":[{"authorDate":"2014-05-23 22:46:02","commitOrder":3,"curCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":452,"groupId":"781","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a0/7ee1418ab1024b7b6143ed4376c3de3d3957c8.src","preCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"NB"},{"authorDate":"2015-04-28 06:09:46","commitOrder":3,"curCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","date":"2015-04-28 06:09:46","endLine":492,"groupId":"781","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetDataWhenNodeExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/1c/66271b0e313039f5bd5bcb3dedd090e56dd155.src","preCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"B"}],"commitId":"06af6ff1cc7f4f4de89571dfd7024efe7fd03d38","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/curator\n","date":"2015-04-28 06:09:46","modifiedFileCount":"2","status":"M","submitter":"randgalt"},{"authorTime":"2015-10-11 05:49:33","codes":[{"authorDate":"2015-10-11 05:49:33","commitOrder":4,"curCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","date":"2015-10-11 05:49:33","endLine":482,"groupId":"781","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fe/2dd93aecb732c5e6c3df00ead13ac4d4c3faf2.src","preCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"M"},{"authorDate":"2015-10-11 05:49:33","commitOrder":4,"curCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","date":"2015-10-11 05:49:33","endLine":508,"groupId":"781","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetDataWhenNodeExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fe/2dd93aecb732c5e6c3df00ead13ac4d4c3faf2.src","preCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.start();\n        try\n        {\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            node.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":490,"status":"M"}],"commitId":"208317ab0110663745a5e8e76fd9a8bca634082e","commitMessage":"@@@Trying to make tests more reliable\n","date":"2015-10-11 05:49:33","modifiedFileCount":"4","status":"M","submitter":"randgalt"},{"authorTime":"2016-01-19 10:05:41","codes":[{"authorDate":"2016-01-19 10:05:41","commitOrder":5,"curCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds());\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","date":"2016-01-19 10:05:41","endLine":536,"groupId":"10216","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/15/c5f2e613bfd5da1c903a11c8f32ed059078b88.src","preCode":"    public void testData() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        byte[] data = \"Hello World\".getBytes();\n\n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"M"},{"authorDate":"2016-01-19 10:05:41","commitOrder":5,"curCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds());\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","date":"2016-01-19 10:05:41","endLine":563,"groupId":"10216","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetDataWhenNodeExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/15/c5f2e613bfd5da1c903a11c8f32ed059078b88.src","preCode":"    public void testSetDataWhenNodeExists() throws Exception\n    {\n        CuratorFramework curator = newCurator();\n        curator.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath(PATH, \"InitialData\".getBytes());\n        \n        byte[] data = \"Hello World\".getBytes();\n             \n        PersistentEphemeralNode node = new PersistentEphemeralNode(curator, PersistentEphemeralNode.Mode.EPHEMERAL, PATH, data);\n        try\n        {\n            node.start();\n            node.waitForInitialCreate(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()), data));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(node);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"M"}],"commitId":"c6a22ba508f9227fe1c657f93e3cc77d8bc17e3e","commitMessage":"@@@Merge branch 'master' into CURATOR-3.0\n\nConflicts:\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode.java\n","date":"2016-01-19 10:05:41","modifiedFileCount":"6","status":"M","submitter":"randgalt"}]
