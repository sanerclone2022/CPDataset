[{"authorTime":"2015-09-26 10:07:44","codes":[{"authorDate":"2015-09-26 10:07:44","commitOrder":1,"curCode":"    public void testAdd() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","date":"2015-09-26 10:07:44","endLine":184,"groupId":"1479","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/99/e5a2e81322bb254f74ef747a12de5df22063a3.src","preCode":"    public void testAdd() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2015-09-26 10:07:44","commitOrder":1,"curCode":"    public void testAddAsync() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","date":"2015-09-26 10:07:44","endLine":225,"groupId":"1479","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddAsync","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/99/e5a2e81322bb254f74ef747a12de5df22063a3.src","preCode":"    public void testAddAsync() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"}],"commitId":"d42ef172e57af17ed42d7c2c4e2d9a7a0c520f3c","commitMessage":"@@@wip - adding() API was misnamed. Also.  it's mutually exclusive with join/leave\n","date":"2015-09-26 10:07:44","modifiedFileCount":"7","status":"B","submitter":"randgalt"},{"authorTime":"2015-09-26 10:49:12","codes":[{"authorDate":"2015-09-26 10:49:12","commitOrder":2,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","date":"2015-09-26 10:49:12","endLine":185,"groupId":"1909","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/be4f13cbbc73dec48347966281da6faf81c87f.src","preCode":"    public void testAdd() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2015-09-26 10:49:12","commitOrder":2,"curCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","date":"2015-09-26 10:49:12","endLine":225,"groupId":"1479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddAsync","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/be4f13cbbc73dec48347966281da6faf81c87f.src","preCode":"    public void testAddAsync() throws Exception\n    {\n        Timing timing = new Timing();\n        try ( CuratorFramework client = CuratorFrameworkFactory.newClient(cluster.getConnectString(), new RetryOneTime(1)) )\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(1, false) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"36ddd58a31045addfd9d984353956f7a99c09221","commitMessage":"@@@finalized the changes and removed old classes\n","date":"2015-09-26 10:49:12","modifiedFileCount":"2","status":"M","submitter":"randgalt"},{"authorTime":"2015-09-27 02:13:02","codes":[{"authorDate":"2015-09-27 02:13:02","commitOrder":3,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfigData), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2015-09-27 02:13:02","endLine":194,"groupId":"608","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/10/1360a5800af4c0ed9ea5ea7bdf45d62686ff6b.src","preCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2015-09-27 02:13:02","commitOrder":3,"curCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfigData), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2015-09-27 02:13:02","endLine":236,"groupId":"1479","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddAsync","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/10/1360a5800af4c0ed9ea5ea7bdf45d62686ff6b.src","preCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"26364c6186fc7c09a9462557b1ca791e9aa70006","commitMessage":"@@@1. EnsembleTracker should always be on.  it now is\n2. Removed DynamicEnsembleProvider. This should not be optional. EnsembleTracker now always publishes config changes which will end up calling ZooKeeper.updateServerList()\n3. Testing\n","date":"2015-09-27 02:13:02","modifiedFileCount":"11","status":"M","submitter":"randgalt"},{"authorTime":"2015-10-02 22:37:13","codes":[{"authorDate":"2015-10-02 22:37:13","commitOrder":4,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2015-10-02 22:37:13","endLine":196,"groupId":"608","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/75/65590190ca4c6538b0cddb6ca91b3fab0dc79c.src","preCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfigData), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2015-10-02 22:37:13","commitOrder":4,"curCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2015-10-02 22:37:13","endLine":238,"groupId":"1479","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddAsync","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/75/65590190ca4c6538b0cddb6ca91b3fab0dc79c.src","preCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfigData), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"b89091e9363e760aa34028bcfb57baf6ca921957","commitMessage":"@@@Support getting at the cached config from the ensemble tracker\n","date":"2015-10-02 22:37:13","modifiedFileCount":"6","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":258,"groupId":"10119","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/5d17a73fad94ac3f37bc01e467143f5d9868ff.src","preCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                assertTrue(timing.awaitLatch(callbackLatch));\n                assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":300,"groupId":"10119","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddAsync","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/5d17a73fad94ac3f37bc01e467143f5d9868ff.src","preCode":"    public void testAddAsync() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                final CountDownLatch callbackLatch = new CountDownLatch(1);\n                BackgroundCallback callback = new BackgroundCallback()\n                {\n                    @Override\n                    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.RECONFIG )\n                        {\n                            callbackLatch.countDown();\n                        }\n                    }\n                };\n                client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(callbackLatch));\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
