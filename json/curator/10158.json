[{"authorTime":"2014-08-08 10:09:02","codes":[{"authorDate":"2014-08-08 10:09:02","commitOrder":1,"curCode":"    public void testDefaultSerializer() throws Exception\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","date":"2014-08-08 10:09:02","endLine":41,"groupId":"1149","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/31/2c884576320485ffb7d47cb248ec1b9f46132e.src","preCode":"    public void testDefaultSerializer() throws Exception\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2014-08-08 10:09:02","commitOrder":1,"curCode":"    public void testSetSerializer() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","date":"2014-08-08 10:09:02","endLine":66,"groupId":"1150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/31/2c884576320485ffb7d47cb248ec1b9f46132e.src","preCode":"    public void testSetSerializer() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"ad6c23adcd504ca98afe07c3ddaed92ae35a1c0d","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/curator\n","date":"2014-08-08 10:09:02","modifiedFileCount":"7","status":"B","submitter":"randgalt"},{"authorTime":"2020-03-21 03:48:18","codes":[{"authorDate":"2020-03-21 03:48:18","commitOrder":2,"curCode":"    public void testDefaultSerializer()\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","date":"2020-04-09 20:17:55","endLine":43,"groupId":"1149","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fd/0c438697bff201f511a58963c1990dacd77168.src","preCode":"    public void testDefaultSerializer() throws Exception\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-03-21 03:48:18","commitOrder":2,"curCode":"    public void testSetSerializer()\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","date":"2020-04-09 20:17:55","endLine":68,"groupId":"1150","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/fd/0c438697bff201f511a58963c1990dacd77168.src","preCode":"    public void testSetSerializer() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"b29bb010ada7f17626438b828de1f9e122e5d7bf","commitMessage":"@@@CURATOR-549\n\nCreates a simple bridge that.  when using ZK 3.6.0 creates a CuratorCache.  and for earlier versions creates a TreeCache. The curator-test-zk35 module ensures that both code paths are tested.\n","date":"2020-04-09 20:17:55","modifiedFileCount":"22","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testDefaultSerializer()\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","date":"2020-10-20 21:18:25","endLine":47,"groupId":"10158","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testDefaultSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/d8/8b3c4268a3a9fe1c8719edde05a64c679ae963.src","preCode":"    public void testDefaultSerializer()\n    {        \n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer, \"default serializer not JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testSetSerializer()\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","date":"2020-10-20 21:18:25","endLine":72,"groupId":"10158","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testSetSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/d8/8b3c4268a3a9fe1c8719edde05a64c679ae963.src","preCode":"    public void testSetSerializer()\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder(Object.class).client(client);\n        builder.serializer(new InstanceSerializer<Object>()\n        {\n            @Override\n            public byte[] serialize(ServiceInstance<Object> instance)\n            {\n                return null;\n            }\n\n            @Override\n            public ServiceInstance<Object> deserialize(byte[] bytes)\n            {\n                return null;\n            }\n        });\n\n        ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>) builder.basePath(\"/path\").build();\n        Assert.assertNotNull(discovery.getSerializer(), \"default serializer not set\");\n        Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer, \"set serializer is JSON\");\n    }\n","realPath":"curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscoveryBuilder.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
