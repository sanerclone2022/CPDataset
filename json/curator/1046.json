[{"authorTime":"2012-10-11 06:34:47","codes":[{"authorDate":"2012-10-11 06:34:47","commitOrder":2,"curCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","date":"2012-10-11 06:34:47","endLine":134,"groupId":"1857","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"processCommands","params":"(ServiceDiscovery<InstanceDetails>serviceDiscovery@Map<String@ServiceProvider<InstanceDetails>>providers@CuratorFrameworkclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ed/85459eebf15a70556dc3e6ae0ec53db395acfd.src","preCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/discovery/DiscoveryExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"MB"},{"authorDate":"2012-10-11 06:34:47","commitOrder":2,"curCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","date":"2012-10-11 06:34:47","endLine":160,"groupId":"1857","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"processCommands","params":"(CuratorFrameworkclient@PathChildrenCachecache)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/31/1d94ec20b2ac878469f1c26cad0f7ad68fe532.src","preCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/cache/PathCacheExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"9ea097d6bdcef518988e1cf7dccebd2123de6b81","commitMessage":"@@@Merge pull request #181 from Randgalt/master\n\nPathChildrenCache example","date":"2012-10-11 06:34:47","modifiedFileCount":"1","status":"M","submitter":"Jordan Zimmerman"},{"authorTime":"2014-02-04 02:55:50","codes":[{"authorDate":"2014-02-04 02:55:50","commitOrder":3,"curCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":136,"groupId":"1857","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"processCommands","params":"(ServiceDiscovery<InstanceDetails>serviceDiscovery@Map<String@ServiceProvider<InstanceDetails>>providers@CuratorFrameworkclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/63/132075626230fe4e9d58676aa30180066b7a51.src","preCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/discovery/DiscoveryExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2014-02-04 02:55:50","commitOrder":3,"curCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":162,"groupId":"1857","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"processCommands","params":"(CuratorFrameworkclient@PathChildrenCachecache)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ee/c01bcf447738a4ce33accac29aa8d289429e2a.src","preCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                Closeables.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/cache/PathCacheExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"863eaee2f11fe930601c3da3bce386263fb552c4","commitMessage":"@@@CURATOR-85 - Guava no longer has closeQuietly(). This change adds the implementation internally to Curator\n","date":"2014-02-04 02:55:50","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2014-08-01 04:10:17","codes":[{"authorDate":"2014-08-01 04:10:17","commitOrder":4,"curCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      line = in.readLine();\n                if ( line == null )\n                {\n                    break;\n                }\n\n                String      command = line.trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","date":"2014-08-01 04:10:17","endLine":142,"groupId":"1046","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"processCommands","params":"(ServiceDiscovery<InstanceDetails>serviceDiscovery@Map<String@ServiceProvider<InstanceDetails>>providers@CuratorFrameworkclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/d3/77e5ee04e3c647ed3de462b91762ab00c912fa.src","preCode":"    private static void processCommands(ServiceDiscovery<InstanceDetails> serviceDiscovery, Map<String, ServiceProvider<InstanceDetails>> providers, CuratorFramework client) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer>     servers = Lists.newArrayList();\n        try\n        {\n            BufferedReader          in = new BufferedReader(new InputStreamReader(System.in));\n            boolean                 done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"add\") )\n                {\n                    addInstance(args, client, command, servers);\n                }\n                else if ( operation.equals(\"delete\") )\n                {\n                    deleteInstance(args, command, servers);\n                }\n                else if ( operation.equals(\"random\") )\n                {\n                    listRandomInstance(args, serviceDiscovery, providers, command);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    listInstances(serviceDiscovery);\n                }\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/discovery/DiscoveryExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2014-08-01 04:10:17","commitOrder":4,"curCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      line = in.readLine();\n                if ( line == null )\n                {\n                    break;\n                }\n\n                String      command = line.trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","date":"2014-08-01 04:10:17","endLine":168,"groupId":"1046","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"processCommands","params":"(CuratorFrameworkclient@PathChildrenCachecache)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/be/c8093fcd1633a2531f7fa8b71483f64ff27db8.src","preCode":"    private static void processCommands(CuratorFramework client, PathChildrenCache cache) throws Exception\n    {\n        \r\n\n        printHelp();\n\n        List<ExampleServer> servers = Lists.newArrayList();\n        try\n        {\n            addListener(cache);\n\n            BufferedReader  in = new BufferedReader(new InputStreamReader(System.in));\n            boolean         done = false;\n            while ( !done )\n            {\n                System.out.print(\"> \");\n\n                String      command = in.readLine().trim();\n                String[]    parts = command.split(\"\\\\s\");\n                if ( parts.length == 0 )\n                {\n                    continue;\n                }\n                String      operation = parts[0];\n                String      args[] = Arrays.copyOfRange(parts, 1, parts.length);\n\n                if ( operation.equalsIgnoreCase(\"help\") || operation.equalsIgnoreCase(\"?\") )\n                {\n                    printHelp();\n                }\n                else if ( operation.equalsIgnoreCase(\"q\") || operation.equalsIgnoreCase(\"quit\") )\n                {\n                    done = true;\n                }\n                else if ( operation.equals(\"set\") )\n                {\n                    setValue(client, command, args);\n                }\n                else if ( operation.equals(\"remove\") )\n                {\n                    remove(client, command, args);\n                }\n                else if ( operation.equals(\"list\") )\n                {\n                    list(cache);\n                }\n\n                Thread.sleep(1000); \r\n            }\n        }\n        finally\n        {\n            for ( ExampleServer server : servers )\n            {\n                CloseableUtils.closeQuietly(server);\n            }\n        }\n    }\n","realPath":"curator-examples/src/main/java/cache/PathCacheExample.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"f5767c8909d25761fcc5ed1a8f462fb8f0533487","commitMessage":"@@@CURATOR-130 Add null check to input processing.\n","date":"2014-08-01 04:10:17","modifiedFileCount":"2","status":"M","submitter":"Mike Drob"}]
