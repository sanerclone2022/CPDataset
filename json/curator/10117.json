[{"authorTime":"2015-10-02 22:37:13","codes":[{"authorDate":"2020-05-06 15:54:55","commitOrder":5,"curCode":"    public void testAddWithoutEnsembleTracker() throws Exception\n    {\n        final String initialClusterCS = cluster.getConnectString();\n        try ( CuratorFramework client = newClient(cluster.getConnectString(), false))\n        {\n            Assert.assertEquals(((CuratorFrameworkImpl) client).getEnsembleTracker(), null);\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                final CountDownLatch reconnectLatch = new CountDownLatch(1);\n                client.getConnectionStateListenable().addListener(\n                    (cfClient, newState) -> {\n                        if (newState == ConnectionState.RECONNECTED) reconnectLatch.countDown();\n                    }\n                );\n                client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration();\n                Assert.assertTrue(reconnectLatch.await(2, TimeUnit.SECONDS));\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                newConfigData = client.getConfig().forEnsemble();\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2020-05-08 06:42:44","endLine":221,"groupId":"608","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWithoutEnsembleTracker","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/50/0e728e7d2818dcd8db678927344fdeb4930f47.src","preCode":"    public void testAddWithoutEnsembleTracker() throws Exception\n    {\n        final String initialClusterCS = cluster.getConnectString();\n        try ( CuratorFramework client = newClient(cluster.getConnectString(), false))\n        {\n            Assert.assertEquals(((CuratorFrameworkImpl) client).getEnsembleTracker(), null);\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                final CountDownLatch reconnectLatch = new CountDownLatch(1);\n                client.getConnectionStateListenable().addListener(\n                    (cfClient, newState) -> {\n                        if (newState == ConnectionState.RECONNECTED) reconnectLatch.countDown();\n                    }\n                );\n                client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration();\n                Assert.assertTrue(reconnectLatch.await(2, TimeUnit.SECONDS));\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                newConfigData = client.getConfig().forEnsemble();\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2015-10-02 22:37:13","commitOrder":5,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2015-10-02 22:37:13","endLine":196,"groupId":"608","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/75/65590190ca4c6538b0cddb6ca91b3fab0dc79c.src","preCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"NB"}],"commitId":"61d281721f06ba85cf3b764c332da904353fb2b0","commitMessage":"@@@JIRA:CURATOR-568\n\n- Adding ensembleTracker(boolean) and withEnsembleTracker() methods to\nCuratorFrameworkFactory.builder() that allows enabling/disabling\nensemble tracking","date":"2020-05-08 06:42:44","modifiedFileCount":"3","status":"M","submitter":"chevaris"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testAddWithoutEnsembleTracker() throws Exception\n    {\n        final String initialClusterCS = cluster.getConnectString();\n        try ( CuratorFramework client = newClient(cluster.getConnectString(), false))\n        {\n            assertEquals(((CuratorFrameworkImpl) client).getEnsembleTracker(), null);\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n                assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                final CountDownLatch reconnectLatch = new CountDownLatch(1);\n                client.getConnectionStateListenable().addListener(\n                    (cfClient, newState) -> {\n                        if (newState == ConnectionState.RECONNECTED) reconnectLatch.countDown();\n                    }\n                );\n                client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration();\n                assertTrue(reconnectLatch.await(2, TimeUnit.SECONDS));\n                assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                newConfigData = client.getConfig().forEnsemble();\n                assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":229,"groupId":"10117","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddWithoutEnsembleTracker","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/5d17a73fad94ac3f37bc01e467143f5d9868ff.src","preCode":"    public void testAddWithoutEnsembleTracker() throws Exception\n    {\n        final String initialClusterCS = cluster.getConnectString();\n        try ( CuratorFramework client = newClient(cluster.getConnectString(), false))\n        {\n            Assert.assertEquals(((CuratorFrameworkImpl) client).getEnsembleTracker(), null);\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                final CountDownLatch reconnectLatch = new CountDownLatch(1);\n                client.getConnectionStateListenable().addListener(\n                    (cfClient, newState) -> {\n                        if (newState == ConnectionState.RECONNECTED) reconnectLatch.countDown();\n                    }\n                );\n                client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration();\n                Assert.assertTrue(reconnectLatch.await(2, TimeUnit.SECONDS));\n                Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(), initialClusterCS);\n                Assert.assertEquals(ensembleProvider.getConnectionString(), initialClusterCS);\n                newConfigData = client.getConfig().forEnsemble();\n                Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":258,"groupId":"10117","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/43/5d17a73fad94ac3f37bc01e467143f5d9868ff.src","preCode":"    public void testAdd() throws Exception\n    {\n        try ( CuratorFramework client = newClient())\n        {\n            client.start();\n\n            QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble());\n            assertConfig(oldConfig, cluster.getInstances());\n\n            CountDownLatch latch = setChangeWaiter(client);\n            try ( TestingCluster newCluster = new TestingCluster(TestingCluster.makeSpecs(1, false)) )\n            {\n                newCluster.start();\n\n                client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble();\n\n                Assert.assertTrue(timing.awaitLatch(latch));\n\n                byte[] newConfigData = client.getConfig().forEnsemble();\n                QuorumVerifier newConfig = toQuorumVerifier(newConfigData);\n                List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances());\n                newInstances.addAll(newCluster.getInstances());\n                assertConfig(newConfig, newInstances);\n                Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig), ensembleProvider.getConnectionString());\n            }\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestReconfiguration.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
