[{"authorTime":"2013-06-10 23:50:37","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":2,"curCode":"    public void         testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n            (\n                new CuratorListener()\n                {\n                    @Override\n                    public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.EXISTS )\n                        {\n                            Stat    stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                            Assert.assertNull(stat);\n\n                            client.create().inBackground(event.getContext()).forPath(\"/what\");\n                        }\n                        else if ( event.getType() == CuratorEventType.CREATE )\n                        {\n                            ((CountDownLatch)event.getContext()).countDown();\n                        }\n                    }\n                }\n            );\n\n            CountDownLatch        latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":242,"groupId":"655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/89/bdab681575c4981d521bf1df3940c58052f122.src","preCode":"    public void         testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n            (\n                new CuratorListener()\n                {\n                    @Override\n                    public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                    {\n                        if ( event.getType() == CuratorEventType.EXISTS )\n                        {\n                            Stat    stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                            Assert.assertNull(stat);\n\n                            client.create().inBackground(event.getContext()).forPath(\"/what\");\n                        }\n                        else if ( event.getType() == CuratorEventType.CREATE )\n                        {\n                            ((CountDownLatch)event.getContext()).countDown();\n                        }\n                    }\n                }\n            );\n\n            CountDownLatch        latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"NB"},{"authorDate":"2013-06-10 23:50:37","commitOrder":2,"curCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","date":"2013-06-10 23:50:37","endLine":311,"groupId":"655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newCurator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/03/3ec1fda5b29d104268e1b6b21c7e9911fd5bce.src","preCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"B"}],"commitId":"e5c7755c9f5d7e1cf0cb3f29545b875d6bd55263","commitMessage":"@@@Merge branch 'CURATOR-25' into 2.0.2-incubating\n","date":"2013-06-10 23:50:37","modifiedFileCount":"0","status":"M","submitter":"randgalt"},{"authorTime":"2013-06-10 23:50:37","codes":[{"authorDate":"2014-02-04 02:55:50","commitOrder":3,"curCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n                (\n                    new CuratorListener()\n                    {\n                        @Override\n                        public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                        {\n                            if ( event.getType() == CuratorEventType.EXISTS )\n                            {\n                                Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                                Assert.assertNull(stat);\n\n                                client.create().inBackground(event.getContext()).forPath(\"/what\");\n                            }\n                            else if ( event.getType() == CuratorEventType.CREATE )\n                            {\n                                ((CountDownLatch)event.getContext()).countDown();\n                            }\n                        }\n                    }\n                );\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":273,"groupId":"655","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ae/c45b6cb9a6b4ccc02ba02d64a7c68bb3e5df69.src","preCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n                (\n                    new CuratorListener()\n                    {\n                        @Override\n                        public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                        {\n                            if ( event.getType() == CuratorEventType.EXISTS )\n                            {\n                                Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                                Assert.assertNull(stat);\n\n                                client.create().inBackground(event.getContext()).forPath(\"/what\");\n                            }\n                            else if ( event.getType() == CuratorEventType.CREATE )\n                            {\n                                ((CountDownLatch)event.getContext()).countDown();\n                            }\n                        }\n                    }\n                );\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2013-06-10 23:50:37","commitOrder":3,"curCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","date":"2013-06-10 23:50:37","endLine":311,"groupId":"655","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newCurator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/03/3ec1fda5b29d104268e1b6b21c7e9911fd5bce.src","preCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"N"}],"commitId":"863eaee2f11fe930601c3da3bce386263fb552c4","commitMessage":"@@@CURATOR-85 - Guava no longer has closeQuietly(). This change adds the implementation internally to Curator\n","date":"2014-02-04 02:55:50","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2014-05-23 22:46:02","codes":[{"authorDate":"2014-05-23 22:46:02","commitOrder":4,"curCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n                (\n                    new CuratorListener()\n                    {\n                        @Override\n                        public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                        {\n                            if ( event.getType() == CuratorEventType.EXISTS )\n                            {\n                                Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                                Assert.assertNull(stat);\n\n                                client.create().inBackground(event.getContext()).forPath(\"/what\");\n                            }\n                            else if ( event.getType() == CuratorEventType.CREATE )\n                            {\n                                ((CountDownLatch)event.getContext()).countDown();\n                            }\n                        }\n                    }\n                );\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":274,"groupId":"655","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/52/897b6b2e9df38c251faddf37bbf009210d6355.src","preCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener\n                (\n                    new CuratorListener()\n                    {\n                        @Override\n                        public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                        {\n                            if ( event.getType() == CuratorEventType.EXISTS )\n                            {\n                                Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                                Assert.assertNull(stat);\n\n                                client.create().inBackground(event.getContext()).forPath(\"/what\");\n                            }\n                            else if ( event.getType() == CuratorEventType.CREATE )\n                            {\n                                ((CountDownLatch)event.getContext()).countDown();\n                            }\n                        }\n                    }\n                );\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2014-05-23 22:46:02","commitOrder":4,"curCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","date":"2014-05-23 22:46:02","endLine":472,"groupId":"655","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newCurator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a0/7ee1418ab1024b7b6143ed4376c3de3d3957c8.src","preCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":465,"status":"M"}],"commitId":"0bffdb020d78d8c6599a1eb9c2c702f9dd1192bd","commitMessage":"@@@Merge branch 'master' into CURATOR-105\n\nConflicts:\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/PathChildrenCache.java\n","date":"2014-05-23 22:46:02","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2014-05-23 22:46:02","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener(new CuratorListener()\n            {\n                @Override\n                public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    if ( event.getType() == CuratorEventType.EXISTS )\n                    {\n                        Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                        assertNull(stat);\n\n                        client.create().inBackground(event.getContext()).forPath(\"/what\");\n                    }\n                    else if ( event.getType() == CuratorEventType.CREATE )\n                    {\n                        ((CountDownLatch)event.getContext()).countDown();\n                    }\n                }\n            });\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":622,"groupId":"1060","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/1f/da24870f488fc96f258b772f35da0396d1f2e2.src","preCode":"    public void testNestedCalls() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.getCuratorListenable().addListener(new CuratorListener()\n            {\n                @Override\n                public void eventReceived(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    if ( event.getType() == CuratorEventType.EXISTS )\n                    {\n                        Stat stat = client.checkExists().forPath(\"/yo/yo/yo\");\n                        Assert.assertNull(stat);\n\n                        client.create().inBackground(event.getContext()).forPath(\"/what\");\n                    }\n                    else if ( event.getType() == CuratorEventType.CREATE )\n                    {\n                        ((CountDownLatch)event.getContext()).countDown();\n                    }\n                }\n            });\n\n            CountDownLatch latch = new CountDownLatch(1);\n            client.checkExists().inBackground(latch).forPath(\"/hey\");\n            Assert.assertTrue(latch.await(10, TimeUnit.SECONDS));\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":589,"status":"M"},{"authorDate":"2014-05-23 22:46:02","commitOrder":5,"curCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","date":"2014-05-23 22:46:02","endLine":472,"groupId":"1060","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newCurator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/a0/7ee1418ab1024b7b6143ed4376c3de3d3957c8.src","preCode":"    private CuratorFramework newCurator() throws IOException\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n\n        curatorInstances.add(client);\n        return client;\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":465,"status":"N"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
