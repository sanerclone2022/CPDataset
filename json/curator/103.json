[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void         setup() throws Exception\n    {\n        context = new MapDiscoveryContext(new MockServiceDiscovery<Map<String, String>>(), new RandomStrategy<Map<String, String>>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<Map<String, String>>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<Map<String, String>>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(MapDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","date":"2013-03-08 06:54:59","endLine":96,"groupId":"666","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f3/8da7c8c10ae61801e88d02d66c4dce613cd07c.src","preCode":"    public void         setup() throws Exception\n    {\n        context = new MapDiscoveryContext(new MockServiceDiscovery<Map<String, String>>(), new RandomStrategy<Map<String, String>>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<Map<String, String>>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<Map<String, String>>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(MapDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","realPath":"curator-x-discovery-server/src/test/java/org/apache/curator/x/discovery/server/jetty_jersey/TestMapsWithJersey.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void         setup() throws Exception\n    {\n        context = new ServiceDetailsDiscoveryContext(new MockServiceDiscovery<ServiceDetails>(), new RandomStrategy<ServiceDetails>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<ServiceDetails>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<ServiceDetails>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(ServiceDetailsDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","date":"2013-03-08 06:54:59","endLine":95,"groupId":"666","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/66/28a75dec14b795ea436e60291f39aea8f6876b.src","preCode":"    public void         setup() throws Exception\n    {\n        context = new ServiceDetailsDiscoveryContext(new MockServiceDiscovery<ServiceDetails>(), new RandomStrategy<ServiceDetails>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<ServiceDetails>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<ServiceDetails>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(ServiceDetailsDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","realPath":"curator-x-discovery-server/src/test/java/org/apache/curator/x/discovery/server/jetty_jersey/TestObjectPayloadWithJersey.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2013-06-23 06:57:46","codes":[{"authorDate":"2013-06-23 06:57:46","commitOrder":2,"curCode":"    public void         setup() throws Exception\n    {\n        context = new MapDiscoveryContext(new MockServiceDiscovery<Map<String, String>>(), new RandomStrategy<Map<String, String>>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<Map<String, String>>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<Map<String, String>>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(MapDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        port = InstanceSpec.getRandomPort();\n        server = new Server(port);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","date":"2013-06-23 06:57:46","endLine":99,"groupId":"103","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/16/93b86aa755eb4408b32e29f204861f23c5ed9c.src","preCode":"    public void         setup() throws Exception\n    {\n        context = new MapDiscoveryContext(new MockServiceDiscovery<Map<String, String>>(), new RandomStrategy<Map<String, String>>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<Map<String, String>>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<Map<String, String>>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(MapDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","realPath":"curator-x-discovery-server/src/test/java/org/apache/curator/x/discovery/server/jetty_jersey/TestMapsWithJersey.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2013-06-23 06:57:46","commitOrder":2,"curCode":"    public void         setup() throws Exception\n    {\n        context = new ServiceDetailsDiscoveryContext(new MockServiceDiscovery<ServiceDetails>(), new RandomStrategy<ServiceDetails>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<ServiceDetails>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<ServiceDetails>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(ServiceDetailsDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        port = InstanceSpec.getRandomPort();\n        server = new Server(port);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","date":"2013-06-23 06:57:46","endLine":100,"groupId":"103","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/f6/dc27f6338127d82ffad47d353a221185bd396a.src","preCode":"    public void         setup() throws Exception\n    {\n        context = new ServiceDetailsDiscoveryContext(new MockServiceDiscovery<ServiceDetails>(), new RandomStrategy<ServiceDetails>(), 1000);\n        serviceNamesMarshaller = new JsonServiceNamesMarshaller();\n        serviceInstanceMarshaller = new JsonServiceInstanceMarshaller<ServiceDetails>(context);\n        serviceInstancesMarshaller = new JsonServiceInstancesMarshaller<ServiceDetails>(context);\n\n        Application                                     application = new DefaultResourceConfig()\n        {\n            @Override\n            public Set<Class<?>> getClasses()\n            {\n                Set<Class<?>>       classes = Sets.newHashSet();\n                classes.add(ServiceDetailsDiscoveryResource.class);\n                return classes;\n            }\n\n            @Override\n            public Set<Object> getSingletons()\n            {\n                Set<Object>     singletons = Sets.newHashSet();\n                singletons.add(context);\n                singletons.add(serviceNamesMarshaller);\n                singletons.add(serviceInstanceMarshaller);\n                singletons.add(serviceInstancesMarshaller);\n                return singletons;\n            }\n        };\n        ServletContainer        container = new ServletContainer(application);\n\n        server = new Server(8080);\n        Context root = new Context(server, \"/\", Context.SESSIONS);\n        root.addServlet(new ServletHolder(container), \"/*\");\n        server.start();\n    }\n","realPath":"curator-x-discovery-server/src/test/java/org/apache/curator/x/discovery/server/jetty_jersey/TestObjectPayloadWithJersey.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"5ff48fcaa39b43b4a3ef1ba194ac54fa300a5339","commitMessage":"@@@Use random port instead of hard-coded to make tests more resilient\n","date":"2013-06-23 06:57:46","modifiedFileCount":"4","status":"M","submitter":"randgalt"}]
