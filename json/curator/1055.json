[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework                client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl               createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String>     queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback              callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String          ourPath = queue.poll(10, TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":152,"groupId":"180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissedResponseOnBackgroundESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/89/bdab681575c4981d521bf1df3940c58052f122.src","preCode":"    public void     testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework                client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl               createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String>     queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback              callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String          ourPath = queue.poll(10, TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void     testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework                client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl               createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String                          ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":171,"groupId":"1580","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissedResponseOnESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/89/bdab681575c4981d521bf1df3940c58052f122.src","preCode":"    public void     testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework                client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl               createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String                          ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2014-02-04 02:55:50","codes":[{"authorDate":"2014-02-04 02:55:50","commitOrder":2,"curCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(10, TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":183,"groupId":"180","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissedResponseOnBackgroundESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ae/c45b6cb9a6b4ccc02ba02d64a7c68bb3e5df69.src","preCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(10, TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2014-02-04 02:55:50","commitOrder":2,"curCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":202,"groupId":"1580","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissedResponseOnESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ae/c45b6cb9a6b4ccc02ba02d64a7c68bb3e5df69.src","preCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            Closeables.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"863eaee2f11fe930601c3da3bce386263fb552c4","commitMessage":"@@@CURATOR-85 - Guava no longer has closeQuietly(). This change adds the implementation internally to Curator\n","date":"2014-02-04 02:55:50","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2014-05-23 22:46:02","codes":[{"authorDate":"2014-05-23 22:46:02","commitOrder":3,"curCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":184,"groupId":"967","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissedResponseOnBackgroundESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/52/897b6b2e9df38c251faddf37bbf009210d6355.src","preCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(10, TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2014-05-23 22:46:02","commitOrder":3,"curCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":203,"groupId":"1580","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissedResponseOnESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/52/897b6b2e9df38c251faddf37bbf009210d6355.src","preCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"0bffdb020d78d8c6599a1eb9c2c702f9dd1192bd","commitMessage":"@@@Merge branch 'master' into CURATOR-105\n\nConflicts:\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/PathChildrenCache.java\n","date":"2014-05-23 22:46:02","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2020-05-11 00:41:05","codes":[{"authorDate":"2020-05-11 00:41:05","commitOrder":4,"curCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-05-16 04:00:24","endLine":531,"groupId":"967","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissedResponseOnBackgroundESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/3e/7754ae4d0b4ccc463037f82bc6eeab60b55a06.src","preCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":504,"status":"M"},{"authorDate":"2020-05-11 00:41:05","commitOrder":4,"curCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-05-16 04:00:24","endLine":550,"groupId":"1580","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissedResponseOnESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/3e/7754ae4d0b4ccc463037f82bc6eeab60b55a06.src","preCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", CreateBuilderImpl.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":534,"status":"M"}],"commitId":"f73b8fbb0429b7df934ee17f30f2846e7391deee","commitMessage":"@@@CURATOR-569\n\n- New methods to handle protected ZNode names\n","date":"2020-05-16 04:00:24","modifiedFileCount":"6","status":"M","submitter":"chevaris"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":539,"groupId":"1055","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissedResponseOnBackgroundESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/1f/da24870f488fc96f258b772f35da0396d1f2e2.src","preCode":"    public void testMissedResponseOnBackgroundESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n\n            final BlockingQueue<String> queue = Queues.newArrayBlockingQueue(1);\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.put(event.getPath());\n                }\n            };\n            createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).inBackground(callback).forPath(\"/\");\n            String ourPath = queue.poll(timing.forWaiting().seconds(), TimeUnit.SECONDS);\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":512,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":558,"groupId":"1055","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissedResponseOnESCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/1f/da24870f488fc96f258b772f35da0396d1f2e2.src","preCode":"    public void testMissedResponseOnESCreate() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            CreateBuilderImpl createBuilder = (CreateBuilderImpl)client.create();\n            createBuilder.failNextCreateForTesting = true;\n            String ourPath = createBuilder.withProtection().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(\"/\");\n            Assert.assertTrue(ourPath.startsWith(ZKPaths.makePath(\"/\", ProtectedUtils.PROTECTED_PREFIX)));\n            Assert.assertFalse(createBuilder.failNextCreateForTesting);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
