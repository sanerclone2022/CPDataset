[{"authorTime":"2014-07-24 06:31:49","codes":[{"authorDate":"2014-02-04 02:55:50","commitOrder":3,"curCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertTrue(timing.awaitLatch(initLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-02-04 02:55:50","endLine":171,"groupId":"1430","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testChildrenInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/7e/7ae42653e0eaca31bdc20d5622f3b896f9f464.src","preCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertTrue(timing.awaitLatch(initLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"NB"},{"authorDate":"2014-07-24 06:31:49","commitOrder":3,"curCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                    (\n                            new PathChildrenCacheListener()\n                            {\n                                @Override\n                                public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                                {\n                                    Assert.assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                                    if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                                    {\n                                        addedLatch.countDown();\n                                    }\n                                }\n                            }\n                    );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2014-07-24 06:31:49","endLine":221,"groupId":"2026","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testChildrenInitializedNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/60/f2e8839e70e0793dad05bf933bf8093941b0ff.src","preCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                    (\n                            new PathChildrenCacheListener()\n                            {\n                                @Override\n                                public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                                {\n                                    Assert.assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                                    if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                                    {\n                                        addedLatch.countDown();\n                                    }\n                                }\n                            }\n                    );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"27a0dc86a8f12f68af68dec4286b5e3738b12d69","commitMessage":"@@@Merge remote-tracking branch 'temp/CURATOR-124' into CURATOR-124\n","date":"2014-07-24 06:31:49","modifiedFileCount":"2","status":"M","submitter":"randgalt"},{"authorTime":"2015-08-18 10:13:37","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":4,"curCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertTrue(timing.awaitLatch(initLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":198,"groupId":"1430","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testChildrenInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertTrue(timing.awaitLatch(initLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2015-08-18 10:13:37","commitOrder":4,"curCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                    (\n                            new PathChildrenCacheListener()\n                            {\n                                @Override\n                                public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                                {\n                                    Assert.assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                                    if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                                    {\n                                        addedLatch.countDown();\n                                    }\n                                }\n                            }\n                    );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":247,"groupId":"2026","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testChildrenInitializedNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                    (\n                            new PathChildrenCacheListener()\n                            {\n                                @Override\n                                public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                                {\n                                    Assert.assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                                    if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                                    {\n                                        addedLatch.countDown();\n                                    }\n                                }\n                            }\n                    );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"d5d12c88b075fd1fc51a29412b3c08918cceb983","commitMessage":"@@@Merge 'CURATOR-217' into CURATOR-3.0\n","date":"2015-08-18 10:13:37","modifiedFileCount":"40","status":"M","submitter":"Scott Blum"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            assertTrue(timing.awaitLatch(addedLatch));\n            assertTrue(timing.awaitLatch(initLatch));\n            assertEquals(cache.getCurrentData().size(), 3);\n            assertArrayEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            assertArrayEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            assertArrayEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":371,"groupId":"10226","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testChildrenInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/90b34c05e23e47833ae1fd945825099360383c.src","preCode":"    public void testChildrenInitialized() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            final CountDownLatch initLatch = new CountDownLatch(1);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                            else if ( event.getType() == PathChildrenCacheEvent.Type.INITIALIZED )\n                            {\n                                initLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertTrue(timing.awaitLatch(initLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":5,"curCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            assertTrue(timing.awaitLatch(addedLatch));\n            assertEquals(cache.getCurrentData().size(), 3);\n            assertArrayEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            assertArrayEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            assertArrayEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":420,"groupId":"10226","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testChildrenInitializedNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/90b34c05e23e47833ae1fd945825099360383c.src","preCode":"    public void testChildrenInitializedNormal() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            client.create().forPath(\"/test\");\n\n            cache = new PathChildrenCache(client, \"/test\", true);\n\n            final CountDownLatch addedLatch = new CountDownLatch(3);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            Assert.assertNotEquals(event.getType(), PathChildrenCacheEvent.Type.INITIALIZED);\n                            if ( event.getType() == PathChildrenCacheEvent.Type.CHILD_ADDED )\n                            {\n                                addedLatch.countDown();\n                            }\n                        }\n                    }\n                );\n\n            client.create().forPath(\"/test/1\", \"1\".getBytes());\n            client.create().forPath(\"/test/2\", \"2\".getBytes());\n            client.create().forPath(\"/test/3\", \"3\".getBytes());\n\n            cache.start(PathChildrenCache.StartMode.NORMAL);\n\n            Assert.assertTrue(timing.awaitLatch(addedLatch));\n            Assert.assertEquals(cache.getCurrentData().size(), 3);\n            Assert.assertEquals(cache.getCurrentData().get(0).getData(), \"1\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(1).getData(), \"2\".getBytes());\n            Assert.assertEquals(cache.getCurrentData().get(2).getData(), \"3\".getBytes());\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
