[{"authorTime":"2015-08-13 05:30:01","codes":[{"authorDate":"2015-08-13 05:30:01","commitOrder":1,"curCode":"    public void testBasic() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            Collection<CuratorTransactionResult> results = client.transaction().forOperations(createOp1, createOp2);\n\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-13 05:30:01","endLine":134,"groupId":"1776","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ea/f94f8dff934e300bf93610b700a377644dd499.src","preCode":"    public void testBasic() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            Collection<CuratorTransactionResult> results = client.transaction().forOperations(createOp1, createOp2);\n\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2015-08-13 05:30:01","commitOrder":1,"curCode":"    public void testBackground() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            final BlockingQueue<List<CuratorTransactionResult>> queue = Queues.newLinkedBlockingQueue();\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.add(event.getOpResults());\n                }\n            };\n            client.transaction().inBackground(callback).forOperations(createOp1, createOp2);\n            Collection<CuratorTransactionResult> results = queue.poll(5, TimeUnit.SECONDS);\n\n            Assert.assertNotNull(results);\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2015-08-13 05:30:01","endLine":174,"groupId":"1777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBackground","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/ea/f94f8dff934e300bf93610b700a377644dd499.src","preCode":"    public void testBackground() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            final BlockingQueue<List<CuratorTransactionResult>> queue = Queues.newLinkedBlockingQueue();\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.add(event.getOpResults());\n                }\n            };\n            client.transaction().inBackground(callback).forOperations(createOp1, createOp2);\n            Collection<CuratorTransactionResult> results = queue.poll(5, TimeUnit.SECONDS);\n\n            Assert.assertNotNull(results);\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"8c8d7ec2ba24cf192db7cd0a738924a2ec538e09","commitMessage":"@@@Merge branch 'CURATOR-215' into CURATOR-3.0\n","date":"2015-08-13 05:30:01","modifiedFileCount":"27","status":"B","submitter":"Scott Blum"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testBasic() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            Collection<CuratorTransactionResult> results = client.transaction().forOperations(createOp1, createOp2);\n\n            assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            assertArrayEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            assertNotNull(fooResult);\n            assertNotNull(fooBarResult);\n            assertNotSame(fooResult, fooBarResult);\n            assertEquals(fooResult.getResultPath(), \"/foo\");\n            assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":176,"groupId":"10130","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c4/144f0156e039ca82017f36055f9393fc66d53c.src","preCode":"    public void testBasic() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            Collection<CuratorTransactionResult> results = client.transaction().forOperations(createOp1, createOp2);\n\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":2,"curCode":"    public void testBackground() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            final BlockingQueue<List<CuratorTransactionResult>> queue = Queues.newLinkedBlockingQueue();\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.add(event.getOpResults());\n                }\n            };\n            client.transaction().inBackground(callback).forOperations(createOp1, createOp2);\n            Collection<CuratorTransactionResult> results = queue.poll(5, TimeUnit.SECONDS);\n\n            assertNotNull(results);\n            assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            assertArrayEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            assertNotNull(fooResult);\n            assertNotNull(fooBarResult);\n            assertNotSame(fooResult, fooBarResult);\n            assertEquals(fooResult.getResultPath(), \"/foo\");\n            assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":216,"groupId":"10130","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBackground","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/c4/144f0156e039ca82017f36055f9393fc66d53c.src","preCode":"    public void testBackground() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        try\n        {\n            client.start();\n            CuratorOp createOp1 = client.transactionOp().create().forPath(\"/foo\");\n            CuratorOp createOp2 = client.transactionOp().create().forPath(\"/foo/bar\", \"snafu\".getBytes());\n\n            final BlockingQueue<List<CuratorTransactionResult>> queue = Queues.newLinkedBlockingQueue();\n            BackgroundCallback callback = new BackgroundCallback()\n            {\n                @Override\n                public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n                {\n                    queue.add(event.getOpResults());\n                }\n            };\n            client.transaction().inBackground(callback).forOperations(createOp1, createOp2);\n            Collection<CuratorTransactionResult> results = queue.poll(5, TimeUnit.SECONDS);\n\n            Assert.assertNotNull(results);\n            Assert.assertTrue(client.checkExists().forPath(\"/foo/bar\") != null);\n            Assert.assertEquals(client.getData().forPath(\"/foo/bar\"), \"snafu\".getBytes());\n\n            CuratorTransactionResult fooResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo\"));\n            CuratorTransactionResult fooBarResult = Iterables.find(results, CuratorTransactionResult.ofTypeAndPath(OperationType.CREATE, \"/foo/bar\"));\n            Assert.assertNotNull(fooResult);\n            Assert.assertNotNull(fooBarResult);\n            Assert.assertNotSame(fooResult, fooBarResult);\n            Assert.assertEquals(fooResult.getResultPath(), \"/foo\");\n            Assert.assertEquals(fooBarResult.getResultPath(), \"/foo/bar\");\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(client);\n        }\n    }\n","realPath":"curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
