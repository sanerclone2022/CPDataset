[{"authorTime":"2017-07-15 06:06:42","codes":[{"authorDate":"2017-07-15 06:06:42","commitOrder":1,"curCode":"    public void testChecksumDataError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2017-07-15 06:06:42","endLine":197,"groupId":"1320","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testChecksumDataError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/229118778f10f53174e9314c4829223cee088b.src","preCode":"    public void testChecksumDataError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"},{"authorDate":"2017-07-15 06:06:42","commitOrder":1,"curCode":"    public void testChecksumPathError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2017-07-15 06:06:42","endLine":220,"groupId":"994","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testChecksumPathError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/229118778f10f53174e9314c4829223cee088b.src","preCode":"    public void testChecksumPathError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"f7e728b99b8bf8cf1e0b2d68da1c3bf10e75d52a","commitMessage":"@@@more testing.  bug fixes\n","date":"2017-07-15 06:06:42","modifiedFileCount":"3","status":"B","submitter":"randgalt"},{"authorTime":"2017-07-15 06:15:32","codes":[{"authorDate":"2017-07-15 06:15:32","commitOrder":2,"curCode":"    public void testChecksumDataError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2017-07-15 06:15:32","endLine":198,"groupId":"1320","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testChecksumDataError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/80/a03bb7d720d11f5bdfd8b2d76ba003b0092aca.src","preCode":"    public void testChecksumDataError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2017-07-15 06:15:32","commitOrder":2,"curCode":"    public void testChecksumPathError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2017-07-15 06:15:32","endLine":221,"groupId":"994","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testChecksumPathError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/80/a03bb7d720d11f5bdfd8b2d76ba003b0092aca.src","preCode":"    public void testChecksumPathError() throws Exception\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"75118e43b165d2e99a432161cee6a3dab55e3e4e","commitMessage":"@@@more tests\n","date":"2017-07-15 06:15:32","modifiedFileCount":"1","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testChecksumDataError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":238,"groupId":"1011","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testChecksumDataError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/00/ef28baaec02f9fe4e251246f172dbdb8e58cfa.src","preCode":"    public void testChecksumDataError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test/bar\", \"first\".getBytes());\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\", \"second\".getBytes());\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":3,"curCode":"    public void testChecksumPathError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":261,"groupId":"1011","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testChecksumPathError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/00/ef28baaec02f9fe4e251246f172dbdb8e58cfa.src","preCode":"    public void testChecksumPathError()\n    {\n        CuratorOp op1 = client.transactionOp().create().forPath(\"/test2\");\n        CuratorOp op2 = client.transactionOp().create().forPath(\"/test2/bar\");\n        Migration migration = () -> Arrays.asList(op1, op2);\n        MigrationSet migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        complete(manager.migrate(migrationSet));\n\n        CuratorOp op2Changed = client.transactionOp().create().forPath(\"/test/bar\");\n        migration = () -> Arrays.asList(op1, op2Changed);\n        migrationSet = MigrationSet.build(\"1\", Collections.singletonList(migration));\n        try\n        {\n            complete(manager.migrate(migrationSet));\n            Assert.fail(\"Should throw\");\n        }\n        catch ( Throwable e )\n        {\n            Assert.assertTrue(Throwables.getRootCause(e) instanceof MigrationException);\n        }\n    }\n","realPath":"curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
