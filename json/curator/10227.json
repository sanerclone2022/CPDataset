[{"authorTime":"2013-03-08 06:54:59","codes":[{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void testIssue27() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(semaphore.tryAcquire(3, 10, TimeUnit.SECONDS));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":464,"groupId":"2029","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/be/5fe6c524d51c55fb056dddb1bed48579482ca5.src","preCode":"    public void testIssue27() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(semaphore.tryAcquire(3, 10, TimeUnit.SECONDS));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"B"},{"authorDate":"2013-03-08 06:54:59","commitOrder":1,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2013-03-08 06:54:59","endLine":515,"groupId":"345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/be/5fe6c524d51c55fb056dddb1bed48579482ca5.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":468,"status":"B"}],"commitId":"8d32c4738afe4fb6fa5e6fd843b05821ddc2ce88","commitMessage":"@@@Beginning to move everything to Apache\n","date":"2013-03-08 06:54:59","modifiedFileCount":"10","status":"B","submitter":"Jordan Zimmerman"},{"authorTime":"2014-05-23 22:46:02","codes":[{"authorDate":"2014-05-23 22:46:02","commitOrder":2,"curCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":472,"groupId":"2029","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/bf/57ed81c345f00b3b24d5ce08c3430ab6502ef9.src","preCode":"    public void testIssue27() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(semaphore.tryAcquire(3, 10, TimeUnit.SECONDS));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"M"},{"authorDate":"2014-05-23 22:46:02","commitOrder":2,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","date":"2014-05-23 22:46:02","endLine":524,"groupId":"655","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/bf/57ed81c345f00b3b24d5ce08c3430ab6502ef9.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(semaphore.tryAcquire(1, 10, TimeUnit.SECONDS));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"0bffdb020d78d8c6599a1eb9c2c702f9dd1192bd","commitMessage":"@@@Merge branch 'master' into CURATOR-105\n\nConflicts:\n\tcurator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/PathChildrenCache.java\n","date":"2014-05-23 22:46:02","modifiedFileCount":"61","status":"M","submitter":"randgalt"},{"authorTime":"2015-08-18 10:13:37","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":3,"curCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":551,"groupId":"510","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"},{"authorDate":"2015-08-18 10:13:37","commitOrder":3,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":605,"groupId":"1020","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            PathChildrenCache cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            client.close();\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":555,"status":"M"}],"commitId":"d5d12c88b075fd1fc51a29412b3c08918cceb983","commitMessage":"@@@Merge 'CURATOR-217' into CURATOR-3.0\n","date":"2015-08-18 10:13:37","modifiedFileCount":"40","status":"M","submitter":"Scott Blum"},{"authorTime":"2016-05-23 11:31:31","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":4,"curCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":551,"groupId":"510","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"N"},{"authorDate":"2016-05-23 11:31:31","commitOrder":4,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);���������\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-23 11:31:31","endLine":648,"groupId":"1020","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/39/fbf66f5e560a874bb7e7ad4f9e7ea8b4a1643c.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"M"}],"commitId":"41a700429ad8cc57d96fe205164fbfc263673c22","commitMessage":"@@@Merge branch 'master' into CURATOR-3.0\n","date":"2016-05-23 11:31:31","modifiedFileCount":"3","status":"M","submitter":"randgalt"},{"authorTime":"2016-05-24 00:45:40","codes":[{"authorDate":"2015-08-18 10:13:37","commitOrder":5,"curCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2015-08-18 10:13:37","endLine":551,"groupId":"510","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/35/71ca73e323e705bd9d0d0efa73439edc13a972.src","preCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"N"},{"authorDate":"2016-05-24 00:45:40","commitOrder":5,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2016-05-24 00:45:40","endLine":648,"groupId":"1020","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/49/cbb4c23f3f94dc008a43b2db352a000addf727.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);���������\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"M"}],"commitId":"6a245fb8d7ac5366880b5c107470a08de3986049","commitMessage":"@@@bad char got entered\n","date":"2016-05-24 00:45:40","modifiedFileCount":"1","status":"M","submitter":"randgalt"},{"authorTime":"2020-10-20 21:18:25","codes":[{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":727,"groupId":"10227","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testIssue27","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/90b34c05e23e47833ae1fd945825099360383c.src","preCode":"    public void testIssue27() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start();\n\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 3));\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED,\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"M"},{"authorDate":"2020-10-20 21:18:25","commitOrder":6,"curCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","date":"2020-10-20 21:18:25","endLine":781,"groupId":"10227","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testIssue27Alt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-curator-10-0.7/blobInfo/CC_OUT/blobs/37/90b34c05e23e47833ae1fd945825099360383c.src","preCode":"    public void testIssue27Alt() throws Exception\n    {\n        Timing timing = new Timing();\n        PathChildrenCache cache = null;\n        CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), timing.session(), timing.connection(), new RetryOneTime(1));\n        client.start();\n        try\n        {\n            client.create().forPath(\"/base\");\n            client.create().forPath(\"/base/a\");\n            client.create().forPath(\"/base/b\");\n            client.create().forPath(\"/base/c\");\n\n            client.getChildren().forPath(\"/base\");\n\n            final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList();\n            final Semaphore semaphore = new Semaphore(0);\n            cache = new PathChildrenCache(client, \"/base\", true);\n            cache.getListenable().addListener\n                (\n                    new PathChildrenCacheListener()\n                    {\n                        @Override\n                        public void childEvent(CuratorFramework client, PathChildrenCacheEvent event) throws Exception\n                        {\n                            events.add(event.getType());\n                            semaphore.release();\n                        }\n                    }\n                );\n            cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE);\n\n            client.delete().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            client.create().forPath(\"/base/a\");\n            Assert.assertTrue(timing.acquireSemaphore(semaphore, 1));\n\n            List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList\n                (\n                    PathChildrenCacheEvent.Type.CHILD_REMOVED,\n                    PathChildrenCacheEvent.Type.CHILD_ADDED\n                );\n            Assert.assertEquals(expected, events);\n        }\n        finally\n        {\n            CloseableUtils.closeQuietly(cache);\n            TestCleanState.closeAndTestClean(client);\n        }\n    }\n","realPath":"curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java","repoName":"curator","snippetEndLine":0,"snippetStartLine":0,"startLine":731,"status":"M"}],"commitId":"7a148288603ae5db0c232142f7dc07d43e01bea3","commitMessage":"@@@CURATOR-582: Migrate to jUnit 5.6 (#372)\n\n","date":"2020-10-20 21:18:25","modifiedFileCount":"125","status":"M","submitter":"Tam?s P?nzes"}]
